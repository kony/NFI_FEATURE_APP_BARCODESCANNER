{
  "java": {
    "util": {
      "BitSet": {
        "!url": "http://developer.android.com/reference/java/util/BitSet.html",
        "!type": "fn()",
        "valueOf": {
          "!type": "fn(longs: +java.newArray) -> +java.util.BitSet",
          "!url": "http://developer.android.com/reference/java/util/BitSet.html#valueOf(long[])"
        },
        "prototype": {
          "previousClearBit": {
            "!type": "fn(index: number) -> number",
            "!url": "http://developer.android.com/reference/java/util/BitSet.html#previousClearBit(int)"
          },
          "intersects": {
            "!type": "fn(bs: +java.util.BitSet) -> bool",
            "!url": "http://developer.android.com/reference/java/util/BitSet.html#intersects(java.util.BitSet)"
          },
          "andNot": {
            "!type": "fn(bs: +java.util.BitSet) -> void",
            "!url": "http://developer.android.com/reference/java/util/BitSet.html#andNot(java.util.BitSet)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "cardinality": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/BitSet.html#cardinality()"
          },
          "nextClearBit": {
            "!type": "fn(index: number) -> number",
            "!url": "http://developer.android.com/reference/java/util/BitSet.html#nextClearBit(int)"
          },
          "length": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/BitSet.html#length()"
          },
          "toLongArray": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/util/BitSet.html#toLongArray()"
          },
          "toByteArray": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/util/BitSet.html#toByteArray()"
          },
          "flip": {
            "!type": "fn(index: number) -> void",
            "!url": "http://developer.android.com/reference/java/util/BitSet.html#flip(int)"
          },
          "or": {
            "!type": "fn(bs: +java.util.BitSet) -> void",
            "!url": "http://developer.android.com/reference/java/util/BitSet.html#or(java.util.BitSet)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/BitSet.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "set": {
            "!type": "fn(index: number) -> void",
            "!url": "http://developer.android.com/reference/java/util/BitSet.html#set(int)"
          },
          "isEmpty": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/util/BitSet.html#isEmpty()"
          },
          "size": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/BitSet.html#size()"
          },
          "clear": {
            "!type": "fn(index: number) -> void",
            "!url": "http://developer.android.com/reference/java/util/BitSet.html#clear(int)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "previousSetBit": {
            "!type": "fn(index: number) -> number",
            "!url": "http://developer.android.com/reference/java/util/BitSet.html#previousSetBit(int)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/BitSet.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/BitSet.html#hashCode()"
          },
          "xor": {
            "!type": "fn(bs: +java.util.BitSet) -> void",
            "!url": "http://developer.android.com/reference/java/util/BitSet.html#xor(java.util.BitSet)"
          },
          "clone": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/BitSet.html#clone()"
          },
          "get": {
            "!type": "fn(index: number) -> bool",
            "!url": "http://developer.android.com/reference/java/util/BitSet.html#get(int)"
          },
          "nextSetBit": {
            "!type": "fn(index: number) -> number",
            "!url": "http://developer.android.com/reference/java/util/BitSet.html#nextSetBit(int)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "and": {
            "!type": "fn(bs: +java.util.BitSet) -> void",
            "!url": "http://developer.android.com/reference/java/util/BitSet.html#and(java.util.BitSet)"
          }
        }
      },
      "StringTokenizer": {
        "!url": "http://developer.android.com/reference/java/util/StringTokenizer.html",
        "!type": "fn(string: string)",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "nextToken": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/StringTokenizer.html#nextToken()"
          },
          "countTokens": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/StringTokenizer.html#countTokens()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "hasMoreElements": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/util/StringTokenizer.html#hasMoreElements()"
          },
          "nextElement": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/StringTokenizer.html#nextElement()"
          },
          "hasMoreTokens": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/util/StringTokenizer.html#hasMoreTokens()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "UnknownFormatConversionException": {
        "!url": "http://developer.android.com/reference/java/util/UnknownFormatConversionException.html",
        "!type": "fn(s: string)",
        "prototype": {
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/UnknownFormatConversionException.html#getMessage()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getConversion": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/UnknownFormatConversionException.html#getConversion()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "UnknownFormatFlagsException": {
        "!url": "http://developer.android.com/reference/java/util/UnknownFormatFlagsException.html",
        "!type": "fn(f: string)",
        "prototype": {
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/UnknownFormatFlagsException.html#getMessage()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getFlags": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/UnknownFormatFlagsException.html#getFlags()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "EventListenerProxy": {
        "!url": "http://developer.android.com/reference/java/util/EventListenerProxy.html",
        "!type": "fn(listener: +java.util.EventListener)",
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "getListener": {
            "!type": "fn() -> +java.util.EventListener",
            "!url": "http://developer.android.com/reference/java/util/EventListenerProxy.html#getListener()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "ArrayList": {
        "!url": "http://developer.android.com/reference/java/util/ArrayList.html",
        "!type": "fn(capacity: number)",
        "prototype": {
          "indexOf": {
            "!type": "fn(object: +java.lang.Object) -> number",
            "!url": "http://developer.android.com/reference/java/util/ArrayList.html#indexOf(java.lang.Object)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "removeAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#removeAll(java.util.Collection)"
          },
          "trimToSize": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/util/ArrayList.html#trimToSize()"
          },
          "containsAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#containsAll(java.util.Collection)"
          },
          "contains": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/ArrayList.html#contains(java.lang.Object)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/ArrayList.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "subList": {
            "!type": "fn(start: number, end: number) -> +java.util.List",
            "!url": "http://developer.android.com/reference/java/util/AbstractList.html#subList(int, int)"
          },
          "set": {
            "!type": "fn(index: number, object: +java.lang.Object) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/ArrayList.html#set(int, E)"
          },
          "isEmpty": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/util/ArrayList.html#isEmpty()"
          },
          "add": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/ArrayList.html#add(E)"
          },
          "ensureCapacity": {
            "!type": "fn(minimumCapacity: number) -> void",
            "!url": "http://developer.android.com/reference/java/util/ArrayList.html#ensureCapacity(int)"
          },
          "size": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/ArrayList.html#size()"
          },
          "iterator": {
            "!type": "fn() -> +java.util.Iterator",
            "!url": "http://developer.android.com/reference/java/util/ArrayList.html#iterator()"
          },
          "clear": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/util/ArrayList.html#clear()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "listIterator": {
            "!type": "fn() -> +java.util.ListIterator",
            "!url": "http://developer.android.com/reference/java/util/AbstractList.html#listIterator()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#toString()"
          },
          "retainAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#retainAll(java.util.Collection)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/ArrayList.html#hashCode()"
          },
          "toArray": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/util/ArrayList.html#toArray()"
          },
          "lastIndexOf": {
            "!type": "fn(object: +java.lang.Object) -> number",
            "!url": "http://developer.android.com/reference/java/util/ArrayList.html#lastIndexOf(java.lang.Object)"
          },
          "addAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/ArrayList.html#addAll(java.util.Collection)"
          },
          "clone": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/ArrayList.html#clone()"
          },
          "get": {
            "!type": "fn(index: number) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/ArrayList.html#get(int)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "remove": {
            "!type": "fn(index: number) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/ArrayList.html#remove(int)"
          }
        }
      },
      "IllegalFormatConversionException": {
        "!url": "http://developer.android.com/reference/java/util/IllegalFormatConversionException.html",
        "!type": "fn(c: +java.lang.Char, arg: +java.lang.Class)",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getArgumentClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/util/IllegalFormatConversionException.html#getArgumentClass()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/IllegalFormatConversionException.html#getMessage()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getConversion": {
            "!type": "fn() -> +java.lang.Char",
            "!url": "http://developer.android.com/reference/java/util/IllegalFormatConversionException.html#getConversion()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "InputMismatchException": {
        "!url": "http://developer.android.com/reference/java/util/InputMismatchException.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "FormatterClosedException": {
        "!url": "http://developer.android.com/reference/java/util/FormatterClosedException.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "AbstractSet": {
        "!url": "http://developer.android.com/reference/java/util/AbstractSet.html",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "removeAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractSet.html#removeAll(java.util.Collection)"
          },
          "containsAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#containsAll(java.util.Collection)"
          },
          "contains": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#contains(java.lang.Object)"
          },
          "equals": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractSet.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "isEmpty": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#isEmpty()"
          },
          "add": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#add(E)"
          },
          "size": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#size()"
          },
          "iterator": {
            "!type": "fn() -> +java.util.Iterator",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#iterator()"
          },
          "clear": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#clear()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "retainAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#retainAll(java.util.Collection)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/AbstractSet.html#hashCode()"
          },
          "toArray": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#toArray()"
          },
          "addAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#addAll(java.util.Collection)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "remove": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#remove(java.lang.Object)"
          }
        }
      },
      "LinkedHashMap": {
        "!url": "http://developer.android.com/reference/java/util/LinkedHashMap.html",
        "!type": "fn()",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "values": {
            "!type": "fn() -> +java.util.Collection",
            "!url": "http://developer.android.com/reference/java/util/HashMap.html#values()"
          },
          "containsKey": {
            "!type": "fn(key: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/HashMap.html#containsKey(java.lang.Object)"
          },
          "entrySet": {
            "!type": "fn() -> +java.util.Set",
            "!url": "http://developer.android.com/reference/java/util/HashMap.html#entrySet()"
          },
          "keySet": {
            "!type": "fn() -> +java.util.Set",
            "!url": "http://developer.android.com/reference/java/util/HashMap.html#keySet()"
          },
          "put": {
            "!type": "fn(key: +java.lang.Object, value: +java.lang.Object) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/HashMap.html#put(K, V)"
          },
          "eldest": {
            "!type": "fn() -> +java.util.Map.Entry",
            "!url": "http://developer.android.com/reference/java/util/LinkedHashMap.html#eldest()"
          },
          "equals": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractMap.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "isEmpty": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/util/HashMap.html#isEmpty()"
          },
          "size": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/HashMap.html#size()"
          },
          "putAll": {
            "!type": "fn(map: +java.util.Map) -> void",
            "!url": "http://developer.android.com/reference/java/util/HashMap.html#putAll(java.util.Map)"
          },
          "clear": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/util/LinkedHashMap.html#clear()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "containsValue": {
            "!type": "fn(value: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/LinkedHashMap.html#containsValue(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/AbstractMap.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/AbstractMap.html#hashCode()"
          },
          "clone": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/HashMap.html#clone()"
          },
          "get": {
            "!type": "fn(key: +java.lang.Object) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/LinkedHashMap.html#get(java.lang.Object)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "remove": {
            "!type": "fn(key: +java.lang.Object) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/HashMap.html#remove(java.lang.Object)"
          }
        }
      },
      "Currency": {
        "!url": "http://developer.android.com/reference/java/util/Currency.html",
        "getAvailableCurrencies": {
          "!type": "fn() -> +java.util.Set",
          "!url": "http://developer.android.com/reference/java/util/Currency.html#getAvailableCurrencies()"
        },
        "getInstance": {
          "!type": "fn(currencyCode: string) -> +java.util.Currency",
          "!url": "http://developer.android.com/reference/java/util/Currency.html#getInstance(java.lang.String)"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/Currency.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getCurrencyCode": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/Currency.html#getCurrencyCode()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getSymbol": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/Currency.html#getSymbol()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getDisplayName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/Currency.html#getDisplayName()"
          },
          "getDefaultFractionDigits": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/Currency.html#getDefaultFractionDigits()"
          }
        }
      },
      "TimerTask": {
        "!url": "http://developer.android.com/reference/java/util/TimerTask.html",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "run": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/util/TimerTask.html#run()"
          },
          "scheduledExecutionTime": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/util/TimerTask.html#scheduledExecutionTime()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "cancel": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/util/TimerTask.html#cancel()"
          }
        }
      },
      "MissingResourceException": {
        "!url": "http://developer.android.com/reference/java/util/MissingResourceException.html",
        "!type": "fn(detailMessage: string, className: string, resourceName: string)",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "getClassName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/MissingResourceException.html#getClassName()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getKey": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/MissingResourceException.html#getKey()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "Hashtable": {
        "!url": "http://developer.android.com/reference/java/util/Hashtable.html",
        "!type": "fn()",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "values": {
            "!type": "fn() -> +java.util.Collection",
            "!url": "http://developer.android.com/reference/java/util/Hashtable.html#values()"
          },
          "containsKey": {
            "!type": "fn(key: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/Hashtable.html#containsKey(java.lang.Object)"
          },
          "entrySet": {
            "!type": "fn() -> +java.util.Set",
            "!url": "http://developer.android.com/reference/java/util/Hashtable.html#entrySet()"
          },
          "keySet": {
            "!type": "fn() -> +java.util.Set",
            "!url": "http://developer.android.com/reference/java/util/Hashtable.html#keySet()"
          },
          "put": {
            "!type": "fn(key: +java.lang.Object, value: +java.lang.Object) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/Hashtable.html#put(K, V)"
          },
          "contains": {
            "!type": "fn(value: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/Hashtable.html#contains(java.lang.Object)"
          },
          "equals": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/Hashtable.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "elements": {
            "!type": "fn() -> +java.util.Enumeration",
            "!url": "http://developer.android.com/reference/java/util/Hashtable.html#elements()"
          },
          "keys": {
            "!type": "fn() -> +java.util.Enumeration",
            "!url": "http://developer.android.com/reference/java/util/Hashtable.html#keys()"
          },
          "isEmpty": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/util/Hashtable.html#isEmpty()"
          },
          "size": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/Hashtable.html#size()"
          },
          "putAll": {
            "!type": "fn(map: +java.util.Map) -> void",
            "!url": "http://developer.android.com/reference/java/util/Hashtable.html#putAll(java.util.Map)"
          },
          "clear": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/util/Hashtable.html#clear()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/Hashtable.html#toString()"
          },
          "containsValue": {
            "!type": "fn(value: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/Hashtable.html#containsValue(java.lang.Object)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/Hashtable.html#hashCode()"
          },
          "clone": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/Hashtable.html#clone()"
          },
          "get": {
            "!type": "fn(key: +java.lang.Object) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/Hashtable.html#get(java.lang.Object)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "remove": {
            "!type": "fn(key: +java.lang.Object) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/Hashtable.html#remove(java.lang.Object)"
          }
        }
      },
      "Calendar": {
        "!url": "http://developer.android.com/reference/java/util/Calendar.html",
        "SEPTEMBER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#SEPTEMBER"
        },
        "WEDNESDAY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#WEDNESDAY"
        },
        "SHORT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#SHORT"
        },
        "JANUARY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#JANUARY"
        },
        "PM": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#PM"
        },
        "MONDAY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#MONDAY"
        },
        "SECOND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#SECOND"
        },
        "MONTH": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#MONTH"
        },
        "FIELD_COUNT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#FIELD_COUNT"
        },
        "OCTOBER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#OCTOBER"
        },
        "TUESDAY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#TUESDAY"
        },
        "THURSDAY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#THURSDAY"
        },
        "DATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#DATE"
        },
        "ALL_STYLES": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#ALL_STYLES"
        },
        "DAY_OF_WEEK_IN_MONTH": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#DAY_OF_WEEK_IN_MONTH"
        },
        "DAY_OF_WEEK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#DAY_OF_WEEK"
        },
        "HOUR_OF_DAY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#HOUR_OF_DAY"
        },
        "DAY_OF_YEAR": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#DAY_OF_YEAR"
        },
        "JUNE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#JUNE"
        },
        "SATURDAY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#SATURDAY"
        },
        "NOVEMBER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#NOVEMBER"
        },
        "MILLISECOND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#MILLISECOND"
        },
        "YEAR": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#YEAR"
        },
        "MARCH": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#MARCH"
        },
        "DAY_OF_MONTH": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#DAY_OF_MONTH"
        },
        "WEEK_OF_YEAR": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#WEEK_OF_YEAR"
        },
        "ERA": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#ERA"
        },
        "UNDECIMBER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#UNDECIMBER"
        },
        "SUNDAY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#SUNDAY"
        },
        "AUGUST": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#AUGUST"
        },
        "FRIDAY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#FRIDAY"
        },
        "DST_OFFSET": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#DST_OFFSET"
        },
        "DECEMBER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#DECEMBER"
        },
        "JULY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#JULY"
        },
        "HOUR": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#HOUR"
        },
        "MINUTE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#MINUTE"
        },
        "LONG": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#LONG"
        },
        "WEEK_OF_MONTH": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#WEEK_OF_MONTH"
        },
        "AM_PM": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#AM_PM"
        },
        "ZONE_OFFSET": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#ZONE_OFFSET"
        },
        "MAY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#MAY"
        },
        "APRIL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#APRIL"
        },
        "FEBRUARY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#FEBRUARY"
        },
        "AM": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#AM"
        },
        "getInstance": {
          "!type": "fn() -> +java.util.Calendar",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#getInstance()"
        },
        "getAvailableLocales": {
          "!type": "fn() -> +java.newArray",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#getAvailableLocales()"
        },
        "prototype": {
          "getDisplayName": {
            "!type": "fn(field: number, style: number, locale: +java.util.Locale) -> string",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#getDisplayName(int, int, java.util.Locale)"
          },
          "getMaximum": {
            "!type": "fn(field: number) -> number",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#getMaximum(int)"
          },
          "add": {
            "!type": "fn(field: number, value: number) -> void",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#add(int, int)"
          },
          "getTimeInMillis": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#getTimeInMillis()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#toString()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "setTimeZone": {
            "!type": "fn(timezone: +java.util.TimeZone) -> void",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#setTimeZone(java.util.TimeZone)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "isLenient": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#isLenient()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#hashCode()"
          },
          "getFirstDayOfWeek": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#getFirstDayOfWeek()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getTime": {
            "!type": "fn() -> +java.util.Date",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#getTime()"
          },
          "setTime": {
            "!type": "fn(date: +java.util.Date) -> void",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#setTime(java.util.Date)"
          },
          "getActualMinimum": {
            "!type": "fn(field: number) -> number",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#getActualMinimum(int)"
          },
          "clone": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#clone()"
          },
          "setTimeInMillis": {
            "!type": "fn(milliseconds: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#setTimeInMillis(long)"
          },
          "setLenient": {
            "!type": "fn(value: bool) -> void",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#setLenient(boolean)"
          },
          "set": {
            "!type": "fn(field: number, value: number) -> void",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#set(int, int)"
          },
          "equals": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#equals(java.lang.Object)"
          },
          "getActualMaximum": {
            "!type": "fn(field: number) -> number",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#getActualMaximum(int)"
          },
          "roll": {
            "!type": "fn(field: number, value: number) -> void",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#roll(int, int)"
          },
          "setMinimalDaysInFirstWeek": {
            "!type": "fn(value: number) -> void",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#setMinimalDaysInFirstWeek(int)"
          },
          "isSet": {
            "!type": "fn(field: number) -> bool",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#isSet(int)"
          },
          "clear": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#clear()"
          },
          "before": {
            "!type": "fn(calendar: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#before(java.lang.Object)"
          },
          "setFirstDayOfWeek": {
            "!type": "fn(value: number) -> void",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#setFirstDayOfWeek(int)"
          },
          "after": {
            "!type": "fn(calendar: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#after(java.lang.Object)"
          },
          "getLeastMaximum": {
            "!type": "fn(field: number) -> number",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#getLeastMaximum(int)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "get": {
            "!type": "fn(field: number) -> number",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#get(int)"
          },
          "getDisplayNames": {
            "!type": "fn(field: number, style: number, locale: +java.util.Locale) -> +java.util.Map",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#getDisplayNames(int, int, java.util.Locale)"
          },
          "getMinimum": {
            "!type": "fn(field: number) -> number",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#getMinimum(int)"
          },
          "compareTo": {
            "!type": "fn(anotherCalendar: +java.util.Calendar) -> number",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#compareTo(java.util.Calendar)"
          },
          "getGreatestMinimum": {
            "!type": "fn(field: number) -> number",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#getGreatestMinimum(int)"
          },
          "getMinimalDaysInFirstWeek": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#getMinimalDaysInFirstWeek()"
          },
          "getTimeZone": {
            "!type": "fn() -> +java.util.TimeZone",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#getTimeZone()"
          }
        }
      },
      "PropertyPermission": {
        "!url": "http://developer.android.com/reference/java/util/PropertyPermission.html",
        "!type": "fn(name: string, actions: string)",
        "prototype": {
          "getActions": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/PropertyPermission.html#getActions()"
          },
          "getName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/security/Permission.html#getName()"
          },
          "implies": {
            "!type": "fn(permission: +java.security.Permission) -> bool",
            "!url": "http://developer.android.com/reference/java/util/PropertyPermission.html#implies(java.security.Permission)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "checkGuard": {
            "!type": "fn(obj: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/java/security/Permission.html#checkGuard(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "newPermissionCollection": {
            "!type": "fn() -> +java.security.PermissionCollection",
            "!url": "http://developer.android.com/reference/java/security/Permission.html#newPermissionCollection()"
          }
        }
      },
      "PriorityQueue": {
        "!url": "http://developer.android.com/reference/java/util/PriorityQueue.html",
        "!type": "fn()",
        "prototype": {
          "offer": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/PriorityQueue.html#offer(E)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "element": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/AbstractQueue.html#element()"
          },
          "removeAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#removeAll(java.util.Collection)"
          },
          "comparator": {
            "!type": "fn() -> +java.util.Comparator",
            "!url": "http://developer.android.com/reference/java/util/PriorityQueue.html#comparator()"
          },
          "containsAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#containsAll(java.util.Collection)"
          },
          "contains": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#contains(java.lang.Object)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "poll": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/PriorityQueue.html#poll()"
          },
          "isEmpty": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#isEmpty()"
          },
          "add": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/PriorityQueue.html#add(E)"
          },
          "size": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/PriorityQueue.html#size()"
          },
          "iterator": {
            "!type": "fn() -> +java.util.Iterator",
            "!url": "http://developer.android.com/reference/java/util/PriorityQueue.html#iterator()"
          },
          "clear": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/util/PriorityQueue.html#clear()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "peek": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/PriorityQueue.html#peek()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#toString()"
          },
          "retainAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#retainAll(java.util.Collection)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "toArray": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#toArray()"
          },
          "addAll": {
            "!type": "fn(c: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractQueue.html#addAll(java.util.Collection)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "remove": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/PriorityQueue.html#remove(java.lang.Object)"
          }
        }
      },
      "ServiceConfigurationError": {
        "!url": "http://developer.android.com/reference/java/util/ServiceConfigurationError.html",
        "!type": "fn(message: string)",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "Objects": {
        "!url": "http://developer.android.com/reference/java/util/Objects.html",
        "hashCode": {
          "!type": "fn(o: +java.lang.Object) -> number",
          "!url": "http://developer.android.com/reference/java/util/Objects.html#hashCode(java.lang.Object)"
        },
        "equals": {
          "!type": "fn(a: +java.lang.Object, b: +java.lang.Object) -> bool",
          "!url": "http://developer.android.com/reference/java/util/Objects.html#equals(java.lang.Object, java.lang.Object)"
        },
        "compare": {
          "!type": "fn(a: +java.lang.Object, b: +java.lang.Object, c: +java.util.Comparator) -> number",
          "!url": "http://developer.android.com/reference/java/util/Objects.html#compare(T, T, java.util.Comparator)"
        },
        "toString": {
          "!type": "fn(o: +java.lang.Object) -> string",
          "!url": "http://developer.android.com/reference/java/util/Objects.html#toString(java.lang.Object)"
        },
        "hash": {
          "!type": "fn(values: +java.newArray) -> number",
          "!url": "http://developer.android.com/reference/java/util/Objects.html#hash(java.lang.Object[])"
        },
        "requireNonNull": {
          "!type": "fn(o: +java.lang.Object) -> +java.lang.Object",
          "!url": "http://developer.android.com/reference/java/util/Objects.html#requireNonNull(T)"
        },
        "deepEquals": {
          "!type": "fn(a: +java.lang.Object, b: +java.lang.Object) -> bool",
          "!url": "http://developer.android.com/reference/java/util/Objects.html#deepEquals(java.lang.Object, java.lang.Object)"
        },
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "MissingFormatArgumentException": {
        "!url": "http://developer.android.com/reference/java/util/MissingFormatArgumentException.html",
        "!type": "fn(s: string)",
        "prototype": {
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getFormatSpecifier": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/MissingFormatArgumentException.html#getFormatSpecifier()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/MissingFormatArgumentException.html#getMessage()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "FormattableFlags": {
        "!url": "http://developer.android.com/reference/java/util/FormattableFlags.html",
        "ALTERNATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/FormattableFlags.html#ALTERNATE"
        },
        "LEFT_JUSTIFY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/FormattableFlags.html#LEFT_JUSTIFY"
        },
        "UPPERCASE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/FormattableFlags.html#UPPERCASE"
        },
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "FormatFlagsConversionMismatchException": {
        "!url": "http://developer.android.com/reference/java/util/FormatFlagsConversionMismatchException.html",
        "!type": "fn(f: string, c: +java.lang.Char)",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/FormatFlagsConversionMismatchException.html#getMessage()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getFlags": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/FormatFlagsConversionMismatchException.html#getFlags()"
          },
          "getConversion": {
            "!type": "fn() -> +java.lang.Char",
            "!url": "http://developer.android.com/reference/java/util/FormatFlagsConversionMismatchException.html#getConversion()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "LinkedHashSet": {
        "!url": "http://developer.android.com/reference/java/util/LinkedHashSet.html",
        "!type": "fn()",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "removeAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractSet.html#removeAll(java.util.Collection)"
          },
          "containsAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#containsAll(java.util.Collection)"
          },
          "contains": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/HashSet.html#contains(java.lang.Object)"
          },
          "equals": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractSet.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "isEmpty": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/util/HashSet.html#isEmpty()"
          },
          "add": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/HashSet.html#add(E)"
          },
          "size": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/HashSet.html#size()"
          },
          "iterator": {
            "!type": "fn() -> +java.util.Iterator",
            "!url": "http://developer.android.com/reference/java/util/HashSet.html#iterator()"
          },
          "clear": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/util/HashSet.html#clear()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "retainAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#retainAll(java.util.Collection)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/AbstractSet.html#hashCode()"
          },
          "toArray": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#toArray()"
          },
          "addAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#addAll(java.util.Collection)"
          },
          "clone": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/HashSet.html#clone()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "remove": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/HashSet.html#remove(java.lang.Object)"
          }
        }
      },
      "AbstractQueue": {
        "!url": "http://developer.android.com/reference/java/util/AbstractQueue.html",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "element": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/AbstractQueue.html#element()"
          },
          "removeAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#removeAll(java.util.Collection)"
          },
          "containsAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#containsAll(java.util.Collection)"
          },
          "contains": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#contains(java.lang.Object)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "isEmpty": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#isEmpty()"
          },
          "add": {
            "!type": "fn(e: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractQueue.html#add(E)"
          },
          "size": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#size()"
          },
          "iterator": {
            "!type": "fn() -> +java.util.Iterator",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#iterator()"
          },
          "clear": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/util/AbstractQueue.html#clear()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "retainAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#retainAll(java.util.Collection)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "toArray": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#toArray()"
          },
          "addAll": {
            "!type": "fn(c: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractQueue.html#addAll(java.util.Collection)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "remove": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/AbstractQueue.html#remove()"
          }
        }
      },
      "ListResourceBundle": {
        "!url": "http://developer.android.com/reference/java/util/ListResourceBundle.html",
        "!type": "fn()",
        "clearCache": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/java/util/ResourceBundle.html#clearCache()"
        },
        "getBundle": {
          "!type": "fn(bundleName: string) -> +java.util.ResourceBundle",
          "!url": "http://developer.android.com/reference/java/util/ResourceBundle.html#getBundle(java.lang.String)"
        },
        "prototype": {
          "getString": {
            "!type": "fn(key: string) -> string",
            "!url": "http://developer.android.com/reference/java/util/ResourceBundle.html#getString(java.lang.String)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getLocale": {
            "!type": "fn() -> +java.util.Locale",
            "!url": "http://developer.android.com/reference/java/util/ResourceBundle.html#getLocale()"
          },
          "keySet": {
            "!type": "fn() -> +java.util.Set",
            "!url": "http://developer.android.com/reference/java/util/ResourceBundle.html#keySet()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "handleGetObject": {
            "!type": "fn(key: string) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/ListResourceBundle.html#handleGetObject(java.lang.String)"
          },
          "getStringArray": {
            "!type": "fn(key: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/util/ResourceBundle.html#getStringArray(java.lang.String)"
          },
          "containsKey": {
            "!type": "fn(key: string) -> bool",
            "!url": "http://developer.android.com/reference/java/util/ResourceBundle.html#containsKey(java.lang.String)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getObject": {
            "!type": "fn(key: string) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/ResourceBundle.html#getObject(java.lang.String)"
          },
          "getKeys": {
            "!type": "fn() -> +java.util.Enumeration",
            "!url": "http://developer.android.com/reference/java/util/ListResourceBundle.html#getKeys()"
          }
        }
      },
      "ArrayDeque": {
        "!url": "http://developer.android.com/reference/java/util/ArrayDeque.html",
        "!type": "fn()",
        "prototype": {
          "add": {
            "!type": "fn(e: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/ArrayDeque.html#add(E)"
          },
          "peekFirst": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/ArrayDeque.html#peekFirst()"
          },
          "peekLast": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/ArrayDeque.html#peekLast()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#toString()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getFirst": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/ArrayDeque.html#getFirst()"
          },
          "size": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/ArrayDeque.html#size()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "peek": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/ArrayDeque.html#peek()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "removeFirst": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/ArrayDeque.html#removeFirst()"
          },
          "removeAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#removeAll(java.util.Collection)"
          },
          "element": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/ArrayDeque.html#element()"
          },
          "retainAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#retainAll(java.util.Collection)"
          },
          "isEmpty": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/util/ArrayDeque.html#isEmpty()"
          },
          "pollFirst": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/ArrayDeque.html#pollFirst()"
          },
          "iterator": {
            "!type": "fn() -> +java.util.Iterator",
            "!url": "http://developer.android.com/reference/java/util/ArrayDeque.html#iterator()"
          },
          "clone": {
            "!type": "fn() -> +java.util.ArrayDeque",
            "!url": "http://developer.android.com/reference/java/util/ArrayDeque.html#clone()"
          },
          "pollLast": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/ArrayDeque.html#pollLast()"
          },
          "addFirst": {
            "!type": "fn(e: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/java/util/ArrayDeque.html#addFirst(E)"
          },
          "toArray": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/util/ArrayDeque.html#toArray()"
          },
          "remove": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/ArrayDeque.html#remove()"
          },
          "offer": {
            "!type": "fn(e: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/ArrayDeque.html#offer(E)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "offerFirst": {
            "!type": "fn(e: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/ArrayDeque.html#offerFirst(E)"
          },
          "contains": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/ArrayDeque.html#contains(java.lang.Object)"
          },
          "descendingIterator": {
            "!type": "fn() -> +java.util.Iterator",
            "!url": "http://developer.android.com/reference/java/util/ArrayDeque.html#descendingIterator()"
          },
          "pop": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/ArrayDeque.html#pop()"
          },
          "removeFirstOccurrence": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/ArrayDeque.html#removeFirstOccurrence(java.lang.Object)"
          },
          "offerLast": {
            "!type": "fn(e: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/ArrayDeque.html#offerLast(E)"
          },
          "removeLastOccurrence": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/ArrayDeque.html#removeLastOccurrence(java.lang.Object)"
          },
          "clear": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/util/ArrayDeque.html#clear()"
          },
          "addLast": {
            "!type": "fn(e: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/java/util/ArrayDeque.html#addLast(E)"
          },
          "poll": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/ArrayDeque.html#poll()"
          },
          "push": {
            "!type": "fn(e: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/java/util/ArrayDeque.html#push(E)"
          },
          "getLast": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/ArrayDeque.html#getLast()"
          },
          "addAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#addAll(java.util.Collection)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "containsAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#containsAll(java.util.Collection)"
          },
          "removeLast": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/ArrayDeque.html#removeLast()"
          }
        }
      },
      "AbstractList": {
        "!url": "http://developer.android.com/reference/java/util/AbstractList.html",
        "prototype": {
          "indexOf": {
            "!type": "fn(object: +java.lang.Object) -> number",
            "!url": "http://developer.android.com/reference/java/util/AbstractList.html#indexOf(java.lang.Object)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "removeAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#removeAll(java.util.Collection)"
          },
          "containsAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#containsAll(java.util.Collection)"
          },
          "contains": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#contains(java.lang.Object)"
          },
          "equals": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractList.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "subList": {
            "!type": "fn(start: number, end: number) -> +java.util.List",
            "!url": "http://developer.android.com/reference/java/util/AbstractList.html#subList(int, int)"
          },
          "set": {
            "!type": "fn(location: number, object: +java.lang.Object) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/AbstractList.html#set(int, E)"
          },
          "isEmpty": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#isEmpty()"
          },
          "add": {
            "!type": "fn(location: number, object: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/java/util/AbstractList.html#add(int, E)"
          },
          "size": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#size()"
          },
          "iterator": {
            "!type": "fn() -> +java.util.Iterator",
            "!url": "http://developer.android.com/reference/java/util/AbstractList.html#iterator()"
          },
          "clear": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/util/AbstractList.html#clear()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "listIterator": {
            "!type": "fn() -> +java.util.ListIterator",
            "!url": "http://developer.android.com/reference/java/util/AbstractList.html#listIterator()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#toString()"
          },
          "retainAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#retainAll(java.util.Collection)"
          },
          "toArray": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#toArray()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/AbstractList.html#hashCode()"
          },
          "lastIndexOf": {
            "!type": "fn(object: +java.lang.Object) -> number",
            "!url": "http://developer.android.com/reference/java/util/AbstractList.html#lastIndexOf(java.lang.Object)"
          },
          "addAll": {
            "!type": "fn(location: number, collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractList.html#addAll(int, java.util.Collection)"
          },
          "get": {
            "!type": "fn(location: number) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/AbstractList.html#get(int)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "remove": {
            "!type": "fn(location: number) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/AbstractList.html#remove(int)"
          }
        }
      },
      "SimpleTimeZone": {
        "!url": "http://developer.android.com/reference/java/util/SimpleTimeZone.html",
        "!type": "fn(offset: number, name: string)",
        "WALL_TIME": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/SimpleTimeZone.html#WALL_TIME"
        },
        "SHORT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/TimeZone.html#SHORT"
        },
        "LONG": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/TimeZone.html#LONG"
        },
        "STANDARD_TIME": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/SimpleTimeZone.html#STANDARD_TIME"
        },
        "UTC_TIME": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/SimpleTimeZone.html#UTC_TIME"
        },
        "createGmtOffsetString": {
          "!type": "fn(includeGmt: bool, includeMinuteSeparator: bool, offsetMillis: number) -> string",
          "!url": "http://developer.android.com/reference/java/util/TimeZone.html#createGmtOffsetString(boolean, boolean, int)"
        },
        "setDefault": {
          "!type": "fn(timeZone: +java.util.TimeZone) -> void",
          "!url": "http://developer.android.com/reference/java/util/TimeZone.html#setDefault(java.util.TimeZone)"
        },
        "getDefault": {
          "!type": "fn() -> +java.util.TimeZone",
          "!url": "http://developer.android.com/reference/java/util/TimeZone.html#getDefault()"
        },
        "getAvailableIDs": {
          "!type": "fn() -> +java.newArray",
          "!url": "http://developer.android.com/reference/java/util/TimeZone.html#getAvailableIDs()"
        },
        "getTimeZone": {
          "!type": "fn(id: string) -> +java.util.TimeZone",
          "!url": "http://developer.android.com/reference/java/util/TimeZone.html#getTimeZone(java.lang.String)"
        },
        "prototype": {
          "setStartYear": {
            "!type": "fn(year: number) -> void",
            "!url": "http://developer.android.com/reference/java/util/SimpleTimeZone.html#setStartYear(int)"
          },
          "hasSameRules": {
            "!type": "fn(zone: +java.util.TimeZone) -> bool",
            "!url": "http://developer.android.com/reference/java/util/SimpleTimeZone.html#hasSameRules(java.util.TimeZone)"
          },
          "setDSTSavings": {
            "!type": "fn(milliseconds: number) -> void",
            "!url": "http://developer.android.com/reference/java/util/SimpleTimeZone.html#setDSTSavings(int)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "useDaylightTime": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/util/SimpleTimeZone.html#useDaylightTime()"
          },
          "getID": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/TimeZone.html#getID()"
          },
          "getOffset": {
            "!type": "fn(era: number, year: number, month: number, day: number, dayOfWeek: number, time: number) -> number",
            "!url": "http://developer.android.com/reference/java/util/SimpleTimeZone.html#getOffset(int, int, int, int, int, int)"
          },
          "getDisplayName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/TimeZone.html#getDisplayName()"
          },
          "getDSTSavings": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/SimpleTimeZone.html#getDSTSavings()"
          },
          "equals": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/SimpleTimeZone.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getRawOffset": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/SimpleTimeZone.html#getRawOffset()"
          },
          "setRawOffset": {
            "!type": "fn(offset: number) -> void",
            "!url": "http://developer.android.com/reference/java/util/SimpleTimeZone.html#setRawOffset(int)"
          },
          "setID": {
            "!type": "fn(id: string) -> void",
            "!url": "http://developer.android.com/reference/java/util/TimeZone.html#setID(java.lang.String)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/SimpleTimeZone.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/SimpleTimeZone.html#hashCode()"
          },
          "setEndRule": {
            "!type": "fn(month: number, dayOfMonth: number, time: number) -> void",
            "!url": "http://developer.android.com/reference/java/util/SimpleTimeZone.html#setEndRule(int, int, int)"
          },
          "setStartRule": {
            "!type": "fn(month: number, dayOfMonth: number, time: number) -> void",
            "!url": "http://developer.android.com/reference/java/util/SimpleTimeZone.html#setStartRule(int, int, int)"
          },
          "clone": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/SimpleTimeZone.html#clone()"
          },
          "inDaylightTime": {
            "!type": "fn(time: +java.util.Date) -> bool",
            "!url": "http://developer.android.com/reference/java/util/SimpleTimeZone.html#inDaylightTime(java.util.Date)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "UUID": {
        "!url": "http://developer.android.com/reference/java/util/UUID.html",
        "!type": "fn(mostSigBits: +java.lang.Long, leastSigBits: +java.lang.Long)",
        "nameUUIDFromBytes": {
          "!type": "fn(name: +java.newArray) -> +java.util.UUID",
          "!url": "http://developer.android.com/reference/java/util/UUID.html#nameUUIDFromBytes(byte[])"
        },
        "fromString": {
          "!type": "fn(uuid: string) -> +java.util.UUID",
          "!url": "http://developer.android.com/reference/java/util/UUID.html#fromString(java.lang.String)"
        },
        "randomUUID": {
          "!type": "fn() -> +java.util.UUID",
          "!url": "http://developer.android.com/reference/java/util/UUID.html#randomUUID()"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/UUID.html#toString()"
          },
          "equals": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/UUID.html#equals(java.lang.Object)"
          },
          "compareTo": {
            "!type": "fn(uuid: +java.util.UUID) -> number",
            "!url": "http://developer.android.com/reference/java/util/UUID.html#compareTo(java.util.UUID)"
          },
          "node": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/util/UUID.html#node()"
          },
          "variant": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/UUID.html#variant()"
          },
          "clockSequence": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/UUID.html#clockSequence()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getLeastSignificantBits": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/util/UUID.html#getLeastSignificantBits()"
          },
          "timestamp": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/util/UUID.html#timestamp()"
          },
          "version": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/UUID.html#version()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/UUID.html#hashCode()"
          },
          "getMostSignificantBits": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/util/UUID.html#getMostSignificantBits()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "Observable": {
        "!url": "http://developer.android.com/reference/java/util/Observable.html",
        "!type": "fn()",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "hasChanged": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/util/Observable.html#hasChanged()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "addObserver": {
            "!type": "fn(observer: +java.util.Observer) -> void",
            "!url": "http://developer.android.com/reference/java/util/Observable.html#addObserver(java.util.Observer)"
          },
          "notifyObservers": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/util/Observable.html#notifyObservers()"
          },
          "countObservers": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/Observable.html#countObservers()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "deleteObservers": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/util/Observable.html#deleteObservers()"
          },
          "deleteObserver": {
            "!type": "fn(observer: +java.util.Observer) -> void",
            "!url": "http://developer.android.com/reference/java/util/Observable.html#deleteObserver(java.util.Observer)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "Date": {
        "!url": "http://developer.android.com/reference/java/util/Date.html",
        "!type": "fn()",
        "UTC": {
          "!type": "fn(year: number, month: number, day: number, hour: number, minute: number, second: number) -> +java.lang.Long",
          "!url": "http://developer.android.com/reference/java/util/Date.html#UTC(int, int, int, int, int, int)"
        },
        "parse": {
          "!type": "fn(string: string) -> +java.lang.Long",
          "!url": "http://developer.android.com/reference/java/util/Date.html#parse(java.lang.String)"
        },
        "prototype": {
          "getYear": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/Date.html#getYear()"
          },
          "getTimezoneOffset": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/Date.html#getTimezoneOffset()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "setDate": {
            "!type": "fn(day: number) -> void",
            "!url": "http://developer.android.com/reference/java/util/Date.html#setDate(int)"
          },
          "after": {
            "!type": "fn(date: +java.util.Date) -> bool",
            "!url": "http://developer.android.com/reference/java/util/Date.html#after(java.util.Date)"
          },
          "getSeconds": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/Date.html#getSeconds()"
          },
          "setHours": {
            "!type": "fn(hour: number) -> void",
            "!url": "http://developer.android.com/reference/java/util/Date.html#setHours(int)"
          },
          "getHours": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/Date.html#getHours()"
          },
          "getDay": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/Date.html#getDay()"
          },
          "setMonth": {
            "!type": "fn(month: number) -> void",
            "!url": "http://developer.android.com/reference/java/util/Date.html#setMonth(int)"
          },
          "setMinutes": {
            "!type": "fn(minute: number) -> void",
            "!url": "http://developer.android.com/reference/java/util/Date.html#setMinutes(int)"
          },
          "getMonth": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/Date.html#getMonth()"
          },
          "toLocaleString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/Date.html#toLocaleString()"
          },
          "getDate": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/Date.html#getDate()"
          },
          "equals": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/Date.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "before": {
            "!type": "fn(date: +java.util.Date) -> bool",
            "!url": "http://developer.android.com/reference/java/util/Date.html#before(java.util.Date)"
          },
          "setTime": {
            "!type": "fn(milliseconds: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/java/util/Date.html#setTime(long)"
          },
          "setSeconds": {
            "!type": "fn(second: number) -> void",
            "!url": "http://developer.android.com/reference/java/util/Date.html#setSeconds(int)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "compareTo": {
            "!type": "fn(date: +java.util.Date) -> number",
            "!url": "http://developer.android.com/reference/java/util/Date.html#compareTo(java.util.Date)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/Date.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/Date.html#hashCode()"
          },
          "toGMTString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/Date.html#toGMTString()"
          },
          "setYear": {
            "!type": "fn(year: number) -> void",
            "!url": "http://developer.android.com/reference/java/util/Date.html#setYear(int)"
          },
          "getTime": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/util/Date.html#getTime()"
          },
          "clone": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/Date.html#clone()"
          },
          "getMinutes": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/Date.html#getMinutes()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "Locale": {
        "!url": "http://developer.android.com/reference/java/util/Locale.html",
        "!type": "fn(language: string)",
        "Builder": {
          "!url": "http://developer.android.com/reference/java/util/Locale.Builder.html",
          "!type": "fn()",
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "setLanguageTag": {
              "!type": "fn(languageTag: string) -> +java.util.Locale.Builder",
              "!url": "http://developer.android.com/reference/java/util/Locale.Builder.html#setLanguageTag(java.lang.String)"
            },
            "setExtension": {
              "!type": "fn(key: +java.lang.Char, value: string) -> +java.util.Locale.Builder",
              "!url": "http://developer.android.com/reference/java/util/Locale.Builder.html#setExtension(char, java.lang.String)"
            },
            "setLocale": {
              "!type": "fn(locale: +java.util.Locale) -> +java.util.Locale.Builder",
              "!url": "http://developer.android.com/reference/java/util/Locale.Builder.html#setLocale(java.util.Locale)"
            },
            "setUnicodeLocaleKeyword": {
              "!type": "fn(key: string, type: string) -> +java.util.Locale.Builder",
              "!url": "http://developer.android.com/reference/java/util/Locale.Builder.html#setUnicodeLocaleKeyword(java.lang.String, java.lang.String)"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "build": {
              "!type": "fn() -> +java.util.Locale",
              "!url": "http://developer.android.com/reference/java/util/Locale.Builder.html#build()"
            },
            "setScript": {
              "!type": "fn(script: string) -> +java.util.Locale.Builder",
              "!url": "http://developer.android.com/reference/java/util/Locale.Builder.html#setScript(java.lang.String)"
            },
            "clear": {
              "!type": "fn() -> +java.util.Locale.Builder",
              "!url": "http://developer.android.com/reference/java/util/Locale.Builder.html#clear()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "clearExtensions": {
              "!type": "fn() -> +java.util.Locale.Builder",
              "!url": "http://developer.android.com/reference/java/util/Locale.Builder.html#clearExtensions()"
            },
            "setLanguage": {
              "!type": "fn(language: string) -> +java.util.Locale.Builder",
              "!url": "http://developer.android.com/reference/java/util/Locale.Builder.html#setLanguage(java.lang.String)"
            },
            "setRegion": {
              "!type": "fn(region: string) -> +java.util.Locale.Builder",
              "!url": "http://developer.android.com/reference/java/util/Locale.Builder.html#setRegion(java.lang.String)"
            },
            "addUnicodeLocaleAttribute": {
              "!type": "fn(attribute: string) -> +java.util.Locale.Builder",
              "!url": "http://developer.android.com/reference/java/util/Locale.Builder.html#addUnicodeLocaleAttribute(java.lang.String)"
            },
            "setVariant": {
              "!type": "fn(variant: string) -> +java.util.Locale.Builder",
              "!url": "http://developer.android.com/reference/java/util/Locale.Builder.html#setVariant(java.lang.String)"
            },
            "removeUnicodeLocaleAttribute": {
              "!type": "fn(attribute: string) -> +java.util.Locale.Builder",
              "!url": "http://developer.android.com/reference/java/util/Locale.Builder.html#removeUnicodeLocaleAttribute(java.lang.String)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            }
          }
        },
        "ROOT": {
          "!type": "+java.util.Locale",
          "!url": "http://developer.android.com/reference/java/util/Locale.html#ROOT"
        },
        "JAPAN": {
          "!type": "+java.util.Locale",
          "!url": "http://developer.android.com/reference/java/util/Locale.html#JAPAN"
        },
        "SIMPLIFIED_CHINESE": {
          "!type": "+java.util.Locale",
          "!url": "http://developer.android.com/reference/java/util/Locale.html#SIMPLIFIED_CHINESE"
        },
        "US": {
          "!type": "+java.util.Locale",
          "!url": "http://developer.android.com/reference/java/util/Locale.html#US"
        },
        "ENGLISH": {
          "!type": "+java.util.Locale",
          "!url": "http://developer.android.com/reference/java/util/Locale.html#ENGLISH"
        },
        "FRENCH": {
          "!type": "+java.util.Locale",
          "!url": "http://developer.android.com/reference/java/util/Locale.html#FRENCH"
        },
        "UK": {
          "!type": "+java.util.Locale",
          "!url": "http://developer.android.com/reference/java/util/Locale.html#UK"
        },
        "CHINESE": {
          "!type": "+java.util.Locale",
          "!url": "http://developer.android.com/reference/java/util/Locale.html#CHINESE"
        },
        "ITALY": {
          "!type": "+java.util.Locale",
          "!url": "http://developer.android.com/reference/java/util/Locale.html#ITALY"
        },
        "KOREA": {
          "!type": "+java.util.Locale",
          "!url": "http://developer.android.com/reference/java/util/Locale.html#KOREA"
        },
        "JAPANESE": {
          "!type": "+java.util.Locale",
          "!url": "http://developer.android.com/reference/java/util/Locale.html#JAPANESE"
        },
        "KOREAN": {
          "!type": "+java.util.Locale",
          "!url": "http://developer.android.com/reference/java/util/Locale.html#KOREAN"
        },
        "CHINA": {
          "!type": "+java.util.Locale",
          "!url": "http://developer.android.com/reference/java/util/Locale.html#CHINA"
        },
        "TRADITIONAL_CHINESE": {
          "!type": "+java.util.Locale",
          "!url": "http://developer.android.com/reference/java/util/Locale.html#TRADITIONAL_CHINESE"
        },
        "FRANCE": {
          "!type": "+java.util.Locale",
          "!url": "http://developer.android.com/reference/java/util/Locale.html#FRANCE"
        },
        "TAIWAN": {
          "!type": "+java.util.Locale",
          "!url": "http://developer.android.com/reference/java/util/Locale.html#TAIWAN"
        },
        "PRC": {
          "!type": "+java.util.Locale",
          "!url": "http://developer.android.com/reference/java/util/Locale.html#PRC"
        },
        "ITALIAN": {
          "!type": "+java.util.Locale",
          "!url": "http://developer.android.com/reference/java/util/Locale.html#ITALIAN"
        },
        "CANADA_FRENCH": {
          "!type": "+java.util.Locale",
          "!url": "http://developer.android.com/reference/java/util/Locale.html#CANADA_FRENCH"
        },
        "GERMANY": {
          "!type": "+java.util.Locale",
          "!url": "http://developer.android.com/reference/java/util/Locale.html#GERMANY"
        },
        "UNICODE_LOCALE_EXTENSION": {
          "!type": "+java.lang.Char",
          "!url": "http://developer.android.com/reference/java/util/Locale.html#UNICODE_LOCALE_EXTENSION"
        },
        "GERMAN": {
          "!type": "+java.util.Locale",
          "!url": "http://developer.android.com/reference/java/util/Locale.html#GERMAN"
        },
        "PRIVATE_USE_EXTENSION": {
          "!type": "+java.lang.Char",
          "!url": "http://developer.android.com/reference/java/util/Locale.html#PRIVATE_USE_EXTENSION"
        },
        "CANADA": {
          "!type": "+java.util.Locale",
          "!url": "http://developer.android.com/reference/java/util/Locale.html#CANADA"
        },
        "getDefaultLocaleFromSystemProperties": {
          "!type": "fn() -> +java.util.Locale",
          "!url": "http://developer.android.com/reference/java/util/Locale.html#getDefaultLocaleFromSystemProperties()"
        },
        "getAvailableLocales": {
          "!type": "fn() -> +java.newArray",
          "!url": "http://developer.android.com/reference/java/util/Locale.html#getAvailableLocales()"
        },
        "getISOCountries": {
          "!type": "fn() -> +java.newArray",
          "!url": "http://developer.android.com/reference/java/util/Locale.html#getISOCountries()"
        },
        "forLanguageTag": {
          "!type": "fn(languageTag: string) -> +java.util.Locale",
          "!url": "http://developer.android.com/reference/java/util/Locale.html#forLanguageTag(java.lang.String)"
        },
        "parseSerializedExtensions": {
          "!type": "fn(extString: string, outputMap: +java.util.Map) -> void",
          "!url": "http://developer.android.com/reference/java/util/Locale.html#parseSerializedExtensions(java.lang.String, java.util.Map)"
        },
        "adjustLanguageCode": {
          "!type": "fn(languageCode: string) -> string",
          "!url": "http://developer.android.com/reference/java/util/Locale.html#adjustLanguageCode(java.lang.String)"
        },
        "parseUnicodeExtension": {
          "!type": "fn(subtags: +java.newArray, keywords: +java.util.Map, attributes: +java.util.Set) -> void",
          "!url": "http://developer.android.com/reference/java/util/Locale.html#parseUnicodeExtension(java.lang.String[], java.util.Map, java.util.Set)"
        },
        "serializeExtensions": {
          "!type": "fn(extensionsMap: +java.util.Map) -> string",
          "!url": "http://developer.android.com/reference/java/util/Locale.html#serializeExtensions(java.util.Map)"
        },
        "setDefault": {
          "!type": "fn(locale: +java.util.Locale) -> void",
          "!url": "http://developer.android.com/reference/java/util/Locale.html#setDefault(java.util.Locale)"
        },
        "getDefault": {
          "!type": "fn() -> +java.util.Locale",
          "!url": "http://developer.android.com/reference/java/util/Locale.html#getDefault()"
        },
        "getISOLanguages": {
          "!type": "fn() -> +java.newArray",
          "!url": "http://developer.android.com/reference/java/util/Locale.html#getISOLanguages()"
        },
        "prototype": {
          "getISO3Country": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/Locale.html#getISO3Country()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getUnicodeLocaleKeys": {
            "!type": "fn() -> +java.util.Set",
            "!url": "http://developer.android.com/reference/java/util/Locale.html#getUnicodeLocaleKeys()"
          },
          "getExtensionKeys": {
            "!type": "fn() -> +java.util.Set",
            "!url": "http://developer.android.com/reference/java/util/Locale.html#getExtensionKeys()"
          },
          "getISO3Language": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/Locale.html#getISO3Language()"
          },
          "getUnicodeLocaleAttributes": {
            "!type": "fn() -> +java.util.Set",
            "!url": "http://developer.android.com/reference/java/util/Locale.html#getUnicodeLocaleAttributes()"
          },
          "getDisplayName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/Locale.html#getDisplayName()"
          },
          "getDisplayLanguage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/Locale.html#getDisplayLanguage()"
          },
          "equals": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/Locale.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getVariant": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/Locale.html#getVariant()"
          },
          "getDisplayCountry": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/Locale.html#getDisplayCountry()"
          },
          "getExtension": {
            "!type": "fn(extensionKey: +java.lang.Char) -> string",
            "!url": "http://developer.android.com/reference/java/util/Locale.html#getExtension(char)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getLanguage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/Locale.html#getLanguage()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/Locale.html#toString()"
          },
          "toLanguageTag": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/Locale.html#toLanguageTag()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/Locale.html#hashCode()"
          },
          "getDisplayVariant": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/Locale.html#getDisplayVariant()"
          },
          "getUnicodeLocaleType": {
            "!type": "fn(keyWord: string) -> string",
            "!url": "http://developer.android.com/reference/java/util/Locale.html#getUnicodeLocaleType(java.lang.String)"
          },
          "getScript": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/Locale.html#getScript()"
          },
          "clone": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/Locale.html#clone()"
          },
          "getCountry": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/Locale.html#getCountry()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "getDisplayScript": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/Locale.html#getDisplayScript()"
          }
        }
      },
      "PropertyResourceBundle": {
        "!url": "http://developer.android.com/reference/java/util/PropertyResourceBundle.html",
        "!type": "fn(stream: +java.io.InputStream)",
        "clearCache": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/java/util/ResourceBundle.html#clearCache()"
        },
        "getBundle": {
          "!type": "fn(bundleName: string) -> +java.util.ResourceBundle",
          "!url": "http://developer.android.com/reference/java/util/ResourceBundle.html#getBundle(java.lang.String)"
        },
        "prototype": {
          "getString": {
            "!type": "fn(key: string) -> string",
            "!url": "http://developer.android.com/reference/java/util/ResourceBundle.html#getString(java.lang.String)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getLocale": {
            "!type": "fn() -> +java.util.Locale",
            "!url": "http://developer.android.com/reference/java/util/ResourceBundle.html#getLocale()"
          },
          "keySet": {
            "!type": "fn() -> +java.util.Set",
            "!url": "http://developer.android.com/reference/java/util/ResourceBundle.html#keySet()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "handleGetObject": {
            "!type": "fn(key: string) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/PropertyResourceBundle.html#handleGetObject(java.lang.String)"
          },
          "getStringArray": {
            "!type": "fn(key: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/util/ResourceBundle.html#getStringArray(java.lang.String)"
          },
          "containsKey": {
            "!type": "fn(key: string) -> bool",
            "!url": "http://developer.android.com/reference/java/util/ResourceBundle.html#containsKey(java.lang.String)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getObject": {
            "!type": "fn(key: string) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/ResourceBundle.html#getObject(java.lang.String)"
          },
          "getKeys": {
            "!type": "fn() -> +java.util.Enumeration",
            "!url": "http://developer.android.com/reference/java/util/PropertyResourceBundle.html#getKeys()"
          }
        }
      },
      "ConcurrentModificationException": {
        "!url": "http://developer.android.com/reference/java/util/ConcurrentModificationException.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "IdentityHashMap": {
        "!url": "http://developer.android.com/reference/java/util/IdentityHashMap.html",
        "!type": "fn()",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "values": {
            "!type": "fn() -> +java.util.Collection",
            "!url": "http://developer.android.com/reference/java/util/IdentityHashMap.html#values()"
          },
          "containsKey": {
            "!type": "fn(key: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/IdentityHashMap.html#containsKey(java.lang.Object)"
          },
          "entrySet": {
            "!type": "fn() -> +java.util.Set",
            "!url": "http://developer.android.com/reference/java/util/IdentityHashMap.html#entrySet()"
          },
          "keySet": {
            "!type": "fn() -> +java.util.Set",
            "!url": "http://developer.android.com/reference/java/util/IdentityHashMap.html#keySet()"
          },
          "put": {
            "!type": "fn(key: +java.lang.Object, value: +java.lang.Object) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/IdentityHashMap.html#put(K, V)"
          },
          "equals": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/IdentityHashMap.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "isEmpty": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/util/IdentityHashMap.html#isEmpty()"
          },
          "size": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/IdentityHashMap.html#size()"
          },
          "putAll": {
            "!type": "fn(map: +java.util.Map) -> void",
            "!url": "http://developer.android.com/reference/java/util/IdentityHashMap.html#putAll(java.util.Map)"
          },
          "clear": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/util/IdentityHashMap.html#clear()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "containsValue": {
            "!type": "fn(value: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/IdentityHashMap.html#containsValue(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/AbstractMap.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/AbstractMap.html#hashCode()"
          },
          "clone": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/IdentityHashMap.html#clone()"
          },
          "get": {
            "!type": "fn(key: +java.lang.Object) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/IdentityHashMap.html#get(java.lang.Object)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "remove": {
            "!type": "fn(key: +java.lang.Object) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/IdentityHashMap.html#remove(java.lang.Object)"
          }
        }
      },
      "Arrays": {
        "!url": "http://developer.android.com/reference/java/util/Arrays.html",
        "checkOffsetAndCount": {
          "!type": "fn(arrayLength: number, offset: number, count: number) -> void",
          "!url": "http://developer.android.com/reference/java/util/Arrays.html#checkOffsetAndCount(int, int, int)"
        },
        "toString": {
          "!type": "fn(array: +java.newArray) -> string",
          "!url": "http://developer.android.com/reference/java/util/Arrays.html#toString(boolean[])"
        },
        "equals": {
          "!type": "fn(array1: +java.newArray, array2: +java.newArray) -> bool",
          "!url": "http://developer.android.com/reference/java/util/Arrays.html#equals(byte[], byte[])"
        },
        "checkStartAndEnd": {
          "!type": "fn(len: number, start: number, end: number) -> void",
          "!url": "http://developer.android.com/reference/java/util/Arrays.html#checkStartAndEnd(int, int, int)"
        },
        "sort": {
          "!type": "fn(array: +java.newArray) -> void",
          "!url": "http://developer.android.com/reference/java/util/Arrays.html#sort(byte[])"
        },
        "deepHashCode": {
          "!type": "fn(array: +java.newArray) -> number",
          "!url": "http://developer.android.com/reference/java/util/Arrays.html#deepHashCode(java.lang.Object[])"
        },
        "binarySearch": {
          "!type": "fn(array: +java.newArray, value: +java.lang.Byte) -> number",
          "!url": "http://developer.android.com/reference/java/util/Arrays.html#binarySearch(byte[], byte)"
        },
        "copyOfRange": {
          "!type": "fn(original: +java.newArray, start: number, end: number) -> +java.newArray",
          "!url": "http://developer.android.com/reference/java/util/Arrays.html#copyOfRange(boolean[], int, int)"
        },
        "asList": {
          "!type": "fn(array: +java.newArray) -> +java.util.List",
          "!url": "http://developer.android.com/reference/java/util/Arrays.html#asList(T[])"
        },
        "hashCode": {
          "!type": "fn(array: +java.newArray) -> number",
          "!url": "http://developer.android.com/reference/java/util/Arrays.html#hashCode(boolean[])"
        },
        "deepEquals": {
          "!type": "fn(array1: +java.newArray, array2: +java.newArray) -> bool",
          "!url": "http://developer.android.com/reference/java/util/Arrays.html#deepEquals(java.lang.Object[], java.lang.Object[])"
        },
        "copyOf": {
          "!type": "fn(original: +java.newArray, newLength: number) -> +java.newArray",
          "!url": "http://developer.android.com/reference/java/util/Arrays.html#copyOf(boolean[], int)"
        },
        "deepToString": {
          "!type": "fn(array: +java.newArray) -> string",
          "!url": "http://developer.android.com/reference/java/util/Arrays.html#deepToString(java.lang.Object[])"
        },
        "fill": {
          "!type": "fn(array: +java.newArray, value: +java.lang.Byte) -> void",
          "!url": "http://developer.android.com/reference/java/util/Arrays.html#fill(byte[], byte)"
        },
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "Formatter": {
        "!url": "http://developer.android.com/reference/java/util/Formatter.html",
        "!type": "fn()",
        "BigDecimalLayoutForm": {
          "!url": "http://developer.android.com/reference/java/util/Formatter.BigDecimalLayoutForm.html",
          "SCIENTIFIC": {
            "!type": "+java.util.Formatter.BigDecimalLayoutForm",
            "!url": "http://developer.android.com/reference/java/util/Formatter.BigDecimalLayoutForm.html#SCIENTIFIC"
          },
          "DECIMAL_FLOAT": {
            "!type": "+java.util.Formatter.BigDecimalLayoutForm",
            "!url": "http://developer.android.com/reference/java/util/Formatter.BigDecimalLayoutForm.html#DECIMAL_FLOAT"
          },
          "valueOf": {
            "!type": "fn(name: string) -> +java.util.Formatter.BigDecimalLayoutForm",
            "!url": "http://developer.android.com/reference/java/util/Formatter.BigDecimalLayoutForm.html#valueOf(java.lang.String)"
          },
          "values": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/util/Formatter.BigDecimalLayoutForm.html#values()"
          },
          "getSharedConstants": {
            "!type": "fn(enumType: +java.lang.Class) -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Enum.html#getSharedConstants(java.lang.Class)"
          },
          "prototype": {
            "name": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#name()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#toString()"
            },
            "equals": {
              "!type": "fn(other: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#equals(java.lang.Object)"
            },
            "compareTo": {
              "!type": "fn(o: +java.lang.Enum) -> number",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#compareTo(E)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "getDeclaringClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#getDeclaringClass()"
            },
            "ordinal": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#ordinal()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Enum.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/Formatter.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "out": {
            "!type": "fn() -> +java.lang.Appendable",
            "!url": "http://developer.android.com/reference/java/util/Formatter.html#out()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "ioException": {
            "!type": "fn() -> +java.io.IOException",
            "!url": "http://developer.android.com/reference/java/util/Formatter.html#ioException()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "locale": {
            "!type": "fn() -> +java.util.Locale",
            "!url": "http://developer.android.com/reference/java/util/Formatter.html#locale()"
          },
          "format": {
            "!type": "fn(format: string, args: +java.newArray) -> +java.util.Formatter",
            "!url": "http://developer.android.com/reference/java/util/Formatter.html#format(java.lang.String, java.lang.Object[])"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "flush": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/util/Formatter.html#flush()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/util/Formatter.html#close()"
          }
        }
      },
      "TooManyListenersException": {
        "!url": "http://developer.android.com/reference/java/util/TooManyListenersException.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "IllformedLocaleException": {
        "!url": "http://developer.android.com/reference/java/util/IllformedLocaleException.html",
        "!type": "fn()",
        "prototype": {
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getErrorIndex": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/IllformedLocaleException.html#getErrorIndex()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "EventObject": {
        "!url": "http://developer.android.com/reference/java/util/EventObject.html",
        "!type": "fn(source: +java.lang.Object)",
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getSource": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/EventObject.html#getSource()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/EventObject.html#toString()"
          }
        }
      },
      "UnsafeArrayList": {
        "!url": "http://developer.android.com/reference/java/util/UnsafeArrayList.html",
        "!type": "fn(elementType: +java.lang.Class, initialCapacity: number)",
        "prototype": {
          "indexOf": {
            "!type": "fn(object: +java.lang.Object) -> number",
            "!url": "http://developer.android.com/reference/java/util/AbstractList.html#indexOf(java.lang.Object)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "removeAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#removeAll(java.util.Collection)"
          },
          "containsAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#containsAll(java.util.Collection)"
          },
          "array": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/util/UnsafeArrayList.html#array()"
          },
          "contains": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#contains(java.lang.Object)"
          },
          "equals": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractList.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "subList": {
            "!type": "fn(start: number, end: number) -> +java.util.List",
            "!url": "http://developer.android.com/reference/java/util/AbstractList.html#subList(int, int)"
          },
          "set": {
            "!type": "fn(location: number, object: +java.lang.Object) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/AbstractList.html#set(int, E)"
          },
          "isEmpty": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#isEmpty()"
          },
          "add": {
            "!type": "fn(element: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/UnsafeArrayList.html#add(T)"
          },
          "size": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/UnsafeArrayList.html#size()"
          },
          "iterator": {
            "!type": "fn() -> +java.util.Iterator",
            "!url": "http://developer.android.com/reference/java/util/AbstractList.html#iterator()"
          },
          "clear": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/util/AbstractList.html#clear()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "listIterator": {
            "!type": "fn() -> +java.util.ListIterator",
            "!url": "http://developer.android.com/reference/java/util/AbstractList.html#listIterator()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#toString()"
          },
          "retainAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#retainAll(java.util.Collection)"
          },
          "toArray": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#toArray()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/AbstractList.html#hashCode()"
          },
          "lastIndexOf": {
            "!type": "fn(object: +java.lang.Object) -> number",
            "!url": "http://developer.android.com/reference/java/util/AbstractList.html#lastIndexOf(java.lang.Object)"
          },
          "addAll": {
            "!type": "fn(location: number, collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractList.html#addAll(int, java.util.Collection)"
          },
          "get": {
            "!type": "fn(i: number) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/UnsafeArrayList.html#get(int)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "remove": {
            "!type": "fn(location: number) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/AbstractList.html#remove(int)"
          }
        }
      },
      "AbstractSequentialList": {
        "!url": "http://developer.android.com/reference/java/util/AbstractSequentialList.html",
        "prototype": {
          "indexOf": {
            "!type": "fn(object: +java.lang.Object) -> number",
            "!url": "http://developer.android.com/reference/java/util/AbstractList.html#indexOf(java.lang.Object)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "removeAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#removeAll(java.util.Collection)"
          },
          "containsAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#containsAll(java.util.Collection)"
          },
          "contains": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#contains(java.lang.Object)"
          },
          "equals": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractList.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "subList": {
            "!type": "fn(start: number, end: number) -> +java.util.List",
            "!url": "http://developer.android.com/reference/java/util/AbstractList.html#subList(int, int)"
          },
          "set": {
            "!type": "fn(location: number, object: +java.lang.Object) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/AbstractSequentialList.html#set(int, E)"
          },
          "isEmpty": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#isEmpty()"
          },
          "add": {
            "!type": "fn(location: number, object: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/java/util/AbstractSequentialList.html#add(int, E)"
          },
          "size": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#size()"
          },
          "iterator": {
            "!type": "fn() -> +java.util.Iterator",
            "!url": "http://developer.android.com/reference/java/util/AbstractSequentialList.html#iterator()"
          },
          "clear": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/util/AbstractList.html#clear()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "listIterator": {
            "!type": "fn(location: number) -> +java.util.ListIterator",
            "!url": "http://developer.android.com/reference/java/util/AbstractSequentialList.html#listIterator(int)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#toString()"
          },
          "retainAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#retainAll(java.util.Collection)"
          },
          "toArray": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#toArray()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/AbstractList.html#hashCode()"
          },
          "lastIndexOf": {
            "!type": "fn(object: +java.lang.Object) -> number",
            "!url": "http://developer.android.com/reference/java/util/AbstractList.html#lastIndexOf(java.lang.Object)"
          },
          "addAll": {
            "!type": "fn(location: number, collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractSequentialList.html#addAll(int, java.util.Collection)"
          },
          "get": {
            "!type": "fn(location: number) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/AbstractSequentialList.html#get(int)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "remove": {
            "!type": "fn(location: number) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/AbstractSequentialList.html#remove(int)"
          }
        }
      },
      "NoSuchElementException": {
        "!url": "http://developer.android.com/reference/java/util/NoSuchElementException.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "EmptyStackException": {
        "!url": "http://developer.android.com/reference/java/util/EmptyStackException.html",
        "!type": "fn()",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "Timer": {
        "!url": "http://developer.android.com/reference/java/util/Timer.html",
        "!type": "fn(name: string, isDaemon: bool)",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "purge": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/Timer.html#purge()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "scheduleAtFixedRate": {
            "!type": "fn(task: +java.util.TimerTask, delay: +java.lang.Long, period: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/java/util/Timer.html#scheduleAtFixedRate(java.util.TimerTask, long, long)"
          },
          "schedule": {
            "!type": "fn(task: +java.util.TimerTask, when: +java.util.Date) -> void",
            "!url": "http://developer.android.com/reference/java/util/Timer.html#schedule(java.util.TimerTask, java.util.Date)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "cancel": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/util/Timer.html#cancel()"
          }
        }
      },
      "HashMap": {
        "!url": "http://developer.android.com/reference/java/util/HashMap.html",
        "!type": "fn()",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "values": {
            "!type": "fn() -> +java.util.Collection",
            "!url": "http://developer.android.com/reference/java/util/HashMap.html#values()"
          },
          "containsKey": {
            "!type": "fn(key: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/HashMap.html#containsKey(java.lang.Object)"
          },
          "entrySet": {
            "!type": "fn() -> +java.util.Set",
            "!url": "http://developer.android.com/reference/java/util/HashMap.html#entrySet()"
          },
          "keySet": {
            "!type": "fn() -> +java.util.Set",
            "!url": "http://developer.android.com/reference/java/util/HashMap.html#keySet()"
          },
          "put": {
            "!type": "fn(key: +java.lang.Object, value: +java.lang.Object) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/HashMap.html#put(K, V)"
          },
          "equals": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractMap.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "isEmpty": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/util/HashMap.html#isEmpty()"
          },
          "size": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/HashMap.html#size()"
          },
          "putAll": {
            "!type": "fn(map: +java.util.Map) -> void",
            "!url": "http://developer.android.com/reference/java/util/HashMap.html#putAll(java.util.Map)"
          },
          "clear": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/util/HashMap.html#clear()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "containsValue": {
            "!type": "fn(value: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/HashMap.html#containsValue(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/AbstractMap.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/AbstractMap.html#hashCode()"
          },
          "clone": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/HashMap.html#clone()"
          },
          "get": {
            "!type": "fn(key: +java.lang.Object) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/HashMap.html#get(java.lang.Object)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "remove": {
            "!type": "fn(key: +java.lang.Object) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/HashMap.html#remove(java.lang.Object)"
          }
        }
      },
      "Collections": {
        "!url": "http://developer.android.com/reference/java/util/Collections.html",
        "EMPTY_LIST": {
          "!type": "+java.util.List",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#EMPTY_LIST"
        },
        "EMPTY_MAP": {
          "!type": "+java.util.Map",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#EMPTY_MAP"
        },
        "EMPTY_SET": {
          "!type": "+java.util.Set",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#EMPTY_SET"
        },
        "frequency": {
          "!type": "fn(c: +java.util.Collection, o: +java.lang.Object) -> number",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#frequency(java.util.Collection, java.lang.Object)"
        },
        "unmodifiableSet": {
          "!type": "fn(set: +java.util.Set) -> +java.util.Set",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#unmodifiableSet(java.util.Set)"
        },
        "checkedCollection": {
          "!type": "fn(c: +java.util.Collection, type: +java.lang.Class) -> +java.util.Collection",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#checkedCollection(java.util.Collection, java.lang.Class)"
        },
        "emptySet": {
          "!type": "fn() -> +java.util.Set",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#emptySet()"
        },
        "nCopies": {
          "!type": "fn(length: number, object: +java.lang.Object) -> +java.util.List",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#nCopies(int, T)"
        },
        "unmodifiableMap": {
          "!type": "fn(map: +java.util.Map) -> +java.util.Map",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#unmodifiableMap(java.util.Map)"
        },
        "checkedSortedSet": {
          "!type": "fn(s: +java.util.SortedSet, type: +java.lang.Class) -> +java.util.SortedSet",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#checkedSortedSet(java.util.SortedSet, java.lang.Class)"
        },
        "unmodifiableSortedSet": {
          "!type": "fn(set: +java.util.SortedSet) -> +java.util.SortedSet",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#unmodifiableSortedSet(java.util.SortedSet)"
        },
        "singletonMap": {
          "!type": "fn(key: +java.lang.Object, value: +java.lang.Object) -> +java.util.Map",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#singletonMap(K, V)"
        },
        "emptyMap": {
          "!type": "fn() -> +java.util.Map",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#emptyMap()"
        },
        "checkedSortedMap": {
          "!type": "fn(m: +java.util.SortedMap, keyType: +java.lang.Class, valueType: +java.lang.Class) -> +java.util.SortedMap",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#checkedSortedMap(java.util.SortedMap, java.lang.Class, java.lang.Class)"
        },
        "lastIndexOfSubList": {
          "!type": "fn(list: +java.util.List, sublist: +java.util.List) -> number",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#lastIndexOfSubList(java.util.List, java.util.List)"
        },
        "unmodifiableSortedMap": {
          "!type": "fn(map: +java.util.SortedMap) -> +java.util.SortedMap",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#unmodifiableSortedMap(java.util.SortedMap)"
        },
        "replaceAll": {
          "!type": "fn(list: +java.util.List, obj: +java.lang.Object, obj2: +java.lang.Object) -> bool",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#replaceAll(java.util.List, T, T)"
        },
        "emptyListIterator": {
          "!type": "fn() -> +java.util.ListIterator",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#emptyListIterator()"
        },
        "indexOfSubList": {
          "!type": "fn(list: +java.util.List, sublist: +java.util.List) -> number",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#indexOfSubList(java.util.List, java.util.List)"
        },
        "singletonList": {
          "!type": "fn(object: +java.lang.Object) -> +java.util.List",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#singletonList(E)"
        },
        "asLifoQueue": {
          "!type": "fn(deque: +java.util.Deque) -> +java.util.Queue",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#asLifoQueue(java.util.Deque)"
        },
        "fill": {
          "!type": "fn(list: +java.util.List, object: +java.lang.Object) -> void",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#fill(java.util.List, T)"
        },
        "synchronizedSortedSet": {
          "!type": "fn(set: +java.util.SortedSet) -> +java.util.SortedSet",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#synchronizedSortedSet(java.util.SortedSet)"
        },
        "synchronizedSortedMap": {
          "!type": "fn(map: +java.util.SortedMap) -> +java.util.SortedMap",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#synchronizedSortedMap(java.util.SortedMap)"
        },
        "list": {
          "!type": "fn(enumeration: +java.util.Enumeration) -> +java.util.ArrayList",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#list(java.util.Enumeration)"
        },
        "binarySearch": {
          "!type": "fn(list: +java.util.List, object: +java.lang.Object) -> number",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#binarySearch(java.util.List, T)"
        },
        "synchronizedList": {
          "!type": "fn(list: +java.util.List) -> +java.util.List",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#synchronizedList(java.util.List)"
        },
        "newSetFromMap": {
          "!type": "fn(map: +java.util.Map) -> +java.util.Set",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#newSetFromMap(java.util.Map)"
        },
        "max": {
          "!type": "fn(collection: +java.util.Collection) -> +java.lang.Object",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#max(java.util.Collection)"
        },
        "secondaryIdentityHash": {
          "!type": "fn(key: +java.lang.Object) -> number",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#secondaryIdentityHash(java.lang.Object)"
        },
        "synchronizedCollection": {
          "!type": "fn(collection: +java.util.Collection) -> +java.util.Collection",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#synchronizedCollection(java.util.Collection)"
        },
        "roundUpToPowerOfTwo": {
          "!type": "fn(i: number) -> number",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#roundUpToPowerOfTwo(int)"
        },
        "swap": {
          "!type": "fn(list: +java.util.List, index1: number, index2: number) -> void",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#swap(java.util.List, int, int)"
        },
        "unmodifiableCollection": {
          "!type": "fn(collection: +java.util.Collection) -> +java.util.Collection",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#unmodifiableCollection(java.util.Collection)"
        },
        "secondaryHash": {
          "!type": "fn(key: +java.lang.Object) -> number",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#secondaryHash(java.lang.Object)"
        },
        "shuffle": {
          "!type": "fn(list: +java.util.List) -> void",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#shuffle(java.util.List)"
        },
        "disjoint": {
          "!type": "fn(c1: +java.util.Collection, c2: +java.util.Collection) -> bool",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#disjoint(java.util.Collection, java.util.Collection)"
        },
        "singleton": {
          "!type": "fn(object: +java.lang.Object) -> +java.util.Set",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#singleton(E)"
        },
        "reverse": {
          "!type": "fn(list: +java.util.List) -> void",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#reverse(java.util.List)"
        },
        "reverseOrder": {
          "!type": "fn() -> +java.util.Comparator",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#reverseOrder()"
        },
        "addAll": {
          "!type": "fn(c: +java.util.Collection, a: +java.newArray) -> bool",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#addAll(java.util.Collection, T[])"
        },
        "checkedSet": {
          "!type": "fn(s: +java.util.Set, type: +java.lang.Class) -> +java.util.Set",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#checkedSet(java.util.Set, java.lang.Class)"
        },
        "synchronizedSet": {
          "!type": "fn(set: +java.util.Set) -> +java.util.Set",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#synchronizedSet(java.util.Set)"
        },
        "unmodifiableList": {
          "!type": "fn(list: +java.util.List) -> +java.util.List",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#unmodifiableList(java.util.List)"
        },
        "checkedMap": {
          "!type": "fn(m: +java.util.Map, keyType: +java.lang.Class, valueType: +java.lang.Class) -> +java.util.Map",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#checkedMap(java.util.Map, java.lang.Class, java.lang.Class)"
        },
        "emptyList": {
          "!type": "fn() -> +java.util.List",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#emptyList()"
        },
        "emptyEnumeration": {
          "!type": "fn() -> +java.util.Enumeration",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#emptyEnumeration()"
        },
        "synchronizedMap": {
          "!type": "fn(map: +java.util.Map) -> +java.util.Map",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#synchronizedMap(java.util.Map)"
        },
        "checkedList": {
          "!type": "fn(list: +java.util.List, type: +java.lang.Class) -> +java.util.List",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#checkedList(java.util.List, java.lang.Class)"
        },
        "rotate": {
          "!type": "fn(lst: +java.util.List, dist: number) -> void",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#rotate(java.util.List, int)"
        },
        "sort": {
          "!type": "fn(list: +java.util.List) -> void",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#sort(java.util.List)"
        },
        "enumeration": {
          "!type": "fn(collection: +java.util.Collection) -> +java.util.Enumeration",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#enumeration(java.util.Collection)"
        },
        "min": {
          "!type": "fn(collection: +java.util.Collection) -> +java.lang.Object",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#min(java.util.Collection)"
        },
        "copy": {
          "!type": "fn(destination: +java.util.List, source: +java.util.List) -> void",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#copy(java.util.List, java.util.List)"
        },
        "emptyIterator": {
          "!type": "fn() -> +java.util.Iterator",
          "!url": "http://developer.android.com/reference/java/util/Collections.html#emptyIterator()"
        },
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "Properties": {
        "!url": "http://developer.android.com/reference/java/util/Properties.html",
        "!type": "fn()",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "values": {
            "!type": "fn() -> +java.util.Collection",
            "!url": "http://developer.android.com/reference/java/util/Hashtable.html#values()"
          },
          "containsKey": {
            "!type": "fn(key: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/Hashtable.html#containsKey(java.lang.Object)"
          },
          "entrySet": {
            "!type": "fn() -> +java.util.Set",
            "!url": "http://developer.android.com/reference/java/util/Hashtable.html#entrySet()"
          },
          "keySet": {
            "!type": "fn() -> +java.util.Set",
            "!url": "http://developer.android.com/reference/java/util/Hashtable.html#keySet()"
          },
          "getProperty": {
            "!type": "fn(name: string) -> string",
            "!url": "http://developer.android.com/reference/java/util/Properties.html#getProperty(java.lang.String)"
          },
          "store": {
            "!type": "fn(out: +java.io.OutputStream, comment: string) -> void",
            "!url": "http://developer.android.com/reference/java/util/Properties.html#store(java.io.OutputStream, java.lang.String)"
          },
          "put": {
            "!type": "fn(key: +java.lang.Object, value: +java.lang.Object) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/Hashtable.html#put(K, V)"
          },
          "stringPropertyNames": {
            "!type": "fn() -> +java.util.Set",
            "!url": "http://developer.android.com/reference/java/util/Properties.html#stringPropertyNames()"
          },
          "load": {
            "!type": "fn(in: +java.io.InputStream) -> void",
            "!url": "http://developer.android.com/reference/java/util/Properties.html#load(java.io.InputStream)"
          },
          "contains": {
            "!type": "fn(value: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/Hashtable.html#contains(java.lang.Object)"
          },
          "equals": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/Hashtable.html#equals(java.lang.Object)"
          },
          "setProperty": {
            "!type": "fn(name: string, value: string) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/Properties.html#setProperty(java.lang.String, java.lang.String)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "elements": {
            "!type": "fn() -> +java.util.Enumeration",
            "!url": "http://developer.android.com/reference/java/util/Hashtable.html#elements()"
          },
          "keys": {
            "!type": "fn() -> +java.util.Enumeration",
            "!url": "http://developer.android.com/reference/java/util/Hashtable.html#keys()"
          },
          "isEmpty": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/util/Hashtable.html#isEmpty()"
          },
          "size": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/Hashtable.html#size()"
          },
          "clear": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/util/Hashtable.html#clear()"
          },
          "putAll": {
            "!type": "fn(map: +java.util.Map) -> void",
            "!url": "http://developer.android.com/reference/java/util/Hashtable.html#putAll(java.util.Map)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/Hashtable.html#toString()"
          },
          "containsValue": {
            "!type": "fn(value: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/Hashtable.html#containsValue(java.lang.Object)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/Hashtable.html#hashCode()"
          },
          "loadFromXML": {
            "!type": "fn(in: +java.io.InputStream) -> void",
            "!url": "http://developer.android.com/reference/java/util/Properties.html#loadFromXML(java.io.InputStream)"
          },
          "propertyNames": {
            "!type": "fn() -> +java.util.Enumeration",
            "!url": "http://developer.android.com/reference/java/util/Properties.html#propertyNames()"
          },
          "save": {
            "!type": "fn(out: +java.io.OutputStream, comment: string) -> void",
            "!url": "http://developer.android.com/reference/java/util/Properties.html#save(java.io.OutputStream, java.lang.String)"
          },
          "list": {
            "!type": "fn(out: +java.io.PrintStream) -> void",
            "!url": "http://developer.android.com/reference/java/util/Properties.html#list(java.io.PrintStream)"
          },
          "clone": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/Hashtable.html#clone()"
          },
          "get": {
            "!type": "fn(key: +java.lang.Object) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/Hashtable.html#get(java.lang.Object)"
          },
          "storeToXML": {
            "!type": "fn(os: +java.io.OutputStream, comment: string) -> void",
            "!url": "http://developer.android.com/reference/java/util/Properties.html#storeToXML(java.io.OutputStream, java.lang.String)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "remove": {
            "!type": "fn(key: +java.lang.Object) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/Hashtable.html#remove(java.lang.Object)"
          }
        }
      },
      "DuplicateFormatFlagsException": {
        "!url": "http://developer.android.com/reference/java/util/DuplicateFormatFlagsException.html",
        "!type": "fn(f: string)",
        "prototype": {
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/DuplicateFormatFlagsException.html#getMessage()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getFlags": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/DuplicateFormatFlagsException.html#getFlags()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "MissingFormatWidthException": {
        "!url": "http://developer.android.com/reference/java/util/MissingFormatWidthException.html",
        "!type": "fn(s: string)",
        "prototype": {
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getFormatSpecifier": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/MissingFormatWidthException.html#getFormatSpecifier()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/MissingFormatWidthException.html#getMessage()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "TreeMap": {
        "!url": "http://developer.android.com/reference/java/util/TreeMap.html",
        "!type": "fn()",
        "prototype": {
          "floorKey": {
            "!type": "fn(key: +java.lang.Object) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/TreeMap.html#floorKey(K)"
          },
          "containsValue": {
            "!type": "fn(value: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractMap.html#containsValue(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/AbstractMap.html#toString()"
          },
          "lastEntry": {
            "!type": "fn() -> +java.util.Map.Entry",
            "!url": "http://developer.android.com/reference/java/util/TreeMap.html#lastEntry()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "headMap": {
            "!type": "fn(to: +java.lang.Object, inclusive: bool) -> +java.util.NavigableMap",
            "!url": "http://developer.android.com/reference/java/util/TreeMap.html#headMap(K, boolean)"
          },
          "size": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/TreeMap.html#size()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "tailMap": {
            "!type": "fn(from: +java.lang.Object, inclusive: bool) -> +java.util.NavigableMap",
            "!url": "http://developer.android.com/reference/java/util/TreeMap.html#tailMap(K, boolean)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/AbstractMap.html#hashCode()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "ceilingEntry": {
            "!type": "fn(key: +java.lang.Object) -> +java.util.Map.Entry",
            "!url": "http://developer.android.com/reference/java/util/TreeMap.html#ceilingEntry(K)"
          },
          "firstKey": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/TreeMap.html#firstKey()"
          },
          "firstEntry": {
            "!type": "fn() -> +java.util.Map.Entry",
            "!url": "http://developer.android.com/reference/java/util/TreeMap.html#firstEntry()"
          },
          "floorEntry": {
            "!type": "fn(key: +java.lang.Object) -> +java.util.Map.Entry",
            "!url": "http://developer.android.com/reference/java/util/TreeMap.html#floorEntry(K)"
          },
          "isEmpty": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/util/TreeMap.html#isEmpty()"
          },
          "pollLastEntry": {
            "!type": "fn() -> +java.util.Map.Entry",
            "!url": "http://developer.android.com/reference/java/util/TreeMap.html#pollLastEntry()"
          },
          "lowerKey": {
            "!type": "fn(key: +java.lang.Object) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/TreeMap.html#lowerKey(K)"
          },
          "clone": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/TreeMap.html#clone()"
          },
          "keySet": {
            "!type": "fn() -> +java.util.Set",
            "!url": "http://developer.android.com/reference/java/util/TreeMap.html#keySet()"
          },
          "lowerEntry": {
            "!type": "fn(key: +java.lang.Object) -> +java.util.Map.Entry",
            "!url": "http://developer.android.com/reference/java/util/TreeMap.html#lowerEntry(K)"
          },
          "comparator": {
            "!type": "fn() -> +java.util.Comparator",
            "!url": "http://developer.android.com/reference/java/util/TreeMap.html#comparator()"
          },
          "putAll": {
            "!type": "fn(map: +java.util.Map) -> void",
            "!url": "http://developer.android.com/reference/java/util/AbstractMap.html#putAll(java.util.Map)"
          },
          "remove": {
            "!type": "fn(key: +java.lang.Object) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/TreeMap.html#remove(java.lang.Object)"
          },
          "ceilingKey": {
            "!type": "fn(key: +java.lang.Object) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/TreeMap.html#ceilingKey(K)"
          },
          "equals": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractMap.html#equals(java.lang.Object)"
          },
          "lastKey": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/TreeMap.html#lastKey()"
          },
          "pollFirstEntry": {
            "!type": "fn() -> +java.util.Map.Entry",
            "!url": "http://developer.android.com/reference/java/util/TreeMap.html#pollFirstEntry()"
          },
          "put": {
            "!type": "fn(key: +java.lang.Object, value: +java.lang.Object) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/TreeMap.html#put(K, V)"
          },
          "clear": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/util/TreeMap.html#clear()"
          },
          "higherKey": {
            "!type": "fn(key: +java.lang.Object) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/TreeMap.html#higherKey(K)"
          },
          "higherEntry": {
            "!type": "fn(key: +java.lang.Object) -> +java.util.Map.Entry",
            "!url": "http://developer.android.com/reference/java/util/TreeMap.html#higherEntry(K)"
          },
          "entrySet": {
            "!type": "fn() -> +java.util.Set",
            "!url": "http://developer.android.com/reference/java/util/TreeMap.html#entrySet()"
          },
          "descendingMap": {
            "!type": "fn() -> +java.util.NavigableMap",
            "!url": "http://developer.android.com/reference/java/util/TreeMap.html#descendingMap()"
          },
          "subMap": {
            "!type": "fn(from: +java.lang.Object, fromInclusive: bool, to: +java.lang.Object, toInclusive: bool) -> +java.util.NavigableMap",
            "!url": "http://developer.android.com/reference/java/util/TreeMap.html#subMap(K, boolean, K, boolean)"
          },
          "navigableKeySet": {
            "!type": "fn() -> +java.util.NavigableSet",
            "!url": "http://developer.android.com/reference/java/util/TreeMap.html#navigableKeySet()"
          },
          "containsKey": {
            "!type": "fn(key: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/TreeMap.html#containsKey(java.lang.Object)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "get": {
            "!type": "fn(key: +java.lang.Object) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/TreeMap.html#get(java.lang.Object)"
          },
          "descendingKeySet": {
            "!type": "fn() -> +java.util.NavigableSet",
            "!url": "http://developer.android.com/reference/java/util/TreeMap.html#descendingKeySet()"
          },
          "values": {
            "!type": "fn() -> +java.util.Collection",
            "!url": "http://developer.android.com/reference/java/util/AbstractMap.html#values()"
          }
        }
      },
      "ServiceLoader": {
        "!url": "http://developer.android.com/reference/java/util/ServiceLoader.html",
        "loadInstalled": {
          "!type": "fn(service: +java.lang.Class) -> +java.util.ServiceLoader",
          "!url": "http://developer.android.com/reference/java/util/ServiceLoader.html#loadInstalled(java.lang.Class)"
        },
        "load": {
          "!type": "fn(service: +java.lang.Class, classLoader: +java.lang.ClassLoader) -> +java.util.ServiceLoader",
          "!url": "http://developer.android.com/reference/java/util/ServiceLoader.html#load(java.lang.Class, java.lang.ClassLoader)"
        },
        "loadFromSystemProperty": {
          "!type": "fn(service: +java.lang.Class) -> +java.lang.Object",
          "!url": "http://developer.android.com/reference/java/util/ServiceLoader.html#loadFromSystemProperty(java.lang.Class)"
        },
        "prototype": {
          "reload": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/util/ServiceLoader.html#reload()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/ServiceLoader.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "iterator": {
            "!type": "fn() -> +java.util.Iterator",
            "!url": "http://developer.android.com/reference/java/util/ServiceLoader.html#iterator()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "Random": {
        "!url": "http://developer.android.com/reference/java/util/Random.html",
        "!type": "fn()",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "nextFloat": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/java/util/Random.html#nextFloat()"
          },
          "nextBoolean": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/util/Random.html#nextBoolean()"
          },
          "nextLong": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/util/Random.html#nextLong()"
          },
          "nextDouble": {
            "!type": "fn() -> +java.lang.Double",
            "!url": "http://developer.android.com/reference/java/util/Random.html#nextDouble()"
          },
          "nextInt": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/Random.html#nextInt()"
          },
          "nextGaussian": {
            "!type": "fn() -> +java.lang.Double",
            "!url": "http://developer.android.com/reference/java/util/Random.html#nextGaussian()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "nextBytes": {
            "!type": "fn(buf: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/util/Random.html#nextBytes(byte[])"
          },
          "setSeed": {
            "!type": "fn(seed: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/java/util/Random.html#setSeed(long)"
          }
        }
      },
      "IllegalFormatPrecisionException": {
        "!url": "http://developer.android.com/reference/java/util/IllegalFormatPrecisionException.html",
        "!type": "fn(p: number)",
        "prototype": {
          "getPrecision": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/IllegalFormatPrecisionException.html#getPrecision()"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/IllegalFormatPrecisionException.html#getMessage()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "HashSet": {
        "!url": "http://developer.android.com/reference/java/util/HashSet.html",
        "!type": "fn()",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "removeAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractSet.html#removeAll(java.util.Collection)"
          },
          "containsAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#containsAll(java.util.Collection)"
          },
          "contains": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/HashSet.html#contains(java.lang.Object)"
          },
          "equals": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractSet.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "isEmpty": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/util/HashSet.html#isEmpty()"
          },
          "add": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/HashSet.html#add(E)"
          },
          "size": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/HashSet.html#size()"
          },
          "iterator": {
            "!type": "fn() -> +java.util.Iterator",
            "!url": "http://developer.android.com/reference/java/util/HashSet.html#iterator()"
          },
          "clear": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/util/HashSet.html#clear()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "retainAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#retainAll(java.util.Collection)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/AbstractSet.html#hashCode()"
          },
          "toArray": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#toArray()"
          },
          "addAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#addAll(java.util.Collection)"
          },
          "clone": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/HashSet.html#clone()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "remove": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/HashSet.html#remove(java.lang.Object)"
          }
        }
      },
      "Vector": {
        "!url": "http://developer.android.com/reference/java/util/Vector.html",
        "!type": "fn()",
        "prototype": {
          "add": {
            "!type": "fn(location: number, object: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#add(int, E)"
          },
          "removeElementAt": {
            "!type": "fn(location: number) -> void",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#removeElementAt(int)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#toString()"
          },
          "elements": {
            "!type": "fn() -> +java.util.Enumeration",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#elements()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "trimToSize": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#trimToSize()"
          },
          "removeAllElements": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#removeAllElements()"
          },
          "subList": {
            "!type": "fn(start: number, end: number) -> +java.util.List",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#subList(int, int)"
          },
          "setElementAt": {
            "!type": "fn(object: +java.lang.Object, location: number) -> void",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#setElementAt(E, int)"
          },
          "size": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#size()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#hashCode()"
          },
          "listIterator": {
            "!type": "fn() -> +java.util.ListIterator",
            "!url": "http://developer.android.com/reference/java/util/AbstractList.html#listIterator()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "removeAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#removeAll(java.util.Collection)"
          },
          "insertElementAt": {
            "!type": "fn(object: +java.lang.Object, location: number) -> void",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#insertElementAt(E, int)"
          },
          "removeElement": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#removeElement(java.lang.Object)"
          },
          "retainAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#retainAll(java.util.Collection)"
          },
          "isEmpty": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#isEmpty()"
          },
          "indexOf": {
            "!type": "fn(object: +java.lang.Object) -> number",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#indexOf(java.lang.Object)"
          },
          "iterator": {
            "!type": "fn() -> +java.util.Iterator",
            "!url": "http://developer.android.com/reference/java/util/AbstractList.html#iterator()"
          },
          "clone": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#clone()"
          },
          "toArray": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#toArray()"
          },
          "set": {
            "!type": "fn(location: number, object: +java.lang.Object) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#set(int, E)"
          },
          "remove": {
            "!type": "fn(location: number) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#remove(int)"
          },
          "equals": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#equals(java.lang.Object)"
          },
          "capacity": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#capacity()"
          },
          "lastElement": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#lastElement()"
          },
          "contains": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#contains(java.lang.Object)"
          },
          "ensureCapacity": {
            "!type": "fn(minimumCapacity: number) -> void",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#ensureCapacity(int)"
          },
          "elementAt": {
            "!type": "fn(location: number) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#elementAt(int)"
          },
          "lastIndexOf": {
            "!type": "fn(object: +java.lang.Object) -> number",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#lastIndexOf(java.lang.Object)"
          },
          "setSize": {
            "!type": "fn(length: number) -> void",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#setSize(int)"
          },
          "clear": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#clear()"
          },
          "firstElement": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#firstElement()"
          },
          "addElement": {
            "!type": "fn(object: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#addElement(E)"
          },
          "addAll": {
            "!type": "fn(location: number, collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#addAll(int, java.util.Collection)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "containsAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#containsAll(java.util.Collection)"
          },
          "get": {
            "!type": "fn(location: number) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#get(int)"
          },
          "copyInto": {
            "!type": "fn(elements: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#copyInto(java.lang.Object[])"
          }
        }
      },
      "IllegalFormatWidthException": {
        "!url": "http://developer.android.com/reference/java/util/IllegalFormatWidthException.html",
        "!type": "fn(w: number)",
        "prototype": {
          "getWidth": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/IllegalFormatWidthException.html#getWidth()"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/IllegalFormatWidthException.html#getMessage()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "Stack": {
        "!url": "http://developer.android.com/reference/java/util/Stack.html",
        "!type": "fn()",
        "prototype": {
          "empty": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/util/Stack.html#empty()"
          },
          "add": {
            "!type": "fn(location: number, object: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#add(int, E)"
          },
          "removeElementAt": {
            "!type": "fn(location: number) -> void",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#removeElementAt(int)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#toString()"
          },
          "elements": {
            "!type": "fn() -> +java.util.Enumeration",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#elements()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "trimToSize": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#trimToSize()"
          },
          "removeAllElements": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#removeAllElements()"
          },
          "subList": {
            "!type": "fn(start: number, end: number) -> +java.util.List",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#subList(int, int)"
          },
          "setElementAt": {
            "!type": "fn(object: +java.lang.Object, location: number) -> void",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#setElementAt(E, int)"
          },
          "size": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#size()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "peek": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/Stack.html#peek()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#hashCode()"
          },
          "listIterator": {
            "!type": "fn() -> +java.util.ListIterator",
            "!url": "http://developer.android.com/reference/java/util/AbstractList.html#listIterator()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "removeAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#removeAll(java.util.Collection)"
          },
          "insertElementAt": {
            "!type": "fn(object: +java.lang.Object, location: number) -> void",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#insertElementAt(E, int)"
          },
          "removeElement": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#removeElement(java.lang.Object)"
          },
          "retainAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#retainAll(java.util.Collection)"
          },
          "isEmpty": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#isEmpty()"
          },
          "indexOf": {
            "!type": "fn(object: +java.lang.Object) -> number",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#indexOf(java.lang.Object)"
          },
          "iterator": {
            "!type": "fn() -> +java.util.Iterator",
            "!url": "http://developer.android.com/reference/java/util/AbstractList.html#iterator()"
          },
          "clone": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#clone()"
          },
          "toArray": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#toArray()"
          },
          "set": {
            "!type": "fn(location: number, object: +java.lang.Object) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#set(int, E)"
          },
          "remove": {
            "!type": "fn(location: number) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#remove(int)"
          },
          "equals": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#equals(java.lang.Object)"
          },
          "capacity": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#capacity()"
          },
          "lastElement": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#lastElement()"
          },
          "contains": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#contains(java.lang.Object)"
          },
          "ensureCapacity": {
            "!type": "fn(minimumCapacity: number) -> void",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#ensureCapacity(int)"
          },
          "elementAt": {
            "!type": "fn(location: number) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#elementAt(int)"
          },
          "pop": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/Stack.html#pop()"
          },
          "lastIndexOf": {
            "!type": "fn(object: +java.lang.Object) -> number",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#lastIndexOf(java.lang.Object)"
          },
          "setSize": {
            "!type": "fn(length: number) -> void",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#setSize(int)"
          },
          "clear": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#clear()"
          },
          "firstElement": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#firstElement()"
          },
          "addElement": {
            "!type": "fn(object: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#addElement(E)"
          },
          "push": {
            "!type": "fn(object: +java.lang.Object) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/Stack.html#push(E)"
          },
          "addAll": {
            "!type": "fn(location: number, collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#addAll(int, java.util.Collection)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "containsAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#containsAll(java.util.Collection)"
          },
          "get": {
            "!type": "fn(location: number) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#get(int)"
          },
          "copyInto": {
            "!type": "fn(elements: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/util/Vector.html#copyInto(java.lang.Object[])"
          },
          "search": {
            "!type": "fn(o: +java.lang.Object) -> number",
            "!url": "http://developer.android.com/reference/java/util/Stack.html#search(java.lang.Object)"
          }
        }
      },
      "WeakHashMap": {
        "!url": "http://developer.android.com/reference/java/util/WeakHashMap.html",
        "!type": "fn()",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "values": {
            "!type": "fn() -> +java.util.Collection",
            "!url": "http://developer.android.com/reference/java/util/WeakHashMap.html#values()"
          },
          "containsKey": {
            "!type": "fn(key: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/WeakHashMap.html#containsKey(java.lang.Object)"
          },
          "entrySet": {
            "!type": "fn() -> +java.util.Set",
            "!url": "http://developer.android.com/reference/java/util/WeakHashMap.html#entrySet()"
          },
          "keySet": {
            "!type": "fn() -> +java.util.Set",
            "!url": "http://developer.android.com/reference/java/util/WeakHashMap.html#keySet()"
          },
          "put": {
            "!type": "fn(key: +java.lang.Object, value: +java.lang.Object) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/WeakHashMap.html#put(K, V)"
          },
          "equals": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractMap.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "isEmpty": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/util/WeakHashMap.html#isEmpty()"
          },
          "size": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/WeakHashMap.html#size()"
          },
          "putAll": {
            "!type": "fn(map: +java.util.Map) -> void",
            "!url": "http://developer.android.com/reference/java/util/WeakHashMap.html#putAll(java.util.Map)"
          },
          "clear": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/util/WeakHashMap.html#clear()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "containsValue": {
            "!type": "fn(value: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/WeakHashMap.html#containsValue(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/AbstractMap.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/AbstractMap.html#hashCode()"
          },
          "get": {
            "!type": "fn(key: +java.lang.Object) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/WeakHashMap.html#get(java.lang.Object)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "remove": {
            "!type": "fn(key: +java.lang.Object) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/WeakHashMap.html#remove(java.lang.Object)"
          }
        }
      },
      "IllegalFormatException": {
        "!url": "http://developer.android.com/reference/java/util/IllegalFormatException.html",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "TreeSet": {
        "!url": "http://developer.android.com/reference/java/util/TreeSet.html",
        "!type": "fn()",
        "prototype": {
          "tailSet": {
            "!type": "fn(start: +java.lang.Object, startInclusive: bool) -> +java.util.NavigableSet",
            "!url": "http://developer.android.com/reference/java/util/TreeSet.html#tailSet(E, boolean)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "removeAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractSet.html#removeAll(java.util.Collection)"
          },
          "comparator": {
            "!type": "fn() -> +java.util.Comparator",
            "!url": "http://developer.android.com/reference/java/util/TreeSet.html#comparator()"
          },
          "descendingIterator": {
            "!type": "fn() -> +java.util.Iterator",
            "!url": "http://developer.android.com/reference/java/util/TreeSet.html#descendingIterator()"
          },
          "first": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/TreeSet.html#first()"
          },
          "containsAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#containsAll(java.util.Collection)"
          },
          "higher": {
            "!type": "fn(e: +java.lang.Object) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/TreeSet.html#higher(E)"
          },
          "contains": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/TreeSet.html#contains(java.lang.Object)"
          },
          "last": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/TreeSet.html#last()"
          },
          "equals": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractSet.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "isEmpty": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/util/TreeSet.html#isEmpty()"
          },
          "descendingSet": {
            "!type": "fn() -> +java.util.NavigableSet",
            "!url": "http://developer.android.com/reference/java/util/TreeSet.html#descendingSet()"
          },
          "add": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/TreeSet.html#add(E)"
          },
          "size": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/TreeSet.html#size()"
          },
          "iterator": {
            "!type": "fn() -> +java.util.Iterator",
            "!url": "http://developer.android.com/reference/java/util/TreeSet.html#iterator()"
          },
          "clear": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/util/TreeSet.html#clear()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "ceiling": {
            "!type": "fn(e: +java.lang.Object) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/TreeSet.html#ceiling(E)"
          },
          "pollFirst": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/TreeSet.html#pollFirst()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#toString()"
          },
          "retainAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#retainAll(java.util.Collection)"
          },
          "headSet": {
            "!type": "fn(end: +java.lang.Object, endInclusive: bool) -> +java.util.NavigableSet",
            "!url": "http://developer.android.com/reference/java/util/TreeSet.html#headSet(E, boolean)"
          },
          "toArray": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#toArray()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/AbstractSet.html#hashCode()"
          },
          "subSet": {
            "!type": "fn(start: +java.lang.Object, startInclusive: bool, end: +java.lang.Object, endInclusive: bool) -> +java.util.NavigableSet",
            "!url": "http://developer.android.com/reference/java/util/TreeSet.html#subSet(E, boolean, E, boolean)"
          },
          "floor": {
            "!type": "fn(e: +java.lang.Object) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/TreeSet.html#floor(E)"
          },
          "pollLast": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/TreeSet.html#pollLast()"
          },
          "addAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/TreeSet.html#addAll(java.util.Collection)"
          },
          "clone": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/TreeSet.html#clone()"
          },
          "lower": {
            "!type": "fn(e: +java.lang.Object) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/TreeSet.html#lower(E)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "remove": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/TreeSet.html#remove(java.lang.Object)"
          }
        }
      },
      "Dictionary": {
        "!url": "http://developer.android.com/reference/java/util/Dictionary.html",
        "!type": "fn()",
        "prototype": {
          "elements": {
            "!type": "fn() -> +java.util.Enumeration",
            "!url": "http://developer.android.com/reference/java/util/Dictionary.html#elements()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "get": {
            "!type": "fn(key: +java.lang.Object) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/Dictionary.html#get(java.lang.Object)"
          },
          "isEmpty": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/util/Dictionary.html#isEmpty()"
          },
          "remove": {
            "!type": "fn(key: +java.lang.Object) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/Dictionary.html#remove(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "put": {
            "!type": "fn(key: +java.lang.Object, value: +java.lang.Object) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/Dictionary.html#put(K, V)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "keys": {
            "!type": "fn() -> +java.util.Enumeration",
            "!url": "http://developer.android.com/reference/java/util/Dictionary.html#keys()"
          },
          "size": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/Dictionary.html#size()"
          }
        }
      },
      "Scanner": {
        "!url": "http://developer.android.com/reference/java/util/Scanner.html",
        "!type": "fn(src: +java.io.File)",
        "prototype": {
          "useLocale": {
            "!type": "fn(l: +java.util.Locale) -> +java.util.Scanner",
            "!url": "http://developer.android.com/reference/java/util/Scanner.html#useLocale(java.util.Locale)"
          },
          "hasNextFloat": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/util/Scanner.html#hasNextFloat()"
          },
          "next": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/Scanner.html#next()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/Scanner.html#toString()"
          },
          "nextBoolean": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/util/Scanner.html#nextBoolean()"
          },
          "nextLine": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/Scanner.html#nextLine()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "match": {
            "!type": "fn() -> +java.util.regex.MatchResult",
            "!url": "http://developer.android.com/reference/java/util/Scanner.html#match()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "hasNextLine": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/util/Scanner.html#hasNextLine()"
          },
          "nextByte": {
            "!type": "fn() -> +java.lang.Byte",
            "!url": "http://developer.android.com/reference/java/util/Scanner.html#nextByte()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "useDelimiter": {
            "!type": "fn(pattern: +java.util.regex.Pattern) -> +java.util.Scanner",
            "!url": "http://developer.android.com/reference/java/util/Scanner.html#useDelimiter(java.util.regex.Pattern)"
          },
          "hasNextByte": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/util/Scanner.html#hasNextByte()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "hasNextShort": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/util/Scanner.html#hasNextShort()"
          },
          "skip": {
            "!type": "fn(pattern: +java.util.regex.Pattern) -> +java.util.Scanner",
            "!url": "http://developer.android.com/reference/java/util/Scanner.html#skip(java.util.regex.Pattern)"
          },
          "hasNextDouble": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/util/Scanner.html#hasNextDouble()"
          },
          "nextFloat": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/java/util/Scanner.html#nextFloat()"
          },
          "findInLine": {
            "!type": "fn(pattern: +java.util.regex.Pattern) -> string",
            "!url": "http://developer.android.com/reference/java/util/Scanner.html#findInLine(java.util.regex.Pattern)"
          },
          "nextLong": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/util/Scanner.html#nextLong()"
          },
          "nextBigInteger": {
            "!type": "fn() -> +java.math.BigInteger",
            "!url": "http://developer.android.com/reference/java/util/Scanner.html#nextBigInteger()"
          },
          "hasNextInt": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/util/Scanner.html#hasNextInt()"
          },
          "locale": {
            "!type": "fn() -> +java.util.Locale",
            "!url": "http://developer.android.com/reference/java/util/Scanner.html#locale()"
          },
          "hasNextLong": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/util/Scanner.html#hasNextLong()"
          },
          "ioException": {
            "!type": "fn() -> +java.io.IOException",
            "!url": "http://developer.android.com/reference/java/util/Scanner.html#ioException()"
          },
          "remove": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/util/Scanner.html#remove()"
          },
          "radix": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/Scanner.html#radix()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "findWithinHorizon": {
            "!type": "fn(pattern: +java.util.regex.Pattern, horizon: number) -> string",
            "!url": "http://developer.android.com/reference/java/util/Scanner.html#findWithinHorizon(java.util.regex.Pattern, int)"
          },
          "nextInt": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/Scanner.html#nextInt()"
          },
          "hasNextBigInteger": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/util/Scanner.html#hasNextBigInteger()"
          },
          "delimiter": {
            "!type": "fn() -> +java.util.regex.Pattern",
            "!url": "http://developer.android.com/reference/java/util/Scanner.html#delimiter()"
          },
          "nextShort": {
            "!type": "fn() -> +java.lang.Short",
            "!url": "http://developer.android.com/reference/java/util/Scanner.html#nextShort()"
          },
          "nextDouble": {
            "!type": "fn() -> +java.lang.Double",
            "!url": "http://developer.android.com/reference/java/util/Scanner.html#nextDouble()"
          },
          "nextBigDecimal": {
            "!type": "fn() -> +java.math.BigDecimal",
            "!url": "http://developer.android.com/reference/java/util/Scanner.html#nextBigDecimal()"
          },
          "reset": {
            "!type": "fn() -> +java.util.Scanner",
            "!url": "http://developer.android.com/reference/java/util/Scanner.html#reset()"
          },
          "close": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/util/Scanner.html#close()"
          },
          "hasNext": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/util/Scanner.html#hasNext()"
          },
          "useRadix": {
            "!type": "fn(radix: number) -> +java.util.Scanner",
            "!url": "http://developer.android.com/reference/java/util/Scanner.html#useRadix(int)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "hasNextBigDecimal": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/util/Scanner.html#hasNextBigDecimal()"
          },
          "hasNextBoolean": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/util/Scanner.html#hasNextBoolean()"
          }
        }
      },
      "IllegalFormatCodePointException": {
        "!url": "http://developer.android.com/reference/java/util/IllegalFormatCodePointException.html",
        "!type": "fn(c: number)",
        "prototype": {
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getCodePoint": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/IllegalFormatCodePointException.html#getCodePoint()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/IllegalFormatCodePointException.html#getMessage()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "EnumMap": {
        "!url": "http://developer.android.com/reference/java/util/EnumMap.html",
        "!type": "fn(keyType: +java.lang.Class)",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "values": {
            "!type": "fn() -> +java.util.Collection",
            "!url": "http://developer.android.com/reference/java/util/EnumMap.html#values()"
          },
          "containsKey": {
            "!type": "fn(key: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/EnumMap.html#containsKey(java.lang.Object)"
          },
          "entrySet": {
            "!type": "fn() -> +java.util.Set",
            "!url": "http://developer.android.com/reference/java/util/EnumMap.html#entrySet()"
          },
          "keySet": {
            "!type": "fn() -> +java.util.Set",
            "!url": "http://developer.android.com/reference/java/util/EnumMap.html#keySet()"
          },
          "put": {
            "!type": "fn(key: +java.lang.Enum, value: +java.lang.Object) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/EnumMap.html#put(K, V)"
          },
          "equals": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/EnumMap.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "isEmpty": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractMap.html#isEmpty()"
          },
          "size": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/EnumMap.html#size()"
          },
          "putAll": {
            "!type": "fn(map: +java.util.Map) -> void",
            "!url": "http://developer.android.com/reference/java/util/EnumMap.html#putAll(java.util.Map)"
          },
          "clear": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/util/EnumMap.html#clear()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "containsValue": {
            "!type": "fn(value: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/EnumMap.html#containsValue(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/AbstractMap.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/AbstractMap.html#hashCode()"
          },
          "clone": {
            "!type": "fn() -> +java.util.EnumMap",
            "!url": "http://developer.android.com/reference/java/util/EnumMap.html#clone()"
          },
          "get": {
            "!type": "fn(key: +java.lang.Object) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/EnumMap.html#get(java.lang.Object)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "remove": {
            "!type": "fn(key: +java.lang.Object) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/EnumMap.html#remove(java.lang.Object)"
          }
        }
      },
      "TimeZone": {
        "!url": "http://developer.android.com/reference/java/util/TimeZone.html",
        "!type": "fn()",
        "SHORT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/TimeZone.html#SHORT"
        },
        "LONG": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/TimeZone.html#LONG"
        },
        "createGmtOffsetString": {
          "!type": "fn(includeGmt: bool, includeMinuteSeparator: bool, offsetMillis: number) -> string",
          "!url": "http://developer.android.com/reference/java/util/TimeZone.html#createGmtOffsetString(boolean, boolean, int)"
        },
        "setDefault": {
          "!type": "fn(timeZone: +java.util.TimeZone) -> void",
          "!url": "http://developer.android.com/reference/java/util/TimeZone.html#setDefault(java.util.TimeZone)"
        },
        "getDefault": {
          "!type": "fn() -> +java.util.TimeZone",
          "!url": "http://developer.android.com/reference/java/util/TimeZone.html#getDefault()"
        },
        "getAvailableIDs": {
          "!type": "fn() -> +java.newArray",
          "!url": "http://developer.android.com/reference/java/util/TimeZone.html#getAvailableIDs()"
        },
        "getTimeZone": {
          "!type": "fn(id: string) -> +java.util.TimeZone",
          "!url": "http://developer.android.com/reference/java/util/TimeZone.html#getTimeZone(java.lang.String)"
        },
        "prototype": {
          "hasSameRules": {
            "!type": "fn(timeZone: +java.util.TimeZone) -> bool",
            "!url": "http://developer.android.com/reference/java/util/TimeZone.html#hasSameRules(java.util.TimeZone)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "useDaylightTime": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/util/TimeZone.html#useDaylightTime()"
          },
          "getID": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/TimeZone.html#getID()"
          },
          "getOffset": {
            "!type": "fn(time: +java.lang.Long) -> number",
            "!url": "http://developer.android.com/reference/java/util/TimeZone.html#getOffset(long)"
          },
          "getDisplayName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/TimeZone.html#getDisplayName()"
          },
          "getDSTSavings": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/TimeZone.html#getDSTSavings()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getRawOffset": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/TimeZone.html#getRawOffset()"
          },
          "setRawOffset": {
            "!type": "fn(offsetMillis: number) -> void",
            "!url": "http://developer.android.com/reference/java/util/TimeZone.html#setRawOffset(int)"
          },
          "setID": {
            "!type": "fn(id: string) -> void",
            "!url": "http://developer.android.com/reference/java/util/TimeZone.html#setID(java.lang.String)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "clone": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/TimeZone.html#clone()"
          },
          "inDaylightTime": {
            "!type": "fn(time: +java.util.Date) -> bool",
            "!url": "http://developer.android.com/reference/java/util/TimeZone.html#inDaylightTime(java.util.Date)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "AbstractMap": {
        "!url": "http://developer.android.com/reference/java/util/AbstractMap.html",
        "SimpleImmutableEntry": {
          "!url": "http://developer.android.com/reference/java/util/AbstractMap.SimpleImmutableEntry.html",
          "!type": "fn(theKey: +java.lang.Object, theValue: +java.lang.Object)",
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/util/AbstractMap.SimpleImmutableEntry.html#toString()"
            },
            "equals": {
              "!type": "fn(object: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/util/AbstractMap.SimpleImmutableEntry.html#equals(java.lang.Object)"
            },
            "setValue": {
              "!type": "fn(object: +java.lang.Object) -> +java.lang.Object",
              "!url": "http://developer.android.com/reference/java/util/AbstractMap.SimpleImmutableEntry.html#setValue(V)"
            },
            "getValue": {
              "!type": "fn() -> +java.lang.Object",
              "!url": "http://developer.android.com/reference/java/util/AbstractMap.SimpleImmutableEntry.html#getValue()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "getKey": {
              "!type": "fn() -> +java.lang.Object",
              "!url": "http://developer.android.com/reference/java/util/AbstractMap.SimpleImmutableEntry.html#getKey()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/util/AbstractMap.SimpleImmutableEntry.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "SimpleEntry": {
          "!url": "http://developer.android.com/reference/java/util/AbstractMap.SimpleEntry.html",
          "!type": "fn(theKey: +java.lang.Object, theValue: +java.lang.Object)",
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/util/AbstractMap.SimpleEntry.html#toString()"
            },
            "equals": {
              "!type": "fn(object: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/util/AbstractMap.SimpleEntry.html#equals(java.lang.Object)"
            },
            "setValue": {
              "!type": "fn(object: +java.lang.Object) -> +java.lang.Object",
              "!url": "http://developer.android.com/reference/java/util/AbstractMap.SimpleEntry.html#setValue(V)"
            },
            "getValue": {
              "!type": "fn() -> +java.lang.Object",
              "!url": "http://developer.android.com/reference/java/util/AbstractMap.SimpleEntry.html#getValue()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "getKey": {
              "!type": "fn() -> +java.lang.Object",
              "!url": "http://developer.android.com/reference/java/util/AbstractMap.SimpleEntry.html#getKey()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/util/AbstractMap.SimpleEntry.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "values": {
            "!type": "fn() -> +java.util.Collection",
            "!url": "http://developer.android.com/reference/java/util/AbstractMap.html#values()"
          },
          "containsKey": {
            "!type": "fn(key: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractMap.html#containsKey(java.lang.Object)"
          },
          "entrySet": {
            "!type": "fn() -> +java.util.Set",
            "!url": "http://developer.android.com/reference/java/util/AbstractMap.html#entrySet()"
          },
          "keySet": {
            "!type": "fn() -> +java.util.Set",
            "!url": "http://developer.android.com/reference/java/util/AbstractMap.html#keySet()"
          },
          "put": {
            "!type": "fn(key: +java.lang.Object, value: +java.lang.Object) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/AbstractMap.html#put(K, V)"
          },
          "equals": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractMap.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "isEmpty": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractMap.html#isEmpty()"
          },
          "size": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/AbstractMap.html#size()"
          },
          "putAll": {
            "!type": "fn(map: +java.util.Map) -> void",
            "!url": "http://developer.android.com/reference/java/util/AbstractMap.html#putAll(java.util.Map)"
          },
          "clear": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/util/AbstractMap.html#clear()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "containsValue": {
            "!type": "fn(value: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractMap.html#containsValue(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/AbstractMap.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/AbstractMap.html#hashCode()"
          },
          "get": {
            "!type": "fn(key: +java.lang.Object) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/AbstractMap.html#get(java.lang.Object)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "remove": {
            "!type": "fn(key: +java.lang.Object) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/AbstractMap.html#remove(java.lang.Object)"
          }
        }
      },
      "InvalidPropertiesFormatException": {
        "!url": "http://developer.android.com/reference/java/util/InvalidPropertiesFormatException.html",
        "!type": "fn(m: string)",
        "prototype": {
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "GregorianCalendar": {
        "!url": "http://developer.android.com/reference/java/util/GregorianCalendar.html",
        "!type": "fn()",
        "SEPTEMBER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#SEPTEMBER"
        },
        "WEDNESDAY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#WEDNESDAY"
        },
        "SHORT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#SHORT"
        },
        "JANUARY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#JANUARY"
        },
        "AD": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/GregorianCalendar.html#AD"
        },
        "PM": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#PM"
        },
        "MONDAY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#MONDAY"
        },
        "SECOND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#SECOND"
        },
        "MONTH": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#MONTH"
        },
        "FIELD_COUNT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#FIELD_COUNT"
        },
        "OCTOBER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#OCTOBER"
        },
        "TUESDAY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#TUESDAY"
        },
        "THURSDAY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#THURSDAY"
        },
        "DATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#DATE"
        },
        "ALL_STYLES": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#ALL_STYLES"
        },
        "DAY_OF_WEEK_IN_MONTH": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#DAY_OF_WEEK_IN_MONTH"
        },
        "DAY_OF_WEEK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#DAY_OF_WEEK"
        },
        "HOUR_OF_DAY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#HOUR_OF_DAY"
        },
        "DAY_OF_YEAR": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#DAY_OF_YEAR"
        },
        "JUNE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#JUNE"
        },
        "SATURDAY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#SATURDAY"
        },
        "NOVEMBER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#NOVEMBER"
        },
        "MILLISECOND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#MILLISECOND"
        },
        "YEAR": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#YEAR"
        },
        "MARCH": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#MARCH"
        },
        "DAY_OF_MONTH": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#DAY_OF_MONTH"
        },
        "WEEK_OF_YEAR": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#WEEK_OF_YEAR"
        },
        "ERA": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#ERA"
        },
        "UNDECIMBER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#UNDECIMBER"
        },
        "SUNDAY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#SUNDAY"
        },
        "AUGUST": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#AUGUST"
        },
        "FRIDAY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#FRIDAY"
        },
        "DST_OFFSET": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#DST_OFFSET"
        },
        "BC": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/GregorianCalendar.html#BC"
        },
        "DECEMBER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#DECEMBER"
        },
        "JULY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#JULY"
        },
        "MINUTE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#MINUTE"
        },
        "HOUR": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#HOUR"
        },
        "LONG": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#LONG"
        },
        "WEEK_OF_MONTH": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#WEEK_OF_MONTH"
        },
        "AM_PM": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#AM_PM"
        },
        "ZONE_OFFSET": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#ZONE_OFFSET"
        },
        "MAY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#MAY"
        },
        "APRIL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#APRIL"
        },
        "FEBRUARY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#FEBRUARY"
        },
        "AM": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#AM"
        },
        "getInstance": {
          "!type": "fn() -> +java.util.Calendar",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#getInstance()"
        },
        "getAvailableLocales": {
          "!type": "fn() -> +java.newArray",
          "!url": "http://developer.android.com/reference/java/util/Calendar.html#getAvailableLocales()"
        },
        "prototype": {
          "getDisplayName": {
            "!type": "fn(field: number, style: number, locale: +java.util.Locale) -> string",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#getDisplayName(int, int, java.util.Locale)"
          },
          "getMaximum": {
            "!type": "fn(field: number) -> number",
            "!url": "http://developer.android.com/reference/java/util/GregorianCalendar.html#getMaximum(int)"
          },
          "add": {
            "!type": "fn(field: number, value: number) -> void",
            "!url": "http://developer.android.com/reference/java/util/GregorianCalendar.html#add(int, int)"
          },
          "getTimeInMillis": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#getTimeInMillis()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#toString()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "setTimeZone": {
            "!type": "fn(timezone: +java.util.TimeZone) -> void",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#setTimeZone(java.util.TimeZone)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "isLenient": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#isLenient()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/GregorianCalendar.html#hashCode()"
          },
          "getFirstDayOfWeek": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#getFirstDayOfWeek()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getTime": {
            "!type": "fn() -> +java.util.Date",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#getTime()"
          },
          "getGregorianChange": {
            "!type": "fn() -> +java.util.Date",
            "!url": "http://developer.android.com/reference/java/util/GregorianCalendar.html#getGregorianChange()"
          },
          "setTime": {
            "!type": "fn(date: +java.util.Date) -> void",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#setTime(java.util.Date)"
          },
          "isLeapYear": {
            "!type": "fn(year: number) -> bool",
            "!url": "http://developer.android.com/reference/java/util/GregorianCalendar.html#isLeapYear(int)"
          },
          "getActualMinimum": {
            "!type": "fn(field: number) -> number",
            "!url": "http://developer.android.com/reference/java/util/GregorianCalendar.html#getActualMinimum(int)"
          },
          "clone": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#clone()"
          },
          "setTimeInMillis": {
            "!type": "fn(milliseconds: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#setTimeInMillis(long)"
          },
          "setLenient": {
            "!type": "fn(value: bool) -> void",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#setLenient(boolean)"
          },
          "set": {
            "!type": "fn(field: number, value: number) -> void",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#set(int, int)"
          },
          "equals": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/GregorianCalendar.html#equals(java.lang.Object)"
          },
          "getActualMaximum": {
            "!type": "fn(field: number) -> number",
            "!url": "http://developer.android.com/reference/java/util/GregorianCalendar.html#getActualMaximum(int)"
          },
          "roll": {
            "!type": "fn(field: number, value: number) -> void",
            "!url": "http://developer.android.com/reference/java/util/GregorianCalendar.html#roll(int, int)"
          },
          "setGregorianChange": {
            "!type": "fn(date: +java.util.Date) -> void",
            "!url": "http://developer.android.com/reference/java/util/GregorianCalendar.html#setGregorianChange(java.util.Date)"
          },
          "setMinimalDaysInFirstWeek": {
            "!type": "fn(value: number) -> void",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#setMinimalDaysInFirstWeek(int)"
          },
          "isSet": {
            "!type": "fn(field: number) -> bool",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#isSet(int)"
          },
          "clear": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#clear()"
          },
          "before": {
            "!type": "fn(calendar: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#before(java.lang.Object)"
          },
          "setFirstDayOfWeek": {
            "!type": "fn(value: number) -> void",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#setFirstDayOfWeek(int)"
          },
          "after": {
            "!type": "fn(calendar: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#after(java.lang.Object)"
          },
          "getLeastMaximum": {
            "!type": "fn(field: number) -> number",
            "!url": "http://developer.android.com/reference/java/util/GregorianCalendar.html#getLeastMaximum(int)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getDisplayNames": {
            "!type": "fn(field: number, style: number, locale: +java.util.Locale) -> +java.util.Map",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#getDisplayNames(int, int, java.util.Locale)"
          },
          "get": {
            "!type": "fn(field: number) -> number",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#get(int)"
          },
          "getMinimum": {
            "!type": "fn(field: number) -> number",
            "!url": "http://developer.android.com/reference/java/util/GregorianCalendar.html#getMinimum(int)"
          },
          "compareTo": {
            "!type": "fn(anotherCalendar: +java.util.Calendar) -> number",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#compareTo(java.util.Calendar)"
          },
          "getGreatestMinimum": {
            "!type": "fn(field: number) -> number",
            "!url": "http://developer.android.com/reference/java/util/GregorianCalendar.html#getGreatestMinimum(int)"
          },
          "getMinimalDaysInFirstWeek": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#getMinimalDaysInFirstWeek()"
          },
          "getTimeZone": {
            "!type": "fn() -> +java.util.TimeZone",
            "!url": "http://developer.android.com/reference/java/util/Calendar.html#getTimeZone()"
          }
        }
      },
      "IllegalFormatFlagsException": {
        "!url": "http://developer.android.com/reference/java/util/IllegalFormatFlagsException.html",
        "!type": "fn(flags: string)",
        "prototype": {
          "getSuppressed": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getStackTrace": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
          },
          "fillInStackTrace": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/IllegalFormatFlagsException.html#getMessage()"
          },
          "getCause": {
            "!type": "fn() -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
          },
          "getLocalizedMessage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getFlags": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/IllegalFormatFlagsException.html#getFlags()"
          },
          "setStackTrace": {
            "!type": "fn(trace: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
          },
          "printStackTrace": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
          },
          "initCause": {
            "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
          },
          "addSuppressed": {
            "!type": "fn(throwable: +java.lang.Throwable) -> void",
            "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "EnumSet": {
        "!url": "http://developer.android.com/reference/java/util/EnumSet.html",
        "noneOf": {
          "!type": "fn(elementType: +java.lang.Class) -> +java.util.EnumSet",
          "!url": "http://developer.android.com/reference/java/util/EnumSet.html#noneOf(java.lang.Class)"
        },
        "range": {
          "!type": "fn(start: +java.lang.Enum, end: +java.lang.Enum) -> +java.util.EnumSet",
          "!url": "http://developer.android.com/reference/java/util/EnumSet.html#range(E, E)"
        },
        "complementOf": {
          "!type": "fn(s: +java.util.EnumSet) -> +java.util.EnumSet",
          "!url": "http://developer.android.com/reference/java/util/EnumSet.html#complementOf(java.util.EnumSet)"
        },
        "copyOf": {
          "!type": "fn(s: +java.util.EnumSet) -> +java.util.EnumSet",
          "!url": "http://developer.android.com/reference/java/util/EnumSet.html#copyOf(java.util.EnumSet)"
        },
        "allOf": {
          "!type": "fn(elementType: +java.lang.Class) -> +java.util.EnumSet",
          "!url": "http://developer.android.com/reference/java/util/EnumSet.html#allOf(java.lang.Class)"
        },
        "of": {
          "!type": "fn(e: +java.lang.Enum) -> +java.util.EnumSet",
          "!url": "http://developer.android.com/reference/java/util/EnumSet.html#of(E)"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "removeAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractSet.html#removeAll(java.util.Collection)"
          },
          "containsAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#containsAll(java.util.Collection)"
          },
          "contains": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#contains(java.lang.Object)"
          },
          "equals": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractSet.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "isEmpty": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#isEmpty()"
          },
          "add": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#add(E)"
          },
          "size": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#size()"
          },
          "iterator": {
            "!type": "fn() -> +java.util.Iterator",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#iterator()"
          },
          "clear": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#clear()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "retainAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#retainAll(java.util.Collection)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/AbstractSet.html#hashCode()"
          },
          "toArray": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#toArray()"
          },
          "addAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#addAll(java.util.Collection)"
          },
          "clone": {
            "!type": "fn() -> +java.util.EnumSet",
            "!url": "http://developer.android.com/reference/java/util/EnumSet.html#clone()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "remove": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#remove(java.lang.Object)"
          }
        }
      },
      "LinkedList": {
        "!url": "http://developer.android.com/reference/java/util/LinkedList.html",
        "!type": "fn()",
        "prototype": {
          "add": {
            "!type": "fn(location: number, object: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/java/util/LinkedList.html#add(int, E)"
          },
          "peekFirst": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/LinkedList.html#peekFirst()"
          },
          "peekLast": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/LinkedList.html#peekLast()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#toString()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "subList": {
            "!type": "fn(start: number, end: number) -> +java.util.List",
            "!url": "http://developer.android.com/reference/java/util/AbstractList.html#subList(int, int)"
          },
          "getFirst": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/LinkedList.html#getFirst()"
          },
          "size": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/LinkedList.html#size()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "peek": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/LinkedList.html#peek()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/AbstractList.html#hashCode()"
          },
          "listIterator": {
            "!type": "fn(location: number) -> +java.util.ListIterator",
            "!url": "http://developer.android.com/reference/java/util/LinkedList.html#listIterator(int)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "removeAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#removeAll(java.util.Collection)"
          },
          "removeFirst": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/LinkedList.html#removeFirst()"
          },
          "element": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/LinkedList.html#element()"
          },
          "retainAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#retainAll(java.util.Collection)"
          },
          "isEmpty": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#isEmpty()"
          },
          "indexOf": {
            "!type": "fn(object: +java.lang.Object) -> number",
            "!url": "http://developer.android.com/reference/java/util/LinkedList.html#indexOf(java.lang.Object)"
          },
          "pollFirst": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/LinkedList.html#pollFirst()"
          },
          "iterator": {
            "!type": "fn() -> +java.util.Iterator",
            "!url": "http://developer.android.com/reference/java/util/AbstractSequentialList.html#iterator()"
          },
          "clone": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/LinkedList.html#clone()"
          },
          "pollLast": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/LinkedList.html#pollLast()"
          },
          "addFirst": {
            "!type": "fn(object: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/java/util/LinkedList.html#addFirst(E)"
          },
          "toArray": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/util/LinkedList.html#toArray()"
          },
          "set": {
            "!type": "fn(location: number, object: +java.lang.Object) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/LinkedList.html#set(int, E)"
          },
          "remove": {
            "!type": "fn(location: number) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/LinkedList.html#remove(int)"
          },
          "offer": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/LinkedList.html#offer(E)"
          },
          "equals": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractList.html#equals(java.lang.Object)"
          },
          "offerFirst": {
            "!type": "fn(e: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/LinkedList.html#offerFirst(E)"
          },
          "contains": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/LinkedList.html#contains(java.lang.Object)"
          },
          "descendingIterator": {
            "!type": "fn() -> +java.util.Iterator",
            "!url": "http://developer.android.com/reference/java/util/LinkedList.html#descendingIterator()"
          },
          "pop": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/LinkedList.html#pop()"
          },
          "removeFirstOccurrence": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/LinkedList.html#removeFirstOccurrence(java.lang.Object)"
          },
          "offerLast": {
            "!type": "fn(e: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/LinkedList.html#offerLast(E)"
          },
          "lastIndexOf": {
            "!type": "fn(object: +java.lang.Object) -> number",
            "!url": "http://developer.android.com/reference/java/util/LinkedList.html#lastIndexOf(java.lang.Object)"
          },
          "removeLastOccurrence": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/LinkedList.html#removeLastOccurrence(java.lang.Object)"
          },
          "clear": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/util/LinkedList.html#clear()"
          },
          "addLast": {
            "!type": "fn(object: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/java/util/LinkedList.html#addLast(E)"
          },
          "poll": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/LinkedList.html#poll()"
          },
          "push": {
            "!type": "fn(e: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/java/util/LinkedList.html#push(E)"
          },
          "getLast": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/LinkedList.html#getLast()"
          },
          "addAll": {
            "!type": "fn(location: number, collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/LinkedList.html#addAll(int, java.util.Collection)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "containsAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#containsAll(java.util.Collection)"
          },
          "get": {
            "!type": "fn(location: number) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/LinkedList.html#get(int)"
          },
          "removeLast": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/LinkedList.html#removeLast()"
          }
        }
      },
      "ResourceBundle": {
        "!url": "http://developer.android.com/reference/java/util/ResourceBundle.html",
        "!type": "fn()",
        "Control": {
          "!url": "http://developer.android.com/reference/java/util/ResourceBundle.Control.html",
          "TTL_NO_EXPIRATION_CONTROL": {
            "!type": "+java.lang.Long",
            "!url": "http://developer.android.com/reference/java/util/ResourceBundle.Control.html#TTL_NO_EXPIRATION_CONTROL"
          },
          "FORMAT_DEFAULT": {
            "!type": "+java.util.List",
            "!url": "http://developer.android.com/reference/java/util/ResourceBundle.Control.html#FORMAT_DEFAULT"
          },
          "TTL_DONT_CACHE": {
            "!type": "+java.lang.Long",
            "!url": "http://developer.android.com/reference/java/util/ResourceBundle.Control.html#TTL_DONT_CACHE"
          },
          "FORMAT_PROPERTIES": {
            "!type": "+java.util.List",
            "!url": "http://developer.android.com/reference/java/util/ResourceBundle.Control.html#FORMAT_PROPERTIES"
          },
          "FORMAT_CLASS": {
            "!type": "+java.util.List",
            "!url": "http://developer.android.com/reference/java/util/ResourceBundle.Control.html#FORMAT_CLASS"
          },
          "getNoFallbackControl": {
            "!type": "fn(formats: +java.util.List) -> +java.util.ResourceBundle.Control",
            "!url": "http://developer.android.com/reference/java/util/ResourceBundle.Control.html#getNoFallbackControl(java.util.List)"
          },
          "getControl": {
            "!type": "fn(formats: +java.util.List) -> +java.util.ResourceBundle.Control",
            "!url": "http://developer.android.com/reference/java/util/ResourceBundle.Control.html#getControl(java.util.List)"
          },
          "prototype": {
            "needsReload": {
              "!type": "fn(baseName: string, locale: +java.util.Locale, format: string, loader: +java.lang.ClassLoader, bundle: +java.util.ResourceBundle, loadTime: +java.lang.Long) -> bool",
              "!url": "http://developer.android.com/reference/java/util/ResourceBundle.Control.html#needsReload(java.lang.String, java.util.Locale, java.lang.String, java.lang.ClassLoader, java.util.ResourceBundle, long)"
            },
            "toResourceName": {
              "!type": "fn(bundleName: string, suffix: string) -> string",
              "!url": "http://developer.android.com/reference/java/util/ResourceBundle.Control.html#toResourceName(java.lang.String, java.lang.String)"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "newBundle": {
              "!type": "fn(baseName: string, locale: +java.util.Locale, format: string, loader: +java.lang.ClassLoader, reload: bool) -> +java.util.ResourceBundle",
              "!url": "http://developer.android.com/reference/java/util/ResourceBundle.Control.html#newBundle(java.lang.String, java.util.Locale, java.lang.String, java.lang.ClassLoader, boolean)"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "getTimeToLive": {
              "!type": "fn(baseName: string, locale: +java.util.Locale) -> +java.lang.Long",
              "!url": "http://developer.android.com/reference/java/util/ResourceBundle.Control.html#getTimeToLive(java.lang.String, java.util.Locale)"
            },
            "toBundleName": {
              "!type": "fn(baseName: string, locale: +java.util.Locale) -> string",
              "!url": "http://developer.android.com/reference/java/util/ResourceBundle.Control.html#toBundleName(java.lang.String, java.util.Locale)"
            },
            "getCandidateLocales": {
              "!type": "fn(baseName: string, locale: +java.util.Locale) -> +java.util.List",
              "!url": "http://developer.android.com/reference/java/util/ResourceBundle.Control.html#getCandidateLocales(java.lang.String, java.util.Locale)"
            },
            "getFormats": {
              "!type": "fn(baseName: string) -> +java.util.List",
              "!url": "http://developer.android.com/reference/java/util/ResourceBundle.Control.html#getFormats(java.lang.String)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "getFallbackLocale": {
              "!type": "fn(baseName: string, locale: +java.util.Locale) -> +java.util.Locale",
              "!url": "http://developer.android.com/reference/java/util/ResourceBundle.Control.html#getFallbackLocale(java.lang.String, java.util.Locale)"
            }
          }
        },
        "clearCache": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/java/util/ResourceBundle.html#clearCache()"
        },
        "getBundle": {
          "!type": "fn(bundleName: string) -> +java.util.ResourceBundle",
          "!url": "http://developer.android.com/reference/java/util/ResourceBundle.html#getBundle(java.lang.String)"
        },
        "prototype": {
          "getString": {
            "!type": "fn(key: string) -> string",
            "!url": "http://developer.android.com/reference/java/util/ResourceBundle.html#getString(java.lang.String)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getLocale": {
            "!type": "fn() -> +java.util.Locale",
            "!url": "http://developer.android.com/reference/java/util/ResourceBundle.html#getLocale()"
          },
          "keySet": {
            "!type": "fn() -> +java.util.Set",
            "!url": "http://developer.android.com/reference/java/util/ResourceBundle.html#keySet()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getStringArray": {
            "!type": "fn(key: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/util/ResourceBundle.html#getStringArray(java.lang.String)"
          },
          "containsKey": {
            "!type": "fn(key: string) -> bool",
            "!url": "http://developer.android.com/reference/java/util/ResourceBundle.html#containsKey(java.lang.String)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getObject": {
            "!type": "fn(key: string) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/java/util/ResourceBundle.html#getObject(java.lang.String)"
          },
          "getKeys": {
            "!type": "fn() -> +java.util.Enumeration",
            "!url": "http://developer.android.com/reference/java/util/ResourceBundle.html#getKeys()"
          }
        }
      },
      "AbstractCollection": {
        "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "removeAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#removeAll(java.util.Collection)"
          },
          "containsAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#containsAll(java.util.Collection)"
          },
          "contains": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#contains(java.lang.Object)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "isEmpty": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#isEmpty()"
          },
          "add": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#add(E)"
          },
          "size": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#size()"
          },
          "iterator": {
            "!type": "fn() -> +java.util.Iterator",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#iterator()"
          },
          "clear": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#clear()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "retainAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#retainAll(java.util.Collection)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "toArray": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#toArray()"
          },
          "addAll": {
            "!type": "fn(collection: +java.util.Collection) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#addAll(java.util.Collection)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "remove": {
            "!type": "fn(object: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/util/AbstractCollection.html#remove(java.lang.Object)"
          }
        }
      }
    }
  }
}