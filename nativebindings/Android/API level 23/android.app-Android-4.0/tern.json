{
  "android": {
    "app": {
      "AlertDialog": {
        "!url": "http://developer.android.com/reference/android/app/AlertDialog.html",
        "Builder": {
          "!url": "http://developer.android.com/reference/android/app/AlertDialog.Builder.html",
          "!type": "fn(context: +android.content.Context)",
          "prototype": {
            "setItems": {
              "!type": "fn(itemsId: number, listener: +android.content.DialogInterface.OnClickListener) -> +android.app.AlertDialog.Builder",
              "!url": "http://developer.android.com/reference/android/app/AlertDialog.Builder.html#setItems(int, android.content.DialogInterface.OnClickListener)"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "setMessage": {
              "!type": "fn(messageId: number) -> +android.app.AlertDialog.Builder",
              "!url": "http://developer.android.com/reference/android/app/AlertDialog.Builder.html#setMessage(int)"
            },
            "setIcon": {
              "!type": "fn(iconId: number) -> +android.app.AlertDialog.Builder",
              "!url": "http://developer.android.com/reference/android/app/AlertDialog.Builder.html#setIcon(int)"
            },
            "setSingleChoiceItems": {
              "!type": "fn(itemsId: number, checkedItem: number, listener: +android.content.DialogInterface.OnClickListener) -> +android.app.AlertDialog.Builder",
              "!url": "http://developer.android.com/reference/android/app/AlertDialog.Builder.html#setSingleChoiceItems(int, int, android.content.DialogInterface.OnClickListener)"
            },
            "setMultiChoiceItems": {
              "!type": "fn(itemsId: number, checkedItems: +java.newArray, listener: +android.content.DialogInterface.OnMultiChoiceClickListener) -> +android.app.AlertDialog.Builder",
              "!url": "http://developer.android.com/reference/android/app/AlertDialog.Builder.html#setMultiChoiceItems(int, boolean[], android.content.DialogInterface.OnMultiChoiceClickListener)"
            },
            "setOnDismissListener": {
              "!type": "fn(onDismissListener: +android.content.DialogInterface.OnDismissListener) -> +android.app.AlertDialog.Builder",
              "!url": "http://developer.android.com/reference/android/app/AlertDialog.Builder.html#setOnDismissListener(android.content.DialogInterface.OnDismissListener)"
            },
            "setOnItemSelectedListener": {
              "!type": "fn(listener: +android.widget.AdapterView.OnItemSelectedListener) -> +android.app.AlertDialog.Builder",
              "!url": "http://developer.android.com/reference/android/app/AlertDialog.Builder.html#setOnItemSelectedListener(android.widget.AdapterView.OnItemSelectedListener)"
            },
            "setNeutralButton": {
              "!type": "fn(textId: number, listener: +android.content.DialogInterface.OnClickListener) -> +android.app.AlertDialog.Builder",
              "!url": "http://developer.android.com/reference/android/app/AlertDialog.Builder.html#setNeutralButton(int, android.content.DialogInterface.OnClickListener)"
            },
            "setOnKeyListener": {
              "!type": "fn(onKeyListener: +android.content.DialogInterface.OnKeyListener) -> +android.app.AlertDialog.Builder",
              "!url": "http://developer.android.com/reference/android/app/AlertDialog.Builder.html#setOnKeyListener(android.content.DialogInterface.OnKeyListener)"
            },
            "setPositiveButton": {
              "!type": "fn(textId: number, listener: +android.content.DialogInterface.OnClickListener) -> +android.app.AlertDialog.Builder",
              "!url": "http://developer.android.com/reference/android/app/AlertDialog.Builder.html#setPositiveButton(int, android.content.DialogInterface.OnClickListener)"
            },
            "setAdapter": {
              "!type": "fn(adapter: +android.widget.ListAdapter, listener: +android.content.DialogInterface.OnClickListener) -> +android.app.AlertDialog.Builder",
              "!url": "http://developer.android.com/reference/android/app/AlertDialog.Builder.html#setAdapter(android.widget.ListAdapter, android.content.DialogInterface.OnClickListener)"
            },
            "setCustomTitle": {
              "!type": "fn(customTitleView: +android.view.View) -> +android.app.AlertDialog.Builder",
              "!url": "http://developer.android.com/reference/android/app/AlertDialog.Builder.html#setCustomTitle(android.view.View)"
            },
            "getContext": {
              "!type": "fn() -> +android.content.Context",
              "!url": "http://developer.android.com/reference/android/app/AlertDialog.Builder.html#getContext()"
            },
            "setOnCancelListener": {
              "!type": "fn(onCancelListener: +android.content.DialogInterface.OnCancelListener) -> +android.app.AlertDialog.Builder",
              "!url": "http://developer.android.com/reference/android/app/AlertDialog.Builder.html#setOnCancelListener(android.content.DialogInterface.OnCancelListener)"
            },
            "setTitle": {
              "!type": "fn(titleId: number) -> +android.app.AlertDialog.Builder",
              "!url": "http://developer.android.com/reference/android/app/AlertDialog.Builder.html#setTitle(int)"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "create": {
              "!type": "fn() -> +android.app.AlertDialog",
              "!url": "http://developer.android.com/reference/android/app/AlertDialog.Builder.html#create()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "setIconAttribute": {
              "!type": "fn(attrId: number) -> +android.app.AlertDialog.Builder",
              "!url": "http://developer.android.com/reference/android/app/AlertDialog.Builder.html#setIconAttribute(int)"
            },
            "setRecycleOnMeasureEnabled": {
              "!type": "fn(enabled: bool) -> +android.app.AlertDialog.Builder",
              "!url": "http://developer.android.com/reference/android/app/AlertDialog.Builder.html#setRecycleOnMeasureEnabled(boolean)"
            },
            "setView": {
              "!type": "fn(layoutResId: number) -> +android.app.AlertDialog.Builder",
              "!url": "http://developer.android.com/reference/android/app/AlertDialog.Builder.html#setView(int)"
            },
            "setCancelable": {
              "!type": "fn(cancelable: bool) -> +android.app.AlertDialog.Builder",
              "!url": "http://developer.android.com/reference/android/app/AlertDialog.Builder.html#setCancelable(boolean)"
            },
            "setInverseBackgroundForced": {
              "!type": "fn(useInverseBackground: bool) -> +android.app.AlertDialog.Builder",
              "!url": "http://developer.android.com/reference/android/app/AlertDialog.Builder.html#setInverseBackgroundForced(boolean)"
            },
            "show": {
              "!type": "fn() -> +android.app.AlertDialog",
              "!url": "http://developer.android.com/reference/android/app/AlertDialog.Builder.html#show()"
            },
            "setCursor": {
              "!type": "fn(cursor: +android.database.Cursor, listener: +android.content.DialogInterface.OnClickListener, labelColumn: string) -> +android.app.AlertDialog.Builder",
              "!url": "http://developer.android.com/reference/android/app/AlertDialog.Builder.html#setCursor(android.database.Cursor, android.content.DialogInterface.OnClickListener, java.lang.String)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "setNegativeButton": {
              "!type": "fn(textId: number, listener: +android.content.DialogInterface.OnClickListener) -> +android.app.AlertDialog.Builder",
              "!url": "http://developer.android.com/reference/android/app/AlertDialog.Builder.html#setNegativeButton(int, android.content.DialogInterface.OnClickListener)"
            }
          }
        },
        "THEME_DEVICE_DEFAULT_DARK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#THEME_DEVICE_DEFAULT_DARK"
        },
        "THEME_TRADITIONAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#THEME_TRADITIONAL"
        },
        "THEME_HOLO_DARK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#THEME_HOLO_DARK"
        },
        "LAYOUT_HINT_SIDE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#LAYOUT_HINT_SIDE"
        },
        "LAYOUT_HINT_NONE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#LAYOUT_HINT_NONE"
        },
        "THEME_HOLO_LIGHT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#THEME_HOLO_LIGHT"
        },
        "THEME_DEVICE_DEFAULT_LIGHT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#THEME_DEVICE_DEFAULT_LIGHT"
        },
        "prototype": {
          "onKeyLongPress": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onKeyLongPress(int, android.view.KeyEvent)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "onPanelClosed": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onPanelClosed(int, android.view.Menu)"
          },
          "dispatchKeyShortcutEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#dispatchKeyShortcutEvent(android.view.KeyEvent)"
          },
          "onTrackballEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onTrackballEvent(android.view.MotionEvent)"
          },
          "onGenericMotionEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onGenericMotionEvent(android.view.MotionEvent)"
          },
          "setFeatureDrawableAlpha": {
            "!type": "fn(featureId: number, alpha: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setFeatureDrawableAlpha(int, int)"
          },
          "getVolumeControlStream": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getVolumeControlStream()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "onTouchEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onTouchEvent(android.view.MotionEvent)"
          },
          "onCreateOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onCreateOptionsMenu(android.view.Menu)"
          },
          "onCreatePanelView": {
            "!type": "fn(featureId: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onCreatePanelView(int)"
          },
          "show": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#show()"
          },
          "setInverseBackgroundForced": {
            "!type": "fn(forceInverseBackground: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#setInverseBackgroundForced(boolean)"
          },
          "addContentView": {
            "!type": "fn(view: +android.view.View, params: +android.view.ViewGroup.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#addContentView(android.view.View, android.view.ViewGroup.LayoutParams)"
          },
          "onContextItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onContextItemSelected(android.view.MenuItem)"
          },
          "getSearchEvent": {
            "!type": "fn() -> +android.view.SearchEvent",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getSearchEvent()"
          },
          "onDetachedFromWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onDetachedFromWindow()"
          },
          "onAttachedToWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onAttachedToWindow()"
          },
          "onContextMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onContextMenuClosed(android.view.Menu)"
          },
          "dismiss": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#dismiss()"
          },
          "setIconAttribute": {
            "!type": "fn(attrId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#setIconAttribute(int)"
          },
          "create": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#create()"
          },
          "findViewById": {
            "!type": "fn(id: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#findViewById(int)"
          },
          "getListView": {
            "!type": "fn() -> +android.widget.ListView",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#getListView()"
          },
          "dispatchTrackballEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#dispatchTrackballEvent(android.view.MotionEvent)"
          },
          "takeCancelAndDismissListeners": {
            "!type": "fn(msg: string, cancel: +android.content.DialogInterface.OnCancelListener, dismiss: +android.content.DialogInterface.OnDismissListener) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#takeCancelAndDismissListeners(java.lang.String, android.content.DialogInterface.OnCancelListener, android.content.DialogInterface.OnDismissListener)"
          },
          "dispatchGenericMotionEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#dispatchGenericMotionEvent(android.view.MotionEvent)"
          },
          "onKeyMultiple": {
            "!type": "fn(keyCode: number, repeatCount: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onKeyMultiple(int, int, android.view.KeyEvent)"
          },
          "setContentView": {
            "!type": "fn(layoutResID: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setContentView(int)"
          },
          "getCurrentFocus": {
            "!type": "fn() -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getCurrentFocus()"
          },
          "onKeyShortcut": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onKeyShortcut(int, android.view.KeyEvent)"
          },
          "onPrepareOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onPrepareOptionsMenu(android.view.Menu)"
          },
          "onCreateContextMenu": {
            "!type": "fn(menu: +android.view.ContextMenu, v: +android.view.View, menuInfo: +android.view.ContextMenu.ContextMenuInfo) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenu.ContextMenuInfo)"
          },
          "onKeyDown": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#onKeyDown(int, android.view.KeyEvent)"
          },
          "setButton3": {
            "!type": "fn(text: +java.lang.CharSequence, msg: +android.os.Message) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#setButton3(java.lang.CharSequence, android.os.Message)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "setButton2": {
            "!type": "fn(text: +java.lang.CharSequence, msg: +android.os.Message) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#setButton2(java.lang.CharSequence, android.os.Message)"
          },
          "setButton": {
            "!type": "fn(whichButton: number, text: +java.lang.CharSequence, msg: +android.os.Message) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#setButton(int, java.lang.CharSequence, android.os.Message)"
          },
          "setOnCancelListener": {
            "!type": "fn(listener: +android.content.DialogInterface.OnCancelListener) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setOnCancelListener(android.content.DialogInterface.OnCancelListener)"
          },
          "setView": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#setView(android.view.View)"
          },
          "setOnShowListener": {
            "!type": "fn(listener: +android.content.DialogInterface.OnShowListener) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setOnShowListener(android.content.DialogInterface.OnShowListener)"
          },
          "onRestoreInstanceState": {
            "!type": "fn(savedInstanceState: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onRestoreInstanceState(android.os.Bundle)"
          },
          "setMessage": {
            "!type": "fn(message: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#setMessage(java.lang.CharSequence)"
          },
          "onWindowDismissed": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onWindowDismissed()"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getContext()"
          },
          "dispatchKeyEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#dispatchKeyEvent(android.view.KeyEvent)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "onSearchRequested": {
            "!type": "fn(searchEvent: +android.view.SearchEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onSearchRequested(android.view.SearchEvent)"
          },
          "setCancelMessage": {
            "!type": "fn(msg: +android.os.Message) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setCancelMessage(android.os.Message)"
          },
          "onOptionsMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onOptionsMenuClosed(android.view.Menu)"
          },
          "setFeatureDrawable": {
            "!type": "fn(featureId: number, drawable: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setFeatureDrawable(int, android.graphics.drawable.Drawable)"
          },
          "onOptionsItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onOptionsItemSelected(android.view.MenuItem)"
          },
          "onSaveInstanceState": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onSaveInstanceState()"
          },
          "onCreatePanelMenu": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onCreatePanelMenu(int, android.view.Menu)"
          },
          "setDismissMessage": {
            "!type": "fn(msg: +android.os.Message) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setDismissMessage(android.os.Message)"
          },
          "requestWindowFeature": {
            "!type": "fn(featureId: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#requestWindowFeature(int)"
          },
          "dispatchTouchEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#dispatchTouchEvent(android.view.MotionEvent)"
          },
          "closeOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#closeOptionsMenu()"
          },
          "setFeatureDrawableResource": {
            "!type": "fn(featureId: number, resId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setFeatureDrawableResource(int, int)"
          },
          "getWindow": {
            "!type": "fn() -> +android.view.Window",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getWindow()"
          },
          "setFeatureDrawableUri": {
            "!type": "fn(featureId: number, uri: +android.net.Uri) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setFeatureDrawableUri(int, android.net.Uri)"
          },
          "getOwnerActivity": {
            "!type": "fn() -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getOwnerActivity()"
          },
          "setVolumeControlStream": {
            "!type": "fn(streamType: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setVolumeControlStream(int)"
          },
          "setIcon": {
            "!type": "fn(resId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#setIcon(int)"
          },
          "setOwnerActivity": {
            "!type": "fn(activity: +android.app.Activity) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setOwnerActivity(android.app.Activity)"
          },
          "onKeyUp": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#onKeyUp(int, android.view.KeyEvent)"
          },
          "hide": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#hide()"
          },
          "unregisterForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#unregisterForContextMenu(android.view.View)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "onPreparePanel": {
            "!type": "fn(featureId: number, view: +android.view.View, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onPreparePanel(int, android.view.View, android.view.Menu)"
          },
          "setOnKeyListener": {
            "!type": "fn(onKeyListener: +android.content.DialogInterface.OnKeyListener) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setOnKeyListener(android.content.DialogInterface.OnKeyListener)"
          },
          "getActionBar": {
            "!type": "fn() -> +android.app.ActionBar",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getActionBar()"
          },
          "registerForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#registerForContextMenu(android.view.View)"
          },
          "onActionModeFinished": {
            "!type": "fn(mode: +android.view.ActionMode) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onActionModeFinished(android.view.ActionMode)"
          },
          "getButton": {
            "!type": "fn(whichButton: number) -> +android.widget.Button",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#getButton(int)"
          },
          "onContentChanged": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onContentChanged()"
          },
          "takeKeyEvents": {
            "!type": "fn(get: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#takeKeyEvents(boolean)"
          },
          "onMenuItemSelected": {
            "!type": "fn(featureId: number, item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onMenuItemSelected(int, android.view.MenuItem)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "dispatchPopulateAccessibilityEvent": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
          },
          "isShowing": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#isShowing()"
          },
          "setCancelable": {
            "!type": "fn(flag: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setCancelable(boolean)"
          },
          "openOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#openOptionsMenu()"
          },
          "setOnDismissListener": {
            "!type": "fn(listener: +android.content.DialogInterface.OnDismissListener) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setOnDismissListener(android.content.DialogInterface.OnDismissListener)"
          },
          "onBackPressed": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onBackPressed()"
          },
          "setCanceledOnTouchOutside": {
            "!type": "fn(cancel: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setCanceledOnTouchOutside(boolean)"
          },
          "onWindowAttributesChanged": {
            "!type": "fn(params: +android.view.WindowManager.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onWindowAttributesChanged(android.view.WindowManager.LayoutParams)"
          },
          "setCustomTitle": {
            "!type": "fn(customTitleView: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#setCustomTitle(android.view.View)"
          },
          "onWindowFocusChanged": {
            "!type": "fn(hasFocus: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onWindowFocusChanged(boolean)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getLayoutInflater": {
            "!type": "fn() -> +android.view.LayoutInflater",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getLayoutInflater()"
          },
          "invalidateOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#invalidateOptionsMenu()"
          },
          "onWindowStartingActionMode": {
            "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onWindowStartingActionMode(android.view.ActionMode.Callback)"
          },
          "openContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#openContextMenu(android.view.View)"
          },
          "cancel": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#cancel()"
          },
          "onMenuOpened": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onMenuOpened(int, android.view.Menu)"
          },
          "setTitle": {
            "!type": "fn(title: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#setTitle(java.lang.CharSequence)"
          },
          "onActionModeStarted": {
            "!type": "fn(mode: +android.view.ActionMode) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onActionModeStarted(android.view.ActionMode)"
          }
        }
      },
      "DownloadManager": {
        "!url": "http://developer.android.com/reference/android/app/DownloadManager.html",
        "!type": "fn(resolver: +android.content.ContentResolver, packageName: string)",
        "Request": {
          "!url": "http://developer.android.com/reference/android/app/DownloadManager.Request.html",
          "!type": "fn(uri: +android.net.Uri)",
          "VISIBILITY_HIDDEN": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/DownloadManager.Request.html#VISIBILITY_HIDDEN"
          },
          "VISIBILITY_VISIBLE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/DownloadManager.Request.html#VISIBILITY_VISIBLE"
          },
          "VISIBILITY_VISIBLE_NOTIFY_ONLY_COMPLETION": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/DownloadManager.Request.html#VISIBILITY_VISIBLE_NOTIFY_ONLY_COMPLETION"
          },
          "NETWORK_BLUETOOTH": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/DownloadManager.Request.html#NETWORK_BLUETOOTH"
          },
          "NETWORK_WIFI": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/DownloadManager.Request.html#NETWORK_WIFI"
          },
          "NETWORK_MOBILE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/DownloadManager.Request.html#NETWORK_MOBILE"
          },
          "VISIBILITY_VISIBLE_NOTIFY_COMPLETED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/DownloadManager.Request.html#VISIBILITY_VISIBLE_NOTIFY_COMPLETED"
          },
          "prototype": {
            "setDestinationInExternalFilesDir": {
              "!type": "fn(context: +android.content.Context, dirType: string, subPath: string) -> +android.app.DownloadManager.Request",
              "!url": "http://developer.android.com/reference/android/app/DownloadManager.Request.html#setDestinationInExternalFilesDir(android.content.Context, java.lang.String, java.lang.String)"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "setAllowedOverMetered": {
              "!type": "fn(allow: bool) -> +android.app.DownloadManager.Request",
              "!url": "http://developer.android.com/reference/android/app/DownloadManager.Request.html#setAllowedOverMetered(boolean)"
            },
            "setDestinationToSystemCache": {
              "!type": "fn() -> +android.app.DownloadManager.Request",
              "!url": "http://developer.android.com/reference/android/app/DownloadManager.Request.html#setDestinationToSystemCache()"
            },
            "setShowRunningNotification": {
              "!type": "fn(show: bool) -> +android.app.DownloadManager.Request",
              "!url": "http://developer.android.com/reference/android/app/DownloadManager.Request.html#setShowRunningNotification(boolean)"
            },
            "setDestinationUri": {
              "!type": "fn(uri: +android.net.Uri) -> +android.app.DownloadManager.Request",
              "!url": "http://developer.android.com/reference/android/app/DownloadManager.Request.html#setDestinationUri(android.net.Uri)"
            },
            "addRequestHeader": {
              "!type": "fn(header: string, value: string) -> +android.app.DownloadManager.Request",
              "!url": "http://developer.android.com/reference/android/app/DownloadManager.Request.html#addRequestHeader(java.lang.String, java.lang.String)"
            },
            "setDescription": {
              "!type": "fn(description: +java.lang.CharSequence) -> +android.app.DownloadManager.Request",
              "!url": "http://developer.android.com/reference/android/app/DownloadManager.Request.html#setDescription(java.lang.CharSequence)"
            },
            "setMimeType": {
              "!type": "fn(mimeType: string) -> +android.app.DownloadManager.Request",
              "!url": "http://developer.android.com/reference/android/app/DownloadManager.Request.html#setMimeType(java.lang.String)"
            },
            "setAllowedNetworkTypes": {
              "!type": "fn(flags: number) -> +android.app.DownloadManager.Request",
              "!url": "http://developer.android.com/reference/android/app/DownloadManager.Request.html#setAllowedNetworkTypes(int)"
            },
            "setTitle": {
              "!type": "fn(title: +java.lang.CharSequence) -> +android.app.DownloadManager.Request",
              "!url": "http://developer.android.com/reference/android/app/DownloadManager.Request.html#setTitle(java.lang.CharSequence)"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "allowScanningByMediaScanner": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/DownloadManager.Request.html#allowScanningByMediaScanner()"
            },
            "setAllowedOverRoaming": {
              "!type": "fn(allowed: bool) -> +android.app.DownloadManager.Request",
              "!url": "http://developer.android.com/reference/android/app/DownloadManager.Request.html#setAllowedOverRoaming(boolean)"
            },
            "setNotificationVisibility": {
              "!type": "fn(visibility: number) -> +android.app.DownloadManager.Request",
              "!url": "http://developer.android.com/reference/android/app/DownloadManager.Request.html#setNotificationVisibility(int)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "setVisibleInDownloadsUi": {
              "!type": "fn(isVisible: bool) -> +android.app.DownloadManager.Request",
              "!url": "http://developer.android.com/reference/android/app/DownloadManager.Request.html#setVisibleInDownloadsUi(boolean)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "setDestinationInExternalPublicDir": {
              "!type": "fn(dirType: string, subPath: string) -> +android.app.DownloadManager.Request",
              "!url": "http://developer.android.com/reference/android/app/DownloadManager.Request.html#setDestinationInExternalPublicDir(java.lang.String, java.lang.String)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            }
          }
        },
        "Query": {
          "!url": "http://developer.android.com/reference/android/app/DownloadManager.Query.html",
          "!type": "fn()",
          "ORDER_ASCENDING": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/DownloadManager.Query.html#ORDER_ASCENDING"
          },
          "ORDER_DESCENDING": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/DownloadManager.Query.html#ORDER_DESCENDING"
          },
          "prototype": {
            "setFilterById": {
              "!type": "fn(ids: +java.newArray) -> +android.app.DownloadManager.Query",
              "!url": "http://developer.android.com/reference/android/app/DownloadManager.Query.html#setFilterById(long[])"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "setOnlyIncludeVisibleInDownloadsUi": {
              "!type": "fn(value: bool) -> +android.app.DownloadManager.Query",
              "!url": "http://developer.android.com/reference/android/app/DownloadManager.Query.html#setOnlyIncludeVisibleInDownloadsUi(boolean)"
            },
            "orderBy": {
              "!type": "fn(column: string, direction: number) -> +android.app.DownloadManager.Query",
              "!url": "http://developer.android.com/reference/android/app/DownloadManager.Query.html#orderBy(java.lang.String, int)"
            },
            "setFilterByStatus": {
              "!type": "fn(flags: number) -> +android.app.DownloadManager.Query",
              "!url": "http://developer.android.com/reference/android/app/DownloadManager.Query.html#setFilterByStatus(int)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "COLUMN_LOCAL_URI": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#COLUMN_LOCAL_URI"
        },
        "COLUMN_LOCAL_FILENAME": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#COLUMN_LOCAL_FILENAME"
        },
        "STATUS_SUCCESSFUL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#STATUS_SUCCESSFUL"
        },
        "COLUMN_BYTES_DOWNLOADED_SO_FAR": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#COLUMN_BYTES_DOWNLOADED_SO_FAR"
        },
        "INTENT_EXTRAS_SORT_BY_SIZE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#INTENT_EXTRAS_SORT_BY_SIZE"
        },
        "ERROR_DEVICE_NOT_FOUND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#ERROR_DEVICE_NOT_FOUND"
        },
        "COLUMN_ID": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#COLUMN_ID"
        },
        "COLUMN_LAST_MODIFIED_TIMESTAMP": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#COLUMN_LAST_MODIFIED_TIMESTAMP"
        },
        "ERROR_TOO_MANY_REDIRECTS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#ERROR_TOO_MANY_REDIRECTS"
        },
        "PAUSED_WAITING_FOR_NETWORK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#PAUSED_WAITING_FOR_NETWORK"
        },
        "PAUSED_WAITING_TO_RETRY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#PAUSED_WAITING_TO_RETRY"
        },
        "ERROR_CANNOT_RESUME": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#ERROR_CANNOT_RESUME"
        },
        "PAUSED_UNKNOWN": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#PAUSED_UNKNOWN"
        },
        "STATUS_PENDING": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#STATUS_PENDING"
        },
        "EXTRA_NOTIFICATION_CLICK_DOWNLOAD_IDS": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#EXTRA_NOTIFICATION_CLICK_DOWNLOAD_IDS"
        },
        "COLUMN_REASON": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#COLUMN_REASON"
        },
        "ACTION_NOTIFICATION_CLICKED": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#ACTION_NOTIFICATION_CLICKED"
        },
        "ACTION_DOWNLOAD_COMPLETE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#ACTION_DOWNLOAD_COMPLETE"
        },
        "COLUMN_MEDIA_TYPE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#COLUMN_MEDIA_TYPE"
        },
        "STATUS_FAILED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#STATUS_FAILED"
        },
        "ERROR_BLOCKED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#ERROR_BLOCKED"
        },
        "ACTION_VIEW_DOWNLOADS": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#ACTION_VIEW_DOWNLOADS"
        },
        "COLUMN_TITLE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#COLUMN_TITLE"
        },
        "COLUMN_MEDIAPROVIDER_URI": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#COLUMN_MEDIAPROVIDER_URI"
        },
        "PAUSED_QUEUED_FOR_WIFI": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#PAUSED_QUEUED_FOR_WIFI"
        },
        "ERROR_INSUFFICIENT_SPACE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#ERROR_INSUFFICIENT_SPACE"
        },
        "ERROR_UNHANDLED_HTTP_CODE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#ERROR_UNHANDLED_HTTP_CODE"
        },
        "STATUS_RUNNING": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#STATUS_RUNNING"
        },
        "EXTRA_DOWNLOAD_ID": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#EXTRA_DOWNLOAD_ID"
        },
        "ERROR_HTTP_DATA_ERROR": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#ERROR_HTTP_DATA_ERROR"
        },
        "COLUMN_DESCRIPTION": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#COLUMN_DESCRIPTION"
        },
        "COLUMN_STATUS": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#COLUMN_STATUS"
        },
        "ERROR_UNKNOWN": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#ERROR_UNKNOWN"
        },
        "COLUMN_TOTAL_SIZE_BYTES": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#COLUMN_TOTAL_SIZE_BYTES"
        },
        "STATUS_PAUSED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#STATUS_PAUSED"
        },
        "ERROR_FILE_ERROR": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#ERROR_FILE_ERROR"
        },
        "COLUMN_URI": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#COLUMN_URI"
        },
        "ERROR_FILE_ALREADY_EXISTS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#ERROR_FILE_ALREADY_EXISTS"
        },
        "UNDERLYING_COLUMNS": {
          "!type": "+java.newArray",
          "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#UNDERLYING_COLUMNS"
        },
        "COLUMN_ALLOW_WRITE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#COLUMN_ALLOW_WRITE"
        },
        "getRecommendedMaxBytesOverMobile": {
          "!type": "fn(context: +android.content.Context) -> +java.lang.Long",
          "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#getRecommendedMaxBytesOverMobile(android.content.Context)"
        },
        "isActiveNetworkExpensive": {
          "!type": "fn(context: +android.content.Context) -> bool",
          "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#isActiveNetworkExpensive(android.content.Context)"
        },
        "getMaxBytesOverMobile": {
          "!type": "fn(context: +android.content.Context) -> +java.lang.Long",
          "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#getMaxBytesOverMobile(android.content.Context)"
        },
        "getActiveNetworkWarningBytes": {
          "!type": "fn(context: +android.content.Context) -> +java.lang.Long",
          "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#getActiveNetworkWarningBytes(android.content.Context)"
        },
        "prototype": {
          "setAccessAllDownloads": {
            "!type": "fn(accessAllDownloads: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#setAccessAllDownloads(boolean)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getUriForDownloadedFile": {
            "!type": "fn(id: +java.lang.Long) -> +android.net.Uri",
            "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#getUriForDownloadedFile(long)"
          },
          "openDownloadedFile": {
            "!type": "fn(id: +java.lang.Long) -> +android.os.ParcelFileDescriptor",
            "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#openDownloadedFile(long)"
          },
          "query": {
            "!type": "fn(query: +android.app.DownloadManager.Query) -> +android.database.Cursor",
            "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#query(android.app.DownloadManager.Query)"
          },
          "getMimeTypeForDownloadedFile": {
            "!type": "fn(id: +java.lang.Long) -> string",
            "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#getMimeTypeForDownloadedFile(long)"
          },
          "markRowDeleted": {
            "!type": "fn(ids: +java.newArray) -> number",
            "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#markRowDeleted(long[])"
          },
          "getDownloadUri": {
            "!type": "fn(id: +java.lang.Long) -> +android.net.Uri",
            "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#getDownloadUri(long)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "addCompletedDownload": {
            "!type": "fn(title: string, description: string, isMediaScannerScannable: bool, mimeType: string, path: string, length: +java.lang.Long, showNotification: bool) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#addCompletedDownload(java.lang.String, java.lang.String, boolean, java.lang.String, java.lang.String, long, boolean)"
          },
          "enqueue": {
            "!type": "fn(request: +android.app.DownloadManager.Request) -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#enqueue(android.app.DownloadManager.Request)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "remove": {
            "!type": "fn(ids: +java.newArray) -> number",
            "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#remove(long[])"
          },
          "restartDownload": {
            "!type": "fn(ids: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/DownloadManager.html#restartDownload(long[])"
          }
        }
      },
      "DownloadManagerFunctionalTest": {
        "!url": "http://developer.android.com/reference/android/app/DownloadManagerFunctionalTest.html",
        "!type": "fn()",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "runTestOnUiThread": {
            "!type": "fn(r: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#runTestOnUiThread(java.lang.Runnable)"
          },
          "testRemoveDownload": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/DownloadManagerFunctionalTest.html#testRemoveDownload()"
          },
          "testErrorHttpDataError_invalidRedirect": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/DownloadManagerFunctionalTest.html#testErrorHttpDataError_invalidRedirect()"
          },
          "testDownloadToProhibitedDirectory": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/DownloadManagerFunctionalTest.html#testDownloadToProhibitedDirectory()"
          },
          "tearDown": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/DownloadManagerFunctionalTest.html#tearDown()"
          },
          "launchActivity": {
            "!type": "fn(pkg: string, activityCls: +java.lang.Class, extras: +android.os.Bundle) -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#launchActivity(java.lang.String, java.lang.Class, android.os.Bundle)"
          },
          "testBinaryDownloadToSystemCache": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/DownloadManagerFunctionalTest.html#testBinaryDownloadToSystemCache()"
          },
          "testDownloadToExternal": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/DownloadManagerFunctionalTest.html#testDownloadToExternal()"
          },
          "injectInstrumentation": {
            "!type": "fn(instrumentation: +android.app.Instrumentation) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#injectInstrumentation(android.app.Instrumentation)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "testServerDropConnection_body": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/DownloadManagerFunctionalTest.html#testServerDropConnection_body()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "testSetTitle": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/DownloadManagerFunctionalTest.html#testSetTitle()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "testGetDownloadIdOnNotification": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/DownloadManagerFunctionalTest.html#testGetDownloadIdOnNotification()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "setUp": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/DownloadManagerFunctionalTest.html#setUp()"
          },
          "testErrorUnhandledHttpCode": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/DownloadManagerFunctionalTest.html#testErrorUnhandledHttpCode()"
          },
          "launchActivityWithIntent": {
            "!type": "fn(pkg: string, activityCls: +java.lang.Class, intent: +android.content.Intent) -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#launchActivityWithIntent(java.lang.String, java.lang.Class, android.content.Intent)"
          },
          "testDownloadNoWifi": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/DownloadManagerFunctionalTest.html#testDownloadNoWifi()"
          },
          "getInstrumentation": {
            "!type": "fn() -> +android.app.Instrumentation",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#getInstrumentation()"
          },
          "testDownloadToExternal_fileExists": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/DownloadManagerFunctionalTest.html#testDownloadToExternal_fileExists()"
          },
          "sendRepeatedKeys": {
            "!type": "fn(keys: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#sendRepeatedKeys(int[])"
          },
          "sendKeys": {
            "!type": "fn(keysSequence: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#sendKeys(java.lang.String)"
          },
          "injectInsrumentation": {
            "!type": "fn(instrumentation: +android.app.Instrumentation) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#injectInsrumentation(android.app.Instrumentation)"
          },
          "doErrorTest": {
            "!type": "fn(uri: +android.net.Uri, error: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/DownloadManagerFunctionalTest.html#doErrorTest(android.net.Uri, int)"
          },
          "testTextDownloadToSystemCache": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/DownloadManagerFunctionalTest.html#testTextDownloadToSystemCache()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "testErrorTooManyRedirects": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/DownloadManagerFunctionalTest.html#testErrorTooManyRedirects()"
          }
        }
      },
      "FragmentContainer": {
        "!url": "http://developer.android.com/reference/android/app/FragmentContainer.html",
        "!type": "fn()",
        "prototype": {
          "onHasView": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/FragmentContainer.html#onHasView()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "onFindViewById": {
            "!type": "fn(id: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/FragmentContainer.html#onFindViewById(int)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "IntentService": {
        "!url": "http://developer.android.com/reference/android/app/IntentService.html",
        "!type": "fn(name: string)",
        "BIND_WAIVE_PRIORITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_WAIVE_PRIORITY"
        },
        "MEDIA_PROJECTION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_PROJECTION_SERVICE"
        },
        "ETHERNET_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ETHERNET_SERVICE"
        },
        "WIFI_RTT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_RTT_SERVICE"
        },
        "SENSOR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SENSOR_SERVICE"
        },
        "TELEPHONY_SUBSCRIPTION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SUBSCRIPTION_SERVICE"
        },
        "CAPTIONING_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CAPTIONING_SERVICE"
        },
        "START_CONTINUATION_MASK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Service.html#START_CONTINUATION_MASK"
        },
        "CAMERA_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CAMERA_SERVICE"
        },
        "BIND_DEBUG_UNBIND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_DEBUG_UNBIND"
        },
        "STATUS_BAR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#STATUS_BAR_SERVICE"
        },
        "DEVICE_POLICY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_POLICY_SERVICE"
        },
        "BIND_IMPORTANT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_IMPORTANT"
        },
        "NSD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NSD_SERVICE"
        },
        "DOWNLOAD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DOWNLOAD_SERVICE"
        },
        "BIND_NOT_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_VISIBLE"
        },
        "CONTEXT_IGNORE_SECURITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_IGNORE_SECURITY"
        },
        "USAGE_STATS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USAGE_STATS_SERVICE"
        },
        "START_FLAG_RETRY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Service.html#START_FLAG_RETRY"
        },
        "MODE_WORLD_READABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_READABLE"
        },
        "KEYGUARD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#KEYGUARD_SERVICE"
        },
        "BIND_ADJUST_WITH_ACTIVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ADJUST_WITH_ACTIVITY"
        },
        "UI_MODE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#UI_MODE_SERVICE"
        },
        "MODE_PRIVATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_PRIVATE"
        },
        "CONTEXT_INCLUDE_CODE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_INCLUDE_CODE"
        },
        "ACCESSIBILITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACCESSIBILITY_SERVICE"
        },
        "HDMI_CONTROL_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#HDMI_CONTROL_SERVICE"
        },
        "BIND_SHOWING_UI": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_SHOWING_UI"
        },
        "MODE_APPEND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_APPEND"
        },
        "AUDIO_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#AUDIO_SERVICE"
        },
        "NETWORK_SCORE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_SCORE_SERVICE"
        },
        "UPDATE_LOCK_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#UPDATE_LOCK_SERVICE"
        },
        "MEDIA_ROUTER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_ROUTER_SERVICE"
        },
        "JOB_SCHEDULER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#JOB_SCHEDULER_SERVICE"
        },
        "DEVICE_IDLE_CONTROLLER": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_IDLE_CONTROLLER"
        },
        "INPUT_METHOD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_METHOD_SERVICE"
        },
        "BIND_ABOVE_CLIENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ABOVE_CLIENT"
        },
        "START_STICKY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Service.html#START_STICKY"
        },
        "INPUT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_SERVICE"
        },
        "MODE_WORLD_WRITEABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_WRITEABLE"
        },
        "NETWORKMANAGEMENT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORKMANAGEMENT_SERVICE"
        },
        "WINDOW_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WINDOW_SERVICE"
        },
        "MEDIA_SESSION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_SESSION_SERVICE"
        },
        "WIFI_P2P_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_P2P_SERVICE"
        },
        "MODE_ENABLE_WRITE_AHEAD_LOGGING": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_ENABLE_WRITE_AHEAD_LOGGING"
        },
        "WIFI_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SERVICE"
        },
        "PERSISTENT_DATA_BLOCK_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#PERSISTENT_DATA_BLOCK_SERVICE"
        },
        "TV_INPUT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TV_INPUT_SERVICE"
        },
        "SIP_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SIP_SERVICE"
        },
        "FINGERPRINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#FINGERPRINT_SERVICE"
        },
        "LOCATION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LOCATION_SERVICE"
        },
        "LAUNCHER_APPS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LAUNCHER_APPS_SERVICE"
        },
        "NETWORK_STATS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_STATS_SERVICE"
        },
        "VOICE_INTERACTION_MANAGER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#VOICE_INTERACTION_MANAGER_SERVICE"
        },
        "TELECOM_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELECOM_SERVICE"
        },
        "SEARCH_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SEARCH_SERVICE"
        },
        "RADIO_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#RADIO_SERVICE"
        },
        "BIND_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_VISIBLE"
        },
        "BIND_NOT_FOREGROUND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_FOREGROUND"
        },
        "CONTEXT_RESTRICTED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_RESTRICTED"
        },
        "USER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USER_SERVICE"
        },
        "DROPBOX_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DROPBOX_SERVICE"
        },
        "BIND_TREAT_LIKE_ACTIVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_TREAT_LIKE_ACTIVITY"
        },
        "BIND_FOREGROUND_SERVICE_WHILE_AWAKE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE_WHILE_AWAKE"
        },
        "CLIPBOARD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CLIPBOARD_SERVICE"
        },
        "START_TASK_REMOVED_COMPLETE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Service.html#START_TASK_REMOVED_COMPLETE"
        },
        "LAYOUT_INFLATER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LAYOUT_INFLATER_SERVICE"
        },
        "WIFI_SCANNING_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SCANNING_SERVICE"
        },
        "PRINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#PRINT_SERVICE"
        },
        "WALLPAPER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WALLPAPER_SERVICE"
        },
        "ALARM_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ALARM_SERVICE"
        },
        "ACCOUNT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACCOUNT_SERVICE"
        },
        "TRUST_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TRUST_SERVICE"
        },
        "VIBRATOR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#VIBRATOR_SERVICE"
        },
        "START_REDELIVER_INTENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Service.html#START_REDELIVER_INTENT"
        },
        "NFC_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NFC_SERVICE"
        },
        "NOTIFICATION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NOTIFICATION_SERVICE"
        },
        "BLUETOOTH_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BLUETOOTH_SERVICE"
        },
        "POWER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#POWER_SERVICE"
        },
        "BIND_ALLOW_OOM_MANAGEMENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ALLOW_OOM_MANAGEMENT"
        },
        "START_FLAG_REDELIVERY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Service.html#START_FLAG_REDELIVERY"
        },
        "BACKUP_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BACKUP_SERVICE"
        },
        "COUNTRY_DETECTOR": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#COUNTRY_DETECTOR"
        },
        "SERIAL_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SERIAL_SERVICE"
        },
        "WIFI_PASSPOINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_PASSPOINT_SERVICE"
        },
        "CONSUMER_IR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONSUMER_IR_SERVICE"
        },
        "APP_OPS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#APP_OPS_SERVICE"
        },
        "ACTIVITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACTIVITY_SERVICE"
        },
        "STORAGE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#STORAGE_SERVICE"
        },
        "BIND_FOREGROUND_SERVICE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE"
        },
        "RESTRICTIONS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#RESTRICTIONS_SERVICE"
        },
        "CONNECTIVITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONNECTIVITY_SERVICE"
        },
        "START_NOT_STICKY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Service.html#START_NOT_STICKY"
        },
        "TEXT_SERVICES_MANAGER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TEXT_SERVICES_MANAGER_SERVICE"
        },
        "USB_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USB_SERVICE"
        },
        "START_STICKY_COMPATIBILITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Service.html#START_STICKY_COMPATIBILITY"
        },
        "APPWIDGET_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#APPWIDGET_SERVICE"
        },
        "CONTEXT_REGISTER_PACKAGE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_REGISTER_PACKAGE"
        },
        "CARRIER_CONFIG_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CARRIER_CONFIG_SERVICE"
        },
        "NETWORK_POLICY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_POLICY_SERVICE"
        },
        "MIDI_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MIDI_SERVICE"
        },
        "BATTERY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BATTERY_SERVICE"
        },
        "MODE_MULTI_PROCESS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_MULTI_PROCESS"
        },
        "BIND_AUTO_CREATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_AUTO_CREATE"
        },
        "DISPLAY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DISPLAY_SERVICE"
        },
        "TELEPHONY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SERVICE"
        },
        "prototype": {
          "getExternalCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDir()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "openFileInput": {
            "!type": "fn(name: string) -> +java.io.FileInputStream",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileInput(java.lang.String)"
          },
          "getBaseContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBaseContext()"
          },
          "checkPermission": {
            "!type": "fn(permission: string, pid: number, uid: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkPermission(java.lang.String, int, int)"
          },
          "openFileOutput": {
            "!type": "fn(name: string, mode: number) -> +java.io.FileOutputStream",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileOutput(java.lang.String, int)"
          },
          "deleteDatabase": {
            "!type": "fn(name: string) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteDatabase(java.lang.String)"
          },
          "startActivityAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivityAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "getOpPackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getOpPackageName()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "getObbDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDirs()"
          },
          "startForeground": {
            "!type": "fn(id: number, notification: +android.app.Notification) -> void",
            "!url": "http://developer.android.com/reference/android/app/Service.html#startForeground(int, android.app.Notification)"
          },
          "getString": {
            "!type": "fn(resId: number) -> string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getString(int)"
          },
          "getDatabasePath": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDatabasePath(java.lang.String)"
          },
          "sendOrderedBroadcast": {
            "!type": "fn(intent: +android.content.Intent, receiverPermission: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcast(android.content.Intent, java.lang.String)"
          },
          "stopForeground": {
            "!type": "fn(removeNotification: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Service.html#stopForeground(boolean)"
          },
          "onDestroy": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/IntentService.html#onDestroy()"
          },
          "bindServiceAsUser": {
            "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number, user: +android.os.UserHandle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindServiceAsUser(android.content.Intent, android.content.ServiceConnection, int, android.os.UserHandle)"
          },
          "getNoBackupFilesDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getNoBackupFilesDir()"
          },
          "fileList": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#fileList()"
          },
          "bindService": {
            "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindService(android.content.Intent, android.content.ServiceConnection, int)"
          },
          "checkSelfPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkSelfPermission(java.lang.String)"
          },
          "removeStickyBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcast(android.content.Intent)"
          },
          "setIntentRedelivery": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/IntentService.html#setIntentRedelivery(boolean)"
          },
          "sendStickyBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "setForeground": {
            "!type": "fn(isForeground: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Service.html#setForeground(boolean)"
          },
          "stopSelf": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Service.html#stopSelf()"
          },
          "enforceCallingPermission": {
            "!type": "fn(permission: string, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingPermission(java.lang.String, java.lang.String)"
          },
          "getCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCacheDir()"
          },
          "getSharedPrefsFile": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPrefsFile(java.lang.String)"
          },
          "deleteFile": {
            "!type": "fn(name: string) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteFile(java.lang.String)"
          },
          "createApplicationContext": {
            "!type": "fn(application: +android.content.pm.ApplicationInfo, flags: number) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createApplicationContext(android.content.pm.ApplicationInfo, int)"
          },
          "getExternalFilesDirs": {
            "!type": "fn(type: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDirs(java.lang.String)"
          },
          "isRestricted": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#isRestricted()"
          },
          "startInstrumentation": {
            "!type": "fn(className: +android.content.ComponentName, profileFile: string, arguments: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startInstrumentation(android.content.ComponentName, java.lang.String, android.os.Bundle)"
          },
          "createPackageContext": {
            "!type": "fn(packageName: string, flags: number) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContext(java.lang.String, int)"
          },
          "obtainStyledAttributes": {
            "!type": "fn(attrs: +java.newArray) -> +android.content.res.TypedArray",
            "!url": "http://developer.android.com/reference/android/content/Context.html#obtainStyledAttributes(int[])"
          },
          "setWallpaper": {
            "!type": "fn(bitmap: +android.graphics.Bitmap) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#setWallpaper(android.graphics.Bitmap)"
          },
          "setTheme": {
            "!type": "fn(resid: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#setTheme(int)"
          },
          "sendStickyOrderedBroadcast": {
            "!type": "fn(intent: +android.content.Intent, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcast(android.content.Intent, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "enforcePermission": {
            "!type": "fn(permission: string, pid: number, uid: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforcePermission(java.lang.String, int, int, java.lang.String)"
          },
          "getDir": {
            "!type": "fn(name: string, mode: number) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDir(java.lang.String, int)"
          },
          "checkCallingOrSelfUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfUriPermission(android.net.Uri, int)"
          },
          "sendBroadcastMultiplePermissions": {
            "!type": "fn(intent: +android.content.Intent, receiverPermissions: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastMultiplePermissions(android.content.Intent, java.lang.String[])"
          },
          "getExternalFilesDir": {
            "!type": "fn(type: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDir(java.lang.String)"
          },
          "openOrCreateDatabase": {
            "!type": "fn(name: string, mode: number, factory: +android.database.sqlite.SQLiteDatabase.CursorFactory) -> +android.database.sqlite.SQLiteDatabase",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openOrCreateDatabase(java.lang.String, int, android.database.sqlite.SQLiteDatabase.CursorFactory)"
          },
          "getContentResolver": {
            "!type": "fn() -> +android.content.ContentResolver",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getContentResolver()"
          },
          "getThemeResId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getThemeResId()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getObbDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDir()"
          },
          "getDisplayAdjustments": {
            "!type": "fn(displayId: number) -> +android.view.DisplayAdjustments",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDisplayAdjustments(int)"
          },
          "checkCallingOrSelfPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfPermission(java.lang.String)"
          },
          "unregisterReceiver": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unregisterReceiver(android.content.BroadcastReceiver)"
          },
          "clearWallpaper": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#clearWallpaper()"
          },
          "createPackageContextAsUser": {
            "!type": "fn(packageName: string, flags: number, user: +android.os.UserHandle) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContextAsUser(java.lang.String, int, android.os.UserHandle)"
          },
          "onTaskRemoved": {
            "!type": "fn(rootIntent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Service.html#onTaskRemoved(android.content.Intent)"
          },
          "onCreate": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/IntentService.html#onCreate()"
          },
          "onLowMemory": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Service.html#onLowMemory()"
          },
          "startServiceAsUser": {
            "!type": "fn(service: +android.content.Intent, user: +android.os.UserHandle) -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startServiceAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getWallpaper": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaper()"
          },
          "peekWallpaper": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#peekWallpaper()"
          },
          "getApplicationContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationContext()"
          },
          "getFilesDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFilesDir()"
          },
          "getCodeCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCodeCacheDir()"
          },
          "sendOrderedBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, receiverPermission: string, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, java.lang.String, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "getColor": {
            "!type": "fn(id: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getColor(int)"
          },
          "registerReceiverAsUser": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver, user: +android.os.UserHandle, filter: +android.content.IntentFilter, broadcastPermission: string, scheduler: +android.os.Handler) -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiverAsUser(android.content.BroadcastReceiver, android.os.UserHandle, android.content.IntentFilter, java.lang.String, android.os.Handler)"
          },
          "getText": {
            "!type": "fn(resId: number) -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getText(int)"
          },
          "getMainLooper": {
            "!type": "fn() -> +android.os.Looper",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getMainLooper()"
          },
          "startActivity": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivity(android.content.Intent)"
          },
          "getColorStateList": {
            "!type": "fn(id: number) -> +android.content.res.ColorStateList",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getColorStateList(int)"
          },
          "enforceCallingOrSelfUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfUriPermission(android.net.Uri, int, java.lang.String)"
          },
          "getAssets": {
            "!type": "fn() -> +android.content.res.AssetManager",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getAssets()"
          },
          "onConfigurationChanged": {
            "!type": "fn(newConfig: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/app/Service.html#onConfigurationChanged(android.content.res.Configuration)"
          },
          "onStart": {
            "!type": "fn(intent: +android.content.Intent, startId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/IntentService.html#onStart(android.content.Intent, int)"
          },
          "onTrimMemory": {
            "!type": "fn(level: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Service.html#onTrimMemory(int)"
          },
          "onStartCommand": {
            "!type": "fn(intent: +android.content.Intent, flags: number, startId: number) -> number",
            "!url": "http://developer.android.com/reference/android/app/IntentService.html#onStartCommand(android.content.Intent, int, int)"
          },
          "grantUriPermission": {
            "!type": "fn(toPackage: string, uri: +android.net.Uri, modeFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#grantUriPermission(java.lang.String, android.net.Uri, int)"
          },
          "canStartActivityForResult": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#canStartActivityForResult()"
          },
          "getBasePackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBasePackageName()"
          },
          "onUnbind": {
            "!type": "fn(intent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Service.html#onUnbind(android.content.Intent)"
          },
          "attach": {
            "!type": "fn(context: +android.content.Context, thread: +android.app.ActivityThread, className: string, token: +android.os.IBinder, application: +android.app.Application, activityManager: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/android/app/Service.html#attach(android.content.Context, android.app.ActivityThread, java.lang.String, android.os.IBinder, android.app.Application, java.lang.Object)"
          },
          "onBind": {
            "!type": "fn(intent: +android.content.Intent) -> +android.os.IBinder",
            "!url": "http://developer.android.com/reference/android/app/IntentService.html#onBind(android.content.Intent)"
          },
          "getApplication": {
            "!type": "fn() -> +android.app.Application",
            "!url": "http://developer.android.com/reference/android/app/Service.html#getApplication()"
          },
          "registerReceiver": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver, filter: +android.content.IntentFilter) -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "stopService": {
            "!type": "fn(name: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopService(android.content.Intent)"
          },
          "getWallpaperDesiredMinimumHeight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumHeight()"
          },
          "getExternalCacheDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDirs()"
          },
          "getTheme": {
            "!type": "fn() -> +android.content.res.Resources.Theme",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getTheme()"
          },
          "getPackageCodePath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageCodePath()"
          },
          "registerComponentCallbacks": {
            "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
            "!url": "http://developer.android.com/reference/android/content/Context.html#registerComponentCallbacks(android.content.ComponentCallbacks)"
          },
          "enforceUriPermission": {
            "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceUriPermission(android.net.Uri, int, int, int, java.lang.String)"
          },
          "getSystemServiceName": {
            "!type": "fn(serviceClass: +java.lang.Class) -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSystemServiceName(java.lang.Class)"
          },
          "getApplicationInfo": {
            "!type": "fn() -> +android.content.pm.ApplicationInfo",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationInfo()"
          },
          "createDisplayContext": {
            "!type": "fn(display: +android.view.Display) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createDisplayContext(android.view.Display)"
          },
          "getSharedPreferences": {
            "!type": "fn(name: string, mode: number) -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPreferences(java.lang.String, int)"
          },
          "enforceCallingUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingUriPermission(android.net.Uri, int, java.lang.String)"
          },
          "stopSelfResult": {
            "!type": "fn(startId: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Service.html#stopSelfResult(int)"
          },
          "getSystemService": {
            "!type": "fn(name: string) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSystemService(java.lang.String)"
          },
          "unbindService": {
            "!type": "fn(conn: +android.content.ServiceConnection) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unbindService(android.content.ServiceConnection)"
          },
          "sendStickyOrderedBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getClassLoader": {
            "!type": "fn() -> +java.lang.ClassLoader",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getClassLoader()"
          },
          "databaseList": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#databaseList()"
          },
          "checkCallingUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingUriPermission(android.net.Uri, int)"
          },
          "enforceCallingOrSelfPermission": {
            "!type": "fn(permission: string, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfPermission(java.lang.String, java.lang.String)"
          },
          "createConfigurationContext": {
            "!type": "fn(overrideConfiguration: +android.content.res.Configuration) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createConfigurationContext(android.content.res.Configuration)"
          },
          "removeStickyBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "getFileStreamPath": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFileStreamPath(java.lang.String)"
          },
          "checkUriPermission": {
            "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkUriPermission(android.net.Uri, int, int, int)"
          },
          "onRebind": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Service.html#onRebind(android.content.Intent)"
          },
          "startService": {
            "!type": "fn(service: +android.content.Intent) -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startService(android.content.Intent)"
          },
          "checkCallingPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingPermission(java.lang.String)"
          },
          "getPackageManager": {
            "!type": "fn() -> +android.content.pm.PackageManager",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageManager()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "startActivitiesAsUser": {
            "!type": "fn(intents: +java.newArray, options: +android.os.Bundle, userHandle: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivitiesAsUser(android.content.Intent[], android.os.Bundle, android.os.UserHandle)"
          },
          "sendBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "sendBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcast(android.content.Intent)"
          },
          "getPackageResourcePath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageResourcePath()"
          },
          "startIntentSender": {
            "!type": "fn(intent: +android.content.IntentSender, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startIntentSender(android.content.IntentSender, android.content.Intent, int, int, int)"
          },
          "startActivityForResult": {
            "!type": "fn(who: string, intent: +android.content.Intent, requestCode: number, options: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivityForResult(java.lang.String, android.content.Intent, int, android.os.Bundle)"
          },
          "startActivities": {
            "!type": "fn(intents: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivities(android.content.Intent[])"
          },
          "getDrawable": {
            "!type": "fn(id: number) -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getDrawable(int)"
          },
          "getPackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageName()"
          },
          "revokeUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#revokeUriPermission(android.net.Uri, int)"
          },
          "getUserId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getUserId()"
          },
          "unregisterComponentCallbacks": {
            "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
            "!url": "http://developer.android.com/reference/android/content/Context.html#unregisterComponentCallbacks(android.content.ComponentCallbacks)"
          },
          "getResources": {
            "!type": "fn() -> +android.content.res.Resources",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getResources()"
          },
          "stopServiceAsUser": {
            "!type": "fn(name: +android.content.Intent, user: +android.os.UserHandle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopServiceAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "sendStickyBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcast(android.content.Intent)"
          },
          "getExternalMediaDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalMediaDirs()"
          },
          "getWallpaperDesiredMinimumWidth": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumWidth()"
          }
        }
      },
      "FragmentHostCallback": {
        "!url": "http://developer.android.com/reference/android/app/FragmentHostCallback.html",
        "!type": "fn(context: +android.content.Context, handler: +android.os.Handler, windowAnimations: number)",
        "prototype": {
          "onDump": {
            "!type": "fn(prefix: string, fd: +java.io.FileDescriptor, writer: +java.io.PrintWriter, args: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/FragmentHostCallback.html#onDump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "onHasWindowAnimations": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/FragmentHostCallback.html#onHasWindowAnimations()"
          },
          "onFindViewById": {
            "!type": "fn(id: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/FragmentHostCallback.html#onFindViewById(int)"
          },
          "onRequestPermissionsFromFragment": {
            "!type": "fn(fragment: +android.app.Fragment, permissions: +java.newArray, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/FragmentHostCallback.html#onRequestPermissionsFromFragment(android.app.Fragment, java.lang.String[], int)"
          },
          "onGetWindowAnimations": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/FragmentHostCallback.html#onGetWindowAnimations()"
          },
          "onHasView": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/FragmentHostCallback.html#onHasView()"
          },
          "onGetLayoutInflater": {
            "!type": "fn() -> +android.view.LayoutInflater",
            "!url": "http://developer.android.com/reference/android/app/FragmentHostCallback.html#onGetLayoutInflater()"
          },
          "onUseFragmentManagerInflaterFactory": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/FragmentHostCallback.html#onUseFragmentManagerInflaterFactory()"
          },
          "onInvalidateOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/FragmentHostCallback.html#onInvalidateOptionsMenu()"
          },
          "onGetHost": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/FragmentHostCallback.html#onGetHost()"
          },
          "onShouldSaveFragmentState": {
            "!type": "fn(fragment: +android.app.Fragment) -> bool",
            "!url": "http://developer.android.com/reference/android/app/FragmentHostCallback.html#onShouldSaveFragmentState(android.app.Fragment)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "onAttachFragment": {
            "!type": "fn(fragment: +android.app.Fragment) -> void",
            "!url": "http://developer.android.com/reference/android/app/FragmentHostCallback.html#onAttachFragment(android.app.Fragment)"
          },
          "onStartActivityFromFragment": {
            "!type": "fn(fragment: +android.app.Fragment, intent: +android.content.Intent, requestCode: number, options: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/FragmentHostCallback.html#onStartActivityFromFragment(android.app.Fragment, android.content.Intent, int, android.os.Bundle)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "TranslucentFancyActivity": {
        "!url": "http://developer.android.com/reference/android/app/TranslucentFancyActivity.html",
        "!type": "fn()",
        "BIND_WAIVE_PRIORITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_WAIVE_PRIORITY"
        },
        "RESULT_FIRST_USER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_FIRST_USER"
        },
        "DEFAULT_KEYS_SHORTCUT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SHORTCUT"
        },
        "MEDIA_PROJECTION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_PROJECTION_SERVICE"
        },
        "ETHERNET_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ETHERNET_SERVICE"
        },
        "WIFI_RTT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_RTT_SERVICE"
        },
        "SENSOR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SENSOR_SERVICE"
        },
        "TELEPHONY_SUBSCRIPTION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SUBSCRIPTION_SERVICE"
        },
        "CAPTIONING_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CAPTIONING_SERVICE"
        },
        "CAMERA_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CAMERA_SERVICE"
        },
        "BIND_DEBUG_UNBIND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_DEBUG_UNBIND"
        },
        "STATUS_BAR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#STATUS_BAR_SERVICE"
        },
        "DEVICE_POLICY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_POLICY_SERVICE"
        },
        "BIND_IMPORTANT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_IMPORTANT"
        },
        "NSD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NSD_SERVICE"
        },
        "DOWNLOAD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DOWNLOAD_SERVICE"
        },
        "BIND_NOT_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_VISIBLE"
        },
        "CONTEXT_IGNORE_SECURITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_IGNORE_SECURITY"
        },
        "USAGE_STATS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USAGE_STATS_SERVICE"
        },
        "MODE_WORLD_READABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_READABLE"
        },
        "KEYGUARD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#KEYGUARD_SERVICE"
        },
        "BIND_ADJUST_WITH_ACTIVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ADJUST_WITH_ACTIVITY"
        },
        "UI_MODE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#UI_MODE_SERVICE"
        },
        "MODE_PRIVATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_PRIVATE"
        },
        "CONTEXT_INCLUDE_CODE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_INCLUDE_CODE"
        },
        "DEFAULT_KEYS_DISABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_DISABLE"
        },
        "ACCESSIBILITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACCESSIBILITY_SERVICE"
        },
        "HDMI_CONTROL_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#HDMI_CONTROL_SERVICE"
        },
        "BIND_SHOWING_UI": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_SHOWING_UI"
        },
        "MODE_APPEND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_APPEND"
        },
        "AUDIO_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#AUDIO_SERVICE"
        },
        "NETWORK_SCORE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_SCORE_SERVICE"
        },
        "UPDATE_LOCK_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#UPDATE_LOCK_SERVICE"
        },
        "MEDIA_ROUTER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_ROUTER_SERVICE"
        },
        "JOB_SCHEDULER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#JOB_SCHEDULER_SERVICE"
        },
        "DEVICE_IDLE_CONTROLLER": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_IDLE_CONTROLLER"
        },
        "INPUT_METHOD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_METHOD_SERVICE"
        },
        "RESULT_CANCELED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_CANCELED"
        },
        "BIND_ABOVE_CLIENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ABOVE_CLIENT"
        },
        "INPUT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_SERVICE"
        },
        "MODE_WORLD_WRITEABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_WRITEABLE"
        },
        "NETWORKMANAGEMENT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORKMANAGEMENT_SERVICE"
        },
        "WINDOW_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WINDOW_SERVICE"
        },
        "MEDIA_SESSION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_SESSION_SERVICE"
        },
        "WIFI_P2P_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_P2P_SERVICE"
        },
        "DEFAULT_KEYS_SEARCH_GLOBAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SEARCH_GLOBAL"
        },
        "MODE_ENABLE_WRITE_AHEAD_LOGGING": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_ENABLE_WRITE_AHEAD_LOGGING"
        },
        "WIFI_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SERVICE"
        },
        "PERSISTENT_DATA_BLOCK_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#PERSISTENT_DATA_BLOCK_SERVICE"
        },
        "TV_INPUT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TV_INPUT_SERVICE"
        },
        "SIP_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SIP_SERVICE"
        },
        "FINGERPRINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#FINGERPRINT_SERVICE"
        },
        "LOCATION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LOCATION_SERVICE"
        },
        "LAUNCHER_APPS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LAUNCHER_APPS_SERVICE"
        },
        "NETWORK_STATS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_STATS_SERVICE"
        },
        "VOICE_INTERACTION_MANAGER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#VOICE_INTERACTION_MANAGER_SERVICE"
        },
        "TELECOM_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELECOM_SERVICE"
        },
        "SEARCH_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SEARCH_SERVICE"
        },
        "RADIO_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#RADIO_SERVICE"
        },
        "BIND_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_VISIBLE"
        },
        "BIND_NOT_FOREGROUND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_FOREGROUND"
        },
        "CONTEXT_RESTRICTED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_RESTRICTED"
        },
        "USER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USER_SERVICE"
        },
        "DROPBOX_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DROPBOX_SERVICE"
        },
        "BIND_TREAT_LIKE_ACTIVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_TREAT_LIKE_ACTIVITY"
        },
        "DEFAULT_KEYS_SEARCH_LOCAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SEARCH_LOCAL"
        },
        "BIND_FOREGROUND_SERVICE_WHILE_AWAKE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE_WHILE_AWAKE"
        },
        "CLIPBOARD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CLIPBOARD_SERVICE"
        },
        "LAYOUT_INFLATER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LAYOUT_INFLATER_SERVICE"
        },
        "WIFI_SCANNING_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SCANNING_SERVICE"
        },
        "PRINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#PRINT_SERVICE"
        },
        "WALLPAPER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WALLPAPER_SERVICE"
        },
        "ALARM_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ALARM_SERVICE"
        },
        "ACCOUNT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACCOUNT_SERVICE"
        },
        "TRUST_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TRUST_SERVICE"
        },
        "VIBRATOR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#VIBRATOR_SERVICE"
        },
        "RESULT_OK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_OK"
        },
        "NFC_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NFC_SERVICE"
        },
        "NOTIFICATION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NOTIFICATION_SERVICE"
        },
        "BLUETOOTH_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BLUETOOTH_SERVICE"
        },
        "POWER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#POWER_SERVICE"
        },
        "BIND_ALLOW_OOM_MANAGEMENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ALLOW_OOM_MANAGEMENT"
        },
        "DEFAULT_KEYS_DIALER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_DIALER"
        },
        "BACKUP_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BACKUP_SERVICE"
        },
        "COUNTRY_DETECTOR": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#COUNTRY_DETECTOR"
        },
        "SERIAL_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SERIAL_SERVICE"
        },
        "WIFI_PASSPOINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_PASSPOINT_SERVICE"
        },
        "CONSUMER_IR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONSUMER_IR_SERVICE"
        },
        "APP_OPS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#APP_OPS_SERVICE"
        },
        "ACTIVITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACTIVITY_SERVICE"
        },
        "STORAGE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#STORAGE_SERVICE"
        },
        "BIND_FOREGROUND_SERVICE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE"
        },
        "RESTRICTIONS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#RESTRICTIONS_SERVICE"
        },
        "CONNECTIVITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONNECTIVITY_SERVICE"
        },
        "TEXT_SERVICES_MANAGER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TEXT_SERVICES_MANAGER_SERVICE"
        },
        "USB_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USB_SERVICE"
        },
        "APPWIDGET_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#APPWIDGET_SERVICE"
        },
        "CONTEXT_REGISTER_PACKAGE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_REGISTER_PACKAGE"
        },
        "CARRIER_CONFIG_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CARRIER_CONFIG_SERVICE"
        },
        "NETWORK_POLICY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_POLICY_SERVICE"
        },
        "MIDI_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MIDI_SERVICE"
        },
        "BATTERY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BATTERY_SERVICE"
        },
        "MODE_MULTI_PROCESS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_MULTI_PROCESS"
        },
        "BIND_AUTO_CREATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_AUTO_CREATE"
        },
        "DISPLAY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DISPLAY_SERVICE"
        },
        "TELEPHONY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SERVICE"
        },
        "prototype": {
          "isBackgroundVisibleBehind": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isBackgroundVisibleBehind()"
          },
          "setProgressBarVisibility": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarVisibility(boolean)"
          },
          "setFeatureDrawableResource": {
            "!type": "fn(featureId: number, resId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableResource(int, int)"
          },
          "dispatchEnterAnimationComplete": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchEnterAnimationComplete()"
          },
          "finishActivityFromChild": {
            "!type": "fn(child: +android.app.Activity, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishActivityFromChild(android.app.Activity, int)"
          },
          "startPostponedEnterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startPostponedEnterTransition()"
          },
          "onProvideAssistContent": {
            "!type": "fn(outContent: +android.app.assist.AssistContent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideAssistContent(android.app.assist.AssistContent)"
          },
          "sendBroadcastMultiplePermissions": {
            "!type": "fn(intent: +android.content.Intent, receiverPermissions: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastMultiplePermissions(android.content.Intent, java.lang.String[])"
          },
          "getString": {
            "!type": "fn(resId: number) -> string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getString(int)"
          },
          "onKeyDown": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyDown(int, android.view.KeyEvent)"
          },
          "getResources": {
            "!type": "fn() -> +android.content.res.Resources",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getResources()"
          },
          "sendStickyBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcast(android.content.Intent)"
          },
          "startActivityFromFragment": {
            "!type": "fn(fragment: +android.app.Fragment, intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityFromFragment(android.app.Fragment, android.content.Intent, int)"
          },
          "onCreateThumbnail": {
            "!type": "fn(outBitmap: +android.graphics.Bitmap, canvas: +android.graphics.Canvas) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateThumbnail(android.graphics.Bitmap, android.graphics.Canvas)"
          },
          "getOpPackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getOpPackageName()"
          },
          "getCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCacheDir()"
          },
          "onWindowDismissed": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowDismissed()"
          },
          "getBaseContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBaseContext()"
          },
          "checkCallingOrSelfPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfPermission(java.lang.String)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "isVoiceInteractionRoot": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isVoiceInteractionRoot()"
          },
          "onDetachedFromWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onDetachedFromWindow()"
          },
          "setResult": {
            "!type": "fn(resultCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setResult(int)"
          },
          "onOptionsItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onOptionsItemSelected(android.view.MenuItem)"
          },
          "isChangingConfigurations": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isChangingConfigurations()"
          },
          "getCodeCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCodeCacheDir()"
          },
          "createPendingResult": {
            "!type": "fn(requestCode: number, data: +android.content.Intent, flags: number) -> +android.app.PendingIntent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#createPendingResult(int, android.content.Intent, int)"
          },
          "getPackageResourcePath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageResourcePath()"
          },
          "getCurrentFocus": {
            "!type": "fn() -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCurrentFocus()"
          },
          "triggerSearch": {
            "!type": "fn(query: string, appSearchData: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#triggerSearch(java.lang.String, android.os.Bundle)"
          },
          "convertToTranslucent": {
            "!type": "fn(callback: +android.app.Activity.TranslucentConversionListener, options: +android.app.ActivityOptions) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#convertToTranslucent(android.app.Activity.TranslucentConversionListener, android.app.ActivityOptions)"
          },
          "startActivityForResult": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityForResult(android.content.Intent, int)"
          },
          "getLayoutInflater": {
            "!type": "fn() -> +android.view.LayoutInflater",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLayoutInflater()"
          },
          "enforcePermission": {
            "!type": "fn(permission: string, pid: number, uid: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforcePermission(java.lang.String, int, int, java.lang.String)"
          },
          "createPackageContext": {
            "!type": "fn(packageName: string, flags: number) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContext(java.lang.String, int)"
          },
          "onWindowStartingActionMode": {
            "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowStartingActionMode(android.view.ActionMode.Callback)"
          },
          "registerForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#registerForContextMenu(android.view.View)"
          },
          "setSecondaryProgress": {
            "!type": "fn(secondaryProgress: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setSecondaryProgress(int)"
          },
          "onContentChanged": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onContentChanged()"
          },
          "finishAndRemoveTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAndRemoveTask()"
          },
          "setFinishOnTouchOutside": {
            "!type": "fn(finish: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFinishOnTouchOutside(boolean)"
          },
          "requestWindowFeature": {
            "!type": "fn(featureId: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestWindowFeature(int)"
          },
          "createConfigurationContext": {
            "!type": "fn(overrideConfiguration: +android.content.res.Configuration) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createConfigurationContext(android.content.res.Configuration)"
          },
          "showDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showDialog(int)"
          },
          "onSearchRequested": {
            "!type": "fn(searchEvent: +android.view.SearchEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onSearchRequested(android.view.SearchEvent)"
          },
          "onContextItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onContextItemSelected(android.view.MenuItem)"
          },
          "onTrackballEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTrackballEvent(android.view.MotionEvent)"
          },
          "requestPermissions": {
            "!type": "fn(permissions: +java.newArray, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestPermissions(java.lang.String[], int)"
          },
          "getVoiceInteractor": {
            "!type": "fn() -> +android.app.VoiceInteractor",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getVoiceInteractor()"
          },
          "peekWallpaper": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#peekWallpaper()"
          },
          "onPrepareOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPrepareOptionsMenu(android.view.Menu)"
          },
          "onSaveInstanceState": {
            "!type": "fn(outState: +android.os.Bundle, outPersistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onSaveInstanceState(android.os.Bundle, android.os.PersistableBundle)"
          },
          "registerReceiver": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver, filter: +android.content.IntentFilter) -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter)"
          },
          "setActionBar": {
            "!type": "fn(toolbar: +android.widget.Toolbar) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setActionBar(android.widget.Toolbar)"
          },
          "getIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getIntent()"
          },
          "getObbDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDirs()"
          },
          "getPackageManager": {
            "!type": "fn() -> +android.content.pm.PackageManager",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageManager()"
          },
          "getSystemServiceName": {
            "!type": "fn(serviceClass: +java.lang.Class) -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSystemServiceName(java.lang.Class)"
          },
          "obtainStyledAttributes": {
            "!type": "fn(attrs: +java.newArray) -> +android.content.res.TypedArray",
            "!url": "http://developer.android.com/reference/android/content/Context.html#obtainStyledAttributes(int[])"
          },
          "getApplicationInfo": {
            "!type": "fn() -> +android.content.pm.ApplicationInfo",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationInfo()"
          },
          "setDefaultKeyMode": {
            "!type": "fn(mode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setDefaultKeyMode(int)"
          },
          "setProgressBarIndeterminate": {
            "!type": "fn(indeterminate: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarIndeterminate(boolean)"
          },
          "isRestricted": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#isRestricted()"
          },
          "hasWindowFocus": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#hasWindowFocus()"
          },
          "onConfigurationChanged": {
            "!type": "fn(newConfig: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onConfigurationChanged(android.content.res.Configuration)"
          },
          "getVolumeControlStream": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getVolumeControlStream()"
          },
          "databaseList": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#databaseList()"
          },
          "setTheme": {
            "!type": "fn(resid: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#setTheme(int)"
          },
          "isChild": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isChild()"
          },
          "isResumed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isResumed()"
          },
          "setRequestedOrientation": {
            "!type": "fn(requestedOrientation: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setRequestedOrientation(int)"
          },
          "onNewActivityOptions": {
            "!type": "fn(options: +android.app.ActivityOptions) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNewActivityOptions(android.app.ActivityOptions)"
          },
          "startActivity": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivity(android.content.Intent)"
          },
          "onGenericMotionEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onGenericMotionEvent(android.view.MotionEvent)"
          },
          "onWindowAttributesChanged": {
            "!type": "fn(params: +android.view.WindowManager.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowAttributesChanged(android.view.WindowManager.LayoutParams)"
          },
          "onPostCreate": {
            "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPostCreate(android.os.Bundle, android.os.PersistableBundle)"
          },
          "onKeyUp": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyUp(int, android.view.KeyEvent)"
          },
          "enforceCallingOrSelfUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfUriPermission(android.net.Uri, int, java.lang.String)"
          },
          "grantUriPermission": {
            "!type": "fn(toPackage: string, uri: +android.net.Uri, modeFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#grantUriPermission(java.lang.String, android.net.Uri, int)"
          },
          "startActivityAsCaller": {
            "!type": "fn(intent: +android.content.Intent, options: +android.os.Bundle, ignoreTargetSecurity: bool, userId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityAsCaller(android.content.Intent, android.os.Bundle, boolean, int)"
          },
          "onActivityReenter": {
            "!type": "fn(resultCode: number, data: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActivityReenter(int, android.content.Intent)"
          },
          "dispatchKeyShortcutEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchKeyShortcutEvent(android.view.KeyEvent)"
          },
          "onNavigateUpFromChild": {
            "!type": "fn(child: +android.app.Activity) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNavigateUpFromChild(android.app.Activity)"
          },
          "onEnterAnimationComplete": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onEnterAnimationComplete()"
          },
          "setContentView": {
            "!type": "fn(layoutResID: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setContentView(int)"
          },
          "getPackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageName()"
          },
          "getActionBar": {
            "!type": "fn() -> +android.app.ActionBar",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getActionBar()"
          },
          "isDestroyed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isDestroyed()"
          },
          "sendBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "runOnUiThread": {
            "!type": "fn(action: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#runOnUiThread(java.lang.Runnable)"
          },
          "stopLockTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#stopLockTask()"
          },
          "createApplicationContext": {
            "!type": "fn(application: +android.content.pm.ApplicationInfo, flags: number) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createApplicationContext(android.content.pm.ApplicationInfo, int)"
          },
          "finishAffinity": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAffinity()"
          },
          "openContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#openContextMenu(android.view.View)"
          },
          "setTaskDescription": {
            "!type": "fn(taskDescription: +android.app.ActivityManager.TaskDescription) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setTaskDescription(android.app.ActivityManager.TaskDescription)"
          },
          "setTitleColor": {
            "!type": "fn(textColor: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setTitleColor(int)"
          },
          "showAssist": {
            "!type": "fn(args: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showAssist(android.os.Bundle)"
          },
          "onVisibleBehindCanceled": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onVisibleBehindCanceled()"
          },
          "finishAfterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAfterTransition()"
          },
          "startServiceAsUser": {
            "!type": "fn(service: +android.content.Intent, user: +android.os.UserHandle) -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startServiceAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "onNavigateUp": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNavigateUp()"
          },
          "getActivityToken": {
            "!type": "fn() -> +android.os.IBinder",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getActivityToken()"
          },
          "onAttachFragment": {
            "!type": "fn(fragment: +android.app.Fragment) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onAttachFragment(android.app.Fragment)"
          },
          "getApplication": {
            "!type": "fn() -> +android.app.Application",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getApplication()"
          },
          "applyOverrideConfiguration": {
            "!type": "fn(overrideConfiguration: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#applyOverrideConfiguration(android.content.res.Configuration)"
          },
          "fileList": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#fileList()"
          },
          "getTaskId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTaskId()"
          },
          "openOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#openOptionsMenu()"
          },
          "onBackgroundVisibleBehindChanged": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onBackgroundVisibleBehindChanged(boolean)"
          },
          "startNextMatchingActivity": {
            "!type": "fn(intent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startNextMatchingActivity(android.content.Intent)"
          },
          "onPrepareNavigateUpTaskStack": {
            "!type": "fn(builder: +android.app.TaskStackBuilder) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPrepareNavigateUpTaskStack(android.app.TaskStackBuilder)"
          },
          "onActionModeFinished": {
            "!type": "fn(mode: +android.view.ActionMode) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActionModeFinished(android.view.ActionMode)"
          },
          "getLocalClassName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLocalClassName()"
          },
          "managedQuery": {
            "!type": "fn(uri: +android.net.Uri, projection: +java.newArray, selection: string, sortOrder: string) -> +android.database.Cursor",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#managedQuery(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String)"
          },
          "checkPermission": {
            "!type": "fn(permission: string, pid: number, uid: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkPermission(java.lang.String, int, int)"
          },
          "getWallpaperDesiredMinimumHeight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumHeight()"
          },
          "startManagingCursor": {
            "!type": "fn(c: +android.database.Cursor) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startManagingCursor(android.database.Cursor)"
          },
          "onRequestPermissionsResult": {
            "!type": "fn(requestCode: number, permissions: +java.newArray, grantResults: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRequestPermissionsResult(int, java.lang.String[], int[])"
          },
          "revokeUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#revokeUriPermission(android.net.Uri, int)"
          },
          "startActivityIfNeeded": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityIfNeeded(android.content.Intent, int)"
          },
          "moveTaskToBack": {
            "!type": "fn(nonRoot: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#moveTaskToBack(boolean)"
          },
          "unregisterForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#unregisterForContextMenu(android.view.View)"
          },
          "setPersistent": {
            "!type": "fn(isPersistent: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setPersistent(boolean)"
          },
          "onUserInteraction": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onUserInteraction()"
          },
          "setFeatureDrawableUri": {
            "!type": "fn(featureId: number, uri: +android.net.Uri) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableUri(int, android.net.Uri)"
          },
          "onStateNotSaved": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onStateNotSaved()"
          },
          "sendStickyOrderedBroadcast": {
            "!type": "fn(intent: +android.content.Intent, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcast(android.content.Intent, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "sendStickyOrderedBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "setContentTransitionManager": {
            "!type": "fn(tm: +android.transition.TransitionManager) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setContentTransitionManager(android.transition.TransitionManager)"
          },
          "getLoaderManager": {
            "!type": "fn() -> +android.app.LoaderManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLoaderManager()"
          },
          "onRetainNonConfigurationInstance": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRetainNonConfigurationInstance()"
          },
          "getExternalFilesDir": {
            "!type": "fn(type: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDir(java.lang.String)"
          },
          "bindService": {
            "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindService(android.content.Intent, android.content.ServiceConnection, int)"
          },
          "startActivitiesAsUser": {
            "!type": "fn(intents: +java.newArray, options: +android.os.Bundle, userHandle: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivitiesAsUser(android.content.Intent[], android.os.Bundle, android.os.UserHandle)"
          },
          "onRestoreInstanceState": {
            "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRestoreInstanceState(android.os.Bundle, android.os.PersistableBundle)"
          },
          "recreate": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#recreate()"
          },
          "getDatabasePath": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDatabasePath(java.lang.String)"
          },
          "setEnterSharedElementCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setEnterSharedElementCallback(android.app.SharedElementCallback)"
          },
          "onCreateContextMenu": {
            "!type": "fn(menu: +android.view.ContextMenu, v: +android.view.View, menuInfo: +android.view.ContextMenu.ContextMenuInfo) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenu.ContextMenuInfo)"
          },
          "onProvideAssistData": {
            "!type": "fn(data: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideAssistData(android.os.Bundle)"
          },
          "checkSelfPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkSelfPermission(java.lang.String)"
          },
          "onPanelClosed": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPanelClosed(int, android.view.Menu)"
          },
          "onCreate": {
            "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreate(android.os.Bundle, android.os.PersistableBundle)"
          },
          "enforceCallingOrSelfPermission": {
            "!type": "fn(permission: string, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfPermission(java.lang.String, java.lang.String)"
          },
          "onTouchEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTouchEvent(android.view.MotionEvent)"
          },
          "getTheme": {
            "!type": "fn() -> +android.content.res.Resources.Theme",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getTheme()"
          },
          "onKeyLongPress": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyLongPress(int, android.view.KeyEvent)"
          },
          "setMediaController": {
            "!type": "fn(controller: +android.media.session.MediaController) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setMediaController(android.media.session.MediaController)"
          },
          "getChangingConfigurations": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getChangingConfigurations()"
          },
          "finishActivity": {
            "!type": "fn(requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishActivity(int)"
          },
          "onCreatePanelView": {
            "!type": "fn(featureId: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreatePanelView(int)"
          },
          "getSearchEvent": {
            "!type": "fn() -> +android.view.SearchEvent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getSearchEvent()"
          },
          "setVisible": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setVisible(boolean)"
          },
          "startIntentSender": {
            "!type": "fn(intent: +android.content.IntentSender, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSender(android.content.IntentSender, android.content.Intent, int, int, int)"
          },
          "getExternalFilesDirs": {
            "!type": "fn(type: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDirs(java.lang.String)"
          },
          "stopServiceAsUser": {
            "!type": "fn(name: +android.content.Intent, user: +android.os.UserHandle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopServiceAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "unbindService": {
            "!type": "fn(conn: +android.content.ServiceConnection) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unbindService(android.content.ServiceConnection)"
          },
          "startActivityAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "onKeyShortcut": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyShortcut(int, android.view.KeyEvent)"
          },
          "getSharedPrefsFile": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPrefsFile(java.lang.String)"
          },
          "getDir": {
            "!type": "fn(name: string, mode: number) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDir(java.lang.String, int)"
          },
          "releaseInstance": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#releaseInstance()"
          },
          "onKeyMultiple": {
            "!type": "fn(keyCode: number, repeatCount: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyMultiple(int, int, android.view.KeyEvent)"
          },
          "onPreparePanel": {
            "!type": "fn(featureId: number, view: +android.view.View, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPreparePanel(int, android.view.View, android.view.Menu)"
          },
          "bindServiceAsUser": {
            "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number, user: +android.os.UserHandle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindServiceAsUser(android.content.Intent, android.content.ServiceConnection, int, android.os.UserHandle)"
          },
          "closeContextMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#closeContextMenu()"
          },
          "startSearch": {
            "!type": "fn(initialQuery: string, selectInitialQuery: bool, appSearchData: +android.os.Bundle, globalSearch: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startSearch(java.lang.String, boolean, android.os.Bundle, boolean)"
          },
          "getComponentName": {
            "!type": "fn() -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getComponentName()"
          },
          "showLockTaskEscapeMessage": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showLockTaskEscapeMessage()"
          },
          "getContentTransitionManager": {
            "!type": "fn() -> +android.transition.TransitionManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getContentTransitionManager()"
          },
          "onBackPressed": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onBackPressed()"
          },
          "getExternalCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDir()"
          },
          "getDrawable": {
            "!type": "fn(id: number) -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getDrawable(int)"
          },
          "setImmersive": {
            "!type": "fn(i: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setImmersive(boolean)"
          },
          "openFileOutput": {
            "!type": "fn(name: string, mode: number) -> +java.io.FileOutputStream",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileOutput(java.lang.String, int)"
          },
          "getAssets": {
            "!type": "fn() -> +android.content.res.AssetManager",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getAssets()"
          },
          "onLowMemory": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onLowMemory()"
          },
          "getParentActivityIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getParentActivityIntent()"
          },
          "convertFromTranslucent": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#convertFromTranslucent()"
          },
          "dispatchTouchEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchTouchEvent(android.view.MotionEvent)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getContentScene": {
            "!type": "fn() -> +android.transition.Scene",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getContentScene()"
          },
          "getCallingPackage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCallingPackage()"
          },
          "deleteDatabase": {
            "!type": "fn(name: string) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteDatabase(java.lang.String)"
          },
          "checkCallingPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingPermission(java.lang.String)"
          },
          "dispatchGenericMotionEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchGenericMotionEvent(android.view.MotionEvent)"
          },
          "getExternalMediaDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalMediaDirs()"
          },
          "getCallingActivity": {
            "!type": "fn() -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCallingActivity()"
          },
          "onAttachedToWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onAttachedToWindow()"
          },
          "clearWallpaper": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#clearWallpaper()"
          },
          "setTitle": {
            "!type": "fn(title: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setTitle(java.lang.CharSequence)"
          },
          "enforceCallingUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingUriPermission(android.net.Uri, int, java.lang.String)"
          },
          "getThemeResId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getThemeResId()"
          },
          "onWindowFocusChanged": {
            "!type": "fn(hasFocus: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowFocusChanged(boolean)"
          },
          "registerComponentCallbacks": {
            "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
            "!url": "http://developer.android.com/reference/android/content/Context.html#registerComponentCallbacks(android.content.ComponentCallbacks)"
          },
          "getText": {
            "!type": "fn(resId: number) -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getText(int)"
          },
          "enforceUriPermission": {
            "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceUriPermission(android.net.Uri, int, int, int, java.lang.String)"
          },
          "onProvideReferrer": {
            "!type": "fn() -> +android.net.Uri",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideReferrer()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "unregisterComponentCallbacks": {
            "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
            "!url": "http://developer.android.com/reference/android/content/Context.html#unregisterComponentCallbacks(android.content.ComponentCallbacks)"
          },
          "finish": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finish()"
          },
          "getWallpaperDesiredMinimumWidth": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumWidth()"
          },
          "onMenuItemSelected": {
            "!type": "fn(featureId: number, item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onMenuItemSelected(int, android.view.MenuItem)"
          },
          "getWallpaper": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaper()"
          },
          "isVoiceInteraction": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isVoiceInteraction()"
          },
          "navigateUpTo": {
            "!type": "fn(upIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#navigateUpTo(android.content.Intent)"
          },
          "onCreatePanelMenu": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreatePanelMenu(int, android.view.Menu)"
          },
          "openOrCreateDatabase": {
            "!type": "fn(name: string, mode: number, factory: +android.database.sqlite.SQLiteDatabase.CursorFactory) -> +android.database.sqlite.SQLiteDatabase",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openOrCreateDatabase(java.lang.String, int, android.database.sqlite.SQLiteDatabase.CursorFactory)"
          },
          "openFileInput": {
            "!type": "fn(name: string) -> +java.io.FileInputStream",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileInput(java.lang.String)"
          },
          "dump": {
            "!type": "fn(prefix: string, fd: +java.io.FileDescriptor, writer: +java.io.PrintWriter, args: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])"
          },
          "onCreateDescription": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateDescription()"
          },
          "invalidateOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#invalidateOptionsMenu()"
          },
          "sendOrderedBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, receiverPermission: string, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, java.lang.String, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "canStartActivityForResult": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#canStartActivityForResult()"
          },
          "setProgress": {
            "!type": "fn(progress: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgress(int)"
          },
          "navigateUpToFromChild": {
            "!type": "fn(child: +android.app.Activity, upIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#navigateUpToFromChild(android.app.Activity, android.content.Intent)"
          },
          "getContentResolver": {
            "!type": "fn() -> +android.content.ContentResolver",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getContentResolver()"
          },
          "isFinishing": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isFinishing()"
          },
          "getFragmentManager": {
            "!type": "fn() -> +android.app.FragmentManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getFragmentManager()"
          },
          "getParent": {
            "!type": "fn() -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getParent()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "checkCallingUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingUriPermission(android.net.Uri, int)"
          },
          "setExitSharedElementCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setExitSharedElementCallback(android.app.SharedElementCallback)"
          },
          "checkUriPermission": {
            "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkUriPermission(android.net.Uri, int, int, int)"
          },
          "setFeatureDrawableAlpha": {
            "!type": "fn(featureId: number, alpha: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableAlpha(int, int)"
          },
          "registerReceiverAsUser": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver, user: +android.os.UserHandle, filter: +android.content.IntentFilter, broadcastPermission: string, scheduler: +android.os.Handler) -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiverAsUser(android.content.BroadcastReceiver, android.os.UserHandle, android.content.IntentFilter, java.lang.String, android.os.Handler)"
          },
          "getPackageCodePath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageCodePath()"
          },
          "getWindow": {
            "!type": "fn() -> +android.view.Window",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getWindow()"
          },
          "startIntentSenderFromChild": {
            "!type": "fn(child: +android.app.Activity, intent: +android.content.IntentSender, requestCode: number, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSenderFromChild(android.app.Activity, android.content.IntentSender, int, android.content.Intent, int, int, int)"
          },
          "postponeEnterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#postponeEnterTransition()"
          },
          "shouldUpRecreateTask": {
            "!type": "fn(targetIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#shouldUpRecreateTask(android.content.Intent)"
          },
          "removeStickyBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "deleteFile": {
            "!type": "fn(name: string) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteFile(java.lang.String)"
          },
          "onContextMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onContextMenuClosed(android.view.Menu)"
          },
          "onCreateOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateOptionsMenu(android.view.Menu)"
          },
          "getClassLoader": {
            "!type": "fn() -> +java.lang.ClassLoader",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getClassLoader()"
          },
          "dispatchPopulateAccessibilityEvent": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
          },
          "setIntent": {
            "!type": "fn(newIntent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setIntent(android.content.Intent)"
          },
          "setVolumeControlStream": {
            "!type": "fn(streamType: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setVolumeControlStream(int)"
          },
          "getObbDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDir()"
          },
          "startInstrumentation": {
            "!type": "fn(className: +android.content.ComponentName, profileFile: string, arguments: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startInstrumentation(android.content.ComponentName, java.lang.String, android.os.Bundle)"
          },
          "reportFullyDrawn": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#reportFullyDrawn()"
          },
          "setProgressBarIndeterminateVisibility": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarIndeterminateVisibility(boolean)"
          },
          "finishFromChild": {
            "!type": "fn(child: +android.app.Activity) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishFromChild(android.app.Activity)"
          },
          "getColorStateList": {
            "!type": "fn(id: number) -> +android.content.res.ColorStateList",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getColorStateList(int)"
          },
          "getTitleColor": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTitleColor()"
          },
          "getMediaController": {
            "!type": "fn() -> +android.media.session.MediaController",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getMediaController()"
          },
          "sendBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcast(android.content.Intent)"
          },
          "overridePendingTransition": {
            "!type": "fn(enterAnim: number, exitAnim: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#overridePendingTransition(int, int)"
          },
          "dispatchTrackballEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchTrackballEvent(android.view.MotionEvent)"
          },
          "getNoBackupFilesDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getNoBackupFilesDir()"
          },
          "startActionMode": {
            "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActionMode(android.view.ActionMode.Callback)"
          },
          "getApplicationContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationContext()"
          },
          "onCreateNavigateUpTaskStack": {
            "!type": "fn(builder: +android.app.TaskStackBuilder) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateNavigateUpTaskStack(android.app.TaskStackBuilder)"
          },
          "createDisplayContext": {
            "!type": "fn(display: +android.view.Display) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createDisplayContext(android.view.Display)"
          },
          "onActionModeStarted": {
            "!type": "fn(mode: +android.view.ActionMode) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActionModeStarted(android.view.ActionMode)"
          },
          "dispatchKeyEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchKeyEvent(android.view.KeyEvent)"
          },
          "enforceCallingPermission": {
            "!type": "fn(permission: string, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingPermission(java.lang.String, java.lang.String)"
          },
          "setFeatureDrawable": {
            "!type": "fn(featureId: number, drawable: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawable(int, android.graphics.drawable.Drawable)"
          },
          "dismissDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dismissDialog(int)"
          },
          "createPackageContextAsUser": {
            "!type": "fn(packageName: string, flags: number, user: +android.os.UserHandle) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContextAsUser(java.lang.String, int, android.os.UserHandle)"
          },
          "onMenuOpened": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onMenuOpened(int, android.view.Menu)"
          },
          "getSystemService": {
            "!type": "fn(name: string) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getSystemService(java.lang.String)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "startActivities": {
            "!type": "fn(intents: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivities(android.content.Intent[])"
          },
          "startService": {
            "!type": "fn(service: +android.content.Intent) -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startService(android.content.Intent)"
          },
          "getFileStreamPath": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFileStreamPath(java.lang.String)"
          },
          "addContentView": {
            "!type": "fn(view: +android.view.View, params: +android.view.ViewGroup.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#addContentView(android.view.View, android.view.ViewGroup.LayoutParams)"
          },
          "closeOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#closeOptionsMenu()"
          },
          "sendStickyBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "takeKeyEvents": {
            "!type": "fn(get: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#takeKeyEvents(boolean)"
          },
          "getTitle": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTitle()"
          },
          "getWindowManager": {
            "!type": "fn() -> +android.view.WindowManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getWindowManager()"
          },
          "getBasePackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBasePackageName()"
          },
          "stopManagingCursor": {
            "!type": "fn(c: +android.database.Cursor) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#stopManagingCursor(android.database.Cursor)"
          },
          "checkCallingOrSelfUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfUriPermission(android.net.Uri, int)"
          },
          "setWallpaper": {
            "!type": "fn(bitmap: +android.graphics.Bitmap) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#setWallpaper(android.graphics.Bitmap)"
          },
          "sendOrderedBroadcast": {
            "!type": "fn(intent: +android.content.Intent, receiverPermission: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcast(android.content.Intent, java.lang.String)"
          },
          "unregisterReceiver": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unregisterReceiver(android.content.BroadcastReceiver)"
          },
          "getColor": {
            "!type": "fn(id: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getColor(int)"
          },
          "getMenuInflater": {
            "!type": "fn() -> +android.view.MenuInflater",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getMenuInflater()"
          },
          "stopService": {
            "!type": "fn(name: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopService(android.content.Intent)"
          },
          "getMainLooper": {
            "!type": "fn() -> +android.os.Looper",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getMainLooper()"
          },
          "startActivityFromChild": {
            "!type": "fn(child: +android.app.Activity, intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityFromChild(android.app.Activity, android.content.Intent, int)"
          },
          "startLockTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startLockTask()"
          },
          "removeStickyBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcast(android.content.Intent)"
          },
          "getExternalCacheDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDirs()"
          },
          "getReferrer": {
            "!type": "fn() -> +android.net.Uri",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getReferrer()"
          },
          "isImmersive": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isImmersive()"
          },
          "shouldShowRequestPermissionRationale": {
            "!type": "fn(permission: string) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#shouldShowRequestPermissionRationale(java.lang.String)"
          },
          "getPreferences": {
            "!type": "fn(mode: number) -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getPreferences(int)"
          },
          "getFilesDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFilesDir()"
          },
          "findViewById": {
            "!type": "fn(id: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#findViewById(int)"
          },
          "getSharedPreferences": {
            "!type": "fn(name: string, mode: number) -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPreferences(java.lang.String, int)"
          },
          "isTaskRoot": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isTaskRoot()"
          },
          "getLastNonConfigurationInstance": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLastNonConfigurationInstance()"
          },
          "getDisplayAdjustments": {
            "!type": "fn(displayId: number) -> +android.view.DisplayAdjustments",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDisplayAdjustments(int)"
          },
          "getRequestedOrientation": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getRequestedOrientation()"
          },
          "onTrimMemory": {
            "!type": "fn(level: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTrimMemory(int)"
          },
          "removeDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#removeDialog(int)"
          },
          "getUserId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getUserId()"
          },
          "requestVisibleBehind": {
            "!type": "fn(visible: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestVisibleBehind(boolean)"
          },
          "onOptionsMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onOptionsMenuClosed(android.view.Menu)"
          },
          "onCreateView": {
            "!type": "fn(name: string, context: +android.content.Context, attrs: +android.util.AttributeSet) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateView(java.lang.String, android.content.Context, android.util.AttributeSet)"
          },
          "startActivityForResultAsUser": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityForResultAsUser(android.content.Intent, int, android.os.UserHandle)"
          },
          "startIntentSenderForResult": {
            "!type": "fn(intent: +android.content.IntentSender, requestCode: number, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSenderForResult(android.content.IntentSender, int, android.content.Intent, int, int, int)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          }
        }
      },
      "ListFragment": {
        "!url": "http://developer.android.com/reference/android/app/ListFragment.html",
        "!type": "fn()",
        "instantiate": {
          "!type": "fn(context: +android.content.Context, fname: string) -> +android.app.Fragment",
          "!url": "http://developer.android.com/reference/android/app/Fragment.html#instantiate(android.content.Context, java.lang.String)"
        },
        "prototype": {
          "getReturnTransition": {
            "!type": "fn() -> +android.transition.Transition",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getReturnTransition()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#hashCode()"
          },
          "isResumed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#isResumed()"
          },
          "setSharedElementReturnTransition": {
            "!type": "fn(transition: +android.transition.Transition) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setSharedElementReturnTransition(android.transition.Transition)"
          },
          "getSelectedItemPosition": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/ListFragment.html#getSelectedItemPosition()"
          },
          "onListItemClick": {
            "!type": "fn(l: +android.widget.ListView, v: +android.view.View, position: number, id: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/android/app/ListFragment.html#onListItemClick(android.widget.ListView, android.view.View, int, long)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "onCreateOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu, inflater: +android.view.MenuInflater) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onCreateOptionsMenu(android.view.Menu, android.view.MenuInflater)"
          },
          "onResume": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onResume()"
          },
          "getReenterTransition": {
            "!type": "fn() -> +android.transition.Transition",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getReenterTransition()"
          },
          "getString": {
            "!type": "fn(resId: number) -> string",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getString(int)"
          },
          "onDestroy": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onDestroy()"
          },
          "setEnterSharedElementCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setEnterSharedElementCallback(android.app.SharedElementCallback)"
          },
          "setEmptyText": {
            "!type": "fn(text: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/app/ListFragment.html#setEmptyText(java.lang.CharSequence)"
          },
          "onContextItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onContextItemSelected(android.view.MenuItem)"
          },
          "onDetach": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onDetach()"
          },
          "getTag": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getTag()"
          },
          "isRemoving": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#isRemoving()"
          },
          "getFragmentManager": {
            "!type": "fn() -> +android.app.FragmentManager",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getFragmentManager()"
          },
          "setHasOptionsMenu": {
            "!type": "fn(hasMenu: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setHasOptionsMenu(boolean)"
          },
          "setEnterTransition": {
            "!type": "fn(transition: +android.transition.Transition) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setEnterTransition(android.transition.Transition)"
          },
          "getListView": {
            "!type": "fn() -> +android.widget.ListView",
            "!url": "http://developer.android.com/reference/android/app/ListFragment.html#getListView()"
          },
          "getParentFragment": {
            "!type": "fn() -> +android.app.Fragment",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getParentFragment()"
          },
          "setInitialSavedState": {
            "!type": "fn(state: +android.app.Fragment.SavedState) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setInitialSavedState(android.app.Fragment.SavedState)"
          },
          "getId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getId()"
          },
          "getSharedElementReturnTransition": {
            "!type": "fn() -> +android.transition.Transition",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getSharedElementReturnTransition()"
          },
          "getAllowEnterTransitionOverlap": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getAllowEnterTransitionOverlap()"
          },
          "onPrepareOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onPrepareOptionsMenu(android.view.Menu)"
          },
          "onCreateContextMenu": {
            "!type": "fn(menu: +android.view.ContextMenu, v: +android.view.View, menuInfo: +android.view.ContextMenu.ContextMenuInfo) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenu.ContextMenuInfo)"
          },
          "setMenuVisibility": {
            "!type": "fn(menuVisible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setMenuVisibility(boolean)"
          },
          "isDetached": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#isDetached()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#equals(java.lang.Object)"
          },
          "onViewCreated": {
            "!type": "fn(view: +android.view.View, savedInstanceState: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/ListFragment.html#onViewCreated(android.view.View, android.os.Bundle)"
          },
          "getSharedElementEnterTransition": {
            "!type": "fn() -> +android.transition.Transition",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getSharedElementEnterTransition()"
          },
          "getEnterTransition": {
            "!type": "fn() -> +android.transition.Transition",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getEnterTransition()"
          },
          "setUserVisibleHint": {
            "!type": "fn(isVisibleToUser: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setUserVisibleHint(boolean)"
          },
          "onCreate": {
            "!type": "fn(savedInstanceState: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onCreate(android.os.Bundle)"
          },
          "onLowMemory": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onLowMemory()"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getContext()"
          },
          "getExitTransition": {
            "!type": "fn() -> +android.transition.Transition",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getExitTransition()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "setAllowEnterTransitionOverlap": {
            "!type": "fn(allow: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setAllowEnterTransitionOverlap(boolean)"
          },
          "onActivityResult": {
            "!type": "fn(requestCode: number, resultCode: number, data: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onActivityResult(int, int, android.content.Intent)"
          },
          "setExitSharedElementTransitionCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setExitSharedElementTransitionCallback(android.app.SharedElementCallback)"
          },
          "isHidden": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#isHidden()"
          },
          "onViewStateRestored": {
            "!type": "fn(savedInstanceState: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onViewStateRestored(android.os.Bundle)"
          },
          "onOptionsMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onOptionsMenuClosed(android.view.Menu)"
          },
          "onRequestPermissionsResult": {
            "!type": "fn(requestCode: number, permissions: +java.newArray, grantResults: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onRequestPermissionsResult(int, java.lang.String[], int[])"
          },
          "getView": {
            "!type": "fn() -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getView()"
          },
          "onOptionsItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onOptionsItemSelected(android.view.MenuItem)"
          },
          "setArguments": {
            "!type": "fn(args: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setArguments(android.os.Bundle)"
          },
          "getText": {
            "!type": "fn(resId: number) -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getText(int)"
          },
          "onStop": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onStop()"
          },
          "isInLayout": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#isInLayout()"
          },
          "setSharedElementEnterTransition": {
            "!type": "fn(transition: +android.transition.Transition) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setSharedElementEnterTransition(android.transition.Transition)"
          },
          "onSaveInstanceState": {
            "!type": "fn(outState: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onSaveInstanceState(android.os.Bundle)"
          },
          "startActivity": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#startActivity(android.content.Intent)"
          },
          "getSelectedItemId": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/app/ListFragment.html#getSelectedItemId()"
          },
          "setListShownNoAnimation": {
            "!type": "fn(shown: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/ListFragment.html#setListShownNoAnimation(boolean)"
          },
          "getTargetFragment": {
            "!type": "fn() -> +android.app.Fragment",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getTargetFragment()"
          },
          "getArguments": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getArguments()"
          },
          "isAdded": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#isAdded()"
          },
          "onConfigurationChanged": {
            "!type": "fn(newConfig: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onConfigurationChanged(android.content.res.Configuration)"
          },
          "onStart": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onStart()"
          },
          "onTrimMemory": {
            "!type": "fn(level: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onTrimMemory(int)"
          },
          "setListShown": {
            "!type": "fn(shown: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/ListFragment.html#setListShown(boolean)"
          },
          "setExitTransition": {
            "!type": "fn(transition: +android.transition.Transition) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setExitTransition(android.transition.Transition)"
          },
          "onDestroyView": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/ListFragment.html#onDestroyView()"
          },
          "onCreateView": {
            "!type": "fn(inflater: +android.view.LayoutInflater, container: +android.view.ViewGroup, savedInstanceState: +android.os.Bundle) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/ListFragment.html#onCreateView(android.view.LayoutInflater, android.view.ViewGroup, android.os.Bundle)"
          },
          "getUserVisibleHint": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getUserVisibleHint()"
          },
          "getLoaderManager": {
            "!type": "fn() -> +android.app.LoaderManager",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getLoaderManager()"
          },
          "dump": {
            "!type": "fn(prefix: string, fd: +java.io.FileDescriptor, writer: +java.io.PrintWriter, args: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])"
          },
          "unregisterForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#unregisterForContextMenu(android.view.View)"
          },
          "getRetainInstance": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getRetainInstance()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#toString()"
          },
          "getHost": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getHost()"
          },
          "requestPermissions": {
            "!type": "fn(permissions: +java.newArray, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#requestPermissions(java.lang.String[], int)"
          },
          "onInflate": {
            "!type": "fn(attrs: +android.util.AttributeSet, savedInstanceState: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onInflate(android.util.AttributeSet, android.os.Bundle)"
          },
          "registerForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#registerForContextMenu(android.view.View)"
          },
          "getActivity": {
            "!type": "fn() -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getActivity()"
          },
          "getAllowReturnTransitionOverlap": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getAllowReturnTransitionOverlap()"
          },
          "setTargetFragment": {
            "!type": "fn(fragment: +android.app.Fragment, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setTargetFragment(android.app.Fragment, int)"
          },
          "setListAdapter": {
            "!type": "fn(adapter: +android.widget.ListAdapter) -> void",
            "!url": "http://developer.android.com/reference/android/app/ListFragment.html#setListAdapter(android.widget.ListAdapter)"
          },
          "onDestroyOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onDestroyOptionsMenu()"
          },
          "setSelection": {
            "!type": "fn(position: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/ListFragment.html#setSelection(int)"
          },
          "onActivityCreated": {
            "!type": "fn(savedInstanceState: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onActivityCreated(android.os.Bundle)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "setExitSharedElementCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setExitSharedElementCallback(android.app.SharedElementCallback)"
          },
          "onHiddenChanged": {
            "!type": "fn(hidden: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onHiddenChanged(boolean)"
          },
          "setReturnTransition": {
            "!type": "fn(transition: +android.transition.Transition) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setReturnTransition(android.transition.Transition)"
          },
          "onAttach": {
            "!type": "fn(context: +android.content.Context) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onAttach(android.content.Context)"
          },
          "getListAdapter": {
            "!type": "fn() -> +android.widget.ListAdapter",
            "!url": "http://developer.android.com/reference/android/app/ListFragment.html#getListAdapter()"
          },
          "setRetainInstance": {
            "!type": "fn(retain: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setRetainInstance(boolean)"
          },
          "setAllowReturnTransitionOverlap": {
            "!type": "fn(allow: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setAllowReturnTransitionOverlap(boolean)"
          },
          "getTargetRequestCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getTargetRequestCode()"
          },
          "getChildFragmentManager": {
            "!type": "fn() -> +android.app.FragmentManager",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getChildFragmentManager()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getLayoutInflater": {
            "!type": "fn(savedInstanceState: +android.os.Bundle) -> +android.view.LayoutInflater",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getLayoutInflater(android.os.Bundle)"
          },
          "isVisible": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#isVisible()"
          },
          "setEnterSharedElementTransitionCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setEnterSharedElementTransitionCallback(android.app.SharedElementCallback)"
          },
          "onPause": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onPause()"
          },
          "setReenterTransition": {
            "!type": "fn(transition: +android.transition.Transition) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setReenterTransition(android.transition.Transition)"
          },
          "startActivityForResult": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#startActivityForResult(android.content.Intent, int)"
          },
          "onCreateAnimator": {
            "!type": "fn(transit: number, enter: bool, nextAnim: number) -> +android.animation.Animator",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onCreateAnimator(int, boolean, int)"
          },
          "shouldShowRequestPermissionRationale": {
            "!type": "fn(permission: string) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#shouldShowRequestPermissionRationale(java.lang.String)"
          },
          "getResources": {
            "!type": "fn() -> +android.content.res.Resources",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getResources()"
          }
        }
      },
      "NotificationTests": {
        "!url": "http://developer.android.com/reference/android/app/NotificationTests.html",
        "!type": "fn()",
        "ToastService": {
          "!url": "http://developer.android.com/reference/android/app/NotificationTests.ToastService.html",
          "!type": "fn()",
          "BIND_WAIVE_PRIORITY": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_WAIVE_PRIORITY"
          },
          "MEDIA_PROJECTION_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_PROJECTION_SERVICE"
          },
          "ETHERNET_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#ETHERNET_SERVICE"
          },
          "WIFI_RTT_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_RTT_SERVICE"
          },
          "SENSOR_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#SENSOR_SERVICE"
          },
          "TELEPHONY_SUBSCRIPTION_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SUBSCRIPTION_SERVICE"
          },
          "CAPTIONING_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#CAPTIONING_SERVICE"
          },
          "START_CONTINUATION_MASK": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/Service.html#START_CONTINUATION_MASK"
          },
          "CAMERA_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#CAMERA_SERVICE"
          },
          "BIND_DEBUG_UNBIND": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_DEBUG_UNBIND"
          },
          "STATUS_BAR_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#STATUS_BAR_SERVICE"
          },
          "DEVICE_POLICY_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_POLICY_SERVICE"
          },
          "BIND_IMPORTANT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_IMPORTANT"
          },
          "NSD_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#NSD_SERVICE"
          },
          "DOWNLOAD_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#DOWNLOAD_SERVICE"
          },
          "BIND_NOT_VISIBLE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_VISIBLE"
          },
          "CONTEXT_IGNORE_SECURITY": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_IGNORE_SECURITY"
          },
          "USAGE_STATS_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#USAGE_STATS_SERVICE"
          },
          "START_FLAG_RETRY": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/Service.html#START_FLAG_RETRY"
          },
          "MODE_WORLD_READABLE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_READABLE"
          },
          "KEYGUARD_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#KEYGUARD_SERVICE"
          },
          "BIND_ADJUST_WITH_ACTIVITY": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ADJUST_WITH_ACTIVITY"
          },
          "UI_MODE_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#UI_MODE_SERVICE"
          },
          "MODE_PRIVATE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_PRIVATE"
          },
          "CONTEXT_INCLUDE_CODE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_INCLUDE_CODE"
          },
          "ACCESSIBILITY_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#ACCESSIBILITY_SERVICE"
          },
          "HDMI_CONTROL_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#HDMI_CONTROL_SERVICE"
          },
          "BIND_SHOWING_UI": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_SHOWING_UI"
          },
          "MODE_APPEND": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_APPEND"
          },
          "AUDIO_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#AUDIO_SERVICE"
          },
          "NETWORK_SCORE_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_SCORE_SERVICE"
          },
          "UPDATE_LOCK_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#UPDATE_LOCK_SERVICE"
          },
          "MEDIA_ROUTER_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_ROUTER_SERVICE"
          },
          "JOB_SCHEDULER_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#JOB_SCHEDULER_SERVICE"
          },
          "DEVICE_IDLE_CONTROLLER": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_IDLE_CONTROLLER"
          },
          "INPUT_METHOD_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_METHOD_SERVICE"
          },
          "BIND_ABOVE_CLIENT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ABOVE_CLIENT"
          },
          "START_STICKY": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/Service.html#START_STICKY"
          },
          "INPUT_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_SERVICE"
          },
          "MODE_WORLD_WRITEABLE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_WRITEABLE"
          },
          "NETWORKMANAGEMENT_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORKMANAGEMENT_SERVICE"
          },
          "WINDOW_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#WINDOW_SERVICE"
          },
          "MEDIA_SESSION_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_SESSION_SERVICE"
          },
          "WIFI_P2P_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_P2P_SERVICE"
          },
          "MODE_ENABLE_WRITE_AHEAD_LOGGING": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_ENABLE_WRITE_AHEAD_LOGGING"
          },
          "WIFI_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SERVICE"
          },
          "PERSISTENT_DATA_BLOCK_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#PERSISTENT_DATA_BLOCK_SERVICE"
          },
          "TV_INPUT_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#TV_INPUT_SERVICE"
          },
          "SIP_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#SIP_SERVICE"
          },
          "FINGERPRINT_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#FINGERPRINT_SERVICE"
          },
          "LOCATION_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#LOCATION_SERVICE"
          },
          "LAUNCHER_APPS_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#LAUNCHER_APPS_SERVICE"
          },
          "NETWORK_STATS_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_STATS_SERVICE"
          },
          "VOICE_INTERACTION_MANAGER_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#VOICE_INTERACTION_MANAGER_SERVICE"
          },
          "TELECOM_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#TELECOM_SERVICE"
          },
          "SEARCH_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#SEARCH_SERVICE"
          },
          "RADIO_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#RADIO_SERVICE"
          },
          "BIND_VISIBLE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_VISIBLE"
          },
          "BIND_NOT_FOREGROUND": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_FOREGROUND"
          },
          "CONTEXT_RESTRICTED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_RESTRICTED"
          },
          "USER_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#USER_SERVICE"
          },
          "DROPBOX_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#DROPBOX_SERVICE"
          },
          "BIND_TREAT_LIKE_ACTIVITY": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_TREAT_LIKE_ACTIVITY"
          },
          "BIND_FOREGROUND_SERVICE_WHILE_AWAKE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE_WHILE_AWAKE"
          },
          "CLIPBOARD_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#CLIPBOARD_SERVICE"
          },
          "START_TASK_REMOVED_COMPLETE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/Service.html#START_TASK_REMOVED_COMPLETE"
          },
          "LAYOUT_INFLATER_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#LAYOUT_INFLATER_SERVICE"
          },
          "WIFI_SCANNING_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SCANNING_SERVICE"
          },
          "PRINT_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#PRINT_SERVICE"
          },
          "WALLPAPER_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#WALLPAPER_SERVICE"
          },
          "ALARM_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#ALARM_SERVICE"
          },
          "ACCOUNT_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#ACCOUNT_SERVICE"
          },
          "TRUST_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#TRUST_SERVICE"
          },
          "VIBRATOR_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#VIBRATOR_SERVICE"
          },
          "START_REDELIVER_INTENT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/Service.html#START_REDELIVER_INTENT"
          },
          "NFC_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#NFC_SERVICE"
          },
          "NOTIFICATION_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#NOTIFICATION_SERVICE"
          },
          "BLUETOOTH_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#BLUETOOTH_SERVICE"
          },
          "POWER_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#POWER_SERVICE"
          },
          "BIND_ALLOW_OOM_MANAGEMENT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ALLOW_OOM_MANAGEMENT"
          },
          "START_FLAG_REDELIVERY": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/Service.html#START_FLAG_REDELIVERY"
          },
          "BACKUP_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#BACKUP_SERVICE"
          },
          "COUNTRY_DETECTOR": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#COUNTRY_DETECTOR"
          },
          "SERIAL_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#SERIAL_SERVICE"
          },
          "WIFI_PASSPOINT_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_PASSPOINT_SERVICE"
          },
          "CONSUMER_IR_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#CONSUMER_IR_SERVICE"
          },
          "APP_OPS_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#APP_OPS_SERVICE"
          },
          "ACTIVITY_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#ACTIVITY_SERVICE"
          },
          "STORAGE_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#STORAGE_SERVICE"
          },
          "BIND_FOREGROUND_SERVICE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE"
          },
          "RESTRICTIONS_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#RESTRICTIONS_SERVICE"
          },
          "CONNECTIVITY_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#CONNECTIVITY_SERVICE"
          },
          "START_NOT_STICKY": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/Service.html#START_NOT_STICKY"
          },
          "TEXT_SERVICES_MANAGER_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#TEXT_SERVICES_MANAGER_SERVICE"
          },
          "USB_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#USB_SERVICE"
          },
          "START_STICKY_COMPATIBILITY": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/Service.html#START_STICKY_COMPATIBILITY"
          },
          "APPWIDGET_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#APPWIDGET_SERVICE"
          },
          "CONTEXT_REGISTER_PACKAGE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_REGISTER_PACKAGE"
          },
          "CARRIER_CONFIG_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#CARRIER_CONFIG_SERVICE"
          },
          "NETWORK_POLICY_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_POLICY_SERVICE"
          },
          "MIDI_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#MIDI_SERVICE"
          },
          "BATTERY_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#BATTERY_SERVICE"
          },
          "MODE_MULTI_PROCESS": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_MULTI_PROCESS"
          },
          "BIND_AUTO_CREATE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_AUTO_CREATE"
          },
          "DISPLAY_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#DISPLAY_SERVICE"
          },
          "TELEPHONY_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SERVICE"
          },
          "getPendingIntent": {
            "!type": "fn(context: +android.content.Context, text: string) -> +android.app.PendingIntent",
            "!url": "http://developer.android.com/reference/android/app/NotificationTests.ToastService.html#getPendingIntent(android.content.Context, java.lang.String)"
          },
          "prototype": {
            "getExternalCacheDir": {
              "!type": "fn() -> +java.io.File",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDir()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "openFileInput": {
              "!type": "fn(name: string) -> +java.io.FileInputStream",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileInput(java.lang.String)"
            },
            "getBaseContext": {
              "!type": "fn() -> +android.content.Context",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBaseContext()"
            },
            "checkPermission": {
              "!type": "fn(permission: string, pid: number, uid: number) -> number",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkPermission(java.lang.String, int, int)"
            },
            "openFileOutput": {
              "!type": "fn(name: string, mode: number) -> +java.io.FileOutputStream",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileOutput(java.lang.String, int)"
            },
            "deleteDatabase": {
              "!type": "fn(name: string) -> bool",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteDatabase(java.lang.String)"
            },
            "startActivityAsUser": {
              "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivityAsUser(android.content.Intent, android.os.UserHandle)"
            },
            "getOpPackageName": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getOpPackageName()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "getObbDirs": {
              "!type": "fn() -> +java.newArray",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDirs()"
            },
            "startForeground": {
              "!type": "fn(id: number, notification: +android.app.Notification) -> void",
              "!url": "http://developer.android.com/reference/android/app/Service.html#startForeground(int, android.app.Notification)"
            },
            "getString": {
              "!type": "fn(resId: number) -> string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#getString(int)"
            },
            "getDatabasePath": {
              "!type": "fn(name: string) -> +java.io.File",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDatabasePath(java.lang.String)"
            },
            "sendOrderedBroadcast": {
              "!type": "fn(intent: +android.content.Intent, receiverPermission: string) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcast(android.content.Intent, java.lang.String)"
            },
            "stopForeground": {
              "!type": "fn(removeNotification: bool) -> void",
              "!url": "http://developer.android.com/reference/android/app/Service.html#stopForeground(boolean)"
            },
            "onDestroy": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/IntentService.html#onDestroy()"
            },
            "bindServiceAsUser": {
              "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number, user: +android.os.UserHandle) -> bool",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindServiceAsUser(android.content.Intent, android.content.ServiceConnection, int, android.os.UserHandle)"
            },
            "getNoBackupFilesDir": {
              "!type": "fn() -> +java.io.File",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getNoBackupFilesDir()"
            },
            "fileList": {
              "!type": "fn() -> +java.newArray",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#fileList()"
            },
            "bindService": {
              "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number) -> bool",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindService(android.content.Intent, android.content.ServiceConnection, int)"
            },
            "checkSelfPermission": {
              "!type": "fn(permission: string) -> number",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkSelfPermission(java.lang.String)"
            },
            "removeStickyBroadcast": {
              "!type": "fn(intent: +android.content.Intent) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcast(android.content.Intent)"
            },
            "setIntentRedelivery": {
              "!type": "fn(enabled: bool) -> void",
              "!url": "http://developer.android.com/reference/android/app/IntentService.html#setIntentRedelivery(boolean)"
            },
            "sendStickyBroadcastAsUser": {
              "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
            },
            "setForeground": {
              "!type": "fn(isForeground: bool) -> void",
              "!url": "http://developer.android.com/reference/android/app/Service.html#setForeground(boolean)"
            },
            "stopSelf": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/Service.html#stopSelf()"
            },
            "enforceCallingPermission": {
              "!type": "fn(permission: string, message: string) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingPermission(java.lang.String, java.lang.String)"
            },
            "getCacheDir": {
              "!type": "fn() -> +java.io.File",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCacheDir()"
            },
            "getSharedPrefsFile": {
              "!type": "fn(name: string) -> +java.io.File",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPrefsFile(java.lang.String)"
            },
            "deleteFile": {
              "!type": "fn(name: string) -> bool",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteFile(java.lang.String)"
            },
            "createApplicationContext": {
              "!type": "fn(application: +android.content.pm.ApplicationInfo, flags: number) -> +android.content.Context",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createApplicationContext(android.content.pm.ApplicationInfo, int)"
            },
            "getExternalFilesDirs": {
              "!type": "fn(type: string) -> +java.newArray",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDirs(java.lang.String)"
            },
            "isRestricted": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#isRestricted()"
            },
            "startInstrumentation": {
              "!type": "fn(className: +android.content.ComponentName, profileFile: string, arguments: +android.os.Bundle) -> bool",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startInstrumentation(android.content.ComponentName, java.lang.String, android.os.Bundle)"
            },
            "createPackageContext": {
              "!type": "fn(packageName: string, flags: number) -> +android.content.Context",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContext(java.lang.String, int)"
            },
            "obtainStyledAttributes": {
              "!type": "fn(attrs: +java.newArray) -> +android.content.res.TypedArray",
              "!url": "http://developer.android.com/reference/android/content/Context.html#obtainStyledAttributes(int[])"
            },
            "setWallpaper": {
              "!type": "fn(bitmap: +android.graphics.Bitmap) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#setWallpaper(android.graphics.Bitmap)"
            },
            "setTheme": {
              "!type": "fn(resid: number) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#setTheme(int)"
            },
            "sendStickyOrderedBroadcast": {
              "!type": "fn(intent: +android.content.Intent, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcast(android.content.Intent, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
            },
            "enforcePermission": {
              "!type": "fn(permission: string, pid: number, uid: number, message: string) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforcePermission(java.lang.String, int, int, java.lang.String)"
            },
            "getDir": {
              "!type": "fn(name: string, mode: number) -> +java.io.File",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDir(java.lang.String, int)"
            },
            "checkCallingOrSelfUriPermission": {
              "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfUriPermission(android.net.Uri, int)"
            },
            "sendBroadcastMultiplePermissions": {
              "!type": "fn(intent: +android.content.Intent, receiverPermissions: +java.newArray) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastMultiplePermissions(android.content.Intent, java.lang.String[])"
            },
            "getExternalFilesDir": {
              "!type": "fn(type: string) -> +java.io.File",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDir(java.lang.String)"
            },
            "openOrCreateDatabase": {
              "!type": "fn(name: string, mode: number, factory: +android.database.sqlite.SQLiteDatabase.CursorFactory) -> +android.database.sqlite.SQLiteDatabase",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openOrCreateDatabase(java.lang.String, int, android.database.sqlite.SQLiteDatabase.CursorFactory)"
            },
            "getContentResolver": {
              "!type": "fn() -> +android.content.ContentResolver",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getContentResolver()"
            },
            "getThemeResId": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getThemeResId()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "getObbDir": {
              "!type": "fn() -> +java.io.File",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDir()"
            },
            "getDisplayAdjustments": {
              "!type": "fn(displayId: number) -> +android.view.DisplayAdjustments",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDisplayAdjustments(int)"
            },
            "checkCallingOrSelfPermission": {
              "!type": "fn(permission: string) -> number",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfPermission(java.lang.String)"
            },
            "unregisterReceiver": {
              "!type": "fn(receiver: +android.content.BroadcastReceiver) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unregisterReceiver(android.content.BroadcastReceiver)"
            },
            "clearWallpaper": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#clearWallpaper()"
            },
            "createPackageContextAsUser": {
              "!type": "fn(packageName: string, flags: number, user: +android.os.UserHandle) -> +android.content.Context",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContextAsUser(java.lang.String, int, android.os.UserHandle)"
            },
            "onTaskRemoved": {
              "!type": "fn(rootIntent: +android.content.Intent) -> void",
              "!url": "http://developer.android.com/reference/android/app/Service.html#onTaskRemoved(android.content.Intent)"
            },
            "onCreate": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/IntentService.html#onCreate()"
            },
            "onLowMemory": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/Service.html#onLowMemory()"
            },
            "startServiceAsUser": {
              "!type": "fn(service: +android.content.Intent, user: +android.os.UserHandle) -> +android.content.ComponentName",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startServiceAsUser(android.content.Intent, android.os.UserHandle)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "getWallpaper": {
              "!type": "fn() -> +android.graphics.drawable.Drawable",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaper()"
            },
            "peekWallpaper": {
              "!type": "fn() -> +android.graphics.drawable.Drawable",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#peekWallpaper()"
            },
            "getApplicationContext": {
              "!type": "fn() -> +android.content.Context",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationContext()"
            },
            "getFilesDir": {
              "!type": "fn() -> +java.io.File",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFilesDir()"
            },
            "getCodeCacheDir": {
              "!type": "fn() -> +java.io.File",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCodeCacheDir()"
            },
            "sendOrderedBroadcastAsUser": {
              "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, receiverPermission: string, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, java.lang.String, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
            },
            "getColor": {
              "!type": "fn(id: number) -> number",
              "!url": "http://developer.android.com/reference/android/content/Context.html#getColor(int)"
            },
            "registerReceiverAsUser": {
              "!type": "fn(receiver: +android.content.BroadcastReceiver, user: +android.os.UserHandle, filter: +android.content.IntentFilter, broadcastPermission: string, scheduler: +android.os.Handler) -> +android.content.Intent",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiverAsUser(android.content.BroadcastReceiver, android.os.UserHandle, android.content.IntentFilter, java.lang.String, android.os.Handler)"
            },
            "getText": {
              "!type": "fn(resId: number) -> +java.lang.CharSequence",
              "!url": "http://developer.android.com/reference/android/content/Context.html#getText(int)"
            },
            "getMainLooper": {
              "!type": "fn() -> +android.os.Looper",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getMainLooper()"
            },
            "startActivity": {
              "!type": "fn(intent: +android.content.Intent) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivity(android.content.Intent)"
            },
            "getColorStateList": {
              "!type": "fn(id: number) -> +android.content.res.ColorStateList",
              "!url": "http://developer.android.com/reference/android/content/Context.html#getColorStateList(int)"
            },
            "enforceCallingOrSelfUriPermission": {
              "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfUriPermission(android.net.Uri, int, java.lang.String)"
            },
            "getAssets": {
              "!type": "fn() -> +android.content.res.AssetManager",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getAssets()"
            },
            "onConfigurationChanged": {
              "!type": "fn(newConfig: +android.content.res.Configuration) -> void",
              "!url": "http://developer.android.com/reference/android/app/Service.html#onConfigurationChanged(android.content.res.Configuration)"
            },
            "onStart": {
              "!type": "fn(intent: +android.content.Intent, startId: number) -> void",
              "!url": "http://developer.android.com/reference/android/app/IntentService.html#onStart(android.content.Intent, int)"
            },
            "onTrimMemory": {
              "!type": "fn(level: number) -> void",
              "!url": "http://developer.android.com/reference/android/app/Service.html#onTrimMemory(int)"
            },
            "onStartCommand": {
              "!type": "fn(intent: +android.content.Intent, flags: number, startId: number) -> number",
              "!url": "http://developer.android.com/reference/android/app/NotificationTests.ToastService.html#onStartCommand(android.content.Intent, int, int)"
            },
            "grantUriPermission": {
              "!type": "fn(toPackage: string, uri: +android.net.Uri, modeFlags: number) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#grantUriPermission(java.lang.String, android.net.Uri, int)"
            },
            "canStartActivityForResult": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#canStartActivityForResult()"
            },
            "getBasePackageName": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBasePackageName()"
            },
            "onUnbind": {
              "!type": "fn(intent: +android.content.Intent) -> bool",
              "!url": "http://developer.android.com/reference/android/app/Service.html#onUnbind(android.content.Intent)"
            },
            "attach": {
              "!type": "fn(context: +android.content.Context, thread: +android.app.ActivityThread, className: string, token: +android.os.IBinder, application: +android.app.Application, activityManager: +java.lang.Object) -> void",
              "!url": "http://developer.android.com/reference/android/app/Service.html#attach(android.content.Context, android.app.ActivityThread, java.lang.String, android.os.IBinder, android.app.Application, java.lang.Object)"
            },
            "onBind": {
              "!type": "fn(intent: +android.content.Intent) -> +android.os.IBinder",
              "!url": "http://developer.android.com/reference/android/app/IntentService.html#onBind(android.content.Intent)"
            },
            "getApplication": {
              "!type": "fn() -> +android.app.Application",
              "!url": "http://developer.android.com/reference/android/app/Service.html#getApplication()"
            },
            "registerReceiver": {
              "!type": "fn(receiver: +android.content.BroadcastReceiver, filter: +android.content.IntentFilter) -> +android.content.Intent",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter)"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "stopService": {
              "!type": "fn(name: +android.content.Intent) -> bool",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopService(android.content.Intent)"
            },
            "getWallpaperDesiredMinimumHeight": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumHeight()"
            },
            "getExternalCacheDirs": {
              "!type": "fn() -> +java.newArray",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDirs()"
            },
            "getTheme": {
              "!type": "fn() -> +android.content.res.Resources.Theme",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getTheme()"
            },
            "getPackageCodePath": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageCodePath()"
            },
            "registerComponentCallbacks": {
              "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
              "!url": "http://developer.android.com/reference/android/content/Context.html#registerComponentCallbacks(android.content.ComponentCallbacks)"
            },
            "enforceUriPermission": {
              "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number, message: string) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceUriPermission(android.net.Uri, int, int, int, java.lang.String)"
            },
            "getSystemServiceName": {
              "!type": "fn(serviceClass: +java.lang.Class) -> string",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSystemServiceName(java.lang.Class)"
            },
            "getApplicationInfo": {
              "!type": "fn() -> +android.content.pm.ApplicationInfo",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationInfo()"
            },
            "createDisplayContext": {
              "!type": "fn(display: +android.view.Display) -> +android.content.Context",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createDisplayContext(android.view.Display)"
            },
            "getSharedPreferences": {
              "!type": "fn(name: string, mode: number) -> +android.content.SharedPreferences",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPreferences(java.lang.String, int)"
            },
            "enforceCallingUriPermission": {
              "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingUriPermission(android.net.Uri, int, java.lang.String)"
            },
            "stopSelfResult": {
              "!type": "fn(startId: number) -> bool",
              "!url": "http://developer.android.com/reference/android/app/Service.html#stopSelfResult(int)"
            },
            "getSystemService": {
              "!type": "fn(name: string) -> +java.lang.Object",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSystemService(java.lang.String)"
            },
            "unbindService": {
              "!type": "fn(conn: +android.content.ServiceConnection) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unbindService(android.content.ServiceConnection)"
            },
            "sendStickyOrderedBroadcastAsUser": {
              "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "getClassLoader": {
              "!type": "fn() -> +java.lang.ClassLoader",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getClassLoader()"
            },
            "databaseList": {
              "!type": "fn() -> +java.newArray",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#databaseList()"
            },
            "checkCallingUriPermission": {
              "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingUriPermission(android.net.Uri, int)"
            },
            "enforceCallingOrSelfPermission": {
              "!type": "fn(permission: string, message: string) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfPermission(java.lang.String, java.lang.String)"
            },
            "createConfigurationContext": {
              "!type": "fn(overrideConfiguration: +android.content.res.Configuration) -> +android.content.Context",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createConfigurationContext(android.content.res.Configuration)"
            },
            "removeStickyBroadcastAsUser": {
              "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
            },
            "getFileStreamPath": {
              "!type": "fn(name: string) -> +java.io.File",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFileStreamPath(java.lang.String)"
            },
            "checkUriPermission": {
              "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number) -> number",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkUriPermission(android.net.Uri, int, int, int)"
            },
            "onRebind": {
              "!type": "fn(intent: +android.content.Intent) -> void",
              "!url": "http://developer.android.com/reference/android/app/Service.html#onRebind(android.content.Intent)"
            },
            "startService": {
              "!type": "fn(service: +android.content.Intent) -> +android.content.ComponentName",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startService(android.content.Intent)"
            },
            "checkCallingPermission": {
              "!type": "fn(permission: string) -> number",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingPermission(java.lang.String)"
            },
            "getPackageManager": {
              "!type": "fn() -> +android.content.pm.PackageManager",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageManager()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "startActivitiesAsUser": {
              "!type": "fn(intents: +java.newArray, options: +android.os.Bundle, userHandle: +android.os.UserHandle) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivitiesAsUser(android.content.Intent[], android.os.Bundle, android.os.UserHandle)"
            },
            "sendBroadcastAsUser": {
              "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
            },
            "sendBroadcast": {
              "!type": "fn(intent: +android.content.Intent) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcast(android.content.Intent)"
            },
            "getPackageResourcePath": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageResourcePath()"
            },
            "startIntentSender": {
              "!type": "fn(intent: +android.content.IntentSender, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startIntentSender(android.content.IntentSender, android.content.Intent, int, int, int)"
            },
            "startActivityForResult": {
              "!type": "fn(who: string, intent: +android.content.Intent, requestCode: number, options: +android.os.Bundle) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivityForResult(java.lang.String, android.content.Intent, int, android.os.Bundle)"
            },
            "startActivities": {
              "!type": "fn(intents: +java.newArray) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivities(android.content.Intent[])"
            },
            "getDrawable": {
              "!type": "fn(id: number) -> +android.graphics.drawable.Drawable",
              "!url": "http://developer.android.com/reference/android/content/Context.html#getDrawable(int)"
            },
            "getPackageName": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageName()"
            },
            "revokeUriPermission": {
              "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#revokeUriPermission(android.net.Uri, int)"
            },
            "getUserId": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getUserId()"
            },
            "unregisterComponentCallbacks": {
              "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
              "!url": "http://developer.android.com/reference/android/content/Context.html#unregisterComponentCallbacks(android.content.ComponentCallbacks)"
            },
            "getResources": {
              "!type": "fn() -> +android.content.res.Resources",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getResources()"
            },
            "stopServiceAsUser": {
              "!type": "fn(name: +android.content.Intent, user: +android.os.UserHandle) -> bool",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopServiceAsUser(android.content.Intent, android.os.UserHandle)"
            },
            "sendStickyBroadcast": {
              "!type": "fn(intent: +android.content.Intent) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcast(android.content.Intent)"
            },
            "getExternalMediaDirs": {
              "!type": "fn() -> +java.newArray",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalMediaDirs()"
            },
            "getWallpaperDesiredMinimumWidth": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumWidth()"
            }
          }
        },
        "FullScreenActivity": {
          "!url": "http://developer.android.com/reference/android/app/NotificationTests.FullScreenActivity.html",
          "!type": "fn()",
          "BIND_WAIVE_PRIORITY": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_WAIVE_PRIORITY"
          },
          "RESULT_FIRST_USER": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_FIRST_USER"
          },
          "DEFAULT_KEYS_SHORTCUT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SHORTCUT"
          },
          "MEDIA_PROJECTION_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_PROJECTION_SERVICE"
          },
          "ETHERNET_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#ETHERNET_SERVICE"
          },
          "WIFI_RTT_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_RTT_SERVICE"
          },
          "SENSOR_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#SENSOR_SERVICE"
          },
          "TELEPHONY_SUBSCRIPTION_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SUBSCRIPTION_SERVICE"
          },
          "CAPTIONING_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#CAPTIONING_SERVICE"
          },
          "CAMERA_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#CAMERA_SERVICE"
          },
          "BIND_DEBUG_UNBIND": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_DEBUG_UNBIND"
          },
          "STATUS_BAR_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#STATUS_BAR_SERVICE"
          },
          "DEVICE_POLICY_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_POLICY_SERVICE"
          },
          "BIND_IMPORTANT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_IMPORTANT"
          },
          "NSD_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#NSD_SERVICE"
          },
          "DOWNLOAD_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#DOWNLOAD_SERVICE"
          },
          "BIND_NOT_VISIBLE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_VISIBLE"
          },
          "CONTEXT_IGNORE_SECURITY": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_IGNORE_SECURITY"
          },
          "USAGE_STATS_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#USAGE_STATS_SERVICE"
          },
          "MODE_WORLD_READABLE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_READABLE"
          },
          "KEYGUARD_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#KEYGUARD_SERVICE"
          },
          "BIND_ADJUST_WITH_ACTIVITY": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ADJUST_WITH_ACTIVITY"
          },
          "UI_MODE_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#UI_MODE_SERVICE"
          },
          "MODE_PRIVATE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_PRIVATE"
          },
          "CONTEXT_INCLUDE_CODE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_INCLUDE_CODE"
          },
          "DEFAULT_KEYS_DISABLE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_DISABLE"
          },
          "ACCESSIBILITY_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#ACCESSIBILITY_SERVICE"
          },
          "HDMI_CONTROL_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#HDMI_CONTROL_SERVICE"
          },
          "BIND_SHOWING_UI": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_SHOWING_UI"
          },
          "MODE_APPEND": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_APPEND"
          },
          "AUDIO_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#AUDIO_SERVICE"
          },
          "NETWORK_SCORE_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_SCORE_SERVICE"
          },
          "UPDATE_LOCK_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#UPDATE_LOCK_SERVICE"
          },
          "MEDIA_ROUTER_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_ROUTER_SERVICE"
          },
          "JOB_SCHEDULER_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#JOB_SCHEDULER_SERVICE"
          },
          "DEVICE_IDLE_CONTROLLER": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_IDLE_CONTROLLER"
          },
          "INPUT_METHOD_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_METHOD_SERVICE"
          },
          "RESULT_CANCELED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_CANCELED"
          },
          "BIND_ABOVE_CLIENT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ABOVE_CLIENT"
          },
          "INPUT_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_SERVICE"
          },
          "MODE_WORLD_WRITEABLE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_WRITEABLE"
          },
          "NETWORKMANAGEMENT_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORKMANAGEMENT_SERVICE"
          },
          "WINDOW_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#WINDOW_SERVICE"
          },
          "MEDIA_SESSION_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_SESSION_SERVICE"
          },
          "WIFI_P2P_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_P2P_SERVICE"
          },
          "DEFAULT_KEYS_SEARCH_GLOBAL": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SEARCH_GLOBAL"
          },
          "MODE_ENABLE_WRITE_AHEAD_LOGGING": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_ENABLE_WRITE_AHEAD_LOGGING"
          },
          "WIFI_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SERVICE"
          },
          "PERSISTENT_DATA_BLOCK_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#PERSISTENT_DATA_BLOCK_SERVICE"
          },
          "TV_INPUT_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#TV_INPUT_SERVICE"
          },
          "SIP_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#SIP_SERVICE"
          },
          "FINGERPRINT_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#FINGERPRINT_SERVICE"
          },
          "LOCATION_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#LOCATION_SERVICE"
          },
          "LAUNCHER_APPS_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#LAUNCHER_APPS_SERVICE"
          },
          "NETWORK_STATS_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_STATS_SERVICE"
          },
          "VOICE_INTERACTION_MANAGER_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#VOICE_INTERACTION_MANAGER_SERVICE"
          },
          "TELECOM_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#TELECOM_SERVICE"
          },
          "SEARCH_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#SEARCH_SERVICE"
          },
          "RADIO_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#RADIO_SERVICE"
          },
          "BIND_VISIBLE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_VISIBLE"
          },
          "BIND_NOT_FOREGROUND": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_FOREGROUND"
          },
          "CONTEXT_RESTRICTED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_RESTRICTED"
          },
          "USER_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#USER_SERVICE"
          },
          "DROPBOX_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#DROPBOX_SERVICE"
          },
          "BIND_TREAT_LIKE_ACTIVITY": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_TREAT_LIKE_ACTIVITY"
          },
          "DEFAULT_KEYS_SEARCH_LOCAL": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SEARCH_LOCAL"
          },
          "BIND_FOREGROUND_SERVICE_WHILE_AWAKE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE_WHILE_AWAKE"
          },
          "EXTRA_ID": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/app/NotificationTests.FullScreenActivity.html#EXTRA_ID"
          },
          "CLIPBOARD_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#CLIPBOARD_SERVICE"
          },
          "LAYOUT_INFLATER_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#LAYOUT_INFLATER_SERVICE"
          },
          "WIFI_SCANNING_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SCANNING_SERVICE"
          },
          "PRINT_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#PRINT_SERVICE"
          },
          "WALLPAPER_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#WALLPAPER_SERVICE"
          },
          "ALARM_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#ALARM_SERVICE"
          },
          "ACCOUNT_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#ACCOUNT_SERVICE"
          },
          "TRUST_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#TRUST_SERVICE"
          },
          "VIBRATOR_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#VIBRATOR_SERVICE"
          },
          "RESULT_OK": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_OK"
          },
          "NFC_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#NFC_SERVICE"
          },
          "NOTIFICATION_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#NOTIFICATION_SERVICE"
          },
          "BLUETOOTH_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#BLUETOOTH_SERVICE"
          },
          "POWER_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#POWER_SERVICE"
          },
          "BIND_ALLOW_OOM_MANAGEMENT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ALLOW_OOM_MANAGEMENT"
          },
          "DEFAULT_KEYS_DIALER": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_DIALER"
          },
          "BACKUP_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#BACKUP_SERVICE"
          },
          "COUNTRY_DETECTOR": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#COUNTRY_DETECTOR"
          },
          "SERIAL_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#SERIAL_SERVICE"
          },
          "WIFI_PASSPOINT_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_PASSPOINT_SERVICE"
          },
          "CONSUMER_IR_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#CONSUMER_IR_SERVICE"
          },
          "APP_OPS_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#APP_OPS_SERVICE"
          },
          "ACTIVITY_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#ACTIVITY_SERVICE"
          },
          "STORAGE_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#STORAGE_SERVICE"
          },
          "BIND_FOREGROUND_SERVICE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE"
          },
          "RESTRICTIONS_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#RESTRICTIONS_SERVICE"
          },
          "CONNECTIVITY_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#CONNECTIVITY_SERVICE"
          },
          "TEXT_SERVICES_MANAGER_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#TEXT_SERVICES_MANAGER_SERVICE"
          },
          "USB_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#USB_SERVICE"
          },
          "APPWIDGET_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#APPWIDGET_SERVICE"
          },
          "CONTEXT_REGISTER_PACKAGE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_REGISTER_PACKAGE"
          },
          "CARRIER_CONFIG_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#CARRIER_CONFIG_SERVICE"
          },
          "NETWORK_POLICY_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_POLICY_SERVICE"
          },
          "MIDI_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#MIDI_SERVICE"
          },
          "BATTERY_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#BATTERY_SERVICE"
          },
          "MODE_MULTI_PROCESS": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_MULTI_PROCESS"
          },
          "BIND_AUTO_CREATE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_AUTO_CREATE"
          },
          "DISPLAY_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#DISPLAY_SERVICE"
          },
          "TELEPHONY_SERVICE": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SERVICE"
          },
          "getPendingIntent": {
            "!type": "fn(context: +android.content.Context, id: number) -> +android.app.PendingIntent",
            "!url": "http://developer.android.com/reference/android/app/NotificationTests.FullScreenActivity.html#getPendingIntent(android.content.Context, int)"
          },
          "prototype": {
            "isBackgroundVisibleBehind": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#isBackgroundVisibleBehind()"
            },
            "setProgressBarVisibility": {
              "!type": "fn(visible: bool) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarVisibility(boolean)"
            },
            "setFeatureDrawableResource": {
              "!type": "fn(featureId: number, resId: number) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableResource(int, int)"
            },
            "dispatchEnterAnimationComplete": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchEnterAnimationComplete()"
            },
            "finishActivityFromChild": {
              "!type": "fn(child: +android.app.Activity, requestCode: number) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#finishActivityFromChild(android.app.Activity, int)"
            },
            "startPostponedEnterTransition": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#startPostponedEnterTransition()"
            },
            "onProvideAssistContent": {
              "!type": "fn(outContent: +android.app.assist.AssistContent) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideAssistContent(android.app.assist.AssistContent)"
            },
            "sendBroadcastMultiplePermissions": {
              "!type": "fn(intent: +android.content.Intent, receiverPermissions: +java.newArray) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastMultiplePermissions(android.content.Intent, java.lang.String[])"
            },
            "getString": {
              "!type": "fn(resId: number) -> string",
              "!url": "http://developer.android.com/reference/android/content/Context.html#getString(int)"
            },
            "onKeyDown": {
              "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyDown(int, android.view.KeyEvent)"
            },
            "getResources": {
              "!type": "fn() -> +android.content.res.Resources",
              "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getResources()"
            },
            "sendStickyBroadcast": {
              "!type": "fn(intent: +android.content.Intent) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcast(android.content.Intent)"
            },
            "startActivityFromFragment": {
              "!type": "fn(fragment: +android.app.Fragment, intent: +android.content.Intent, requestCode: number) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityFromFragment(android.app.Fragment, android.content.Intent, int)"
            },
            "onCreateThumbnail": {
              "!type": "fn(outBitmap: +android.graphics.Bitmap, canvas: +android.graphics.Canvas) -> bool",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateThumbnail(android.graphics.Bitmap, android.graphics.Canvas)"
            },
            "getOpPackageName": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getOpPackageName()"
            },
            "getCacheDir": {
              "!type": "fn() -> +java.io.File",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCacheDir()"
            },
            "onWindowDismissed": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowDismissed()"
            },
            "getBaseContext": {
              "!type": "fn() -> +android.content.Context",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBaseContext()"
            },
            "checkCallingOrSelfPermission": {
              "!type": "fn(permission: string) -> number",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfPermission(java.lang.String)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "isVoiceInteractionRoot": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#isVoiceInteractionRoot()"
            },
            "onDetachedFromWindow": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onDetachedFromWindow()"
            },
            "setResult": {
              "!type": "fn(resultCode: number) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#setResult(int)"
            },
            "onOptionsItemSelected": {
              "!type": "fn(item: +android.view.MenuItem) -> bool",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onOptionsItemSelected(android.view.MenuItem)"
            },
            "isChangingConfigurations": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#isChangingConfigurations()"
            },
            "getCodeCacheDir": {
              "!type": "fn() -> +java.io.File",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCodeCacheDir()"
            },
            "createPendingResult": {
              "!type": "fn(requestCode: number, data: +android.content.Intent, flags: number) -> +android.app.PendingIntent",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#createPendingResult(int, android.content.Intent, int)"
            },
            "getPackageResourcePath": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageResourcePath()"
            },
            "getCurrentFocus": {
              "!type": "fn() -> +android.view.View",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#getCurrentFocus()"
            },
            "triggerSearch": {
              "!type": "fn(query: string, appSearchData: +android.os.Bundle) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#triggerSearch(java.lang.String, android.os.Bundle)"
            },
            "convertToTranslucent": {
              "!type": "fn(callback: +android.app.Activity.TranslucentConversionListener, options: +android.app.ActivityOptions) -> bool",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#convertToTranslucent(android.app.Activity.TranslucentConversionListener, android.app.ActivityOptions)"
            },
            "startActivityForResult": {
              "!type": "fn(intent: +android.content.Intent, requestCode: number) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityForResult(android.content.Intent, int)"
            },
            "getLayoutInflater": {
              "!type": "fn() -> +android.view.LayoutInflater",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#getLayoutInflater()"
            },
            "enforcePermission": {
              "!type": "fn(permission: string, pid: number, uid: number, message: string) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforcePermission(java.lang.String, int, int, java.lang.String)"
            },
            "createPackageContext": {
              "!type": "fn(packageName: string, flags: number) -> +android.content.Context",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContext(java.lang.String, int)"
            },
            "onWindowStartingActionMode": {
              "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowStartingActionMode(android.view.ActionMode.Callback)"
            },
            "registerForContextMenu": {
              "!type": "fn(view: +android.view.View) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#registerForContextMenu(android.view.View)"
            },
            "setSecondaryProgress": {
              "!type": "fn(secondaryProgress: number) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#setSecondaryProgress(int)"
            },
            "onContentChanged": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onContentChanged()"
            },
            "finishAndRemoveTask": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAndRemoveTask()"
            },
            "setFinishOnTouchOutside": {
              "!type": "fn(finish: bool) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#setFinishOnTouchOutside(boolean)"
            },
            "requestWindowFeature": {
              "!type": "fn(featureId: number) -> bool",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#requestWindowFeature(int)"
            },
            "createConfigurationContext": {
              "!type": "fn(overrideConfiguration: +android.content.res.Configuration) -> +android.content.Context",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createConfigurationContext(android.content.res.Configuration)"
            },
            "showDialog": {
              "!type": "fn(id: number) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#showDialog(int)"
            },
            "onSearchRequested": {
              "!type": "fn(searchEvent: +android.view.SearchEvent) -> bool",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onSearchRequested(android.view.SearchEvent)"
            },
            "onContextItemSelected": {
              "!type": "fn(item: +android.view.MenuItem) -> bool",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onContextItemSelected(android.view.MenuItem)"
            },
            "onTrackballEvent": {
              "!type": "fn(event: +android.view.MotionEvent) -> bool",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onTrackballEvent(android.view.MotionEvent)"
            },
            "requestPermissions": {
              "!type": "fn(permissions: +java.newArray, requestCode: number) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#requestPermissions(java.lang.String[], int)"
            },
            "getVoiceInteractor": {
              "!type": "fn() -> +android.app.VoiceInteractor",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#getVoiceInteractor()"
            },
            "peekWallpaper": {
              "!type": "fn() -> +android.graphics.drawable.Drawable",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#peekWallpaper()"
            },
            "onPrepareOptionsMenu": {
              "!type": "fn(menu: +android.view.Menu) -> bool",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onPrepareOptionsMenu(android.view.Menu)"
            },
            "onSaveInstanceState": {
              "!type": "fn(outState: +android.os.Bundle, outPersistentState: +android.os.PersistableBundle) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onSaveInstanceState(android.os.Bundle, android.os.PersistableBundle)"
            },
            "registerReceiver": {
              "!type": "fn(receiver: +android.content.BroadcastReceiver, filter: +android.content.IntentFilter) -> +android.content.Intent",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter)"
            },
            "setActionBar": {
              "!type": "fn(toolbar: +android.widget.Toolbar) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#setActionBar(android.widget.Toolbar)"
            },
            "getIntent": {
              "!type": "fn() -> +android.content.Intent",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#getIntent()"
            },
            "getObbDirs": {
              "!type": "fn() -> +java.newArray",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDirs()"
            },
            "getPackageManager": {
              "!type": "fn() -> +android.content.pm.PackageManager",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageManager()"
            },
            "getSystemServiceName": {
              "!type": "fn(serviceClass: +java.lang.Class) -> string",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSystemServiceName(java.lang.Class)"
            },
            "obtainStyledAttributes": {
              "!type": "fn(attrs: +java.newArray) -> +android.content.res.TypedArray",
              "!url": "http://developer.android.com/reference/android/content/Context.html#obtainStyledAttributes(int[])"
            },
            "getApplicationInfo": {
              "!type": "fn() -> +android.content.pm.ApplicationInfo",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationInfo()"
            },
            "setDefaultKeyMode": {
              "!type": "fn(mode: number) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#setDefaultKeyMode(int)"
            },
            "setProgressBarIndeterminate": {
              "!type": "fn(indeterminate: bool) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarIndeterminate(boolean)"
            },
            "isRestricted": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#isRestricted()"
            },
            "hasWindowFocus": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#hasWindowFocus()"
            },
            "onConfigurationChanged": {
              "!type": "fn(newConfig: +android.content.res.Configuration) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onConfigurationChanged(android.content.res.Configuration)"
            },
            "getVolumeControlStream": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#getVolumeControlStream()"
            },
            "databaseList": {
              "!type": "fn() -> +java.newArray",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#databaseList()"
            },
            "setTheme": {
              "!type": "fn(resid: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#setTheme(int)"
            },
            "isChild": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#isChild()"
            },
            "isResumed": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#isResumed()"
            },
            "setRequestedOrientation": {
              "!type": "fn(requestedOrientation: number) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#setRequestedOrientation(int)"
            },
            "onNewActivityOptions": {
              "!type": "fn(options: +android.app.ActivityOptions) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onNewActivityOptions(android.app.ActivityOptions)"
            },
            "startActivity": {
              "!type": "fn(intent: +android.content.Intent) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivity(android.content.Intent)"
            },
            "onGenericMotionEvent": {
              "!type": "fn(event: +android.view.MotionEvent) -> bool",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onGenericMotionEvent(android.view.MotionEvent)"
            },
            "dismiss": {
              "!type": "fn(v: +android.view.View) -> void",
              "!url": "http://developer.android.com/reference/android/app/NotificationTests.FullScreenActivity.html#dismiss(android.view.View)"
            },
            "onWindowAttributesChanged": {
              "!type": "fn(params: +android.view.WindowManager.LayoutParams) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowAttributesChanged(android.view.WindowManager.LayoutParams)"
            },
            "onPostCreate": {
              "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onPostCreate(android.os.Bundle, android.os.PersistableBundle)"
            },
            "onKeyUp": {
              "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyUp(int, android.view.KeyEvent)"
            },
            "enforceCallingOrSelfUriPermission": {
              "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfUriPermission(android.net.Uri, int, java.lang.String)"
            },
            "grantUriPermission": {
              "!type": "fn(toPackage: string, uri: +android.net.Uri, modeFlags: number) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#grantUriPermission(java.lang.String, android.net.Uri, int)"
            },
            "startActivityAsCaller": {
              "!type": "fn(intent: +android.content.Intent, options: +android.os.Bundle, ignoreTargetSecurity: bool, userId: number) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityAsCaller(android.content.Intent, android.os.Bundle, boolean, int)"
            },
            "onActivityReenter": {
              "!type": "fn(resultCode: number, data: +android.content.Intent) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onActivityReenter(int, android.content.Intent)"
            },
            "dispatchKeyShortcutEvent": {
              "!type": "fn(event: +android.view.KeyEvent) -> bool",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchKeyShortcutEvent(android.view.KeyEvent)"
            },
            "onNavigateUpFromChild": {
              "!type": "fn(child: +android.app.Activity) -> bool",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onNavigateUpFromChild(android.app.Activity)"
            },
            "onEnterAnimationComplete": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onEnterAnimationComplete()"
            },
            "setContentView": {
              "!type": "fn(layoutResID: number) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#setContentView(int)"
            },
            "getPackageName": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageName()"
            },
            "getActionBar": {
              "!type": "fn() -> +android.app.ActionBar",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#getActionBar()"
            },
            "isDestroyed": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#isDestroyed()"
            },
            "sendBroadcastAsUser": {
              "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
            },
            "runOnUiThread": {
              "!type": "fn(action: +java.lang.Runnable) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#runOnUiThread(java.lang.Runnable)"
            },
            "stopLockTask": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#stopLockTask()"
            },
            "createApplicationContext": {
              "!type": "fn(application: +android.content.pm.ApplicationInfo, flags: number) -> +android.content.Context",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createApplicationContext(android.content.pm.ApplicationInfo, int)"
            },
            "finishAffinity": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAffinity()"
            },
            "openContextMenu": {
              "!type": "fn(view: +android.view.View) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#openContextMenu(android.view.View)"
            },
            "setTaskDescription": {
              "!type": "fn(taskDescription: +android.app.ActivityManager.TaskDescription) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#setTaskDescription(android.app.ActivityManager.TaskDescription)"
            },
            "setTitleColor": {
              "!type": "fn(textColor: number) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#setTitleColor(int)"
            },
            "showAssist": {
              "!type": "fn(args: +android.os.Bundle) -> bool",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#showAssist(android.os.Bundle)"
            },
            "onVisibleBehindCanceled": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onVisibleBehindCanceled()"
            },
            "finishAfterTransition": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAfterTransition()"
            },
            "startServiceAsUser": {
              "!type": "fn(service: +android.content.Intent, user: +android.os.UserHandle) -> +android.content.ComponentName",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startServiceAsUser(android.content.Intent, android.os.UserHandle)"
            },
            "onNavigateUp": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onNavigateUp()"
            },
            "getActivityToken": {
              "!type": "fn() -> +android.os.IBinder",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#getActivityToken()"
            },
            "onAttachFragment": {
              "!type": "fn(fragment: +android.app.Fragment) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onAttachFragment(android.app.Fragment)"
            },
            "getApplication": {
              "!type": "fn() -> +android.app.Application",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#getApplication()"
            },
            "applyOverrideConfiguration": {
              "!type": "fn(overrideConfiguration: +android.content.res.Configuration) -> void",
              "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#applyOverrideConfiguration(android.content.res.Configuration)"
            },
            "fileList": {
              "!type": "fn() -> +java.newArray",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#fileList()"
            },
            "getTaskId": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#getTaskId()"
            },
            "openOptionsMenu": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#openOptionsMenu()"
            },
            "onBackgroundVisibleBehindChanged": {
              "!type": "fn(visible: bool) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onBackgroundVisibleBehindChanged(boolean)"
            },
            "startNextMatchingActivity": {
              "!type": "fn(intent: +android.content.Intent) -> bool",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#startNextMatchingActivity(android.content.Intent)"
            },
            "onPrepareNavigateUpTaskStack": {
              "!type": "fn(builder: +android.app.TaskStackBuilder) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onPrepareNavigateUpTaskStack(android.app.TaskStackBuilder)"
            },
            "onActionModeFinished": {
              "!type": "fn(mode: +android.view.ActionMode) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onActionModeFinished(android.view.ActionMode)"
            },
            "getLocalClassName": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#getLocalClassName()"
            },
            "managedQuery": {
              "!type": "fn(uri: +android.net.Uri, projection: +java.newArray, selection: string, sortOrder: string) -> +android.database.Cursor",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#managedQuery(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String)"
            },
            "checkPermission": {
              "!type": "fn(permission: string, pid: number, uid: number) -> number",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkPermission(java.lang.String, int, int)"
            },
            "getWallpaperDesiredMinimumHeight": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumHeight()"
            },
            "startManagingCursor": {
              "!type": "fn(c: +android.database.Cursor) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#startManagingCursor(android.database.Cursor)"
            },
            "onRequestPermissionsResult": {
              "!type": "fn(requestCode: number, permissions: +java.newArray, grantResults: +java.newArray) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onRequestPermissionsResult(int, java.lang.String[], int[])"
            },
            "revokeUriPermission": {
              "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#revokeUriPermission(android.net.Uri, int)"
            },
            "startActivityIfNeeded": {
              "!type": "fn(intent: +android.content.Intent, requestCode: number) -> bool",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityIfNeeded(android.content.Intent, int)"
            },
            "moveTaskToBack": {
              "!type": "fn(nonRoot: bool) -> bool",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#moveTaskToBack(boolean)"
            },
            "unregisterForContextMenu": {
              "!type": "fn(view: +android.view.View) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#unregisterForContextMenu(android.view.View)"
            },
            "setPersistent": {
              "!type": "fn(isPersistent: bool) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#setPersistent(boolean)"
            },
            "onUserInteraction": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onUserInteraction()"
            },
            "setFeatureDrawableUri": {
              "!type": "fn(featureId: number, uri: +android.net.Uri) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableUri(int, android.net.Uri)"
            },
            "onStateNotSaved": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onStateNotSaved()"
            },
            "sendStickyOrderedBroadcast": {
              "!type": "fn(intent: +android.content.Intent, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcast(android.content.Intent, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
            },
            "sendStickyOrderedBroadcastAsUser": {
              "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "setContentTransitionManager": {
              "!type": "fn(tm: +android.transition.TransitionManager) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#setContentTransitionManager(android.transition.TransitionManager)"
            },
            "getLoaderManager": {
              "!type": "fn() -> +android.app.LoaderManager",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#getLoaderManager()"
            },
            "onRetainNonConfigurationInstance": {
              "!type": "fn() -> +java.lang.Object",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onRetainNonConfigurationInstance()"
            },
            "getExternalFilesDir": {
              "!type": "fn(type: string) -> +java.io.File",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDir(java.lang.String)"
            },
            "bindService": {
              "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number) -> bool",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindService(android.content.Intent, android.content.ServiceConnection, int)"
            },
            "startActivitiesAsUser": {
              "!type": "fn(intents: +java.newArray, options: +android.os.Bundle, userHandle: +android.os.UserHandle) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivitiesAsUser(android.content.Intent[], android.os.Bundle, android.os.UserHandle)"
            },
            "onRestoreInstanceState": {
              "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onRestoreInstanceState(android.os.Bundle, android.os.PersistableBundle)"
            },
            "recreate": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#recreate()"
            },
            "getDatabasePath": {
              "!type": "fn(name: string) -> +java.io.File",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDatabasePath(java.lang.String)"
            },
            "setEnterSharedElementCallback": {
              "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#setEnterSharedElementCallback(android.app.SharedElementCallback)"
            },
            "onCreateContextMenu": {
              "!type": "fn(menu: +android.view.ContextMenu, v: +android.view.View, menuInfo: +android.view.ContextMenu.ContextMenuInfo) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenu.ContextMenuInfo)"
            },
            "onProvideAssistData": {
              "!type": "fn(data: +android.os.Bundle) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideAssistData(android.os.Bundle)"
            },
            "checkSelfPermission": {
              "!type": "fn(permission: string) -> number",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkSelfPermission(java.lang.String)"
            },
            "onPanelClosed": {
              "!type": "fn(featureId: number, menu: +android.view.Menu) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onPanelClosed(int, android.view.Menu)"
            },
            "onCreate": {
              "!type": "fn(savedInstanceState: +android.os.Bundle) -> void",
              "!url": "http://developer.android.com/reference/android/app/NotificationTests.FullScreenActivity.html#onCreate(android.os.Bundle)"
            },
            "enforceCallingOrSelfPermission": {
              "!type": "fn(permission: string, message: string) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfPermission(java.lang.String, java.lang.String)"
            },
            "onTouchEvent": {
              "!type": "fn(event: +android.view.MotionEvent) -> bool",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onTouchEvent(android.view.MotionEvent)"
            },
            "getTheme": {
              "!type": "fn() -> +android.content.res.Resources.Theme",
              "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getTheme()"
            },
            "onKeyLongPress": {
              "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyLongPress(int, android.view.KeyEvent)"
            },
            "setMediaController": {
              "!type": "fn(controller: +android.media.session.MediaController) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#setMediaController(android.media.session.MediaController)"
            },
            "getChangingConfigurations": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#getChangingConfigurations()"
            },
            "finishActivity": {
              "!type": "fn(requestCode: number) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#finishActivity(int)"
            },
            "onCreatePanelView": {
              "!type": "fn(featureId: number) -> +android.view.View",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreatePanelView(int)"
            },
            "getSearchEvent": {
              "!type": "fn() -> +android.view.SearchEvent",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#getSearchEvent()"
            },
            "setVisible": {
              "!type": "fn(visible: bool) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#setVisible(boolean)"
            },
            "startIntentSender": {
              "!type": "fn(intent: +android.content.IntentSender, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSender(android.content.IntentSender, android.content.Intent, int, int, int)"
            },
            "getExternalFilesDirs": {
              "!type": "fn(type: string) -> +java.newArray",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDirs(java.lang.String)"
            },
            "stopServiceAsUser": {
              "!type": "fn(name: +android.content.Intent, user: +android.os.UserHandle) -> bool",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopServiceAsUser(android.content.Intent, android.os.UserHandle)"
            },
            "unbindService": {
              "!type": "fn(conn: +android.content.ServiceConnection) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unbindService(android.content.ServiceConnection)"
            },
            "startActivityAsUser": {
              "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityAsUser(android.content.Intent, android.os.UserHandle)"
            },
            "onKeyShortcut": {
              "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyShortcut(int, android.view.KeyEvent)"
            },
            "getSharedPrefsFile": {
              "!type": "fn(name: string) -> +java.io.File",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPrefsFile(java.lang.String)"
            },
            "getDir": {
              "!type": "fn(name: string, mode: number) -> +java.io.File",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDir(java.lang.String, int)"
            },
            "releaseInstance": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#releaseInstance()"
            },
            "onKeyMultiple": {
              "!type": "fn(keyCode: number, repeatCount: number, event: +android.view.KeyEvent) -> bool",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyMultiple(int, int, android.view.KeyEvent)"
            },
            "onPreparePanel": {
              "!type": "fn(featureId: number, view: +android.view.View, menu: +android.view.Menu) -> bool",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onPreparePanel(int, android.view.View, android.view.Menu)"
            },
            "bindServiceAsUser": {
              "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number, user: +android.os.UserHandle) -> bool",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindServiceAsUser(android.content.Intent, android.content.ServiceConnection, int, android.os.UserHandle)"
            },
            "closeContextMenu": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#closeContextMenu()"
            },
            "startSearch": {
              "!type": "fn(initialQuery: string, selectInitialQuery: bool, appSearchData: +android.os.Bundle, globalSearch: bool) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#startSearch(java.lang.String, boolean, android.os.Bundle, boolean)"
            },
            "getComponentName": {
              "!type": "fn() -> +android.content.ComponentName",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#getComponentName()"
            },
            "showLockTaskEscapeMessage": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#showLockTaskEscapeMessage()"
            },
            "getContentTransitionManager": {
              "!type": "fn() -> +android.transition.TransitionManager",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#getContentTransitionManager()"
            },
            "onBackPressed": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onBackPressed()"
            },
            "getExternalCacheDir": {
              "!type": "fn() -> +java.io.File",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDir()"
            },
            "getDrawable": {
              "!type": "fn(id: number) -> +android.graphics.drawable.Drawable",
              "!url": "http://developer.android.com/reference/android/content/Context.html#getDrawable(int)"
            },
            "setImmersive": {
              "!type": "fn(i: bool) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#setImmersive(boolean)"
            },
            "openFileOutput": {
              "!type": "fn(name: string, mode: number) -> +java.io.FileOutputStream",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileOutput(java.lang.String, int)"
            },
            "getAssets": {
              "!type": "fn() -> +android.content.res.AssetManager",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getAssets()"
            },
            "onLowMemory": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onLowMemory()"
            },
            "getParentActivityIntent": {
              "!type": "fn() -> +android.content.Intent",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#getParentActivityIntent()"
            },
            "convertFromTranslucent": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#convertFromTranslucent()"
            },
            "dispatchTouchEvent": {
              "!type": "fn(ev: +android.view.MotionEvent) -> bool",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchTouchEvent(android.view.MotionEvent)"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "getContentScene": {
              "!type": "fn() -> +android.transition.Scene",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#getContentScene()"
            },
            "getCallingPackage": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#getCallingPackage()"
            },
            "deleteDatabase": {
              "!type": "fn(name: string) -> bool",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteDatabase(java.lang.String)"
            },
            "checkCallingPermission": {
              "!type": "fn(permission: string) -> number",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingPermission(java.lang.String)"
            },
            "dispatchGenericMotionEvent": {
              "!type": "fn(ev: +android.view.MotionEvent) -> bool",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchGenericMotionEvent(android.view.MotionEvent)"
            },
            "getExternalMediaDirs": {
              "!type": "fn() -> +java.newArray",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalMediaDirs()"
            },
            "getCallingActivity": {
              "!type": "fn() -> +android.content.ComponentName",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#getCallingActivity()"
            },
            "onAttachedToWindow": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onAttachedToWindow()"
            },
            "clearWallpaper": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#clearWallpaper()"
            },
            "setTitle": {
              "!type": "fn(title: +java.lang.CharSequence) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#setTitle(java.lang.CharSequence)"
            },
            "enforceCallingUriPermission": {
              "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingUriPermission(android.net.Uri, int, java.lang.String)"
            },
            "getThemeResId": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getThemeResId()"
            },
            "onWindowFocusChanged": {
              "!type": "fn(hasFocus: bool) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowFocusChanged(boolean)"
            },
            "registerComponentCallbacks": {
              "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
              "!url": "http://developer.android.com/reference/android/content/Context.html#registerComponentCallbacks(android.content.ComponentCallbacks)"
            },
            "getText": {
              "!type": "fn(resId: number) -> +java.lang.CharSequence",
              "!url": "http://developer.android.com/reference/android/content/Context.html#getText(int)"
            },
            "enforceUriPermission": {
              "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number, message: string) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceUriPermission(android.net.Uri, int, int, int, java.lang.String)"
            },
            "onProvideReferrer": {
              "!type": "fn() -> +android.net.Uri",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideReferrer()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "unregisterComponentCallbacks": {
              "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
              "!url": "http://developer.android.com/reference/android/content/Context.html#unregisterComponentCallbacks(android.content.ComponentCallbacks)"
            },
            "finish": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#finish()"
            },
            "getWallpaperDesiredMinimumWidth": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumWidth()"
            },
            "onMenuItemSelected": {
              "!type": "fn(featureId: number, item: +android.view.MenuItem) -> bool",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onMenuItemSelected(int, android.view.MenuItem)"
            },
            "getWallpaper": {
              "!type": "fn() -> +android.graphics.drawable.Drawable",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaper()"
            },
            "isVoiceInteraction": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#isVoiceInteraction()"
            },
            "navigateUpTo": {
              "!type": "fn(upIntent: +android.content.Intent) -> bool",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#navigateUpTo(android.content.Intent)"
            },
            "onCreatePanelMenu": {
              "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreatePanelMenu(int, android.view.Menu)"
            },
            "openOrCreateDatabase": {
              "!type": "fn(name: string, mode: number, factory: +android.database.sqlite.SQLiteDatabase.CursorFactory) -> +android.database.sqlite.SQLiteDatabase",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openOrCreateDatabase(java.lang.String, int, android.database.sqlite.SQLiteDatabase.CursorFactory)"
            },
            "openFileInput": {
              "!type": "fn(name: string) -> +java.io.FileInputStream",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileInput(java.lang.String)"
            },
            "dump": {
              "!type": "fn(prefix: string, fd: +java.io.FileDescriptor, writer: +java.io.PrintWriter, args: +java.newArray) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])"
            },
            "onCreateDescription": {
              "!type": "fn() -> +java.lang.CharSequence",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateDescription()"
            },
            "invalidateOptionsMenu": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#invalidateOptionsMenu()"
            },
            "sendOrderedBroadcastAsUser": {
              "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, receiverPermission: string, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, java.lang.String, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
            },
            "canStartActivityForResult": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#canStartActivityForResult()"
            },
            "setProgress": {
              "!type": "fn(progress: number) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgress(int)"
            },
            "navigateUpToFromChild": {
              "!type": "fn(child: +android.app.Activity, upIntent: +android.content.Intent) -> bool",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#navigateUpToFromChild(android.app.Activity, android.content.Intent)"
            },
            "getContentResolver": {
              "!type": "fn() -> +android.content.ContentResolver",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getContentResolver()"
            },
            "isFinishing": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#isFinishing()"
            },
            "getFragmentManager": {
              "!type": "fn() -> +android.app.FragmentManager",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#getFragmentManager()"
            },
            "getParent": {
              "!type": "fn() -> +android.app.Activity",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#getParent()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "checkCallingUriPermission": {
              "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingUriPermission(android.net.Uri, int)"
            },
            "setExitSharedElementCallback": {
              "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#setExitSharedElementCallback(android.app.SharedElementCallback)"
            },
            "checkUriPermission": {
              "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number) -> number",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkUriPermission(android.net.Uri, int, int, int)"
            },
            "setFeatureDrawableAlpha": {
              "!type": "fn(featureId: number, alpha: number) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableAlpha(int, int)"
            },
            "registerReceiverAsUser": {
              "!type": "fn(receiver: +android.content.BroadcastReceiver, user: +android.os.UserHandle, filter: +android.content.IntentFilter, broadcastPermission: string, scheduler: +android.os.Handler) -> +android.content.Intent",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiverAsUser(android.content.BroadcastReceiver, android.os.UserHandle, android.content.IntentFilter, java.lang.String, android.os.Handler)"
            },
            "getPackageCodePath": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageCodePath()"
            },
            "getWindow": {
              "!type": "fn() -> +android.view.Window",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#getWindow()"
            },
            "startIntentSenderFromChild": {
              "!type": "fn(child: +android.app.Activity, intent: +android.content.IntentSender, requestCode: number, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSenderFromChild(android.app.Activity, android.content.IntentSender, int, android.content.Intent, int, int, int)"
            },
            "postponeEnterTransition": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#postponeEnterTransition()"
            },
            "shouldUpRecreateTask": {
              "!type": "fn(targetIntent: +android.content.Intent) -> bool",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#shouldUpRecreateTask(android.content.Intent)"
            },
            "removeStickyBroadcastAsUser": {
              "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
            },
            "deleteFile": {
              "!type": "fn(name: string) -> bool",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteFile(java.lang.String)"
            },
            "onContextMenuClosed": {
              "!type": "fn(menu: +android.view.Menu) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onContextMenuClosed(android.view.Menu)"
            },
            "onCreateOptionsMenu": {
              "!type": "fn(menu: +android.view.Menu) -> bool",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateOptionsMenu(android.view.Menu)"
            },
            "getClassLoader": {
              "!type": "fn() -> +java.lang.ClassLoader",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getClassLoader()"
            },
            "dispatchPopulateAccessibilityEvent": {
              "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> bool",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
            },
            "setIntent": {
              "!type": "fn(newIntent: +android.content.Intent) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#setIntent(android.content.Intent)"
            },
            "setVolumeControlStream": {
              "!type": "fn(streamType: number) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#setVolumeControlStream(int)"
            },
            "getObbDir": {
              "!type": "fn() -> +java.io.File",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDir()"
            },
            "startInstrumentation": {
              "!type": "fn(className: +android.content.ComponentName, profileFile: string, arguments: +android.os.Bundle) -> bool",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startInstrumentation(android.content.ComponentName, java.lang.String, android.os.Bundle)"
            },
            "reportFullyDrawn": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#reportFullyDrawn()"
            },
            "setProgressBarIndeterminateVisibility": {
              "!type": "fn(visible: bool) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarIndeterminateVisibility(boolean)"
            },
            "finishFromChild": {
              "!type": "fn(child: +android.app.Activity) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#finishFromChild(android.app.Activity)"
            },
            "getColorStateList": {
              "!type": "fn(id: number) -> +android.content.res.ColorStateList",
              "!url": "http://developer.android.com/reference/android/content/Context.html#getColorStateList(int)"
            },
            "getTitleColor": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#getTitleColor()"
            },
            "getMediaController": {
              "!type": "fn() -> +android.media.session.MediaController",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#getMediaController()"
            },
            "sendBroadcast": {
              "!type": "fn(intent: +android.content.Intent) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcast(android.content.Intent)"
            },
            "overridePendingTransition": {
              "!type": "fn(enterAnim: number, exitAnim: number) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#overridePendingTransition(int, int)"
            },
            "dispatchTrackballEvent": {
              "!type": "fn(ev: +android.view.MotionEvent) -> bool",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchTrackballEvent(android.view.MotionEvent)"
            },
            "getNoBackupFilesDir": {
              "!type": "fn() -> +java.io.File",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getNoBackupFilesDir()"
            },
            "startActionMode": {
              "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#startActionMode(android.view.ActionMode.Callback)"
            },
            "getApplicationContext": {
              "!type": "fn() -> +android.content.Context",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationContext()"
            },
            "onCreateNavigateUpTaskStack": {
              "!type": "fn(builder: +android.app.TaskStackBuilder) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateNavigateUpTaskStack(android.app.TaskStackBuilder)"
            },
            "createDisplayContext": {
              "!type": "fn(display: +android.view.Display) -> +android.content.Context",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createDisplayContext(android.view.Display)"
            },
            "onActionModeStarted": {
              "!type": "fn(mode: +android.view.ActionMode) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onActionModeStarted(android.view.ActionMode)"
            },
            "dispatchKeyEvent": {
              "!type": "fn(event: +android.view.KeyEvent) -> bool",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchKeyEvent(android.view.KeyEvent)"
            },
            "enforceCallingPermission": {
              "!type": "fn(permission: string, message: string) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingPermission(java.lang.String, java.lang.String)"
            },
            "createPackageContextAsUser": {
              "!type": "fn(packageName: string, flags: number, user: +android.os.UserHandle) -> +android.content.Context",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContextAsUser(java.lang.String, int, android.os.UserHandle)"
            },
            "setFeatureDrawable": {
              "!type": "fn(featureId: number, drawable: +android.graphics.drawable.Drawable) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawable(int, android.graphics.drawable.Drawable)"
            },
            "dismissDialog": {
              "!type": "fn(id: number) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#dismissDialog(int)"
            },
            "onMenuOpened": {
              "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onMenuOpened(int, android.view.Menu)"
            },
            "getSystemService": {
              "!type": "fn(name: string) -> +java.lang.Object",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#getSystemService(java.lang.String)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "startActivities": {
              "!type": "fn(intents: +java.newArray) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivities(android.content.Intent[])"
            },
            "startService": {
              "!type": "fn(service: +android.content.Intent) -> +android.content.ComponentName",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startService(android.content.Intent)"
            },
            "getFileStreamPath": {
              "!type": "fn(name: string) -> +java.io.File",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFileStreamPath(java.lang.String)"
            },
            "addContentView": {
              "!type": "fn(view: +android.view.View, params: +android.view.ViewGroup.LayoutParams) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#addContentView(android.view.View, android.view.ViewGroup.LayoutParams)"
            },
            "closeOptionsMenu": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#closeOptionsMenu()"
            },
            "sendStickyBroadcastAsUser": {
              "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
            },
            "takeKeyEvents": {
              "!type": "fn(get: bool) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#takeKeyEvents(boolean)"
            },
            "getTitle": {
              "!type": "fn() -> +java.lang.CharSequence",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#getTitle()"
            },
            "getWindowManager": {
              "!type": "fn() -> +android.view.WindowManager",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#getWindowManager()"
            },
            "getBasePackageName": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBasePackageName()"
            },
            "stopManagingCursor": {
              "!type": "fn(c: +android.database.Cursor) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#stopManagingCursor(android.database.Cursor)"
            },
            "checkCallingOrSelfUriPermission": {
              "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfUriPermission(android.net.Uri, int)"
            },
            "setWallpaper": {
              "!type": "fn(bitmap: +android.graphics.Bitmap) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#setWallpaper(android.graphics.Bitmap)"
            },
            "sendOrderedBroadcast": {
              "!type": "fn(intent: +android.content.Intent, receiverPermission: string) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcast(android.content.Intent, java.lang.String)"
            },
            "unregisterReceiver": {
              "!type": "fn(receiver: +android.content.BroadcastReceiver) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unregisterReceiver(android.content.BroadcastReceiver)"
            },
            "getColor": {
              "!type": "fn(id: number) -> number",
              "!url": "http://developer.android.com/reference/android/content/Context.html#getColor(int)"
            },
            "getMenuInflater": {
              "!type": "fn() -> +android.view.MenuInflater",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#getMenuInflater()"
            },
            "stopService": {
              "!type": "fn(name: +android.content.Intent) -> bool",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopService(android.content.Intent)"
            },
            "getMainLooper": {
              "!type": "fn() -> +android.os.Looper",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getMainLooper()"
            },
            "startActivityFromChild": {
              "!type": "fn(child: +android.app.Activity, intent: +android.content.Intent, requestCode: number) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityFromChild(android.app.Activity, android.content.Intent, int)"
            },
            "startLockTask": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#startLockTask()"
            },
            "removeStickyBroadcast": {
              "!type": "fn(intent: +android.content.Intent) -> void",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcast(android.content.Intent)"
            },
            "getExternalCacheDirs": {
              "!type": "fn() -> +java.newArray",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDirs()"
            },
            "getReferrer": {
              "!type": "fn() -> +android.net.Uri",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#getReferrer()"
            },
            "isImmersive": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#isImmersive()"
            },
            "shouldShowRequestPermissionRationale": {
              "!type": "fn(permission: string) -> bool",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#shouldShowRequestPermissionRationale(java.lang.String)"
            },
            "getPreferences": {
              "!type": "fn(mode: number) -> +android.content.SharedPreferences",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#getPreferences(int)"
            },
            "getFilesDir": {
              "!type": "fn() -> +java.io.File",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFilesDir()"
            },
            "findViewById": {
              "!type": "fn(id: number) -> +android.view.View",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#findViewById(int)"
            },
            "getSharedPreferences": {
              "!type": "fn(name: string, mode: number) -> +android.content.SharedPreferences",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPreferences(java.lang.String, int)"
            },
            "isTaskRoot": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#isTaskRoot()"
            },
            "getLastNonConfigurationInstance": {
              "!type": "fn() -> +java.lang.Object",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#getLastNonConfigurationInstance()"
            },
            "getDisplayAdjustments": {
              "!type": "fn(displayId: number) -> +android.view.DisplayAdjustments",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDisplayAdjustments(int)"
            },
            "getRequestedOrientation": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#getRequestedOrientation()"
            },
            "onTrimMemory": {
              "!type": "fn(level: number) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onTrimMemory(int)"
            },
            "removeDialog": {
              "!type": "fn(id: number) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#removeDialog(int)"
            },
            "getUserId": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getUserId()"
            },
            "requestVisibleBehind": {
              "!type": "fn(visible: bool) -> bool",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#requestVisibleBehind(boolean)"
            },
            "onOptionsMenuClosed": {
              "!type": "fn(menu: +android.view.Menu) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onOptionsMenuClosed(android.view.Menu)"
            },
            "onCreateView": {
              "!type": "fn(name: string, context: +android.content.Context, attrs: +android.util.AttributeSet) -> +android.view.View",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateView(java.lang.String, android.content.Context, android.util.AttributeSet)"
            },
            "startActivityForResultAsUser": {
              "!type": "fn(intent: +android.content.Intent, requestCode: number, user: +android.os.UserHandle) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityForResultAsUser(android.content.Intent, int, android.os.UserHandle)"
            },
            "startIntentSenderForResult": {
              "!type": "fn(intent: +android.content.IntentSender, requestCode: number, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
              "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSenderForResult(android.content.IntentSender, int, android.content.Intent, int, int, int)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            }
          }
        },
        "ACTION_CREATE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/NotificationTests.html#ACTION_CREATE"
        },
        "SHOW_BIG_PICTURE": {
          "!type": "bool",
          "!url": "http://developer.android.com/reference/android/app/NotificationTests.html#SHOW_BIG_PICTURE"
        },
        "SHOW_STOPWATCH": {
          "!type": "bool",
          "!url": "http://developer.android.com/reference/android/app/NotificationTests.html#SHOW_STOPWATCH"
        },
        "SHOW_MEDIA": {
          "!type": "bool",
          "!url": "http://developer.android.com/reference/android/app/NotificationTests.html#SHOW_MEDIA"
        },
        "SHOW_CALENDAR": {
          "!type": "bool",
          "!url": "http://developer.android.com/reference/android/app/NotificationTests.html#SHOW_CALENDAR"
        },
        "NOTIFICATION_ID": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/NotificationTests.html#NOTIFICATION_ID"
        },
        "SHOW_PHONE_CALL": {
          "!type": "bool",
          "!url": "http://developer.android.com/reference/android/app/NotificationTests.html#SHOW_PHONE_CALL"
        },
        "SHOW_BIG_TEXT": {
          "!type": "bool",
          "!url": "http://developer.android.com/reference/android/app/NotificationTests.html#SHOW_BIG_TEXT"
        },
        "SHOW_PROGRESS": {
          "!type": "bool",
          "!url": "http://developer.android.com/reference/android/app/NotificationTests.html#SHOW_PROGRESS"
        },
        "SHOW_INBOX": {
          "!type": "bool",
          "!url": "http://developer.android.com/reference/android/app/NotificationTests.html#SHOW_INBOX"
        },
        "SHOW_SOCIAL": {
          "!type": "bool",
          "!url": "http://developer.android.com/reference/android/app/NotificationTests.html#SHOW_SOCIAL"
        },
        "L": {
          "!type": "fn(msg: string, args: +java.newArray) -> void",
          "!url": "http://developer.android.com/reference/android/app/NotificationTests.html#L(java.lang.String, java.lang.Object[])"
        },
        "makeUploadNotification": {
          "!type": "fn(context: +android.content.Context, progress: number, when: +java.lang.Long) -> +android.app.Notification",
          "!url": "http://developer.android.com/reference/android/app/NotificationTests.html#makeUploadNotification(android.content.Context, int, long)"
        },
        "makeBigTextNotification": {
          "!type": "fn(context: +android.content.Context, update: number, id: number, when: +java.lang.Long) -> +android.app.Notification",
          "!url": "http://developer.android.com/reference/android/app/NotificationTests.html#makeBigTextNotification(android.content.Context, int, int, long)"
        },
        "sleepIfYouCan": {
          "!type": "fn(ms: number) -> void",
          "!url": "http://developer.android.com/reference/android/app/NotificationTests.html#sleepIfYouCan(int)"
        },
        "summarize": {
          "!type": "fn(n: +android.app.Notification) -> string",
          "!url": "http://developer.android.com/reference/android/app/NotificationTests.html#summarize(android.app.Notification)"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "testCreate": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/NotificationTests.html#testCreate()"
          },
          "setUp": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/NotificationTests.html#setUp()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "setTestContext": {
            "!type": "fn(context: +android.content.Context) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#setTestContext(android.content.Context)"
          },
          "assertWritingContentUriRequiresPermission": {
            "!type": "fn(uri: +android.net.Uri, permission: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertWritingContentUriRequiresPermission(android.net.Uri, java.lang.String)"
          },
          "getTestContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#getTestContext()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "setContext": {
            "!type": "fn(context: +android.content.Context) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#setContext(android.content.Context)"
          },
          "assertActivityRequiresPermission": {
            "!type": "fn(packageName: string, className: string, permission: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertActivityRequiresPermission(java.lang.String, java.lang.String, java.lang.String)"
          },
          "testAndroidTestCaseSetupProperly": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#testAndroidTestCaseSetupProperly()"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#getContext()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "assertReadingContentUriRequiresPermission": {
            "!type": "fn(uri: +android.net.Uri, permission: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/AndroidTestCase.html#assertReadingContentUriRequiresPermission(android.net.Uri, java.lang.String)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "ListActivity": {
        "!url": "http://developer.android.com/reference/android/app/ListActivity.html",
        "!type": "fn()",
        "BIND_WAIVE_PRIORITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_WAIVE_PRIORITY"
        },
        "RESULT_FIRST_USER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_FIRST_USER"
        },
        "DEFAULT_KEYS_SHORTCUT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SHORTCUT"
        },
        "MEDIA_PROJECTION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_PROJECTION_SERVICE"
        },
        "ETHERNET_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ETHERNET_SERVICE"
        },
        "WIFI_RTT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_RTT_SERVICE"
        },
        "SENSOR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SENSOR_SERVICE"
        },
        "TELEPHONY_SUBSCRIPTION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SUBSCRIPTION_SERVICE"
        },
        "CAPTIONING_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CAPTIONING_SERVICE"
        },
        "CAMERA_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CAMERA_SERVICE"
        },
        "BIND_DEBUG_UNBIND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_DEBUG_UNBIND"
        },
        "STATUS_BAR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#STATUS_BAR_SERVICE"
        },
        "DEVICE_POLICY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_POLICY_SERVICE"
        },
        "BIND_IMPORTANT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_IMPORTANT"
        },
        "NSD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NSD_SERVICE"
        },
        "DOWNLOAD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DOWNLOAD_SERVICE"
        },
        "BIND_NOT_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_VISIBLE"
        },
        "CONTEXT_IGNORE_SECURITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_IGNORE_SECURITY"
        },
        "USAGE_STATS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USAGE_STATS_SERVICE"
        },
        "MODE_WORLD_READABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_READABLE"
        },
        "KEYGUARD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#KEYGUARD_SERVICE"
        },
        "BIND_ADJUST_WITH_ACTIVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ADJUST_WITH_ACTIVITY"
        },
        "UI_MODE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#UI_MODE_SERVICE"
        },
        "MODE_PRIVATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_PRIVATE"
        },
        "CONTEXT_INCLUDE_CODE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_INCLUDE_CODE"
        },
        "DEFAULT_KEYS_DISABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_DISABLE"
        },
        "ACCESSIBILITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACCESSIBILITY_SERVICE"
        },
        "HDMI_CONTROL_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#HDMI_CONTROL_SERVICE"
        },
        "BIND_SHOWING_UI": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_SHOWING_UI"
        },
        "MODE_APPEND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_APPEND"
        },
        "AUDIO_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#AUDIO_SERVICE"
        },
        "NETWORK_SCORE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_SCORE_SERVICE"
        },
        "UPDATE_LOCK_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#UPDATE_LOCK_SERVICE"
        },
        "MEDIA_ROUTER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_ROUTER_SERVICE"
        },
        "JOB_SCHEDULER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#JOB_SCHEDULER_SERVICE"
        },
        "DEVICE_IDLE_CONTROLLER": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_IDLE_CONTROLLER"
        },
        "INPUT_METHOD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_METHOD_SERVICE"
        },
        "RESULT_CANCELED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_CANCELED"
        },
        "BIND_ABOVE_CLIENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ABOVE_CLIENT"
        },
        "INPUT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_SERVICE"
        },
        "MODE_WORLD_WRITEABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_WRITEABLE"
        },
        "NETWORKMANAGEMENT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORKMANAGEMENT_SERVICE"
        },
        "WINDOW_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WINDOW_SERVICE"
        },
        "MEDIA_SESSION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_SESSION_SERVICE"
        },
        "WIFI_P2P_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_P2P_SERVICE"
        },
        "DEFAULT_KEYS_SEARCH_GLOBAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SEARCH_GLOBAL"
        },
        "MODE_ENABLE_WRITE_AHEAD_LOGGING": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_ENABLE_WRITE_AHEAD_LOGGING"
        },
        "WIFI_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SERVICE"
        },
        "PERSISTENT_DATA_BLOCK_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#PERSISTENT_DATA_BLOCK_SERVICE"
        },
        "TV_INPUT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TV_INPUT_SERVICE"
        },
        "SIP_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SIP_SERVICE"
        },
        "FINGERPRINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#FINGERPRINT_SERVICE"
        },
        "LOCATION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LOCATION_SERVICE"
        },
        "LAUNCHER_APPS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LAUNCHER_APPS_SERVICE"
        },
        "NETWORK_STATS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_STATS_SERVICE"
        },
        "VOICE_INTERACTION_MANAGER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#VOICE_INTERACTION_MANAGER_SERVICE"
        },
        "TELECOM_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELECOM_SERVICE"
        },
        "SEARCH_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SEARCH_SERVICE"
        },
        "RADIO_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#RADIO_SERVICE"
        },
        "BIND_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_VISIBLE"
        },
        "BIND_NOT_FOREGROUND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_FOREGROUND"
        },
        "CONTEXT_RESTRICTED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_RESTRICTED"
        },
        "USER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USER_SERVICE"
        },
        "DROPBOX_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DROPBOX_SERVICE"
        },
        "BIND_TREAT_LIKE_ACTIVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_TREAT_LIKE_ACTIVITY"
        },
        "DEFAULT_KEYS_SEARCH_LOCAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SEARCH_LOCAL"
        },
        "BIND_FOREGROUND_SERVICE_WHILE_AWAKE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE_WHILE_AWAKE"
        },
        "CLIPBOARD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CLIPBOARD_SERVICE"
        },
        "LAYOUT_INFLATER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LAYOUT_INFLATER_SERVICE"
        },
        "WIFI_SCANNING_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SCANNING_SERVICE"
        },
        "PRINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#PRINT_SERVICE"
        },
        "WALLPAPER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WALLPAPER_SERVICE"
        },
        "ALARM_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ALARM_SERVICE"
        },
        "ACCOUNT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACCOUNT_SERVICE"
        },
        "TRUST_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TRUST_SERVICE"
        },
        "VIBRATOR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#VIBRATOR_SERVICE"
        },
        "RESULT_OK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_OK"
        },
        "NFC_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NFC_SERVICE"
        },
        "NOTIFICATION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NOTIFICATION_SERVICE"
        },
        "BLUETOOTH_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BLUETOOTH_SERVICE"
        },
        "POWER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#POWER_SERVICE"
        },
        "BIND_ALLOW_OOM_MANAGEMENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ALLOW_OOM_MANAGEMENT"
        },
        "DEFAULT_KEYS_DIALER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_DIALER"
        },
        "BACKUP_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BACKUP_SERVICE"
        },
        "COUNTRY_DETECTOR": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#COUNTRY_DETECTOR"
        },
        "SERIAL_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SERIAL_SERVICE"
        },
        "WIFI_PASSPOINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_PASSPOINT_SERVICE"
        },
        "CONSUMER_IR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONSUMER_IR_SERVICE"
        },
        "APP_OPS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#APP_OPS_SERVICE"
        },
        "ACTIVITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACTIVITY_SERVICE"
        },
        "STORAGE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#STORAGE_SERVICE"
        },
        "BIND_FOREGROUND_SERVICE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE"
        },
        "RESTRICTIONS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#RESTRICTIONS_SERVICE"
        },
        "CONNECTIVITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONNECTIVITY_SERVICE"
        },
        "TEXT_SERVICES_MANAGER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TEXT_SERVICES_MANAGER_SERVICE"
        },
        "USB_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USB_SERVICE"
        },
        "APPWIDGET_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#APPWIDGET_SERVICE"
        },
        "CONTEXT_REGISTER_PACKAGE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_REGISTER_PACKAGE"
        },
        "CARRIER_CONFIG_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CARRIER_CONFIG_SERVICE"
        },
        "NETWORK_POLICY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_POLICY_SERVICE"
        },
        "MIDI_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MIDI_SERVICE"
        },
        "BATTERY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BATTERY_SERVICE"
        },
        "MODE_MULTI_PROCESS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_MULTI_PROCESS"
        },
        "BIND_AUTO_CREATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_AUTO_CREATE"
        },
        "DISPLAY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DISPLAY_SERVICE"
        },
        "TELEPHONY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SERVICE"
        },
        "prototype": {
          "isBackgroundVisibleBehind": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isBackgroundVisibleBehind()"
          },
          "setProgressBarVisibility": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarVisibility(boolean)"
          },
          "setFeatureDrawableResource": {
            "!type": "fn(featureId: number, resId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableResource(int, int)"
          },
          "dispatchEnterAnimationComplete": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchEnterAnimationComplete()"
          },
          "finishActivityFromChild": {
            "!type": "fn(child: +android.app.Activity, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishActivityFromChild(android.app.Activity, int)"
          },
          "startPostponedEnterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startPostponedEnterTransition()"
          },
          "onProvideAssistContent": {
            "!type": "fn(outContent: +android.app.assist.AssistContent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideAssistContent(android.app.assist.AssistContent)"
          },
          "sendBroadcastMultiplePermissions": {
            "!type": "fn(intent: +android.content.Intent, receiverPermissions: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastMultiplePermissions(android.content.Intent, java.lang.String[])"
          },
          "getString": {
            "!type": "fn(resId: number) -> string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getString(int)"
          },
          "onKeyDown": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyDown(int, android.view.KeyEvent)"
          },
          "getResources": {
            "!type": "fn() -> +android.content.res.Resources",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getResources()"
          },
          "sendStickyBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcast(android.content.Intent)"
          },
          "startActivityFromFragment": {
            "!type": "fn(fragment: +android.app.Fragment, intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityFromFragment(android.app.Fragment, android.content.Intent, int)"
          },
          "onCreateThumbnail": {
            "!type": "fn(outBitmap: +android.graphics.Bitmap, canvas: +android.graphics.Canvas) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateThumbnail(android.graphics.Bitmap, android.graphics.Canvas)"
          },
          "getOpPackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getOpPackageName()"
          },
          "getCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCacheDir()"
          },
          "onWindowDismissed": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowDismissed()"
          },
          "getBaseContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBaseContext()"
          },
          "checkCallingOrSelfPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfPermission(java.lang.String)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "isVoiceInteractionRoot": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isVoiceInteractionRoot()"
          },
          "onDetachedFromWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onDetachedFromWindow()"
          },
          "setResult": {
            "!type": "fn(resultCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setResult(int)"
          },
          "onOptionsItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onOptionsItemSelected(android.view.MenuItem)"
          },
          "isChangingConfigurations": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isChangingConfigurations()"
          },
          "getCodeCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCodeCacheDir()"
          },
          "createPendingResult": {
            "!type": "fn(requestCode: number, data: +android.content.Intent, flags: number) -> +android.app.PendingIntent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#createPendingResult(int, android.content.Intent, int)"
          },
          "getPackageResourcePath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageResourcePath()"
          },
          "getCurrentFocus": {
            "!type": "fn() -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCurrentFocus()"
          },
          "triggerSearch": {
            "!type": "fn(query: string, appSearchData: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#triggerSearch(java.lang.String, android.os.Bundle)"
          },
          "convertToTranslucent": {
            "!type": "fn(callback: +android.app.Activity.TranslucentConversionListener, options: +android.app.ActivityOptions) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#convertToTranslucent(android.app.Activity.TranslucentConversionListener, android.app.ActivityOptions)"
          },
          "setListAdapter": {
            "!type": "fn(adapter: +android.widget.ListAdapter) -> void",
            "!url": "http://developer.android.com/reference/android/app/ListActivity.html#setListAdapter(android.widget.ListAdapter)"
          },
          "startActivityForResult": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityForResult(android.content.Intent, int)"
          },
          "getLayoutInflater": {
            "!type": "fn() -> +android.view.LayoutInflater",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLayoutInflater()"
          },
          "createPackageContext": {
            "!type": "fn(packageName: string, flags: number) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContext(java.lang.String, int)"
          },
          "enforcePermission": {
            "!type": "fn(permission: string, pid: number, uid: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforcePermission(java.lang.String, int, int, java.lang.String)"
          },
          "onWindowStartingActionMode": {
            "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowStartingActionMode(android.view.ActionMode.Callback)"
          },
          "registerForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#registerForContextMenu(android.view.View)"
          },
          "setSecondaryProgress": {
            "!type": "fn(secondaryProgress: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setSecondaryProgress(int)"
          },
          "onContentChanged": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/ListActivity.html#onContentChanged()"
          },
          "finishAndRemoveTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAndRemoveTask()"
          },
          "setFinishOnTouchOutside": {
            "!type": "fn(finish: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFinishOnTouchOutside(boolean)"
          },
          "requestWindowFeature": {
            "!type": "fn(featureId: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestWindowFeature(int)"
          },
          "createConfigurationContext": {
            "!type": "fn(overrideConfiguration: +android.content.res.Configuration) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createConfigurationContext(android.content.res.Configuration)"
          },
          "showDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showDialog(int)"
          },
          "onSearchRequested": {
            "!type": "fn(searchEvent: +android.view.SearchEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onSearchRequested(android.view.SearchEvent)"
          },
          "onContextItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onContextItemSelected(android.view.MenuItem)"
          },
          "onTrackballEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTrackballEvent(android.view.MotionEvent)"
          },
          "requestPermissions": {
            "!type": "fn(permissions: +java.newArray, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestPermissions(java.lang.String[], int)"
          },
          "getVoiceInteractor": {
            "!type": "fn() -> +android.app.VoiceInteractor",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getVoiceInteractor()"
          },
          "peekWallpaper": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#peekWallpaper()"
          },
          "onPrepareOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPrepareOptionsMenu(android.view.Menu)"
          },
          "onSaveInstanceState": {
            "!type": "fn(outState: +android.os.Bundle, outPersistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onSaveInstanceState(android.os.Bundle, android.os.PersistableBundle)"
          },
          "registerReceiver": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver, filter: +android.content.IntentFilter) -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter)"
          },
          "setActionBar": {
            "!type": "fn(toolbar: +android.widget.Toolbar) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setActionBar(android.widget.Toolbar)"
          },
          "getIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getIntent()"
          },
          "getObbDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDirs()"
          },
          "getPackageManager": {
            "!type": "fn() -> +android.content.pm.PackageManager",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageManager()"
          },
          "getSystemServiceName": {
            "!type": "fn(serviceClass: +java.lang.Class) -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSystemServiceName(java.lang.Class)"
          },
          "obtainStyledAttributes": {
            "!type": "fn(attrs: +java.newArray) -> +android.content.res.TypedArray",
            "!url": "http://developer.android.com/reference/android/content/Context.html#obtainStyledAttributes(int[])"
          },
          "getApplicationInfo": {
            "!type": "fn() -> +android.content.pm.ApplicationInfo",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationInfo()"
          },
          "setDefaultKeyMode": {
            "!type": "fn(mode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setDefaultKeyMode(int)"
          },
          "setProgressBarIndeterminate": {
            "!type": "fn(indeterminate: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarIndeterminate(boolean)"
          },
          "isRestricted": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#isRestricted()"
          },
          "hasWindowFocus": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#hasWindowFocus()"
          },
          "onConfigurationChanged": {
            "!type": "fn(newConfig: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onConfigurationChanged(android.content.res.Configuration)"
          },
          "getVolumeControlStream": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getVolumeControlStream()"
          },
          "databaseList": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#databaseList()"
          },
          "setTheme": {
            "!type": "fn(resid: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#setTheme(int)"
          },
          "isChild": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isChild()"
          },
          "isResumed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isResumed()"
          },
          "setRequestedOrientation": {
            "!type": "fn(requestedOrientation: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setRequestedOrientation(int)"
          },
          "onNewActivityOptions": {
            "!type": "fn(options: +android.app.ActivityOptions) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNewActivityOptions(android.app.ActivityOptions)"
          },
          "startActivity": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivity(android.content.Intent)"
          },
          "onGenericMotionEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onGenericMotionEvent(android.view.MotionEvent)"
          },
          "getSelectedItemId": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/app/ListActivity.html#getSelectedItemId()"
          },
          "onWindowAttributesChanged": {
            "!type": "fn(params: +android.view.WindowManager.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowAttributesChanged(android.view.WindowManager.LayoutParams)"
          },
          "onPostCreate": {
            "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPostCreate(android.os.Bundle, android.os.PersistableBundle)"
          },
          "onKeyUp": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyUp(int, android.view.KeyEvent)"
          },
          "enforceCallingOrSelfUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfUriPermission(android.net.Uri, int, java.lang.String)"
          },
          "grantUriPermission": {
            "!type": "fn(toPackage: string, uri: +android.net.Uri, modeFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#grantUriPermission(java.lang.String, android.net.Uri, int)"
          },
          "startActivityAsCaller": {
            "!type": "fn(intent: +android.content.Intent, options: +android.os.Bundle, ignoreTargetSecurity: bool, userId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityAsCaller(android.content.Intent, android.os.Bundle, boolean, int)"
          },
          "onActivityReenter": {
            "!type": "fn(resultCode: number, data: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActivityReenter(int, android.content.Intent)"
          },
          "dispatchKeyShortcutEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchKeyShortcutEvent(android.view.KeyEvent)"
          },
          "onNavigateUpFromChild": {
            "!type": "fn(child: +android.app.Activity) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNavigateUpFromChild(android.app.Activity)"
          },
          "onEnterAnimationComplete": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onEnterAnimationComplete()"
          },
          "setContentView": {
            "!type": "fn(layoutResID: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setContentView(int)"
          },
          "getPackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageName()"
          },
          "getActionBar": {
            "!type": "fn() -> +android.app.ActionBar",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getActionBar()"
          },
          "isDestroyed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isDestroyed()"
          },
          "sendBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "runOnUiThread": {
            "!type": "fn(action: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#runOnUiThread(java.lang.Runnable)"
          },
          "stopLockTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#stopLockTask()"
          },
          "createApplicationContext": {
            "!type": "fn(application: +android.content.pm.ApplicationInfo, flags: number) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createApplicationContext(android.content.pm.ApplicationInfo, int)"
          },
          "finishAffinity": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAffinity()"
          },
          "openContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#openContextMenu(android.view.View)"
          },
          "setTaskDescription": {
            "!type": "fn(taskDescription: +android.app.ActivityManager.TaskDescription) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setTaskDescription(android.app.ActivityManager.TaskDescription)"
          },
          "setTitleColor": {
            "!type": "fn(textColor: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setTitleColor(int)"
          },
          "showAssist": {
            "!type": "fn(args: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showAssist(android.os.Bundle)"
          },
          "onVisibleBehindCanceled": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onVisibleBehindCanceled()"
          },
          "finishAfterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAfterTransition()"
          },
          "startServiceAsUser": {
            "!type": "fn(service: +android.content.Intent, user: +android.os.UserHandle) -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startServiceAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "onNavigateUp": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNavigateUp()"
          },
          "getActivityToken": {
            "!type": "fn() -> +android.os.IBinder",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getActivityToken()"
          },
          "onAttachFragment": {
            "!type": "fn(fragment: +android.app.Fragment) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onAttachFragment(android.app.Fragment)"
          },
          "getApplication": {
            "!type": "fn() -> +android.app.Application",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getApplication()"
          },
          "applyOverrideConfiguration": {
            "!type": "fn(overrideConfiguration: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#applyOverrideConfiguration(android.content.res.Configuration)"
          },
          "fileList": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#fileList()"
          },
          "setSelection": {
            "!type": "fn(position: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/ListActivity.html#setSelection(int)"
          },
          "getTaskId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTaskId()"
          },
          "openOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#openOptionsMenu()"
          },
          "onBackgroundVisibleBehindChanged": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onBackgroundVisibleBehindChanged(boolean)"
          },
          "startNextMatchingActivity": {
            "!type": "fn(intent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startNextMatchingActivity(android.content.Intent)"
          },
          "onPrepareNavigateUpTaskStack": {
            "!type": "fn(builder: +android.app.TaskStackBuilder) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPrepareNavigateUpTaskStack(android.app.TaskStackBuilder)"
          },
          "onActionModeFinished": {
            "!type": "fn(mode: +android.view.ActionMode) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActionModeFinished(android.view.ActionMode)"
          },
          "getLocalClassName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLocalClassName()"
          },
          "managedQuery": {
            "!type": "fn(uri: +android.net.Uri, projection: +java.newArray, selection: string, sortOrder: string) -> +android.database.Cursor",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#managedQuery(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String)"
          },
          "checkPermission": {
            "!type": "fn(permission: string, pid: number, uid: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkPermission(java.lang.String, int, int)"
          },
          "getWallpaperDesiredMinimumHeight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumHeight()"
          },
          "startManagingCursor": {
            "!type": "fn(c: +android.database.Cursor) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startManagingCursor(android.database.Cursor)"
          },
          "onRequestPermissionsResult": {
            "!type": "fn(requestCode: number, permissions: +java.newArray, grantResults: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRequestPermissionsResult(int, java.lang.String[], int[])"
          },
          "revokeUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#revokeUriPermission(android.net.Uri, int)"
          },
          "startActivityIfNeeded": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityIfNeeded(android.content.Intent, int)"
          },
          "moveTaskToBack": {
            "!type": "fn(nonRoot: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#moveTaskToBack(boolean)"
          },
          "unregisterForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#unregisterForContextMenu(android.view.View)"
          },
          "setPersistent": {
            "!type": "fn(isPersistent: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setPersistent(boolean)"
          },
          "onUserInteraction": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onUserInteraction()"
          },
          "setFeatureDrawableUri": {
            "!type": "fn(featureId: number, uri: +android.net.Uri) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableUri(int, android.net.Uri)"
          },
          "onStateNotSaved": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onStateNotSaved()"
          },
          "sendStickyOrderedBroadcast": {
            "!type": "fn(intent: +android.content.Intent, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcast(android.content.Intent, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "sendStickyOrderedBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "setContentTransitionManager": {
            "!type": "fn(tm: +android.transition.TransitionManager) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setContentTransitionManager(android.transition.TransitionManager)"
          },
          "getLoaderManager": {
            "!type": "fn() -> +android.app.LoaderManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLoaderManager()"
          },
          "onRetainNonConfigurationInstance": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRetainNonConfigurationInstance()"
          },
          "getExternalFilesDir": {
            "!type": "fn(type: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDir(java.lang.String)"
          },
          "bindService": {
            "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindService(android.content.Intent, android.content.ServiceConnection, int)"
          },
          "startActivitiesAsUser": {
            "!type": "fn(intents: +java.newArray, options: +android.os.Bundle, userHandle: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivitiesAsUser(android.content.Intent[], android.os.Bundle, android.os.UserHandle)"
          },
          "onRestoreInstanceState": {
            "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRestoreInstanceState(android.os.Bundle, android.os.PersistableBundle)"
          },
          "recreate": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#recreate()"
          },
          "getDatabasePath": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDatabasePath(java.lang.String)"
          },
          "getListAdapter": {
            "!type": "fn() -> +android.widget.ListAdapter",
            "!url": "http://developer.android.com/reference/android/app/ListActivity.html#getListAdapter()"
          },
          "setEnterSharedElementCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setEnterSharedElementCallback(android.app.SharedElementCallback)"
          },
          "onCreateContextMenu": {
            "!type": "fn(menu: +android.view.ContextMenu, v: +android.view.View, menuInfo: +android.view.ContextMenu.ContextMenuInfo) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenu.ContextMenuInfo)"
          },
          "onProvideAssistData": {
            "!type": "fn(data: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideAssistData(android.os.Bundle)"
          },
          "checkSelfPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkSelfPermission(java.lang.String)"
          },
          "onPanelClosed": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPanelClosed(int, android.view.Menu)"
          },
          "onCreate": {
            "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreate(android.os.Bundle, android.os.PersistableBundle)"
          },
          "enforceCallingOrSelfPermission": {
            "!type": "fn(permission: string, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfPermission(java.lang.String, java.lang.String)"
          },
          "onTouchEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTouchEvent(android.view.MotionEvent)"
          },
          "getTheme": {
            "!type": "fn() -> +android.content.res.Resources.Theme",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getTheme()"
          },
          "onKeyLongPress": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyLongPress(int, android.view.KeyEvent)"
          },
          "setMediaController": {
            "!type": "fn(controller: +android.media.session.MediaController) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setMediaController(android.media.session.MediaController)"
          },
          "getChangingConfigurations": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getChangingConfigurations()"
          },
          "finishActivity": {
            "!type": "fn(requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishActivity(int)"
          },
          "onCreatePanelView": {
            "!type": "fn(featureId: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreatePanelView(int)"
          },
          "getSearchEvent": {
            "!type": "fn() -> +android.view.SearchEvent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getSearchEvent()"
          },
          "setVisible": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setVisible(boolean)"
          },
          "startIntentSender": {
            "!type": "fn(intent: +android.content.IntentSender, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSender(android.content.IntentSender, android.content.Intent, int, int, int)"
          },
          "getExternalFilesDirs": {
            "!type": "fn(type: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDirs(java.lang.String)"
          },
          "stopServiceAsUser": {
            "!type": "fn(name: +android.content.Intent, user: +android.os.UserHandle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopServiceAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "unbindService": {
            "!type": "fn(conn: +android.content.ServiceConnection) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unbindService(android.content.ServiceConnection)"
          },
          "startActivityAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "onKeyShortcut": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyShortcut(int, android.view.KeyEvent)"
          },
          "getSharedPrefsFile": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPrefsFile(java.lang.String)"
          },
          "getDir": {
            "!type": "fn(name: string, mode: number) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDir(java.lang.String, int)"
          },
          "releaseInstance": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#releaseInstance()"
          },
          "onKeyMultiple": {
            "!type": "fn(keyCode: number, repeatCount: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyMultiple(int, int, android.view.KeyEvent)"
          },
          "onPreparePanel": {
            "!type": "fn(featureId: number, view: +android.view.View, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPreparePanel(int, android.view.View, android.view.Menu)"
          },
          "bindServiceAsUser": {
            "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number, user: +android.os.UserHandle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindServiceAsUser(android.content.Intent, android.content.ServiceConnection, int, android.os.UserHandle)"
          },
          "closeContextMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#closeContextMenu()"
          },
          "startSearch": {
            "!type": "fn(initialQuery: string, selectInitialQuery: bool, appSearchData: +android.os.Bundle, globalSearch: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startSearch(java.lang.String, boolean, android.os.Bundle, boolean)"
          },
          "getComponentName": {
            "!type": "fn() -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getComponentName()"
          },
          "showLockTaskEscapeMessage": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showLockTaskEscapeMessage()"
          },
          "getContentTransitionManager": {
            "!type": "fn() -> +android.transition.TransitionManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getContentTransitionManager()"
          },
          "onBackPressed": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onBackPressed()"
          },
          "getExternalCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDir()"
          },
          "getDrawable": {
            "!type": "fn(id: number) -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getDrawable(int)"
          },
          "setImmersive": {
            "!type": "fn(i: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setImmersive(boolean)"
          },
          "openFileOutput": {
            "!type": "fn(name: string, mode: number) -> +java.io.FileOutputStream",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileOutput(java.lang.String, int)"
          },
          "getAssets": {
            "!type": "fn() -> +android.content.res.AssetManager",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getAssets()"
          },
          "onLowMemory": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onLowMemory()"
          },
          "getParentActivityIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getParentActivityIntent()"
          },
          "convertFromTranslucent": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#convertFromTranslucent()"
          },
          "dispatchTouchEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchTouchEvent(android.view.MotionEvent)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getContentScene": {
            "!type": "fn() -> +android.transition.Scene",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getContentScene()"
          },
          "getCallingPackage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCallingPackage()"
          },
          "deleteDatabase": {
            "!type": "fn(name: string) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteDatabase(java.lang.String)"
          },
          "checkCallingPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingPermission(java.lang.String)"
          },
          "dispatchGenericMotionEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchGenericMotionEvent(android.view.MotionEvent)"
          },
          "getExternalMediaDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalMediaDirs()"
          },
          "getCallingActivity": {
            "!type": "fn() -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCallingActivity()"
          },
          "onAttachedToWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onAttachedToWindow()"
          },
          "clearWallpaper": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#clearWallpaper()"
          },
          "setTitle": {
            "!type": "fn(title: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setTitle(java.lang.CharSequence)"
          },
          "getSelectedItemPosition": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/ListActivity.html#getSelectedItemPosition()"
          },
          "enforceCallingUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingUriPermission(android.net.Uri, int, java.lang.String)"
          },
          "getThemeResId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getThemeResId()"
          },
          "onWindowFocusChanged": {
            "!type": "fn(hasFocus: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowFocusChanged(boolean)"
          },
          "registerComponentCallbacks": {
            "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
            "!url": "http://developer.android.com/reference/android/content/Context.html#registerComponentCallbacks(android.content.ComponentCallbacks)"
          },
          "getText": {
            "!type": "fn(resId: number) -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getText(int)"
          },
          "enforceUriPermission": {
            "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceUriPermission(android.net.Uri, int, int, int, java.lang.String)"
          },
          "onProvideReferrer": {
            "!type": "fn() -> +android.net.Uri",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideReferrer()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "unregisterComponentCallbacks": {
            "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
            "!url": "http://developer.android.com/reference/android/content/Context.html#unregisterComponentCallbacks(android.content.ComponentCallbacks)"
          },
          "finish": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finish()"
          },
          "getWallpaperDesiredMinimumWidth": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumWidth()"
          },
          "onMenuItemSelected": {
            "!type": "fn(featureId: number, item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onMenuItemSelected(int, android.view.MenuItem)"
          },
          "getWallpaper": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaper()"
          },
          "isVoiceInteraction": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isVoiceInteraction()"
          },
          "navigateUpTo": {
            "!type": "fn(upIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#navigateUpTo(android.content.Intent)"
          },
          "onCreatePanelMenu": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreatePanelMenu(int, android.view.Menu)"
          },
          "openOrCreateDatabase": {
            "!type": "fn(name: string, mode: number, factory: +android.database.sqlite.SQLiteDatabase.CursorFactory) -> +android.database.sqlite.SQLiteDatabase",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openOrCreateDatabase(java.lang.String, int, android.database.sqlite.SQLiteDatabase.CursorFactory)"
          },
          "openFileInput": {
            "!type": "fn(name: string) -> +java.io.FileInputStream",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileInput(java.lang.String)"
          },
          "dump": {
            "!type": "fn(prefix: string, fd: +java.io.FileDescriptor, writer: +java.io.PrintWriter, args: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])"
          },
          "onCreateDescription": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateDescription()"
          },
          "invalidateOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#invalidateOptionsMenu()"
          },
          "sendOrderedBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, receiverPermission: string, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, java.lang.String, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "canStartActivityForResult": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#canStartActivityForResult()"
          },
          "setProgress": {
            "!type": "fn(progress: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgress(int)"
          },
          "navigateUpToFromChild": {
            "!type": "fn(child: +android.app.Activity, upIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#navigateUpToFromChild(android.app.Activity, android.content.Intent)"
          },
          "getContentResolver": {
            "!type": "fn() -> +android.content.ContentResolver",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getContentResolver()"
          },
          "isFinishing": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isFinishing()"
          },
          "getFragmentManager": {
            "!type": "fn() -> +android.app.FragmentManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getFragmentManager()"
          },
          "getParent": {
            "!type": "fn() -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getParent()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "checkCallingUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingUriPermission(android.net.Uri, int)"
          },
          "setExitSharedElementCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setExitSharedElementCallback(android.app.SharedElementCallback)"
          },
          "checkUriPermission": {
            "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkUriPermission(android.net.Uri, int, int, int)"
          },
          "setFeatureDrawableAlpha": {
            "!type": "fn(featureId: number, alpha: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableAlpha(int, int)"
          },
          "registerReceiverAsUser": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver, user: +android.os.UserHandle, filter: +android.content.IntentFilter, broadcastPermission: string, scheduler: +android.os.Handler) -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiverAsUser(android.content.BroadcastReceiver, android.os.UserHandle, android.content.IntentFilter, java.lang.String, android.os.Handler)"
          },
          "getPackageCodePath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageCodePath()"
          },
          "getWindow": {
            "!type": "fn() -> +android.view.Window",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getWindow()"
          },
          "startIntentSenderFromChild": {
            "!type": "fn(child: +android.app.Activity, intent: +android.content.IntentSender, requestCode: number, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSenderFromChild(android.app.Activity, android.content.IntentSender, int, android.content.Intent, int, int, int)"
          },
          "postponeEnterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#postponeEnterTransition()"
          },
          "shouldUpRecreateTask": {
            "!type": "fn(targetIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#shouldUpRecreateTask(android.content.Intent)"
          },
          "removeStickyBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "deleteFile": {
            "!type": "fn(name: string) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteFile(java.lang.String)"
          },
          "onContextMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onContextMenuClosed(android.view.Menu)"
          },
          "onCreateOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateOptionsMenu(android.view.Menu)"
          },
          "getClassLoader": {
            "!type": "fn() -> +java.lang.ClassLoader",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getClassLoader()"
          },
          "dispatchPopulateAccessibilityEvent": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
          },
          "setIntent": {
            "!type": "fn(newIntent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setIntent(android.content.Intent)"
          },
          "setVolumeControlStream": {
            "!type": "fn(streamType: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setVolumeControlStream(int)"
          },
          "getObbDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDir()"
          },
          "startInstrumentation": {
            "!type": "fn(className: +android.content.ComponentName, profileFile: string, arguments: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startInstrumentation(android.content.ComponentName, java.lang.String, android.os.Bundle)"
          },
          "reportFullyDrawn": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#reportFullyDrawn()"
          },
          "setProgressBarIndeterminateVisibility": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarIndeterminateVisibility(boolean)"
          },
          "finishFromChild": {
            "!type": "fn(child: +android.app.Activity) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishFromChild(android.app.Activity)"
          },
          "getColorStateList": {
            "!type": "fn(id: number) -> +android.content.res.ColorStateList",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getColorStateList(int)"
          },
          "getTitleColor": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTitleColor()"
          },
          "getMediaController": {
            "!type": "fn() -> +android.media.session.MediaController",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getMediaController()"
          },
          "sendBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcast(android.content.Intent)"
          },
          "overridePendingTransition": {
            "!type": "fn(enterAnim: number, exitAnim: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#overridePendingTransition(int, int)"
          },
          "dispatchTrackballEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchTrackballEvent(android.view.MotionEvent)"
          },
          "getNoBackupFilesDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getNoBackupFilesDir()"
          },
          "startActionMode": {
            "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActionMode(android.view.ActionMode.Callback)"
          },
          "getApplicationContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationContext()"
          },
          "onCreateNavigateUpTaskStack": {
            "!type": "fn(builder: +android.app.TaskStackBuilder) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateNavigateUpTaskStack(android.app.TaskStackBuilder)"
          },
          "createDisplayContext": {
            "!type": "fn(display: +android.view.Display) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createDisplayContext(android.view.Display)"
          },
          "onActionModeStarted": {
            "!type": "fn(mode: +android.view.ActionMode) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActionModeStarted(android.view.ActionMode)"
          },
          "dispatchKeyEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchKeyEvent(android.view.KeyEvent)"
          },
          "enforceCallingPermission": {
            "!type": "fn(permission: string, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingPermission(java.lang.String, java.lang.String)"
          },
          "createPackageContextAsUser": {
            "!type": "fn(packageName: string, flags: number, user: +android.os.UserHandle) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContextAsUser(java.lang.String, int, android.os.UserHandle)"
          },
          "setFeatureDrawable": {
            "!type": "fn(featureId: number, drawable: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawable(int, android.graphics.drawable.Drawable)"
          },
          "dismissDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dismissDialog(int)"
          },
          "onMenuOpened": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onMenuOpened(int, android.view.Menu)"
          },
          "getSystemService": {
            "!type": "fn(name: string) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getSystemService(java.lang.String)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "startActivities": {
            "!type": "fn(intents: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivities(android.content.Intent[])"
          },
          "startService": {
            "!type": "fn(service: +android.content.Intent) -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startService(android.content.Intent)"
          },
          "getFileStreamPath": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFileStreamPath(java.lang.String)"
          },
          "addContentView": {
            "!type": "fn(view: +android.view.View, params: +android.view.ViewGroup.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#addContentView(android.view.View, android.view.ViewGroup.LayoutParams)"
          },
          "closeOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#closeOptionsMenu()"
          },
          "sendStickyBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "takeKeyEvents": {
            "!type": "fn(get: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#takeKeyEvents(boolean)"
          },
          "getTitle": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTitle()"
          },
          "getWindowManager": {
            "!type": "fn() -> +android.view.WindowManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getWindowManager()"
          },
          "checkCallingOrSelfUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfUriPermission(android.net.Uri, int)"
          },
          "getBasePackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBasePackageName()"
          },
          "stopManagingCursor": {
            "!type": "fn(c: +android.database.Cursor) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#stopManagingCursor(android.database.Cursor)"
          },
          "setWallpaper": {
            "!type": "fn(bitmap: +android.graphics.Bitmap) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#setWallpaper(android.graphics.Bitmap)"
          },
          "sendOrderedBroadcast": {
            "!type": "fn(intent: +android.content.Intent, receiverPermission: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcast(android.content.Intent, java.lang.String)"
          },
          "unregisterReceiver": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unregisterReceiver(android.content.BroadcastReceiver)"
          },
          "getColor": {
            "!type": "fn(id: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getColor(int)"
          },
          "getMenuInflater": {
            "!type": "fn() -> +android.view.MenuInflater",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getMenuInflater()"
          },
          "stopService": {
            "!type": "fn(name: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopService(android.content.Intent)"
          },
          "getMainLooper": {
            "!type": "fn() -> +android.os.Looper",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getMainLooper()"
          },
          "startActivityFromChild": {
            "!type": "fn(child: +android.app.Activity, intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityFromChild(android.app.Activity, android.content.Intent, int)"
          },
          "startLockTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startLockTask()"
          },
          "removeStickyBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcast(android.content.Intent)"
          },
          "getExternalCacheDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDirs()"
          },
          "getReferrer": {
            "!type": "fn() -> +android.net.Uri",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getReferrer()"
          },
          "isImmersive": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isImmersive()"
          },
          "shouldShowRequestPermissionRationale": {
            "!type": "fn(permission: string) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#shouldShowRequestPermissionRationale(java.lang.String)"
          },
          "getPreferences": {
            "!type": "fn(mode: number) -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getPreferences(int)"
          },
          "getFilesDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFilesDir()"
          },
          "findViewById": {
            "!type": "fn(id: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#findViewById(int)"
          },
          "getSharedPreferences": {
            "!type": "fn(name: string, mode: number) -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPreferences(java.lang.String, int)"
          },
          "isTaskRoot": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isTaskRoot()"
          },
          "getLastNonConfigurationInstance": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLastNonConfigurationInstance()"
          },
          "getDisplayAdjustments": {
            "!type": "fn(displayId: number) -> +android.view.DisplayAdjustments",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDisplayAdjustments(int)"
          },
          "getRequestedOrientation": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getRequestedOrientation()"
          },
          "onTrimMemory": {
            "!type": "fn(level: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTrimMemory(int)"
          },
          "removeDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#removeDialog(int)"
          },
          "getUserId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getUserId()"
          },
          "requestVisibleBehind": {
            "!type": "fn(visible: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestVisibleBehind(boolean)"
          },
          "onOptionsMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onOptionsMenuClosed(android.view.Menu)"
          },
          "onCreateView": {
            "!type": "fn(name: string, context: +android.content.Context, attrs: +android.util.AttributeSet) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateView(java.lang.String, android.content.Context, android.util.AttributeSet)"
          },
          "startActivityForResultAsUser": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityForResultAsUser(android.content.Intent, int, android.os.UserHandle)"
          },
          "startIntentSenderForResult": {
            "!type": "fn(intent: +android.content.IntentSender, requestCode: number, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSenderForResult(android.content.IntentSender, int, android.content.Intent, int, int, int)"
          },
          "getListView": {
            "!type": "fn() -> +android.widget.ListView",
            "!url": "http://developer.android.com/reference/android/app/ListActivity.html#getListView()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          }
        }
      },
      "TaskStackBuilder": {
        "!url": "http://developer.android.com/reference/android/app/TaskStackBuilder.html",
        "create": {
          "!type": "fn(context: +android.content.Context) -> +android.app.TaskStackBuilder",
          "!url": "http://developer.android.com/reference/android/app/TaskStackBuilder.html#create(android.content.Context)"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "startActivities": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/TaskStackBuilder.html#startActivities()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getIntentCount": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/TaskStackBuilder.html#getIntentCount()"
          },
          "addParentStack": {
            "!type": "fn(sourceActivity: +android.app.Activity) -> +android.app.TaskStackBuilder",
            "!url": "http://developer.android.com/reference/android/app/TaskStackBuilder.html#addParentStack(android.app.Activity)"
          },
          "getPendingIntent": {
            "!type": "fn(requestCode: number, flags: number) -> +android.app.PendingIntent",
            "!url": "http://developer.android.com/reference/android/app/TaskStackBuilder.html#getPendingIntent(int, int)"
          },
          "addNextIntent": {
            "!type": "fn(nextIntent: +android.content.Intent) -> +android.app.TaskStackBuilder",
            "!url": "http://developer.android.com/reference/android/app/TaskStackBuilder.html#addNextIntent(android.content.Intent)"
          },
          "getIntents": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/app/TaskStackBuilder.html#getIntents()"
          },
          "addNextIntentWithParentStack": {
            "!type": "fn(nextIntent: +android.content.Intent) -> +android.app.TaskStackBuilder",
            "!url": "http://developer.android.com/reference/android/app/TaskStackBuilder.html#addNextIntentWithParentStack(android.content.Intent)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "editIntentAt": {
            "!type": "fn(index: number) -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/app/TaskStackBuilder.html#editIntentAt(int)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "UiAutomation": {
        "!url": "http://developer.android.com/reference/android/app/UiAutomation.html",
        "!type": "fn(looper: +android.os.Looper, connection: IUiAutomationConnection)",
        "ROTATION_FREEZE_180": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/UiAutomation.html#ROTATION_FREEZE_180"
        },
        "ROTATION_FREEZE_CURRENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/UiAutomation.html#ROTATION_FREEZE_CURRENT"
        },
        "ROTATION_FREEZE_90": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/UiAutomation.html#ROTATION_FREEZE_90"
        },
        "ROTATION_UNFREEZE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/UiAutomation.html#ROTATION_UNFREEZE"
        },
        "ROTATION_FREEZE_270": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/UiAutomation.html#ROTATION_FREEZE_270"
        },
        "ROTATION_FREEZE_0": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/UiAutomation.html#ROTATION_FREEZE_0"
        },
        "prototype": {
          "connect": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/UiAutomation.html#connect()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "executeShellCommand": {
            "!type": "fn(command: string) -> +android.os.ParcelFileDescriptor",
            "!url": "http://developer.android.com/reference/android/app/UiAutomation.html#executeShellCommand(java.lang.String)"
          },
          "waitForIdle": {
            "!type": "fn(idleTimeoutMillis: +java.lang.Long, globalTimeoutMillis: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/android/app/UiAutomation.html#waitForIdle(long, long)"
          },
          "executeAndWaitForEvent": {
            "!type": "fn(command: +java.lang.Runnable, filter: +android.app.UiAutomation.AccessibilityEventFilter, timeoutMillis: +java.lang.Long) -> +android.view.accessibility.AccessibilityEvent",
            "!url": "http://developer.android.com/reference/android/app/UiAutomation.html#executeAndWaitForEvent(java.lang.Runnable, android.app.UiAutomation.AccessibilityEventFilter, long)"
          },
          "injectInputEvent": {
            "!type": "fn(event: +android.view.InputEvent, sync: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/app/UiAutomation.html#injectInputEvent(android.view.InputEvent, boolean)"
          },
          "getConnectionId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/UiAutomation.html#getConnectionId()"
          },
          "takeScreenshot": {
            "!type": "fn() -> +android.graphics.Bitmap",
            "!url": "http://developer.android.com/reference/android/app/UiAutomation.html#takeScreenshot()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "findFocus": {
            "!type": "fn(focus: number) -> +android.view.accessibility.AccessibilityNodeInfo",
            "!url": "http://developer.android.com/reference/android/app/UiAutomation.html#findFocus(int)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "setRunAsMonkey": {
            "!type": "fn(enable: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/UiAutomation.html#setRunAsMonkey(boolean)"
          },
          "performGlobalAction": {
            "!type": "fn(action: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/UiAutomation.html#performGlobalAction(int)"
          },
          "setOnAccessibilityEventListener": {
            "!type": "fn(listener: +android.app.UiAutomation.OnAccessibilityEventListener) -> void",
            "!url": "http://developer.android.com/reference/android/app/UiAutomation.html#setOnAccessibilityEventListener(android.app.UiAutomation.OnAccessibilityEventListener)"
          },
          "setServiceInfo": {
            "!type": "fn(info: +android.accessibilityservice.AccessibilityServiceInfo) -> void",
            "!url": "http://developer.android.com/reference/android/app/UiAutomation.html#setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)"
          },
          "getWindows": {
            "!type": "fn() -> +java.util.List",
            "!url": "http://developer.android.com/reference/android/app/UiAutomation.html#getWindows()"
          },
          "getWindowContentFrameStats": {
            "!type": "fn(windowId: number) -> +android.view.WindowContentFrameStats",
            "!url": "http://developer.android.com/reference/android/app/UiAutomation.html#getWindowContentFrameStats(int)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "clearWindowAnimationFrameStats": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/UiAutomation.html#clearWindowAnimationFrameStats()"
          },
          "clearWindowContentFrameStats": {
            "!type": "fn(windowId: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/UiAutomation.html#clearWindowContentFrameStats(int)"
          },
          "setRotation": {
            "!type": "fn(rotation: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/UiAutomation.html#setRotation(int)"
          },
          "getRootInActiveWindow": {
            "!type": "fn() -> +android.view.accessibility.AccessibilityNodeInfo",
            "!url": "http://developer.android.com/reference/android/app/UiAutomation.html#getRootInActiveWindow()"
          },
          "disconnect": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/UiAutomation.html#disconnect()"
          },
          "getWindowAnimationFrameStats": {
            "!type": "fn() -> +android.view.WindowAnimationFrameStats",
            "!url": "http://developer.android.com/reference/android/app/UiAutomation.html#getWindowAnimationFrameStats()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "getServiceInfo": {
            "!type": "fn() -> +android.accessibilityservice.AccessibilityServiceInfo",
            "!url": "http://developer.android.com/reference/android/app/UiAutomation.html#getServiceInfo()"
          }
        }
      },
      "Notification": {
        "!url": "http://developer.android.com/reference/android/app/Notification.html",
        "!type": "fn()",
        "Action": {
          "!url": "http://developer.android.com/reference/android/app/Notification.Action.html",
          "!type": "fn(icon: number, title: +java.lang.CharSequence, intent: +android.app.PendingIntent)",
          "Builder": {
            "!url": "http://developer.android.com/reference/android/app/Notification.Action.Builder.html",
            "!type": "fn(icon: number, title: +java.lang.CharSequence, intent: +android.app.PendingIntent)",
            "prototype": {
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "addRemoteInput": {
                "!type": "fn(remoteInput: +android.app.RemoteInput) -> +android.app.Notification.Action.Builder",
                "!url": "http://developer.android.com/reference/android/app/Notification.Action.Builder.html#addRemoteInput(android.app.RemoteInput)"
              },
              "extend": {
                "!type": "fn(extender: +android.app.Notification.Action.Extender) -> +android.app.Notification.Action.Builder",
                "!url": "http://developer.android.com/reference/android/app/Notification.Action.Builder.html#extend(android.app.Notification.Action.Extender)"
              },
              "addExtras": {
                "!type": "fn(extras: +android.os.Bundle) -> +android.app.Notification.Action.Builder",
                "!url": "http://developer.android.com/reference/android/app/Notification.Action.Builder.html#addExtras(android.os.Bundle)"
              },
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "build": {
                "!type": "fn() -> +android.app.Notification.Action",
                "!url": "http://developer.android.com/reference/android/app/Notification.Action.Builder.html#build()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "getExtras": {
                "!type": "fn() -> +android.os.Bundle",
                "!url": "http://developer.android.com/reference/android/app/Notification.Action.Builder.html#getExtras()"
              }
            }
          },
          "WearableExtender": {
            "!url": "http://developer.android.com/reference/android/app/Notification.Action.WearableExtender.html",
            "!type": "fn()",
            "prototype": {
              "setCancelLabel": {
                "!type": "fn(label: +java.lang.CharSequence) -> +android.app.Notification.Action.WearableExtender",
                "!url": "http://developer.android.com/reference/android/app/Notification.Action.WearableExtender.html#setCancelLabel(java.lang.CharSequence)"
              },
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "setAvailableOffline": {
                "!type": "fn(availableOffline: bool) -> +android.app.Notification.Action.WearableExtender",
                "!url": "http://developer.android.com/reference/android/app/Notification.Action.WearableExtender.html#setAvailableOffline(boolean)"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "getCancelLabel": {
                "!type": "fn() -> +java.lang.CharSequence",
                "!url": "http://developer.android.com/reference/android/app/Notification.Action.WearableExtender.html#getCancelLabel()"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "getConfirmLabel": {
                "!type": "fn() -> +java.lang.CharSequence",
                "!url": "http://developer.android.com/reference/android/app/Notification.Action.WearableExtender.html#getConfirmLabel()"
              },
              "setInProgressLabel": {
                "!type": "fn(label: +java.lang.CharSequence) -> +android.app.Notification.Action.WearableExtender",
                "!url": "http://developer.android.com/reference/android/app/Notification.Action.WearableExtender.html#setInProgressLabel(java.lang.CharSequence)"
              },
              "extend": {
                "!type": "fn(builder: +android.app.Notification.Action.Builder) -> +android.app.Notification.Action.Builder",
                "!url": "http://developer.android.com/reference/android/app/Notification.Action.WearableExtender.html#extend(android.app.Notification.Action.Builder)"
              },
              "clone": {
                "!type": "fn() -> +android.app.Notification.Action.WearableExtender",
                "!url": "http://developer.android.com/reference/android/app/Notification.Action.WearableExtender.html#clone()"
              },
              "getInProgressLabel": {
                "!type": "fn() -> +java.lang.CharSequence",
                "!url": "http://developer.android.com/reference/android/app/Notification.Action.WearableExtender.html#getInProgressLabel()"
              },
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "isAvailableOffline": {
                "!type": "fn() -> bool",
                "!url": "http://developer.android.com/reference/android/app/Notification.Action.WearableExtender.html#isAvailableOffline()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "setConfirmLabel": {
                "!type": "fn(label: +java.lang.CharSequence) -> +android.app.Notification.Action.WearableExtender",
                "!url": "http://developer.android.com/reference/android/app/Notification.Action.WearableExtender.html#setConfirmLabel(java.lang.CharSequence)"
              }
            }
          },
          "CREATOR": {
            "!type": "+android.os.Parcelable.Creator",
            "!url": "http://developer.android.com/reference/android/app/Notification.Action.html#CREATOR"
          },
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "describeContents": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/app/Notification.Action.html#describeContents()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "getRemoteInputs": {
              "!type": "fn() -> +java.newArray",
              "!url": "http://developer.android.com/reference/android/app/Notification.Action.html#getRemoteInputs()"
            },
            "clone": {
              "!type": "fn() -> +android.app.Notification.Action",
              "!url": "http://developer.android.com/reference/android/app/Notification.Action.html#clone()"
            },
            "writeToParcel": {
              "!type": "fn(out: +android.os.Parcel, flags: number) -> void",
              "!url": "http://developer.android.com/reference/android/app/Notification.Action.html#writeToParcel(android.os.Parcel, int)"
            },
            "getIcon": {
              "!type": "fn() -> +android.graphics.drawable.Icon",
              "!url": "http://developer.android.com/reference/android/app/Notification.Action.html#getIcon()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "getExtras": {
              "!type": "fn() -> +android.os.Bundle",
              "!url": "http://developer.android.com/reference/android/app/Notification.Action.html#getExtras()"
            }
          }
        },
        "Builder": {
          "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html",
          "!type": "fn(context: +android.content.Context)",
          "EXTRA_REBUILD_CONTENT_VIEW_ACTION_COUNT": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#EXTRA_REBUILD_CONTENT_VIEW_ACTION_COUNT"
          },
          "EXTRA_REBUILD_HEADS_UP_CONTENT_VIEW_ACTION_COUNT": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#EXTRA_REBUILD_HEADS_UP_CONTENT_VIEW_ACTION_COUNT"
          },
          "EXTRA_NEEDS_REBUILD": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#EXTRA_NEEDS_REBUILD"
          },
          "EXTRA_REBUILD_BIG_CONTENT_VIEW_ACTION_COUNT": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#EXTRA_REBUILD_BIG_CONTENT_VIEW_ACTION_COUNT"
          },
          "EXTRA_REBUILD_BIG_CONTENT_VIEW": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#EXTRA_REBUILD_BIG_CONTENT_VIEW"
          },
          "EXTRA_REBUILD_CONTENT_VIEW": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#EXTRA_REBUILD_CONTENT_VIEW"
          },
          "EXTRA_REBUILD_HEADS_UP_CONTENT_VIEW": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#EXTRA_REBUILD_HEADS_UP_CONTENT_VIEW"
          },
          "EXTRA_REBUILD_LARGE_ICON": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#EXTRA_REBUILD_LARGE_ICON"
          },
          "rebuild": {
            "!type": "fn(context: +android.content.Context, n: +android.app.Notification) -> +android.app.Notification",
            "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#rebuild(android.content.Context, android.app.Notification)"
          },
          "stripForDelivery": {
            "!type": "fn(n: +android.app.Notification) -> void",
            "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#stripForDelivery(android.app.Notification)"
          },
          "calculateTopPadding": {
            "!type": "fn(ctx: +android.content.Context, hasThreeLines: bool, fontScale: +java.lang.Float) -> number",
            "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#calculateTopPadding(android.content.Context, boolean, float)"
          },
          "prototype": {
            "setLargeIcon": {
              "!type": "fn(b: +android.graphics.Bitmap) -> +android.app.Notification.Builder",
              "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#setLargeIcon(android.graphics.Bitmap)"
            },
            "setContentIntent": {
              "!type": "fn(intent: +android.app.PendingIntent) -> +android.app.Notification.Builder",
              "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#setContentIntent(android.app.PendingIntent)"
            },
            "setContentText": {
              "!type": "fn(text: +java.lang.CharSequence) -> +android.app.Notification.Builder",
              "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#setContentText(java.lang.CharSequence)"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "addPerson": {
              "!type": "fn(uri: string) -> +android.app.Notification.Builder",
              "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#addPerson(java.lang.String)"
            },
            "setContent": {
              "!type": "fn(views: +android.widget.RemoteViews) -> +android.app.Notification.Builder",
              "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#setContent(android.widget.RemoteViews)"
            },
            "setFlag": {
              "!type": "fn(mask: number, value: bool) -> void",
              "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#setFlag(int, boolean)"
            },
            "setLocalOnly": {
              "!type": "fn(localOnly: bool) -> +android.app.Notification.Builder",
              "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#setLocalOnly(boolean)"
            },
            "setSubText": {
              "!type": "fn(text: +java.lang.CharSequence) -> +android.app.Notification.Builder",
              "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#setSubText(java.lang.CharSequence)"
            },
            "getNotification": {
              "!type": "fn() -> +android.app.Notification",
              "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#getNotification()"
            },
            "setOngoing": {
              "!type": "fn(ongoing: bool) -> +android.app.Notification.Builder",
              "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#setOngoing(boolean)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "setWhen": {
              "!type": "fn(when: +java.lang.Long) -> +android.app.Notification.Builder",
              "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#setWhen(long)"
            },
            "setVibrate": {
              "!type": "fn(pattern: +java.newArray) -> +android.app.Notification.Builder",
              "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#setVibrate(long[])"
            },
            "setDeleteIntent": {
              "!type": "fn(intent: +android.app.PendingIntent) -> +android.app.Notification.Builder",
              "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#setDeleteIntent(android.app.PendingIntent)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "extend": {
              "!type": "fn(extender: +android.app.Notification.Extender) -> +android.app.Notification.Builder",
              "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#extend(android.app.Notification.Extender)"
            },
            "setGroup": {
              "!type": "fn(groupKey: string) -> +android.app.Notification.Builder",
              "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#setGroup(java.lang.String)"
            },
            "setCategory": {
              "!type": "fn(category: string) -> +android.app.Notification.Builder",
              "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#setCategory(java.lang.String)"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "buildUnstyled": {
              "!type": "fn() -> +android.app.Notification",
              "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#buildUnstyled()"
            },
            "populateExtras": {
              "!type": "fn(extras: +android.os.Bundle) -> void",
              "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#populateExtras(android.os.Bundle)"
            },
            "getExtras": {
              "!type": "fn() -> +android.os.Bundle",
              "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#getExtras()"
            },
            "setColor": {
              "!type": "fn(argb: number) -> +android.app.Notification.Builder",
              "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#setColor(int)"
            },
            "setVisibility": {
              "!type": "fn(visibility: number) -> +android.app.Notification.Builder",
              "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#setVisibility(int)"
            },
            "setSound": {
              "!type": "fn(sound: +android.net.Uri) -> +android.app.Notification.Builder",
              "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#setSound(android.net.Uri)"
            },
            "setContentInfo": {
              "!type": "fn(info: +java.lang.CharSequence) -> +android.app.Notification.Builder",
              "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#setContentInfo(java.lang.CharSequence)"
            },
            "setPriority": {
              "!type": "fn(pri: number) -> +android.app.Notification.Builder",
              "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#setPriority(int)"
            },
            "setPublicVersion": {
              "!type": "fn(n: +android.app.Notification) -> +android.app.Notification.Builder",
              "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#setPublicVersion(android.app.Notification)"
            },
            "setExtras": {
              "!type": "fn(extras: +android.os.Bundle) -> +android.app.Notification.Builder",
              "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#setExtras(android.os.Bundle)"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "setFullScreenIntent": {
              "!type": "fn(intent: +android.app.PendingIntent, highPriority: bool) -> +android.app.Notification.Builder",
              "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#setFullScreenIntent(android.app.PendingIntent, boolean)"
            },
            "setSmallIcon": {
              "!type": "fn(icon: number) -> +android.app.Notification.Builder",
              "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#setSmallIcon(int)"
            },
            "setContentTitle": {
              "!type": "fn(title: +java.lang.CharSequence) -> +android.app.Notification.Builder",
              "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#setContentTitle(java.lang.CharSequence)"
            },
            "setOnlyAlertOnce": {
              "!type": "fn(onlyAlertOnce: bool) -> +android.app.Notification.Builder",
              "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#setOnlyAlertOnce(boolean)"
            },
            "setProgress": {
              "!type": "fn(max: number, progress: number, indeterminate: bool) -> +android.app.Notification.Builder",
              "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#setProgress(int, int, boolean)"
            },
            "setShowWhen": {
              "!type": "fn(show: bool) -> +android.app.Notification.Builder",
              "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#setShowWhen(boolean)"
            },
            "setNumber": {
              "!type": "fn(number: number) -> +android.app.Notification.Builder",
              "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#setNumber(int)"
            },
            "setStyle": {
              "!type": "fn(style: +android.app.Notification.Style) -> +android.app.Notification.Builder",
              "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#setStyle(android.app.Notification.Style)"
            },
            "addExtras": {
              "!type": "fn(extras: +android.os.Bundle) -> +android.app.Notification.Builder",
              "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#addExtras(android.os.Bundle)"
            },
            "buildInto": {
              "!type": "fn(n: +android.app.Notification) -> +android.app.Notification",
              "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#buildInto(android.app.Notification)"
            },
            "build": {
              "!type": "fn() -> +android.app.Notification",
              "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#build()"
            },
            "setDefaults": {
              "!type": "fn(defaults: number) -> +android.app.Notification.Builder",
              "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#setDefaults(int)"
            },
            "setUsesChronometer": {
              "!type": "fn(b: bool) -> +android.app.Notification.Builder",
              "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#setUsesChronometer(boolean)"
            },
            "setGroupSummary": {
              "!type": "fn(isGroupSummary: bool) -> +android.app.Notification.Builder",
              "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#setGroupSummary(boolean)"
            },
            "setLights": {
              "!type": "fn(argb: number, onMs: number, offMs: number) -> +android.app.Notification.Builder",
              "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#setLights(int, int, int)"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "setTicker": {
              "!type": "fn(tickerText: +java.lang.CharSequence) -> +android.app.Notification.Builder",
              "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#setTicker(java.lang.CharSequence)"
            },
            "addAction": {
              "!type": "fn(icon: number, title: +java.lang.CharSequence, intent: +android.app.PendingIntent) -> +android.app.Notification.Builder",
              "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#addAction(int, java.lang.CharSequence, android.app.PendingIntent)"
            },
            "setSortKey": {
              "!type": "fn(sortKey: string) -> +android.app.Notification.Builder",
              "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#setSortKey(java.lang.String)"
            },
            "setAutoCancel": {
              "!type": "fn(autoCancel: bool) -> +android.app.Notification.Builder",
              "!url": "http://developer.android.com/reference/android/app/Notification.Builder.html#setAutoCancel(boolean)"
            }
          }
        },
        "Style": {
          "!url": "http://developer.android.com/reference/android/app/Notification.Style.html",
          "!type": "fn()",
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "setBuilder": {
              "!type": "fn(builder: +android.app.Notification.Builder) -> void",
              "!url": "http://developer.android.com/reference/android/app/Notification.Style.html#setBuilder(android.app.Notification.Builder)"
            },
            "purgeResources": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/Notification.Style.html#purgeResources()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "buildStyled": {
              "!type": "fn(wip: +android.app.Notification) -> +android.app.Notification",
              "!url": "http://developer.android.com/reference/android/app/Notification.Style.html#buildStyled(android.app.Notification)"
            },
            "addExtras": {
              "!type": "fn(extras: +android.os.Bundle) -> void",
              "!url": "http://developer.android.com/reference/android/app/Notification.Style.html#addExtras(android.os.Bundle)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "build": {
              "!type": "fn() -> +android.app.Notification",
              "!url": "http://developer.android.com/reference/android/app/Notification.Style.html#build()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "BigPictureStyle": {
          "!url": "http://developer.android.com/reference/android/app/Notification.BigPictureStyle.html",
          "!type": "fn()",
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "setBuilder": {
              "!type": "fn(builder: +android.app.Notification.Builder) -> void",
              "!url": "http://developer.android.com/reference/android/app/Notification.Style.html#setBuilder(android.app.Notification.Builder)"
            },
            "bigPicture": {
              "!type": "fn(b: +android.graphics.Bitmap) -> +android.app.Notification.BigPictureStyle",
              "!url": "http://developer.android.com/reference/android/app/Notification.BigPictureStyle.html#bigPicture(android.graphics.Bitmap)"
            },
            "purgeResources": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/Notification.BigPictureStyle.html#purgeResources()"
            },
            "setBigContentTitle": {
              "!type": "fn(title: +java.lang.CharSequence) -> +android.app.Notification.BigPictureStyle",
              "!url": "http://developer.android.com/reference/android/app/Notification.BigPictureStyle.html#setBigContentTitle(java.lang.CharSequence)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "buildStyled": {
              "!type": "fn(wip: +android.app.Notification) -> +android.app.Notification",
              "!url": "http://developer.android.com/reference/android/app/Notification.Style.html#buildStyled(android.app.Notification)"
            },
            "setSummaryText": {
              "!type": "fn(cs: +java.lang.CharSequence) -> +android.app.Notification.BigPictureStyle",
              "!url": "http://developer.android.com/reference/android/app/Notification.BigPictureStyle.html#setSummaryText(java.lang.CharSequence)"
            },
            "addExtras": {
              "!type": "fn(extras: +android.os.Bundle) -> void",
              "!url": "http://developer.android.com/reference/android/app/Notification.BigPictureStyle.html#addExtras(android.os.Bundle)"
            },
            "bigLargeIcon": {
              "!type": "fn(b: +android.graphics.Bitmap) -> +android.app.Notification.BigPictureStyle",
              "!url": "http://developer.android.com/reference/android/app/Notification.BigPictureStyle.html#bigLargeIcon(android.graphics.Bitmap)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "build": {
              "!type": "fn() -> +android.app.Notification",
              "!url": "http://developer.android.com/reference/android/app/Notification.Style.html#build()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "populateBigContentView": {
              "!type": "fn(wip: +android.app.Notification) -> void",
              "!url": "http://developer.android.com/reference/android/app/Notification.BigPictureStyle.html#populateBigContentView(android.app.Notification)"
            }
          }
        },
        "BigTextStyle": {
          "!url": "http://developer.android.com/reference/android/app/Notification.BigTextStyle.html",
          "!type": "fn()",
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "setBuilder": {
              "!type": "fn(builder: +android.app.Notification.Builder) -> void",
              "!url": "http://developer.android.com/reference/android/app/Notification.Style.html#setBuilder(android.app.Notification.Builder)"
            },
            "purgeResources": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/Notification.Style.html#purgeResources()"
            },
            "setBigContentTitle": {
              "!type": "fn(title: +java.lang.CharSequence) -> +android.app.Notification.BigTextStyle",
              "!url": "http://developer.android.com/reference/android/app/Notification.BigTextStyle.html#setBigContentTitle(java.lang.CharSequence)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "bigText": {
              "!type": "fn(cs: +java.lang.CharSequence) -> +android.app.Notification.BigTextStyle",
              "!url": "http://developer.android.com/reference/android/app/Notification.BigTextStyle.html#bigText(java.lang.CharSequence)"
            },
            "buildStyled": {
              "!type": "fn(wip: +android.app.Notification) -> +android.app.Notification",
              "!url": "http://developer.android.com/reference/android/app/Notification.Style.html#buildStyled(android.app.Notification)"
            },
            "setSummaryText": {
              "!type": "fn(cs: +java.lang.CharSequence) -> +android.app.Notification.BigTextStyle",
              "!url": "http://developer.android.com/reference/android/app/Notification.BigTextStyle.html#setSummaryText(java.lang.CharSequence)"
            },
            "addExtras": {
              "!type": "fn(extras: +android.os.Bundle) -> void",
              "!url": "http://developer.android.com/reference/android/app/Notification.BigTextStyle.html#addExtras(android.os.Bundle)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "build": {
              "!type": "fn() -> +android.app.Notification",
              "!url": "http://developer.android.com/reference/android/app/Notification.Style.html#build()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "populateBigContentView": {
              "!type": "fn(wip: +android.app.Notification) -> void",
              "!url": "http://developer.android.com/reference/android/app/Notification.BigTextStyle.html#populateBigContentView(android.app.Notification)"
            }
          }
        },
        "InboxStyle": {
          "!url": "http://developer.android.com/reference/android/app/Notification.InboxStyle.html",
          "!type": "fn()",
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "setBuilder": {
              "!type": "fn(builder: +android.app.Notification.Builder) -> void",
              "!url": "http://developer.android.com/reference/android/app/Notification.Style.html#setBuilder(android.app.Notification.Builder)"
            },
            "purgeResources": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/Notification.Style.html#purgeResources()"
            },
            "setBigContentTitle": {
              "!type": "fn(title: +java.lang.CharSequence) -> +android.app.Notification.InboxStyle",
              "!url": "http://developer.android.com/reference/android/app/Notification.InboxStyle.html#setBigContentTitle(java.lang.CharSequence)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "buildStyled": {
              "!type": "fn(wip: +android.app.Notification) -> +android.app.Notification",
              "!url": "http://developer.android.com/reference/android/app/Notification.Style.html#buildStyled(android.app.Notification)"
            },
            "setSummaryText": {
              "!type": "fn(cs: +java.lang.CharSequence) -> +android.app.Notification.InboxStyle",
              "!url": "http://developer.android.com/reference/android/app/Notification.InboxStyle.html#setSummaryText(java.lang.CharSequence)"
            },
            "addExtras": {
              "!type": "fn(extras: +android.os.Bundle) -> void",
              "!url": "http://developer.android.com/reference/android/app/Notification.InboxStyle.html#addExtras(android.os.Bundle)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "build": {
              "!type": "fn() -> +android.app.Notification",
              "!url": "http://developer.android.com/reference/android/app/Notification.Style.html#build()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "addLine": {
              "!type": "fn(cs: +java.lang.CharSequence) -> +android.app.Notification.InboxStyle",
              "!url": "http://developer.android.com/reference/android/app/Notification.InboxStyle.html#addLine(java.lang.CharSequence)"
            },
            "populateBigContentView": {
              "!type": "fn(wip: +android.app.Notification) -> void",
              "!url": "http://developer.android.com/reference/android/app/Notification.InboxStyle.html#populateBigContentView(android.app.Notification)"
            }
          }
        },
        "MediaStyle": {
          "!url": "http://developer.android.com/reference/android/app/Notification.MediaStyle.html",
          "!type": "fn()",
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "setBuilder": {
              "!type": "fn(builder: +android.app.Notification.Builder) -> void",
              "!url": "http://developer.android.com/reference/android/app/Notification.Style.html#setBuilder(android.app.Notification.Builder)"
            },
            "purgeResources": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/Notification.Style.html#purgeResources()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "setMediaSession": {
              "!type": "fn(token: +android.media.session.MediaSession.Token) -> +android.app.Notification.MediaStyle",
              "!url": "http://developer.android.com/reference/android/app/Notification.MediaStyle.html#setMediaSession(android.media.session.MediaSession.Token)"
            },
            "buildStyled": {
              "!type": "fn(wip: +android.app.Notification) -> +android.app.Notification",
              "!url": "http://developer.android.com/reference/android/app/Notification.MediaStyle.html#buildStyled(android.app.Notification)"
            },
            "addExtras": {
              "!type": "fn(extras: +android.os.Bundle) -> void",
              "!url": "http://developer.android.com/reference/android/app/Notification.MediaStyle.html#addExtras(android.os.Bundle)"
            },
            "populateContentView": {
              "!type": "fn(wip: +android.app.Notification) -> void",
              "!url": "http://developer.android.com/reference/android/app/Notification.MediaStyle.html#populateContentView(android.app.Notification)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "build": {
              "!type": "fn() -> +android.app.Notification",
              "!url": "http://developer.android.com/reference/android/app/Notification.Style.html#build()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "setShowActionsInCompactView": {
              "!type": "fn(actions: +java.newArray) -> +android.app.Notification.MediaStyle",
              "!url": "http://developer.android.com/reference/android/app/Notification.MediaStyle.html#setShowActionsInCompactView(int[])"
            },
            "populateBigContentView": {
              "!type": "fn(wip: +android.app.Notification) -> void",
              "!url": "http://developer.android.com/reference/android/app/Notification.MediaStyle.html#populateBigContentView(android.app.Notification)"
            }
          }
        },
        "WearableExtender": {
          "!url": "http://developer.android.com/reference/android/app/Notification.WearableExtender.html",
          "!type": "fn()",
          "SIZE_SMALL": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/Notification.WearableExtender.html#SIZE_SMALL"
          },
          "SIZE_MEDIUM": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/Notification.WearableExtender.html#SIZE_MEDIUM"
          },
          "SIZE_XSMALL": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/Notification.WearableExtender.html#SIZE_XSMALL"
          },
          "SIZE_DEFAULT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/Notification.WearableExtender.html#SIZE_DEFAULT"
          },
          "SIZE_FULL_SCREEN": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/Notification.WearableExtender.html#SIZE_FULL_SCREEN"
          },
          "SIZE_LARGE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/Notification.WearableExtender.html#SIZE_LARGE"
          },
          "SCREEN_TIMEOUT_LONG": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/Notification.WearableExtender.html#SCREEN_TIMEOUT_LONG"
          },
          "UNSET_ACTION_INDEX": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/Notification.WearableExtender.html#UNSET_ACTION_INDEX"
          },
          "SCREEN_TIMEOUT_SHORT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/Notification.WearableExtender.html#SCREEN_TIMEOUT_SHORT"
          },
          "prototype": {
            "getContentIcon": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/app/Notification.WearableExtender.html#getContentIcon()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "getGravity": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/app/Notification.WearableExtender.html#getGravity()"
            },
            "setStartScrollBottom": {
              "!type": "fn(startScrollBottom: bool) -> +android.app.Notification.WearableExtender",
              "!url": "http://developer.android.com/reference/android/app/Notification.WearableExtender.html#setStartScrollBottom(boolean)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "getCustomContentHeight": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/app/Notification.WearableExtender.html#getCustomContentHeight()"
            },
            "getActions": {
              "!type": "fn() -> +java.util.List",
              "!url": "http://developer.android.com/reference/android/app/Notification.WearableExtender.html#getActions()"
            },
            "getContentIconGravity": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/app/Notification.WearableExtender.html#getContentIconGravity()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "setHintHideIcon": {
              "!type": "fn(hintHideIcon: bool) -> +android.app.Notification.WearableExtender",
              "!url": "http://developer.android.com/reference/android/app/Notification.WearableExtender.html#setHintHideIcon(boolean)"
            },
            "addActions": {
              "!type": "fn(actions: +java.util.List) -> +android.app.Notification.WearableExtender",
              "!url": "http://developer.android.com/reference/android/app/Notification.WearableExtender.html#addActions(java.util.List)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "setHintAvoidBackgroundClipping": {
              "!type": "fn(hintAvoidBackgroundClipping: bool) -> +android.app.Notification.WearableExtender",
              "!url": "http://developer.android.com/reference/android/app/Notification.WearableExtender.html#setHintAvoidBackgroundClipping(boolean)"
            },
            "setContentAction": {
              "!type": "fn(actionIndex: number) -> +android.app.Notification.WearableExtender",
              "!url": "http://developer.android.com/reference/android/app/Notification.WearableExtender.html#setContentAction(int)"
            },
            "extend": {
              "!type": "fn(builder: +android.app.Notification.Builder) -> +android.app.Notification.Builder",
              "!url": "http://developer.android.com/reference/android/app/Notification.WearableExtender.html#extend(android.app.Notification.Builder)"
            },
            "addPages": {
              "!type": "fn(pages: +java.util.List) -> +android.app.Notification.WearableExtender",
              "!url": "http://developer.android.com/reference/android/app/Notification.WearableExtender.html#addPages(java.util.List)"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "getDisplayIntent": {
              "!type": "fn() -> +android.app.PendingIntent",
              "!url": "http://developer.android.com/reference/android/app/Notification.WearableExtender.html#getDisplayIntent()"
            },
            "getBackground": {
              "!type": "fn() -> +android.graphics.Bitmap",
              "!url": "http://developer.android.com/reference/android/app/Notification.WearableExtender.html#getBackground()"
            },
            "clearPages": {
              "!type": "fn() -> +android.app.Notification.WearableExtender",
              "!url": "http://developer.android.com/reference/android/app/Notification.WearableExtender.html#clearPages()"
            },
            "clearActions": {
              "!type": "fn() -> +android.app.Notification.WearableExtender",
              "!url": "http://developer.android.com/reference/android/app/Notification.WearableExtender.html#clearActions()"
            },
            "setCustomSizePreset": {
              "!type": "fn(sizePreset: number) -> +android.app.Notification.WearableExtender",
              "!url": "http://developer.android.com/reference/android/app/Notification.WearableExtender.html#setCustomSizePreset(int)"
            },
            "addPage": {
              "!type": "fn(page: +android.app.Notification) -> +android.app.Notification.WearableExtender",
              "!url": "http://developer.android.com/reference/android/app/Notification.WearableExtender.html#addPage(android.app.Notification)"
            },
            "clone": {
              "!type": "fn() -> +android.app.Notification.WearableExtender",
              "!url": "http://developer.android.com/reference/android/app/Notification.WearableExtender.html#clone()"
            },
            "getStartScrollBottom": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/app/Notification.WearableExtender.html#getStartScrollBottom()"
            },
            "getCustomSizePreset": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/app/Notification.WearableExtender.html#getCustomSizePreset()"
            },
            "setHintShowBackgroundOnly": {
              "!type": "fn(hintShowBackgroundOnly: bool) -> +android.app.Notification.WearableExtender",
              "!url": "http://developer.android.com/reference/android/app/Notification.WearableExtender.html#setHintShowBackgroundOnly(boolean)"
            },
            "setHintScreenTimeout": {
              "!type": "fn(timeout: number) -> +android.app.Notification.WearableExtender",
              "!url": "http://developer.android.com/reference/android/app/Notification.WearableExtender.html#setHintScreenTimeout(int)"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "getContentIntentAvailableOffline": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/app/Notification.WearableExtender.html#getContentIntentAvailableOffline()"
            },
            "setGravity": {
              "!type": "fn(gravity: number) -> +android.app.Notification.WearableExtender",
              "!url": "http://developer.android.com/reference/android/app/Notification.WearableExtender.html#setGravity(int)"
            },
            "getContentAction": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/app/Notification.WearableExtender.html#getContentAction()"
            },
            "setContentIconGravity": {
              "!type": "fn(contentIconGravity: number) -> +android.app.Notification.WearableExtender",
              "!url": "http://developer.android.com/reference/android/app/Notification.WearableExtender.html#setContentIconGravity(int)"
            },
            "getHintAvoidBackgroundClipping": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/app/Notification.WearableExtender.html#getHintAvoidBackgroundClipping()"
            },
            "setBackground": {
              "!type": "fn(background: +android.graphics.Bitmap) -> +android.app.Notification.WearableExtender",
              "!url": "http://developer.android.com/reference/android/app/Notification.WearableExtender.html#setBackground(android.graphics.Bitmap)"
            },
            "getHintShowBackgroundOnly": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/app/Notification.WearableExtender.html#getHintShowBackgroundOnly()"
            },
            "setContentIntentAvailableOffline": {
              "!type": "fn(contentIntentAvailableOffline: bool) -> +android.app.Notification.WearableExtender",
              "!url": "http://developer.android.com/reference/android/app/Notification.WearableExtender.html#setContentIntentAvailableOffline(boolean)"
            },
            "setContentIcon": {
              "!type": "fn(icon: number) -> +android.app.Notification.WearableExtender",
              "!url": "http://developer.android.com/reference/android/app/Notification.WearableExtender.html#setContentIcon(int)"
            },
            "getHintScreenTimeout": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/app/Notification.WearableExtender.html#getHintScreenTimeout()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "getHintHideIcon": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/app/Notification.WearableExtender.html#getHintHideIcon()"
            },
            "setDisplayIntent": {
              "!type": "fn(intent: +android.app.PendingIntent) -> +android.app.Notification.WearableExtender",
              "!url": "http://developer.android.com/reference/android/app/Notification.WearableExtender.html#setDisplayIntent(android.app.PendingIntent)"
            },
            "addAction": {
              "!type": "fn(action: +android.app.Notification.Action) -> +android.app.Notification.WearableExtender",
              "!url": "http://developer.android.com/reference/android/app/Notification.WearableExtender.html#addAction(android.app.Notification.Action)"
            },
            "setCustomContentHeight": {
              "!type": "fn(height: number) -> +android.app.Notification.WearableExtender",
              "!url": "http://developer.android.com/reference/android/app/Notification.WearableExtender.html#setCustomContentHeight(int)"
            },
            "getPages": {
              "!type": "fn() -> +java.util.List",
              "!url": "http://developer.android.com/reference/android/app/Notification.WearableExtender.html#getPages()"
            }
          }
        },
        "CarExtender": {
          "!url": "http://developer.android.com/reference/android/app/Notification.CarExtender.html",
          "!type": "fn()",
          "UnreadConversation": {
            "!url": "http://developer.android.com/reference/android/app/Notification.CarExtender.UnreadConversation.html",
            "prototype": {
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "getRemoteInput": {
                "!type": "fn() -> +android.app.RemoteInput",
                "!url": "http://developer.android.com/reference/android/app/Notification.CarExtender.UnreadConversation.html#getRemoteInput()"
              },
              "getLatestTimestamp": {
                "!type": "fn() -> +java.lang.Long",
                "!url": "http://developer.android.com/reference/android/app/Notification.CarExtender.UnreadConversation.html#getLatestTimestamp()"
              },
              "getReplyPendingIntent": {
                "!type": "fn() -> +android.app.PendingIntent",
                "!url": "http://developer.android.com/reference/android/app/Notification.CarExtender.UnreadConversation.html#getReplyPendingIntent()"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "getReadPendingIntent": {
                "!type": "fn() -> +android.app.PendingIntent",
                "!url": "http://developer.android.com/reference/android/app/Notification.CarExtender.UnreadConversation.html#getReadPendingIntent()"
              },
              "getMessages": {
                "!type": "fn() -> +java.newArray",
                "!url": "http://developer.android.com/reference/android/app/Notification.CarExtender.UnreadConversation.html#getMessages()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "getParticipants": {
                "!type": "fn() -> +java.newArray",
                "!url": "http://developer.android.com/reference/android/app/Notification.CarExtender.UnreadConversation.html#getParticipants()"
              },
              "getParticipant": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/android/app/Notification.CarExtender.UnreadConversation.html#getParticipant()"
              }
            }
          },
          "Builder": {
            "!url": "http://developer.android.com/reference/android/app/Notification.CarExtender.Builder.html",
            "!type": "fn(name: string)",
            "prototype": {
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "setLatestTimestamp": {
                "!type": "fn(timestamp: +java.lang.Long) -> +android.app.Notification.CarExtender.Builder",
                "!url": "http://developer.android.com/reference/android/app/Notification.CarExtender.Builder.html#setLatestTimestamp(long)"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "setReplyAction": {
                "!type": "fn(pendingIntent: +android.app.PendingIntent, remoteInput: +android.app.RemoteInput) -> +android.app.Notification.CarExtender.Builder",
                "!url": "http://developer.android.com/reference/android/app/Notification.CarExtender.Builder.html#setReplyAction(android.app.PendingIntent, android.app.RemoteInput)"
              },
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "addMessage": {
                "!type": "fn(message: string) -> +android.app.Notification.CarExtender.Builder",
                "!url": "http://developer.android.com/reference/android/app/Notification.CarExtender.Builder.html#addMessage(java.lang.String)"
              },
              "build": {
                "!type": "fn() -> +android.app.Notification.CarExtender.UnreadConversation",
                "!url": "http://developer.android.com/reference/android/app/Notification.CarExtender.Builder.html#build()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "setReadPendingIntent": {
                "!type": "fn(pendingIntent: +android.app.PendingIntent) -> +android.app.Notification.CarExtender.Builder",
                "!url": "http://developer.android.com/reference/android/app/Notification.CarExtender.Builder.html#setReadPendingIntent(android.app.PendingIntent)"
              }
            }
          },
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "setLargeIcon": {
              "!type": "fn(largeIcon: +android.graphics.Bitmap) -> +android.app.Notification.CarExtender",
              "!url": "http://developer.android.com/reference/android/app/Notification.CarExtender.html#setLargeIcon(android.graphics.Bitmap)"
            },
            "setUnreadConversation": {
              "!type": "fn(unreadConversation: +android.app.Notification.CarExtender.UnreadConversation) -> +android.app.Notification.CarExtender",
              "!url": "http://developer.android.com/reference/android/app/Notification.CarExtender.html#setUnreadConversation(android.app.Notification.CarExtender.UnreadConversation)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "getUnreadConversation": {
              "!type": "fn() -> +android.app.Notification.CarExtender.UnreadConversation",
              "!url": "http://developer.android.com/reference/android/app/Notification.CarExtender.html#getUnreadConversation()"
            },
            "extend": {
              "!type": "fn(builder: +android.app.Notification.Builder) -> +android.app.Notification.Builder",
              "!url": "http://developer.android.com/reference/android/app/Notification.CarExtender.html#extend(android.app.Notification.Builder)"
            },
            "getLargeIcon": {
              "!type": "fn() -> +android.graphics.Bitmap",
              "!url": "http://developer.android.com/reference/android/app/Notification.CarExtender.html#getLargeIcon()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "setColor": {
              "!type": "fn(color: number) -> +android.app.Notification.CarExtender",
              "!url": "http://developer.android.com/reference/android/app/Notification.CarExtender.html#setColor(int)"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "getColor": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/app/Notification.CarExtender.html#getColor()"
            }
          }
        },
        "DEFAULT_SOUND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#DEFAULT_SOUND"
        },
        "EXTRA_TEXT": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#EXTRA_TEXT"
        },
        "CATEGORY_RECOMMENDATION": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#CATEGORY_RECOMMENDATION"
        },
        "FLAG_AUTO_CANCEL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#FLAG_AUTO_CANCEL"
        },
        "FLAG_ONGOING_EVENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#FLAG_ONGOING_EVENT"
        },
        "EXTRA_TEXT_LINES": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#EXTRA_TEXT_LINES"
        },
        "EXTRA_LARGE_ICON_BIG": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#EXTRA_LARGE_ICON_BIG"
        },
        "CATEGORY_REMINDER": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#CATEGORY_REMINDER"
        },
        "HEADS_UP_REQUESTED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#HEADS_UP_REQUESTED"
        },
        "EXTRA_TEMPLATE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#EXTRA_TEMPLATE"
        },
        "CATEGORY_STATUS": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#CATEGORY_STATUS"
        },
        "EXTRA_AS_HEADS_UP": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#EXTRA_AS_HEADS_UP"
        },
        "EXTRA_SUMMARY_TEXT": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#EXTRA_SUMMARY_TEXT"
        },
        "CATEGORY_ALARM": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#CATEGORY_ALARM"
        },
        "DEFAULT_ALL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#DEFAULT_ALL"
        },
        "STREAM_DEFAULT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#STREAM_DEFAULT"
        },
        "PRIORITY_MAX": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#PRIORITY_MAX"
        },
        "COLOR_DEFAULT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#COLOR_DEFAULT"
        },
        "CATEGORY_SOCIAL": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#CATEGORY_SOCIAL"
        },
        "EXTRA_SHOW_CHRONOMETER": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#EXTRA_SHOW_CHRONOMETER"
        },
        "FLAG_LOCAL_ONLY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#FLAG_LOCAL_ONLY"
        },
        "PRIORITY_DEFAULT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#PRIORITY_DEFAULT"
        },
        "FLAG_FOREGROUND_SERVICE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#FLAG_FOREGROUND_SERVICE"
        },
        "EXTRA_PROGRESS_INDETERMINATE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#EXTRA_PROGRESS_INDETERMINATE"
        },
        "INTENT_CATEGORY_NOTIFICATION_PREFERENCES": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#INTENT_CATEGORY_NOTIFICATION_PREFERENCES"
        },
        "EXTRA_PICTURE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#EXTRA_PICTURE"
        },
        "EXTRA_PEOPLE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#EXTRA_PEOPLE"
        },
        "FLAG_HIGH_PRIORITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#FLAG_HIGH_PRIORITY"
        },
        "FLAG_ONLY_ALERT_ONCE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#FLAG_ONLY_ALERT_ONCE"
        },
        "EXTRA_TITLE_BIG": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#EXTRA_TITLE_BIG"
        },
        "CATEGORY_TRANSPORT": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#CATEGORY_TRANSPORT"
        },
        "AUDIO_ATTRIBUTES_DEFAULT": {
          "!type": "+android.media.AudioAttributes",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#AUDIO_ATTRIBUTES_DEFAULT"
        },
        "VISIBILITY_SECRET": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#VISIBILITY_SECRET"
        },
        "CATEGORY_EMAIL": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#CATEGORY_EMAIL"
        },
        "CATEGORY_SYSTEM": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#CATEGORY_SYSTEM"
        },
        "PRIORITY_HIGH": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#PRIORITY_HIGH"
        },
        "EXTRA_SMALL_ICON": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#EXTRA_SMALL_ICON"
        },
        "EXTRA_COMPACT_ACTIONS": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#EXTRA_COMPACT_ACTIONS"
        },
        "EXTRA_TITLE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#EXTRA_TITLE"
        },
        "CATEGORY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#CATEGORY_SERVICE"
        },
        "CATEGORY_ERROR": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#CATEGORY_ERROR"
        },
        "HEADS_UP_ALLOWED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#HEADS_UP_ALLOWED"
        },
        "EXTRA_ORIGINATING_USERID": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#EXTRA_ORIGINATING_USERID"
        },
        "CATEGORY_PROMO": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#CATEGORY_PROMO"
        },
        "EXTRA_PROGRESS": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#EXTRA_PROGRESS"
        },
        "EXTRA_INFO_TEXT": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#EXTRA_INFO_TEXT"
        },
        "CATEGORY_PROGRESS": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#CATEGORY_PROGRESS"
        },
        "FLAG_INSISTENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#FLAG_INSISTENT"
        },
        "EXTRA_LARGE_ICON": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#EXTRA_LARGE_ICON"
        },
        "CATEGORY_MESSAGE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#CATEGORY_MESSAGE"
        },
        "VISIBILITY_PUBLIC": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#VISIBILITY_PUBLIC"
        },
        "EXTRA_MEDIA_SESSION": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#EXTRA_MEDIA_SESSION"
        },
        "DEFAULT_LIGHTS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#DEFAULT_LIGHTS"
        },
        "EXTRA_SHOW_WHEN": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#EXTRA_SHOW_WHEN"
        },
        "EXTRA_PROGRESS_MAX": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#EXTRA_PROGRESS_MAX"
        },
        "EXTRA_SUB_TEXT": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#EXTRA_SUB_TEXT"
        },
        "FLAG_GROUP_SUMMARY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#FLAG_GROUP_SUMMARY"
        },
        "VISIBILITY_PRIVATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#VISIBILITY_PRIVATE"
        },
        "PRIORITY_MIN": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#PRIORITY_MIN"
        },
        "FLAG_NO_CLEAR": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#FLAG_NO_CLEAR"
        },
        "FLAG_SHOW_LIGHTS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#FLAG_SHOW_LIGHTS"
        },
        "EXTRA_ALLOW_DURING_SETUP": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#EXTRA_ALLOW_DURING_SETUP"
        },
        "PRIORITY_LOW": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#PRIORITY_LOW"
        },
        "HEADS_UP_NEVER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#HEADS_UP_NEVER"
        },
        "CREATOR": {
          "!type": "+android.os.Parcelable.Creator",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#CREATOR"
        },
        "EXTRA_BACKGROUND_IMAGE_URI": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#EXTRA_BACKGROUND_IMAGE_URI"
        },
        "EXTRA_BIG_TEXT": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#EXTRA_BIG_TEXT"
        },
        "CATEGORY_CALL": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#CATEGORY_CALL"
        },
        "DEFAULT_VIBRATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#DEFAULT_VIBRATE"
        },
        "CATEGORY_EVENT": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#CATEGORY_EVENT"
        },
        "visibilityToString": {
          "!type": "fn(vis: number) -> string",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#visibilityToString(int)"
        },
        "priorityToString": {
          "!type": "fn(pri: number) -> string",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#priorityToString(int)"
        },
        "safeCharSequence": {
          "!type": "fn(cs: +java.lang.CharSequence) -> +java.lang.CharSequence",
          "!url": "http://developer.android.com/reference/android/app/Notification.html#safeCharSequence(java.lang.CharSequence)"
        },
        "prototype": {
          "writeToParcel": {
            "!type": "fn(parcel: +android.os.Parcel, flags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Notification.html#writeToParcel(android.os.Parcel, int)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "lightenPayload": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Notification.html#lightenPayload()"
          },
          "getLargeIcon": {
            "!type": "fn() -> +android.graphics.drawable.Icon",
            "!url": "http://developer.android.com/reference/android/app/Notification.html#getLargeIcon()"
          },
          "getSortKey": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/Notification.html#getSortKey()"
          },
          "describeContents": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Notification.html#describeContents()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "cloneInto": {
            "!type": "fn(that: +android.app.Notification, heavy: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Notification.html#cloneInto(android.app.Notification, boolean)"
          },
          "isGroupChild": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Notification.html#isGroupChild()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getSmallIcon": {
            "!type": "fn() -> +android.graphics.drawable.Icon",
            "!url": "http://developer.android.com/reference/android/app/Notification.html#getSmallIcon()"
          },
          "setSmallIcon": {
            "!type": "fn(icon: +android.graphics.drawable.Icon) -> void",
            "!url": "http://developer.android.com/reference/android/app/Notification.html#setSmallIcon(android.graphics.drawable.Icon)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/Notification.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "isValid": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Notification.html#isValid()"
          },
          "isGroupSummary": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Notification.html#isGroupSummary()"
          },
          "getGroup": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/Notification.html#getGroup()"
          },
          "clone": {
            "!type": "fn() -> +android.app.Notification",
            "!url": "http://developer.android.com/reference/android/app/Notification.html#clone()"
          },
          "setLatestEventInfo": {
            "!type": "fn(context: +android.content.Context, contentTitle: +java.lang.CharSequence, contentText: +java.lang.CharSequence, contentIntent: +android.app.PendingIntent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Notification.html#setLatestEventInfo(android.content.Context, java.lang.CharSequence, java.lang.CharSequence, android.app.PendingIntent)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "StatusBarManager": {
        "!url": "http://developer.android.com/reference/android/app/StatusBarManager.html",
        "WINDOW_STATE_HIDING": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/StatusBarManager.html#WINDOW_STATE_HIDING"
        },
        "WINDOW_STATE_HIDDEN": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/StatusBarManager.html#WINDOW_STATE_HIDDEN"
        },
        "DISABLE_NOTIFICATION_TICKER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/StatusBarManager.html#DISABLE_NOTIFICATION_TICKER"
        },
        "DISABLE2_MASK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/StatusBarManager.html#DISABLE2_MASK"
        },
        "NAVIGATION_HINT_IME_SHOWN": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/StatusBarManager.html#NAVIGATION_HINT_IME_SHOWN"
        },
        "DISABLE_BACK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/StatusBarManager.html#DISABLE_BACK"
        },
        "WINDOW_NAVIGATION_BAR": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/StatusBarManager.html#WINDOW_NAVIGATION_BAR"
        },
        "DISABLE_NOTIFICATION_ALERTS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/StatusBarManager.html#DISABLE_NOTIFICATION_ALERTS"
        },
        "DISABLE_SYSTEM_INFO": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/StatusBarManager.html#DISABLE_SYSTEM_INFO"
        },
        "DISABLE_MASK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/StatusBarManager.html#DISABLE_MASK"
        },
        "NAVIGATION_HINT_BACK_ALT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/StatusBarManager.html#NAVIGATION_HINT_BACK_ALT"
        },
        "DISABLE_NOTIFICATION_ICONS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/StatusBarManager.html#DISABLE_NOTIFICATION_ICONS"
        },
        "DISABLE_HOME": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/StatusBarManager.html#DISABLE_HOME"
        },
        "DISABLE_SEARCH": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/StatusBarManager.html#DISABLE_SEARCH"
        },
        "DISABLE2_NONE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/StatusBarManager.html#DISABLE2_NONE"
        },
        "DISABLE_RECENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/StatusBarManager.html#DISABLE_RECENT"
        },
        "DISABLE_NAVIGATION": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/StatusBarManager.html#DISABLE_NAVIGATION"
        },
        "WINDOW_STATUS_BAR": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/StatusBarManager.html#WINDOW_STATUS_BAR"
        },
        "DISABLE_EXPAND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/StatusBarManager.html#DISABLE_EXPAND"
        },
        "DISABLE_NONE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/StatusBarManager.html#DISABLE_NONE"
        },
        "WINDOW_STATE_SHOWING": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/StatusBarManager.html#WINDOW_STATE_SHOWING"
        },
        "DISABLE2_QUICK_SETTINGS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/StatusBarManager.html#DISABLE2_QUICK_SETTINGS"
        },
        "DISABLE_CLOCK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/StatusBarManager.html#DISABLE_CLOCK"
        },
        "windowStateToString": {
          "!type": "fn(state: number) -> string",
          "!url": "http://developer.android.com/reference/android/app/StatusBarManager.html#windowStateToString(int)"
        },
        "prototype": {
          "collapsePanels": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/StatusBarManager.html#collapsePanels()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "setIconVisibility": {
            "!type": "fn(slot: string, visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/StatusBarManager.html#setIconVisibility(java.lang.String, boolean)"
          },
          "setIcon": {
            "!type": "fn(slot: string, iconId: number, iconLevel: number, contentDescription: string) -> void",
            "!url": "http://developer.android.com/reference/android/app/StatusBarManager.html#setIcon(java.lang.String, int, int, java.lang.String)"
          },
          "disable": {
            "!type": "fn(what: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/StatusBarManager.html#disable(int)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "disable2": {
            "!type": "fn(what: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/StatusBarManager.html#disable2(int)"
          },
          "expandNotificationsPanel": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/StatusBarManager.html#expandNotificationsPanel()"
          },
          "removeIcon": {
            "!type": "fn(slot: string) -> void",
            "!url": "http://developer.android.com/reference/android/app/StatusBarManager.html#removeIcon(java.lang.String)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "expandSettingsPanel": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/StatusBarManager.html#expandSettingsPanel()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "Fragment": {
        "!url": "http://developer.android.com/reference/android/app/Fragment.html",
        "!type": "fn()",
        "SavedState": {
          "!url": "http://developer.android.com/reference/android/app/Fragment.SavedState.html",
          "CREATOR": {
            "!type": "+android.os.Parcelable.ClassLoaderCreator",
            "!url": "http://developer.android.com/reference/android/app/Fragment.SavedState.html#CREATOR"
          },
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "describeContents": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/app/Fragment.SavedState.html#describeContents()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "writeToParcel": {
              "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
              "!url": "http://developer.android.com/reference/android/app/Fragment.SavedState.html#writeToParcel(android.os.Parcel, int)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "InstantiationException": {
          "!url": "http://developer.android.com/reference/android/app/Fragment.InstantiationException.html",
          "!type": "fn(msg: string, cause: +java.lang.Exception)",
          "prototype": {
            "initCause": {
              "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
              "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
            },
            "getLocalizedMessage": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
            },
            "getStackTrace": {
              "!type": "fn() -> +java.newArray",
              "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
            },
            "printStackTrace": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
            },
            "addSuppressed": {
              "!type": "fn(throwable: +java.lang.Throwable) -> void",
              "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "fillInStackTrace": {
              "!type": "fn() -> +java.lang.Throwable",
              "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
            },
            "setStackTrace": {
              "!type": "fn(trace: +java.newArray) -> void",
              "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
            },
            "getSuppressed": {
              "!type": "fn() -> +java.newArray",
              "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
            },
            "getCause": {
              "!type": "fn() -> +java.lang.Throwable",
              "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
            },
            "getMessage": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "instantiate": {
          "!type": "fn(context: +android.content.Context, fname: string) -> +android.app.Fragment",
          "!url": "http://developer.android.com/reference/android/app/Fragment.html#instantiate(android.content.Context, java.lang.String)"
        },
        "prototype": {
          "getReturnTransition": {
            "!type": "fn() -> +android.transition.Transition",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getReturnTransition()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#hashCode()"
          },
          "isResumed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#isResumed()"
          },
          "setSharedElementReturnTransition": {
            "!type": "fn(transition: +android.transition.Transition) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setSharedElementReturnTransition(android.transition.Transition)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "onResume": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onResume()"
          },
          "onCreateOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu, inflater: +android.view.MenuInflater) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onCreateOptionsMenu(android.view.Menu, android.view.MenuInflater)"
          },
          "getReenterTransition": {
            "!type": "fn() -> +android.transition.Transition",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getReenterTransition()"
          },
          "getString": {
            "!type": "fn(resId: number) -> string",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getString(int)"
          },
          "onDestroy": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onDestroy()"
          },
          "setEnterSharedElementCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setEnterSharedElementCallback(android.app.SharedElementCallback)"
          },
          "onContextItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onContextItemSelected(android.view.MenuItem)"
          },
          "getTag": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getTag()"
          },
          "isRemoving": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#isRemoving()"
          },
          "onDetach": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onDetach()"
          },
          "getFragmentManager": {
            "!type": "fn() -> +android.app.FragmentManager",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getFragmentManager()"
          },
          "setHasOptionsMenu": {
            "!type": "fn(hasMenu: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setHasOptionsMenu(boolean)"
          },
          "setEnterTransition": {
            "!type": "fn(transition: +android.transition.Transition) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setEnterTransition(android.transition.Transition)"
          },
          "getParentFragment": {
            "!type": "fn() -> +android.app.Fragment",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getParentFragment()"
          },
          "setInitialSavedState": {
            "!type": "fn(state: +android.app.Fragment.SavedState) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setInitialSavedState(android.app.Fragment.SavedState)"
          },
          "getId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getId()"
          },
          "getSharedElementReturnTransition": {
            "!type": "fn() -> +android.transition.Transition",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getSharedElementReturnTransition()"
          },
          "getAllowEnterTransitionOverlap": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getAllowEnterTransitionOverlap()"
          },
          "onPrepareOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onPrepareOptionsMenu(android.view.Menu)"
          },
          "onCreateContextMenu": {
            "!type": "fn(menu: +android.view.ContextMenu, v: +android.view.View, menuInfo: +android.view.ContextMenu.ContextMenuInfo) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenu.ContextMenuInfo)"
          },
          "setMenuVisibility": {
            "!type": "fn(menuVisible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setMenuVisibility(boolean)"
          },
          "isDetached": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#isDetached()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#equals(java.lang.Object)"
          },
          "onViewCreated": {
            "!type": "fn(view: +android.view.View, savedInstanceState: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onViewCreated(android.view.View, android.os.Bundle)"
          },
          "getSharedElementEnterTransition": {
            "!type": "fn() -> +android.transition.Transition",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getSharedElementEnterTransition()"
          },
          "getEnterTransition": {
            "!type": "fn() -> +android.transition.Transition",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getEnterTransition()"
          },
          "setUserVisibleHint": {
            "!type": "fn(isVisibleToUser: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setUserVisibleHint(boolean)"
          },
          "onCreate": {
            "!type": "fn(savedInstanceState: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onCreate(android.os.Bundle)"
          },
          "onLowMemory": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onLowMemory()"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getContext()"
          },
          "getExitTransition": {
            "!type": "fn() -> +android.transition.Transition",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getExitTransition()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "setAllowEnterTransitionOverlap": {
            "!type": "fn(allow: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setAllowEnterTransitionOverlap(boolean)"
          },
          "onActivityResult": {
            "!type": "fn(requestCode: number, resultCode: number, data: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onActivityResult(int, int, android.content.Intent)"
          },
          "setExitSharedElementTransitionCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setExitSharedElementTransitionCallback(android.app.SharedElementCallback)"
          },
          "isHidden": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#isHidden()"
          },
          "onViewStateRestored": {
            "!type": "fn(savedInstanceState: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onViewStateRestored(android.os.Bundle)"
          },
          "onRequestPermissionsResult": {
            "!type": "fn(requestCode: number, permissions: +java.newArray, grantResults: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onRequestPermissionsResult(int, java.lang.String[], int[])"
          },
          "onOptionsMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onOptionsMenuClosed(android.view.Menu)"
          },
          "getView": {
            "!type": "fn() -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getView()"
          },
          "setArguments": {
            "!type": "fn(args: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setArguments(android.os.Bundle)"
          },
          "getText": {
            "!type": "fn(resId: number) -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getText(int)"
          },
          "onOptionsItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onOptionsItemSelected(android.view.MenuItem)"
          },
          "onStop": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onStop()"
          },
          "isInLayout": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#isInLayout()"
          },
          "setSharedElementEnterTransition": {
            "!type": "fn(transition: +android.transition.Transition) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setSharedElementEnterTransition(android.transition.Transition)"
          },
          "onSaveInstanceState": {
            "!type": "fn(outState: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onSaveInstanceState(android.os.Bundle)"
          },
          "startActivity": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#startActivity(android.content.Intent)"
          },
          "getTargetFragment": {
            "!type": "fn() -> +android.app.Fragment",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getTargetFragment()"
          },
          "getArguments": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getArguments()"
          },
          "isAdded": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#isAdded()"
          },
          "onConfigurationChanged": {
            "!type": "fn(newConfig: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onConfigurationChanged(android.content.res.Configuration)"
          },
          "onStart": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onStart()"
          },
          "onTrimMemory": {
            "!type": "fn(level: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onTrimMemory(int)"
          },
          "setExitTransition": {
            "!type": "fn(transition: +android.transition.Transition) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setExitTransition(android.transition.Transition)"
          },
          "onDestroyView": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onDestroyView()"
          },
          "onCreateView": {
            "!type": "fn(inflater: +android.view.LayoutInflater, container: +android.view.ViewGroup, savedInstanceState: +android.os.Bundle) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onCreateView(android.view.LayoutInflater, android.view.ViewGroup, android.os.Bundle)"
          },
          "getUserVisibleHint": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getUserVisibleHint()"
          },
          "getLoaderManager": {
            "!type": "fn() -> +android.app.LoaderManager",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getLoaderManager()"
          },
          "dump": {
            "!type": "fn(prefix: string, fd: +java.io.FileDescriptor, writer: +java.io.PrintWriter, args: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])"
          },
          "unregisterForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#unregisterForContextMenu(android.view.View)"
          },
          "getRetainInstance": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getRetainInstance()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#toString()"
          },
          "getHost": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getHost()"
          },
          "requestPermissions": {
            "!type": "fn(permissions: +java.newArray, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#requestPermissions(java.lang.String[], int)"
          },
          "onInflate": {
            "!type": "fn(attrs: +android.util.AttributeSet, savedInstanceState: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onInflate(android.util.AttributeSet, android.os.Bundle)"
          },
          "registerForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#registerForContextMenu(android.view.View)"
          },
          "getActivity": {
            "!type": "fn() -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getActivity()"
          },
          "getAllowReturnTransitionOverlap": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getAllowReturnTransitionOverlap()"
          },
          "setTargetFragment": {
            "!type": "fn(fragment: +android.app.Fragment, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setTargetFragment(android.app.Fragment, int)"
          },
          "onDestroyOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onDestroyOptionsMenu()"
          },
          "onActivityCreated": {
            "!type": "fn(savedInstanceState: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onActivityCreated(android.os.Bundle)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "setExitSharedElementCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setExitSharedElementCallback(android.app.SharedElementCallback)"
          },
          "onHiddenChanged": {
            "!type": "fn(hidden: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onHiddenChanged(boolean)"
          },
          "setReturnTransition": {
            "!type": "fn(transition: +android.transition.Transition) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setReturnTransition(android.transition.Transition)"
          },
          "onAttach": {
            "!type": "fn(context: +android.content.Context) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onAttach(android.content.Context)"
          },
          "setRetainInstance": {
            "!type": "fn(retain: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setRetainInstance(boolean)"
          },
          "setAllowReturnTransitionOverlap": {
            "!type": "fn(allow: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setAllowReturnTransitionOverlap(boolean)"
          },
          "getTargetRequestCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getTargetRequestCode()"
          },
          "getChildFragmentManager": {
            "!type": "fn() -> +android.app.FragmentManager",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getChildFragmentManager()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getLayoutInflater": {
            "!type": "fn(savedInstanceState: +android.os.Bundle) -> +android.view.LayoutInflater",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getLayoutInflater(android.os.Bundle)"
          },
          "isVisible": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#isVisible()"
          },
          "setEnterSharedElementTransitionCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setEnterSharedElementTransitionCallback(android.app.SharedElementCallback)"
          },
          "onPause": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onPause()"
          },
          "setReenterTransition": {
            "!type": "fn(transition: +android.transition.Transition) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setReenterTransition(android.transition.Transition)"
          },
          "startActivityForResult": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#startActivityForResult(android.content.Intent, int)"
          },
          "onCreateAnimator": {
            "!type": "fn(transit: number, enter: bool, nextAnim: number) -> +android.animation.Animator",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onCreateAnimator(int, boolean, int)"
          },
          "shouldShowRequestPermissionRationale": {
            "!type": "fn(permission: string) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#shouldShowRequestPermissionRationale(java.lang.String)"
          },
          "getResources": {
            "!type": "fn() -> +android.content.res.Resources",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getResources()"
          }
        }
      },
      "MediaRouteActionProvider": {
        "!url": "http://developer.android.com/reference/android/app/MediaRouteActionProvider.html",
        "!type": "fn(context: +android.content.Context)",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "setVisibilityListener": {
            "!type": "fn(listener: +android.view.ActionProvider.VisibilityListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/ActionProvider.html#setVisibilityListener(android.view.ActionProvider.VisibilityListener)"
          },
          "onPerformDefaultAction": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/MediaRouteActionProvider.html#onPerformDefaultAction()"
          },
          "setSubUiVisibilityListener": {
            "!type": "fn(listener: +android.view.ActionProvider.SubUiVisibilityListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/ActionProvider.html#setSubUiVisibilityListener(android.view.ActionProvider.SubUiVisibilityListener)"
          },
          "subUiVisibilityChanged": {
            "!type": "fn(isVisible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ActionProvider.html#subUiVisibilityChanged(boolean)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "setExtendedSettingsClickListener": {
            "!type": "fn(listener: +android.view.View.OnClickListener) -> void",
            "!url": "http://developer.android.com/reference/android/app/MediaRouteActionProvider.html#setExtendedSettingsClickListener(android.view.View.OnClickListener)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "isVisible": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/MediaRouteActionProvider.html#isVisible()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "refreshVisibility": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ActionProvider.html#refreshVisibility()"
          },
          "onPrepareSubMenu": {
            "!type": "fn(subMenu: +android.view.SubMenu) -> void",
            "!url": "http://developer.android.com/reference/android/view/ActionProvider.html#onPrepareSubMenu(android.view.SubMenu)"
          },
          "hasSubMenu": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ActionProvider.html#hasSubMenu()"
          },
          "onCreateActionView": {
            "!type": "fn() -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/MediaRouteActionProvider.html#onCreateActionView()"
          },
          "reset": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ActionProvider.html#reset()"
          },
          "setRouteTypes": {
            "!type": "fn(types: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/MediaRouteActionProvider.html#setRouteTypes(int)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "overridesItemVisibility": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/MediaRouteActionProvider.html#overridesItemVisibility()"
          }
        }
      },
      "SearchableInfo": {
        "!url": "http://developer.android.com/reference/android/app/SearchableInfo.html",
        "ActionKeyInfo": {
          "!url": "http://developer.android.com/reference/android/app/SearchableInfo.ActionKeyInfo.html",
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "describeContents": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/app/SearchableInfo.ActionKeyInfo.html#describeContents()"
            },
            "getSuggestActionMsg": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/app/SearchableInfo.ActionKeyInfo.html#getSuggestActionMsg()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "getQueryActionMsg": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/app/SearchableInfo.ActionKeyInfo.html#getQueryActionMsg()"
            },
            "writeToParcel": {
              "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
              "!url": "http://developer.android.com/reference/android/app/SearchableInfo.ActionKeyInfo.html#writeToParcel(android.os.Parcel, int)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getSuggestActionMsgColumn": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/app/SearchableInfo.ActionKeyInfo.html#getSuggestActionMsgColumn()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "getKeyCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/app/SearchableInfo.ActionKeyInfo.html#getKeyCode()"
            }
          }
        },
        "CREATOR": {
          "!type": "+android.os.Parcelable.Creator",
          "!url": "http://developer.android.com/reference/android/app/SearchableInfo.html#CREATOR"
        },
        "getActivityMetaData": {
          "!type": "fn(context: +android.content.Context, activityInfo: +android.content.pm.ActivityInfo, userId: number) -> +android.app.SearchableInfo",
          "!url": "http://developer.android.com/reference/android/app/SearchableInfo.html#getActivityMetaData(android.content.Context, android.content.pm.ActivityInfo, int)"
        },
        "prototype": {
          "getLabelId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/SearchableInfo.html#getLabelId()"
          },
          "describeContents": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/SearchableInfo.html#describeContents()"
          },
          "getSearchActivity": {
            "!type": "fn() -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/app/SearchableInfo.html#getSearchActivity()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getProviderContext": {
            "!type": "fn(context: +android.content.Context, activityContext: +android.content.Context) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/app/SearchableInfo.html#getProviderContext(android.content.Context, android.content.Context)"
          },
          "getSuggestSelection": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/SearchableInfo.html#getSuggestSelection()"
          },
          "getImeOptions": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/SearchableInfo.html#getImeOptions()"
          },
          "getInputType": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/SearchableInfo.html#getInputType()"
          },
          "getActivityContext": {
            "!type": "fn(context: +android.content.Context) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/app/SearchableInfo.html#getActivityContext(android.content.Context)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "getSuggestIntentData": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/SearchableInfo.html#getSuggestIntentData()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "shouldRewriteQueryFromData": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/SearchableInfo.html#shouldRewriteQueryFromData()"
          },
          "queryAfterZeroResults": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/SearchableInfo.html#queryAfterZeroResults()"
          },
          "getVoiceLanguageId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/SearchableInfo.html#getVoiceLanguageId()"
          },
          "getHintId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/SearchableInfo.html#getHintId()"
          },
          "getVoicePromptTextId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/SearchableInfo.html#getVoicePromptTextId()"
          },
          "getSuggestPath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/SearchableInfo.html#getSuggestPath()"
          },
          "getSuggestAuthority": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/SearchableInfo.html#getSuggestAuthority()"
          },
          "shouldIncludeInGlobalSearch": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/SearchableInfo.html#shouldIncludeInGlobalSearch()"
          },
          "getSuggestPackage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/SearchableInfo.html#getSuggestPackage()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getVoiceSearchLaunchRecognizer": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/SearchableInfo.html#getVoiceSearchLaunchRecognizer()"
          },
          "getSuggestIntentAction": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/SearchableInfo.html#getSuggestIntentAction()"
          },
          "getSearchButtonText": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/SearchableInfo.html#getSearchButtonText()"
          },
          "getIconId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/SearchableInfo.html#getIconId()"
          },
          "writeToParcel": {
            "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/SearchableInfo.html#writeToParcel(android.os.Parcel, int)"
          },
          "findActionKey": {
            "!type": "fn(keyCode: number) -> +android.app.SearchableInfo.ActionKeyInfo",
            "!url": "http://developer.android.com/reference/android/app/SearchableInfo.html#findActionKey(int)"
          },
          "getSettingsDescriptionId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/SearchableInfo.html#getSettingsDescriptionId()"
          },
          "getVoiceLanguageModeId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/SearchableInfo.html#getVoiceLanguageModeId()"
          },
          "getVoiceSearchLaunchWebSearch": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/SearchableInfo.html#getVoiceSearchLaunchWebSearch()"
          },
          "getVoiceSearchEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/SearchableInfo.html#getVoiceSearchEnabled()"
          },
          "getVoiceMaxResults": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/SearchableInfo.html#getVoiceMaxResults()"
          },
          "useBadgeIcon": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/SearchableInfo.html#useBadgeIcon()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "useBadgeLabel": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/SearchableInfo.html#useBadgeLabel()"
          },
          "shouldRewriteQueryFromText": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/SearchableInfo.html#shouldRewriteQueryFromText()"
          },
          "getSuggestThreshold": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/SearchableInfo.html#getSuggestThreshold()"
          },
          "autoUrlDetect": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/SearchableInfo.html#autoUrlDetect()"
          }
        }
      },
      "PackageInstallObserver": {
        "!url": "http://developer.android.com/reference/android/app/PackageInstallObserver.html",
        "!type": "fn()",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "onUserActionRequired": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/PackageInstallObserver.html#onUserActionRequired(android.content.Intent)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getBinder": {
            "!type": "fn() -> IPackageInstallObserver2",
            "!url": "http://developer.android.com/reference/android/app/PackageInstallObserver.html#getBinder()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "onPackageInstalled": {
            "!type": "fn(basePackageName: string, returnCode: number, msg: string, extras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/PackageInstallObserver.html#onPackageInstalled(java.lang.String, int, java.lang.String, android.os.Bundle)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "Activity": {
        "!url": "http://developer.android.com/reference/android/app/Activity.html",
        "!type": "fn()",
        "BIND_WAIVE_PRIORITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_WAIVE_PRIORITY"
        },
        "RESULT_FIRST_USER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_FIRST_USER"
        },
        "DEFAULT_KEYS_SHORTCUT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SHORTCUT"
        },
        "MEDIA_PROJECTION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_PROJECTION_SERVICE"
        },
        "ETHERNET_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ETHERNET_SERVICE"
        },
        "WIFI_RTT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_RTT_SERVICE"
        },
        "SENSOR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SENSOR_SERVICE"
        },
        "TELEPHONY_SUBSCRIPTION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SUBSCRIPTION_SERVICE"
        },
        "CAPTIONING_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CAPTIONING_SERVICE"
        },
        "CAMERA_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CAMERA_SERVICE"
        },
        "BIND_DEBUG_UNBIND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_DEBUG_UNBIND"
        },
        "STATUS_BAR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#STATUS_BAR_SERVICE"
        },
        "DEVICE_POLICY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_POLICY_SERVICE"
        },
        "BIND_IMPORTANT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_IMPORTANT"
        },
        "NSD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NSD_SERVICE"
        },
        "DOWNLOAD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DOWNLOAD_SERVICE"
        },
        "BIND_NOT_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_VISIBLE"
        },
        "CONTEXT_IGNORE_SECURITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_IGNORE_SECURITY"
        },
        "USAGE_STATS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USAGE_STATS_SERVICE"
        },
        "MODE_WORLD_READABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_READABLE"
        },
        "KEYGUARD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#KEYGUARD_SERVICE"
        },
        "BIND_ADJUST_WITH_ACTIVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ADJUST_WITH_ACTIVITY"
        },
        "UI_MODE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#UI_MODE_SERVICE"
        },
        "MODE_PRIVATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_PRIVATE"
        },
        "CONTEXT_INCLUDE_CODE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_INCLUDE_CODE"
        },
        "DEFAULT_KEYS_DISABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_DISABLE"
        },
        "ACCESSIBILITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACCESSIBILITY_SERVICE"
        },
        "HDMI_CONTROL_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#HDMI_CONTROL_SERVICE"
        },
        "BIND_SHOWING_UI": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_SHOWING_UI"
        },
        "MODE_APPEND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_APPEND"
        },
        "AUDIO_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#AUDIO_SERVICE"
        },
        "NETWORK_SCORE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_SCORE_SERVICE"
        },
        "UPDATE_LOCK_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#UPDATE_LOCK_SERVICE"
        },
        "MEDIA_ROUTER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_ROUTER_SERVICE"
        },
        "JOB_SCHEDULER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#JOB_SCHEDULER_SERVICE"
        },
        "DEVICE_IDLE_CONTROLLER": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_IDLE_CONTROLLER"
        },
        "INPUT_METHOD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_METHOD_SERVICE"
        },
        "RESULT_CANCELED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_CANCELED"
        },
        "BIND_ABOVE_CLIENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ABOVE_CLIENT"
        },
        "INPUT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_SERVICE"
        },
        "MODE_WORLD_WRITEABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_WRITEABLE"
        },
        "NETWORKMANAGEMENT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORKMANAGEMENT_SERVICE"
        },
        "WINDOW_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WINDOW_SERVICE"
        },
        "MEDIA_SESSION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_SESSION_SERVICE"
        },
        "WIFI_P2P_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_P2P_SERVICE"
        },
        "DEFAULT_KEYS_SEARCH_GLOBAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SEARCH_GLOBAL"
        },
        "MODE_ENABLE_WRITE_AHEAD_LOGGING": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_ENABLE_WRITE_AHEAD_LOGGING"
        },
        "WIFI_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SERVICE"
        },
        "PERSISTENT_DATA_BLOCK_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#PERSISTENT_DATA_BLOCK_SERVICE"
        },
        "TV_INPUT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TV_INPUT_SERVICE"
        },
        "SIP_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SIP_SERVICE"
        },
        "FINGERPRINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#FINGERPRINT_SERVICE"
        },
        "LOCATION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LOCATION_SERVICE"
        },
        "LAUNCHER_APPS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LAUNCHER_APPS_SERVICE"
        },
        "NETWORK_STATS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_STATS_SERVICE"
        },
        "VOICE_INTERACTION_MANAGER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#VOICE_INTERACTION_MANAGER_SERVICE"
        },
        "TELECOM_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELECOM_SERVICE"
        },
        "SEARCH_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SEARCH_SERVICE"
        },
        "RADIO_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#RADIO_SERVICE"
        },
        "BIND_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_VISIBLE"
        },
        "BIND_NOT_FOREGROUND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_FOREGROUND"
        },
        "CONTEXT_RESTRICTED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_RESTRICTED"
        },
        "USER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USER_SERVICE"
        },
        "DROPBOX_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DROPBOX_SERVICE"
        },
        "BIND_TREAT_LIKE_ACTIVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_TREAT_LIKE_ACTIVITY"
        },
        "DEFAULT_KEYS_SEARCH_LOCAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SEARCH_LOCAL"
        },
        "BIND_FOREGROUND_SERVICE_WHILE_AWAKE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE_WHILE_AWAKE"
        },
        "CLIPBOARD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CLIPBOARD_SERVICE"
        },
        "LAYOUT_INFLATER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LAYOUT_INFLATER_SERVICE"
        },
        "WIFI_SCANNING_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SCANNING_SERVICE"
        },
        "PRINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#PRINT_SERVICE"
        },
        "WALLPAPER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WALLPAPER_SERVICE"
        },
        "ALARM_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ALARM_SERVICE"
        },
        "ACCOUNT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACCOUNT_SERVICE"
        },
        "TRUST_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TRUST_SERVICE"
        },
        "VIBRATOR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#VIBRATOR_SERVICE"
        },
        "RESULT_OK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_OK"
        },
        "NFC_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NFC_SERVICE"
        },
        "NOTIFICATION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NOTIFICATION_SERVICE"
        },
        "BLUETOOTH_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BLUETOOTH_SERVICE"
        },
        "POWER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#POWER_SERVICE"
        },
        "BIND_ALLOW_OOM_MANAGEMENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ALLOW_OOM_MANAGEMENT"
        },
        "DEFAULT_KEYS_DIALER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_DIALER"
        },
        "BACKUP_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BACKUP_SERVICE"
        },
        "COUNTRY_DETECTOR": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#COUNTRY_DETECTOR"
        },
        "SERIAL_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SERIAL_SERVICE"
        },
        "WIFI_PASSPOINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_PASSPOINT_SERVICE"
        },
        "CONSUMER_IR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONSUMER_IR_SERVICE"
        },
        "APP_OPS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#APP_OPS_SERVICE"
        },
        "ACTIVITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACTIVITY_SERVICE"
        },
        "STORAGE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#STORAGE_SERVICE"
        },
        "BIND_FOREGROUND_SERVICE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE"
        },
        "RESTRICTIONS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#RESTRICTIONS_SERVICE"
        },
        "CONNECTIVITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONNECTIVITY_SERVICE"
        },
        "TEXT_SERVICES_MANAGER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TEXT_SERVICES_MANAGER_SERVICE"
        },
        "USB_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USB_SERVICE"
        },
        "APPWIDGET_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#APPWIDGET_SERVICE"
        },
        "CONTEXT_REGISTER_PACKAGE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_REGISTER_PACKAGE"
        },
        "CARRIER_CONFIG_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CARRIER_CONFIG_SERVICE"
        },
        "NETWORK_POLICY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_POLICY_SERVICE"
        },
        "MIDI_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MIDI_SERVICE"
        },
        "BATTERY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BATTERY_SERVICE"
        },
        "MODE_MULTI_PROCESS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_MULTI_PROCESS"
        },
        "BIND_AUTO_CREATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_AUTO_CREATE"
        },
        "DISPLAY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DISPLAY_SERVICE"
        },
        "TELEPHONY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SERVICE"
        },
        "prototype": {
          "isBackgroundVisibleBehind": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isBackgroundVisibleBehind()"
          },
          "setProgressBarVisibility": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarVisibility(boolean)"
          },
          "setFeatureDrawableResource": {
            "!type": "fn(featureId: number, resId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableResource(int, int)"
          },
          "dispatchEnterAnimationComplete": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchEnterAnimationComplete()"
          },
          "finishActivityFromChild": {
            "!type": "fn(child: +android.app.Activity, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishActivityFromChild(android.app.Activity, int)"
          },
          "startPostponedEnterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startPostponedEnterTransition()"
          },
          "onProvideAssistContent": {
            "!type": "fn(outContent: +android.app.assist.AssistContent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideAssistContent(android.app.assist.AssistContent)"
          },
          "sendBroadcastMultiplePermissions": {
            "!type": "fn(intent: +android.content.Intent, receiverPermissions: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastMultiplePermissions(android.content.Intent, java.lang.String[])"
          },
          "getString": {
            "!type": "fn(resId: number) -> string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getString(int)"
          },
          "onKeyDown": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyDown(int, android.view.KeyEvent)"
          },
          "getResources": {
            "!type": "fn() -> +android.content.res.Resources",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getResources()"
          },
          "sendStickyBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcast(android.content.Intent)"
          },
          "startActivityFromFragment": {
            "!type": "fn(fragment: +android.app.Fragment, intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityFromFragment(android.app.Fragment, android.content.Intent, int)"
          },
          "onCreateThumbnail": {
            "!type": "fn(outBitmap: +android.graphics.Bitmap, canvas: +android.graphics.Canvas) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateThumbnail(android.graphics.Bitmap, android.graphics.Canvas)"
          },
          "getOpPackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getOpPackageName()"
          },
          "getCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCacheDir()"
          },
          "onWindowDismissed": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowDismissed()"
          },
          "getBaseContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBaseContext()"
          },
          "checkCallingOrSelfPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfPermission(java.lang.String)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "isVoiceInteractionRoot": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isVoiceInteractionRoot()"
          },
          "onDetachedFromWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onDetachedFromWindow()"
          },
          "setResult": {
            "!type": "fn(resultCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setResult(int)"
          },
          "onOptionsItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onOptionsItemSelected(android.view.MenuItem)"
          },
          "isChangingConfigurations": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isChangingConfigurations()"
          },
          "getCodeCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCodeCacheDir()"
          },
          "createPendingResult": {
            "!type": "fn(requestCode: number, data: +android.content.Intent, flags: number) -> +android.app.PendingIntent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#createPendingResult(int, android.content.Intent, int)"
          },
          "getPackageResourcePath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageResourcePath()"
          },
          "getCurrentFocus": {
            "!type": "fn() -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCurrentFocus()"
          },
          "triggerSearch": {
            "!type": "fn(query: string, appSearchData: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#triggerSearch(java.lang.String, android.os.Bundle)"
          },
          "convertToTranslucent": {
            "!type": "fn(callback: +android.app.Activity.TranslucentConversionListener, options: +android.app.ActivityOptions) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#convertToTranslucent(android.app.Activity.TranslucentConversionListener, android.app.ActivityOptions)"
          },
          "startActivityForResult": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityForResult(android.content.Intent, int)"
          },
          "getLayoutInflater": {
            "!type": "fn() -> +android.view.LayoutInflater",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLayoutInflater()"
          },
          "enforcePermission": {
            "!type": "fn(permission: string, pid: number, uid: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforcePermission(java.lang.String, int, int, java.lang.String)"
          },
          "createPackageContext": {
            "!type": "fn(packageName: string, flags: number) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContext(java.lang.String, int)"
          },
          "onWindowStartingActionMode": {
            "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowStartingActionMode(android.view.ActionMode.Callback)"
          },
          "registerForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#registerForContextMenu(android.view.View)"
          },
          "setSecondaryProgress": {
            "!type": "fn(secondaryProgress: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setSecondaryProgress(int)"
          },
          "onContentChanged": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onContentChanged()"
          },
          "finishAndRemoveTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAndRemoveTask()"
          },
          "setFinishOnTouchOutside": {
            "!type": "fn(finish: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFinishOnTouchOutside(boolean)"
          },
          "requestWindowFeature": {
            "!type": "fn(featureId: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestWindowFeature(int)"
          },
          "createConfigurationContext": {
            "!type": "fn(overrideConfiguration: +android.content.res.Configuration) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createConfigurationContext(android.content.res.Configuration)"
          },
          "showDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showDialog(int)"
          },
          "onSearchRequested": {
            "!type": "fn(searchEvent: +android.view.SearchEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onSearchRequested(android.view.SearchEvent)"
          },
          "onContextItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onContextItemSelected(android.view.MenuItem)"
          },
          "onTrackballEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTrackballEvent(android.view.MotionEvent)"
          },
          "requestPermissions": {
            "!type": "fn(permissions: +java.newArray, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestPermissions(java.lang.String[], int)"
          },
          "getVoiceInteractor": {
            "!type": "fn() -> +android.app.VoiceInteractor",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getVoiceInteractor()"
          },
          "peekWallpaper": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#peekWallpaper()"
          },
          "onPrepareOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPrepareOptionsMenu(android.view.Menu)"
          },
          "onSaveInstanceState": {
            "!type": "fn(outState: +android.os.Bundle, outPersistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onSaveInstanceState(android.os.Bundle, android.os.PersistableBundle)"
          },
          "registerReceiver": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver, filter: +android.content.IntentFilter) -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter)"
          },
          "setActionBar": {
            "!type": "fn(toolbar: +android.widget.Toolbar) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setActionBar(android.widget.Toolbar)"
          },
          "getIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getIntent()"
          },
          "getObbDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDirs()"
          },
          "getPackageManager": {
            "!type": "fn() -> +android.content.pm.PackageManager",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageManager()"
          },
          "getSystemServiceName": {
            "!type": "fn(serviceClass: +java.lang.Class) -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSystemServiceName(java.lang.Class)"
          },
          "obtainStyledAttributes": {
            "!type": "fn(attrs: +java.newArray) -> +android.content.res.TypedArray",
            "!url": "http://developer.android.com/reference/android/content/Context.html#obtainStyledAttributes(int[])"
          },
          "getApplicationInfo": {
            "!type": "fn() -> +android.content.pm.ApplicationInfo",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationInfo()"
          },
          "setDefaultKeyMode": {
            "!type": "fn(mode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setDefaultKeyMode(int)"
          },
          "setProgressBarIndeterminate": {
            "!type": "fn(indeterminate: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarIndeterminate(boolean)"
          },
          "isRestricted": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#isRestricted()"
          },
          "hasWindowFocus": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#hasWindowFocus()"
          },
          "onConfigurationChanged": {
            "!type": "fn(newConfig: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onConfigurationChanged(android.content.res.Configuration)"
          },
          "getVolumeControlStream": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getVolumeControlStream()"
          },
          "databaseList": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#databaseList()"
          },
          "setTheme": {
            "!type": "fn(resid: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#setTheme(int)"
          },
          "isChild": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isChild()"
          },
          "isResumed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isResumed()"
          },
          "setRequestedOrientation": {
            "!type": "fn(requestedOrientation: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setRequestedOrientation(int)"
          },
          "onNewActivityOptions": {
            "!type": "fn(options: +android.app.ActivityOptions) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNewActivityOptions(android.app.ActivityOptions)"
          },
          "startActivity": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivity(android.content.Intent)"
          },
          "onGenericMotionEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onGenericMotionEvent(android.view.MotionEvent)"
          },
          "onWindowAttributesChanged": {
            "!type": "fn(params: +android.view.WindowManager.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowAttributesChanged(android.view.WindowManager.LayoutParams)"
          },
          "onPostCreate": {
            "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPostCreate(android.os.Bundle, android.os.PersistableBundle)"
          },
          "onKeyUp": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyUp(int, android.view.KeyEvent)"
          },
          "enforceCallingOrSelfUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfUriPermission(android.net.Uri, int, java.lang.String)"
          },
          "grantUriPermission": {
            "!type": "fn(toPackage: string, uri: +android.net.Uri, modeFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#grantUriPermission(java.lang.String, android.net.Uri, int)"
          },
          "startActivityAsCaller": {
            "!type": "fn(intent: +android.content.Intent, options: +android.os.Bundle, ignoreTargetSecurity: bool, userId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityAsCaller(android.content.Intent, android.os.Bundle, boolean, int)"
          },
          "onActivityReenter": {
            "!type": "fn(resultCode: number, data: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActivityReenter(int, android.content.Intent)"
          },
          "dispatchKeyShortcutEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchKeyShortcutEvent(android.view.KeyEvent)"
          },
          "onNavigateUpFromChild": {
            "!type": "fn(child: +android.app.Activity) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNavigateUpFromChild(android.app.Activity)"
          },
          "onEnterAnimationComplete": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onEnterAnimationComplete()"
          },
          "setContentView": {
            "!type": "fn(layoutResID: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setContentView(int)"
          },
          "getPackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageName()"
          },
          "getActionBar": {
            "!type": "fn() -> +android.app.ActionBar",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getActionBar()"
          },
          "isDestroyed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isDestroyed()"
          },
          "sendBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "runOnUiThread": {
            "!type": "fn(action: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#runOnUiThread(java.lang.Runnable)"
          },
          "stopLockTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#stopLockTask()"
          },
          "createApplicationContext": {
            "!type": "fn(application: +android.content.pm.ApplicationInfo, flags: number) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createApplicationContext(android.content.pm.ApplicationInfo, int)"
          },
          "finishAffinity": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAffinity()"
          },
          "openContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#openContextMenu(android.view.View)"
          },
          "setTaskDescription": {
            "!type": "fn(taskDescription: +android.app.ActivityManager.TaskDescription) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setTaskDescription(android.app.ActivityManager.TaskDescription)"
          },
          "setTitleColor": {
            "!type": "fn(textColor: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setTitleColor(int)"
          },
          "showAssist": {
            "!type": "fn(args: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showAssist(android.os.Bundle)"
          },
          "onVisibleBehindCanceled": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onVisibleBehindCanceled()"
          },
          "finishAfterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAfterTransition()"
          },
          "startServiceAsUser": {
            "!type": "fn(service: +android.content.Intent, user: +android.os.UserHandle) -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startServiceAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "onNavigateUp": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNavigateUp()"
          },
          "getActivityToken": {
            "!type": "fn() -> +android.os.IBinder",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getActivityToken()"
          },
          "onAttachFragment": {
            "!type": "fn(fragment: +android.app.Fragment) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onAttachFragment(android.app.Fragment)"
          },
          "getApplication": {
            "!type": "fn() -> +android.app.Application",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getApplication()"
          },
          "applyOverrideConfiguration": {
            "!type": "fn(overrideConfiguration: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#applyOverrideConfiguration(android.content.res.Configuration)"
          },
          "fileList": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#fileList()"
          },
          "getTaskId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTaskId()"
          },
          "openOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#openOptionsMenu()"
          },
          "onBackgroundVisibleBehindChanged": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onBackgroundVisibleBehindChanged(boolean)"
          },
          "startNextMatchingActivity": {
            "!type": "fn(intent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startNextMatchingActivity(android.content.Intent)"
          },
          "onPrepareNavigateUpTaskStack": {
            "!type": "fn(builder: +android.app.TaskStackBuilder) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPrepareNavigateUpTaskStack(android.app.TaskStackBuilder)"
          },
          "onActionModeFinished": {
            "!type": "fn(mode: +android.view.ActionMode) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActionModeFinished(android.view.ActionMode)"
          },
          "getLocalClassName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLocalClassName()"
          },
          "managedQuery": {
            "!type": "fn(uri: +android.net.Uri, projection: +java.newArray, selection: string, sortOrder: string) -> +android.database.Cursor",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#managedQuery(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String)"
          },
          "checkPermission": {
            "!type": "fn(permission: string, pid: number, uid: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkPermission(java.lang.String, int, int)"
          },
          "getWallpaperDesiredMinimumHeight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumHeight()"
          },
          "startManagingCursor": {
            "!type": "fn(c: +android.database.Cursor) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startManagingCursor(android.database.Cursor)"
          },
          "onRequestPermissionsResult": {
            "!type": "fn(requestCode: number, permissions: +java.newArray, grantResults: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRequestPermissionsResult(int, java.lang.String[], int[])"
          },
          "revokeUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#revokeUriPermission(android.net.Uri, int)"
          },
          "startActivityIfNeeded": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityIfNeeded(android.content.Intent, int)"
          },
          "moveTaskToBack": {
            "!type": "fn(nonRoot: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#moveTaskToBack(boolean)"
          },
          "unregisterForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#unregisterForContextMenu(android.view.View)"
          },
          "setPersistent": {
            "!type": "fn(isPersistent: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setPersistent(boolean)"
          },
          "onUserInteraction": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onUserInteraction()"
          },
          "setFeatureDrawableUri": {
            "!type": "fn(featureId: number, uri: +android.net.Uri) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableUri(int, android.net.Uri)"
          },
          "onStateNotSaved": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onStateNotSaved()"
          },
          "sendStickyOrderedBroadcast": {
            "!type": "fn(intent: +android.content.Intent, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcast(android.content.Intent, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "sendStickyOrderedBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "setContentTransitionManager": {
            "!type": "fn(tm: +android.transition.TransitionManager) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setContentTransitionManager(android.transition.TransitionManager)"
          },
          "getLoaderManager": {
            "!type": "fn() -> +android.app.LoaderManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLoaderManager()"
          },
          "onRetainNonConfigurationInstance": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRetainNonConfigurationInstance()"
          },
          "getExternalFilesDir": {
            "!type": "fn(type: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDir(java.lang.String)"
          },
          "bindService": {
            "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindService(android.content.Intent, android.content.ServiceConnection, int)"
          },
          "startActivitiesAsUser": {
            "!type": "fn(intents: +java.newArray, options: +android.os.Bundle, userHandle: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivitiesAsUser(android.content.Intent[], android.os.Bundle, android.os.UserHandle)"
          },
          "onRestoreInstanceState": {
            "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRestoreInstanceState(android.os.Bundle, android.os.PersistableBundle)"
          },
          "recreate": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#recreate()"
          },
          "getDatabasePath": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDatabasePath(java.lang.String)"
          },
          "setEnterSharedElementCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setEnterSharedElementCallback(android.app.SharedElementCallback)"
          },
          "onCreateContextMenu": {
            "!type": "fn(menu: +android.view.ContextMenu, v: +android.view.View, menuInfo: +android.view.ContextMenu.ContextMenuInfo) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenu.ContextMenuInfo)"
          },
          "onProvideAssistData": {
            "!type": "fn(data: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideAssistData(android.os.Bundle)"
          },
          "checkSelfPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkSelfPermission(java.lang.String)"
          },
          "onPanelClosed": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPanelClosed(int, android.view.Menu)"
          },
          "onCreate": {
            "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreate(android.os.Bundle, android.os.PersistableBundle)"
          },
          "enforceCallingOrSelfPermission": {
            "!type": "fn(permission: string, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfPermission(java.lang.String, java.lang.String)"
          },
          "onTouchEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTouchEvent(android.view.MotionEvent)"
          },
          "getTheme": {
            "!type": "fn() -> +android.content.res.Resources.Theme",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getTheme()"
          },
          "onKeyLongPress": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyLongPress(int, android.view.KeyEvent)"
          },
          "setMediaController": {
            "!type": "fn(controller: +android.media.session.MediaController) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setMediaController(android.media.session.MediaController)"
          },
          "getChangingConfigurations": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getChangingConfigurations()"
          },
          "finishActivity": {
            "!type": "fn(requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishActivity(int)"
          },
          "onCreatePanelView": {
            "!type": "fn(featureId: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreatePanelView(int)"
          },
          "getSearchEvent": {
            "!type": "fn() -> +android.view.SearchEvent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getSearchEvent()"
          },
          "setVisible": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setVisible(boolean)"
          },
          "startIntentSender": {
            "!type": "fn(intent: +android.content.IntentSender, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSender(android.content.IntentSender, android.content.Intent, int, int, int)"
          },
          "getExternalFilesDirs": {
            "!type": "fn(type: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDirs(java.lang.String)"
          },
          "stopServiceAsUser": {
            "!type": "fn(name: +android.content.Intent, user: +android.os.UserHandle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopServiceAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "unbindService": {
            "!type": "fn(conn: +android.content.ServiceConnection) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unbindService(android.content.ServiceConnection)"
          },
          "startActivityAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "onKeyShortcut": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyShortcut(int, android.view.KeyEvent)"
          },
          "getSharedPrefsFile": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPrefsFile(java.lang.String)"
          },
          "getDir": {
            "!type": "fn(name: string, mode: number) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDir(java.lang.String, int)"
          },
          "releaseInstance": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#releaseInstance()"
          },
          "onKeyMultiple": {
            "!type": "fn(keyCode: number, repeatCount: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyMultiple(int, int, android.view.KeyEvent)"
          },
          "onPreparePanel": {
            "!type": "fn(featureId: number, view: +android.view.View, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPreparePanel(int, android.view.View, android.view.Menu)"
          },
          "bindServiceAsUser": {
            "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number, user: +android.os.UserHandle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindServiceAsUser(android.content.Intent, android.content.ServiceConnection, int, android.os.UserHandle)"
          },
          "closeContextMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#closeContextMenu()"
          },
          "startSearch": {
            "!type": "fn(initialQuery: string, selectInitialQuery: bool, appSearchData: +android.os.Bundle, globalSearch: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startSearch(java.lang.String, boolean, android.os.Bundle, boolean)"
          },
          "getComponentName": {
            "!type": "fn() -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getComponentName()"
          },
          "showLockTaskEscapeMessage": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showLockTaskEscapeMessage()"
          },
          "getContentTransitionManager": {
            "!type": "fn() -> +android.transition.TransitionManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getContentTransitionManager()"
          },
          "onBackPressed": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onBackPressed()"
          },
          "getExternalCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDir()"
          },
          "getDrawable": {
            "!type": "fn(id: number) -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getDrawable(int)"
          },
          "setImmersive": {
            "!type": "fn(i: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setImmersive(boolean)"
          },
          "openFileOutput": {
            "!type": "fn(name: string, mode: number) -> +java.io.FileOutputStream",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileOutput(java.lang.String, int)"
          },
          "getAssets": {
            "!type": "fn() -> +android.content.res.AssetManager",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getAssets()"
          },
          "onLowMemory": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onLowMemory()"
          },
          "getParentActivityIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getParentActivityIntent()"
          },
          "convertFromTranslucent": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#convertFromTranslucent()"
          },
          "dispatchTouchEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchTouchEvent(android.view.MotionEvent)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getContentScene": {
            "!type": "fn() -> +android.transition.Scene",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getContentScene()"
          },
          "getCallingPackage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCallingPackage()"
          },
          "deleteDatabase": {
            "!type": "fn(name: string) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteDatabase(java.lang.String)"
          },
          "checkCallingPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingPermission(java.lang.String)"
          },
          "dispatchGenericMotionEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchGenericMotionEvent(android.view.MotionEvent)"
          },
          "getExternalMediaDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalMediaDirs()"
          },
          "getCallingActivity": {
            "!type": "fn() -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCallingActivity()"
          },
          "onAttachedToWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onAttachedToWindow()"
          },
          "clearWallpaper": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#clearWallpaper()"
          },
          "setTitle": {
            "!type": "fn(title: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setTitle(java.lang.CharSequence)"
          },
          "enforceCallingUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingUriPermission(android.net.Uri, int, java.lang.String)"
          },
          "getThemeResId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getThemeResId()"
          },
          "onWindowFocusChanged": {
            "!type": "fn(hasFocus: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowFocusChanged(boolean)"
          },
          "registerComponentCallbacks": {
            "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
            "!url": "http://developer.android.com/reference/android/content/Context.html#registerComponentCallbacks(android.content.ComponentCallbacks)"
          },
          "getText": {
            "!type": "fn(resId: number) -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getText(int)"
          },
          "enforceUriPermission": {
            "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceUriPermission(android.net.Uri, int, int, int, java.lang.String)"
          },
          "onProvideReferrer": {
            "!type": "fn() -> +android.net.Uri",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideReferrer()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "unregisterComponentCallbacks": {
            "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
            "!url": "http://developer.android.com/reference/android/content/Context.html#unregisterComponentCallbacks(android.content.ComponentCallbacks)"
          },
          "finish": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finish()"
          },
          "getWallpaperDesiredMinimumWidth": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumWidth()"
          },
          "onMenuItemSelected": {
            "!type": "fn(featureId: number, item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onMenuItemSelected(int, android.view.MenuItem)"
          },
          "getWallpaper": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaper()"
          },
          "isVoiceInteraction": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isVoiceInteraction()"
          },
          "navigateUpTo": {
            "!type": "fn(upIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#navigateUpTo(android.content.Intent)"
          },
          "onCreatePanelMenu": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreatePanelMenu(int, android.view.Menu)"
          },
          "openOrCreateDatabase": {
            "!type": "fn(name: string, mode: number, factory: +android.database.sqlite.SQLiteDatabase.CursorFactory) -> +android.database.sqlite.SQLiteDatabase",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openOrCreateDatabase(java.lang.String, int, android.database.sqlite.SQLiteDatabase.CursorFactory)"
          },
          "openFileInput": {
            "!type": "fn(name: string) -> +java.io.FileInputStream",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileInput(java.lang.String)"
          },
          "dump": {
            "!type": "fn(prefix: string, fd: +java.io.FileDescriptor, writer: +java.io.PrintWriter, args: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])"
          },
          "onCreateDescription": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateDescription()"
          },
          "invalidateOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#invalidateOptionsMenu()"
          },
          "sendOrderedBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, receiverPermission: string, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, java.lang.String, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "canStartActivityForResult": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#canStartActivityForResult()"
          },
          "setProgress": {
            "!type": "fn(progress: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgress(int)"
          },
          "navigateUpToFromChild": {
            "!type": "fn(child: +android.app.Activity, upIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#navigateUpToFromChild(android.app.Activity, android.content.Intent)"
          },
          "getContentResolver": {
            "!type": "fn() -> +android.content.ContentResolver",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getContentResolver()"
          },
          "isFinishing": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isFinishing()"
          },
          "getFragmentManager": {
            "!type": "fn() -> +android.app.FragmentManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getFragmentManager()"
          },
          "getParent": {
            "!type": "fn() -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getParent()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "checkCallingUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingUriPermission(android.net.Uri, int)"
          },
          "setExitSharedElementCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setExitSharedElementCallback(android.app.SharedElementCallback)"
          },
          "checkUriPermission": {
            "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkUriPermission(android.net.Uri, int, int, int)"
          },
          "setFeatureDrawableAlpha": {
            "!type": "fn(featureId: number, alpha: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableAlpha(int, int)"
          },
          "registerReceiverAsUser": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver, user: +android.os.UserHandle, filter: +android.content.IntentFilter, broadcastPermission: string, scheduler: +android.os.Handler) -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiverAsUser(android.content.BroadcastReceiver, android.os.UserHandle, android.content.IntentFilter, java.lang.String, android.os.Handler)"
          },
          "getPackageCodePath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageCodePath()"
          },
          "getWindow": {
            "!type": "fn() -> +android.view.Window",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getWindow()"
          },
          "startIntentSenderFromChild": {
            "!type": "fn(child: +android.app.Activity, intent: +android.content.IntentSender, requestCode: number, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSenderFromChild(android.app.Activity, android.content.IntentSender, int, android.content.Intent, int, int, int)"
          },
          "postponeEnterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#postponeEnterTransition()"
          },
          "shouldUpRecreateTask": {
            "!type": "fn(targetIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#shouldUpRecreateTask(android.content.Intent)"
          },
          "removeStickyBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "deleteFile": {
            "!type": "fn(name: string) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteFile(java.lang.String)"
          },
          "onContextMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onContextMenuClosed(android.view.Menu)"
          },
          "onCreateOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateOptionsMenu(android.view.Menu)"
          },
          "getClassLoader": {
            "!type": "fn() -> +java.lang.ClassLoader",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getClassLoader()"
          },
          "dispatchPopulateAccessibilityEvent": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
          },
          "setIntent": {
            "!type": "fn(newIntent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setIntent(android.content.Intent)"
          },
          "setVolumeControlStream": {
            "!type": "fn(streamType: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setVolumeControlStream(int)"
          },
          "getObbDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDir()"
          },
          "startInstrumentation": {
            "!type": "fn(className: +android.content.ComponentName, profileFile: string, arguments: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startInstrumentation(android.content.ComponentName, java.lang.String, android.os.Bundle)"
          },
          "reportFullyDrawn": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#reportFullyDrawn()"
          },
          "setProgressBarIndeterminateVisibility": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarIndeterminateVisibility(boolean)"
          },
          "finishFromChild": {
            "!type": "fn(child: +android.app.Activity) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishFromChild(android.app.Activity)"
          },
          "getColorStateList": {
            "!type": "fn(id: number) -> +android.content.res.ColorStateList",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getColorStateList(int)"
          },
          "getTitleColor": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTitleColor()"
          },
          "getMediaController": {
            "!type": "fn() -> +android.media.session.MediaController",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getMediaController()"
          },
          "sendBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcast(android.content.Intent)"
          },
          "overridePendingTransition": {
            "!type": "fn(enterAnim: number, exitAnim: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#overridePendingTransition(int, int)"
          },
          "dispatchTrackballEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchTrackballEvent(android.view.MotionEvent)"
          },
          "getNoBackupFilesDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getNoBackupFilesDir()"
          },
          "startActionMode": {
            "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActionMode(android.view.ActionMode.Callback)"
          },
          "getApplicationContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationContext()"
          },
          "onCreateNavigateUpTaskStack": {
            "!type": "fn(builder: +android.app.TaskStackBuilder) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateNavigateUpTaskStack(android.app.TaskStackBuilder)"
          },
          "createDisplayContext": {
            "!type": "fn(display: +android.view.Display) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createDisplayContext(android.view.Display)"
          },
          "onActionModeStarted": {
            "!type": "fn(mode: +android.view.ActionMode) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActionModeStarted(android.view.ActionMode)"
          },
          "dispatchKeyEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchKeyEvent(android.view.KeyEvent)"
          },
          "enforceCallingPermission": {
            "!type": "fn(permission: string, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingPermission(java.lang.String, java.lang.String)"
          },
          "setFeatureDrawable": {
            "!type": "fn(featureId: number, drawable: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawable(int, android.graphics.drawable.Drawable)"
          },
          "dismissDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dismissDialog(int)"
          },
          "createPackageContextAsUser": {
            "!type": "fn(packageName: string, flags: number, user: +android.os.UserHandle) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContextAsUser(java.lang.String, int, android.os.UserHandle)"
          },
          "onMenuOpened": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onMenuOpened(int, android.view.Menu)"
          },
          "getSystemService": {
            "!type": "fn(name: string) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getSystemService(java.lang.String)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "startActivities": {
            "!type": "fn(intents: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivities(android.content.Intent[])"
          },
          "startService": {
            "!type": "fn(service: +android.content.Intent) -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startService(android.content.Intent)"
          },
          "getFileStreamPath": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFileStreamPath(java.lang.String)"
          },
          "addContentView": {
            "!type": "fn(view: +android.view.View, params: +android.view.ViewGroup.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#addContentView(android.view.View, android.view.ViewGroup.LayoutParams)"
          },
          "closeOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#closeOptionsMenu()"
          },
          "sendStickyBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "takeKeyEvents": {
            "!type": "fn(get: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#takeKeyEvents(boolean)"
          },
          "getTitle": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTitle()"
          },
          "getWindowManager": {
            "!type": "fn() -> +android.view.WindowManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getWindowManager()"
          },
          "getBasePackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBasePackageName()"
          },
          "stopManagingCursor": {
            "!type": "fn(c: +android.database.Cursor) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#stopManagingCursor(android.database.Cursor)"
          },
          "checkCallingOrSelfUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfUriPermission(android.net.Uri, int)"
          },
          "setWallpaper": {
            "!type": "fn(bitmap: +android.graphics.Bitmap) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#setWallpaper(android.graphics.Bitmap)"
          },
          "sendOrderedBroadcast": {
            "!type": "fn(intent: +android.content.Intent, receiverPermission: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcast(android.content.Intent, java.lang.String)"
          },
          "unregisterReceiver": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unregisterReceiver(android.content.BroadcastReceiver)"
          },
          "getColor": {
            "!type": "fn(id: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getColor(int)"
          },
          "getMenuInflater": {
            "!type": "fn() -> +android.view.MenuInflater",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getMenuInflater()"
          },
          "stopService": {
            "!type": "fn(name: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopService(android.content.Intent)"
          },
          "getMainLooper": {
            "!type": "fn() -> +android.os.Looper",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getMainLooper()"
          },
          "startActivityFromChild": {
            "!type": "fn(child: +android.app.Activity, intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityFromChild(android.app.Activity, android.content.Intent, int)"
          },
          "startLockTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startLockTask()"
          },
          "removeStickyBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcast(android.content.Intent)"
          },
          "getExternalCacheDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDirs()"
          },
          "getReferrer": {
            "!type": "fn() -> +android.net.Uri",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getReferrer()"
          },
          "isImmersive": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isImmersive()"
          },
          "shouldShowRequestPermissionRationale": {
            "!type": "fn(permission: string) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#shouldShowRequestPermissionRationale(java.lang.String)"
          },
          "getPreferences": {
            "!type": "fn(mode: number) -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getPreferences(int)"
          },
          "getFilesDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFilesDir()"
          },
          "findViewById": {
            "!type": "fn(id: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#findViewById(int)"
          },
          "getSharedPreferences": {
            "!type": "fn(name: string, mode: number) -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPreferences(java.lang.String, int)"
          },
          "isTaskRoot": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isTaskRoot()"
          },
          "getLastNonConfigurationInstance": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLastNonConfigurationInstance()"
          },
          "getDisplayAdjustments": {
            "!type": "fn(displayId: number) -> +android.view.DisplayAdjustments",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDisplayAdjustments(int)"
          },
          "getRequestedOrientation": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getRequestedOrientation()"
          },
          "onTrimMemory": {
            "!type": "fn(level: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTrimMemory(int)"
          },
          "removeDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#removeDialog(int)"
          },
          "getUserId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getUserId()"
          },
          "requestVisibleBehind": {
            "!type": "fn(visible: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestVisibleBehind(boolean)"
          },
          "onOptionsMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onOptionsMenuClosed(android.view.Menu)"
          },
          "onCreateView": {
            "!type": "fn(name: string, context: +android.content.Context, attrs: +android.util.AttributeSet) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateView(java.lang.String, android.content.Context, android.util.AttributeSet)"
          },
          "startActivityForResultAsUser": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityForResultAsUser(android.content.Intent, int, android.os.UserHandle)"
          },
          "startIntentSenderForResult": {
            "!type": "fn(intent: +android.content.IntentSender, requestCode: number, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSenderForResult(android.content.IntentSender, int, android.content.Intent, int, int, int)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          }
        }
      },
      "FragmentBreadCrumbs": {
        "!url": "http://developer.android.com/reference/android/app/FragmentBreadCrumbs.html",
        "!type": "fn(context: +android.content.Context)",
        "OVER_SCROLL_ALWAYS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#OVER_SCROLL_ALWAYS"
        },
        "ACCESSIBILITY_LIVE_REGION_ASSERTIVE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#ACCESSIBILITY_LIVE_REGION_ASSERTIVE"
        },
        "LAYOUT_DIRECTION_INHERIT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#LAYOUT_DIRECTION_INHERIT"
        },
        "ACCESSIBILITY_LIVE_REGION_POLITE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#ACCESSIBILITY_LIVE_REGION_POLITE"
        },
        "SCROLL_INDICATOR_TOP": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_INDICATOR_TOP"
        },
        "TEXT_DIRECTION_RTL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_RTL"
        },
        "PUBLIC_STATUS_BAR_VISIBILITY_MASK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#PUBLIC_STATUS_BAR_VISIBILITY_MASK"
        },
        "LAYOUT_MODE_DEFAULT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#LAYOUT_MODE_DEFAULT"
        },
        "ROTATION_Y": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#ROTATION_Y"
        },
        "ROTATION_X": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#ROTATION_X"
        },
        "STATUS_BAR_HIDDEN": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_HIDDEN"
        },
        "SCROLL_AXIS_NONE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_AXIS_NONE"
        },
        "TEXT_ALIGNMENT_VIEW_START": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_ALIGNMENT_VIEW_START"
        },
        "TRANSLATION_Z": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#TRANSLATION_Z"
        },
        "IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS"
        },
        "FOCUS_BLOCK_DESCENDANTS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#FOCUS_BLOCK_DESCENDANTS"
        },
        "TRANSLATION_Y": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#TRANSLATION_Y"
        },
        "INVISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#INVISIBLE"
        },
        "TRANSLATION_X": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#TRANSLATION_X"
        },
        "SCROLL_INDICATOR_LEFT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_INDICATOR_LEFT"
        },
        "NO_ID": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#NO_ID"
        },
        "LAYOUT_DIRECTION_RTL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#LAYOUT_DIRECTION_RTL"
        },
        "SOUND_EFFECTS_ENABLED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SOUND_EFFECTS_ENABLED"
        },
        "TEXT_DIRECTION_LTR": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_LTR"
        },
        "ALPHA": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#ALPHA"
        },
        "LAYER_TYPE_HARDWARE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#LAYER_TYPE_HARDWARE"
        },
        "TEXT_DIRECTION_LOCALE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_LOCALE"
        },
        "SYSTEM_UI_FLAG_LAYOUT_STABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_LAYOUT_STABLE"
        },
        "DRAWING_CACHE_QUALITY_HIGH": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#DRAWING_CACHE_QUALITY_HIGH"
        },
        "FOCUS_LEFT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FOCUS_LEFT"
        },
        "SYSTEM_UI_FLAG_LIGHT_STATUS_BAR": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_LIGHT_STATUS_BAR"
        },
        "SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN"
        },
        "LAYER_TYPE_NONE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#LAYER_TYPE_NONE"
        },
        "TEXT_ALIGNMENT_INHERIT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_ALIGNMENT_INHERIT"
        },
        "STATUS_BAR_DISABLE_BACK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_BACK"
        },
        "PERSISTENT_ALL_CACHES": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#PERSISTENT_ALL_CACHES"
        },
        "FOCUSABLES_ALL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FOCUSABLES_ALL"
        },
        "SCROLL_AXIS_VERTICAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_AXIS_VERTICAL"
        },
        "STATUS_BAR_TRANSLUCENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_TRANSLUCENT"
        },
        "FIND_VIEWS_WITH_CONTENT_DESCRIPTION": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FIND_VIEWS_WITH_CONTENT_DESCRIPTION"
        },
        "DEBUG_DRAW": {
          "!type": "bool",
          "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#DEBUG_DRAW"
        },
        "SCALE_Y": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCALE_Y"
        },
        "SCALE_X": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCALE_X"
        },
        "SCROLLBAR_POSITION_LEFT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLLBAR_POSITION_LEFT"
        },
        "STATUS_BAR_UNHIDE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_UNHIDE"
        },
        "LAYOUT_MODE_OPTICAL_BOUNDS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#LAYOUT_MODE_OPTICAL_BOUNDS"
        },
        "LAYOUT_DIRECTION_LTR": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#LAYOUT_DIRECTION_LTR"
        },
        "NAVIGATION_BAR_TRANSIENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#NAVIGATION_BAR_TRANSIENT"
        },
        "GONE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#GONE"
        },
        "SCROLLBARS_INSIDE_INSET": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLLBARS_INSIDE_INSET"
        },
        "FOCUS_BACKWARD": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FOCUS_BACKWARD"
        },
        "FOCUS_AFTER_DESCENDANTS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#FOCUS_AFTER_DESCENDANTS"
        },
        "STATUS_BAR_DISABLE_SEARCH": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_SEARCH"
        },
        "STATUS_BAR_DISABLE_HOME": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_HOME"
        },
        "FOCUSABLES_TOUCH_MODE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FOCUSABLES_TOUCH_MODE"
        },
        "SYSTEM_UI_LAYOUT_FLAGS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_LAYOUT_FLAGS"
        },
        "STATUS_BAR_DISABLE_NOTIFICATION_ALERTS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_NOTIFICATION_ALERTS"
        },
        "HAPTIC_FEEDBACK_ENABLED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#HAPTIC_FEEDBACK_ENABLED"
        },
        "STATUS_BAR_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_VISIBLE"
        },
        "FOCUS_FORWARD": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FOCUS_FORWARD"
        },
        "LAYOUT_MODE_CLIP_BOUNDS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#LAYOUT_MODE_CLIP_BOUNDS"
        },
        "DRAG_FLAG_GLOBAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#DRAG_FLAG_GLOBAL"
        },
        "SYSTEM_UI_FLAG_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_VISIBLE"
        },
        "ACCESSIBILITY_CURSOR_POSITION_UNDEFINED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#ACCESSIBILITY_CURSOR_POSITION_UNDEFINED"
        },
        "SYSTEM_UI_FLAG_IMMERSIVE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_IMMERSIVE"
        },
        "STATUS_BAR_TRANSIENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_TRANSIENT"
        },
        "MEASURED_STATE_MASK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#MEASURED_STATE_MASK"
        },
        "ACCESSIBILITY_LIVE_REGION_NONE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#ACCESSIBILITY_LIVE_REGION_NONE"
        },
        "SCROLLBARS_OUTSIDE_OVERLAY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLLBARS_OUTSIDE_OVERLAY"
        },
        "TEXT_ALIGNMENT_GRAVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_ALIGNMENT_GRAVITY"
        },
        "DRAWING_CACHE_QUALITY_AUTO": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#DRAWING_CACHE_QUALITY_AUTO"
        },
        "TEXT_ALIGNMENT_VIEW_END": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_ALIGNMENT_VIEW_END"
        },
        "Z": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#Z"
        },
        "Y": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#Y"
        },
        "X": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#X"
        },
        "SCROLL_INDICATOR_START": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_INDICATOR_START"
        },
        "VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#VISIBLE"
        },
        "TEXT_ALIGNMENT_TEXT_START": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_ALIGNMENT_TEXT_START"
        },
        "SCROLL_AXIS_HORIZONTAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_AXIS_HORIZONTAL"
        },
        "IMPORTANT_FOR_ACCESSIBILITY_NO": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#IMPORTANT_FOR_ACCESSIBILITY_NO"
        },
        "STATUS_BAR_DISABLE_NOTIFICATION_TICKER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_NOTIFICATION_TICKER"
        },
        "OVER_SCROLL_IF_CONTENT_SCROLLS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#OVER_SCROLL_IF_CONTENT_SCROLLS"
        },
        "FOCUS_RIGHT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FOCUS_RIGHT"
        },
        "OVER_SCROLL_NEVER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#OVER_SCROLL_NEVER"
        },
        "TEXT_DIRECTION_FIRST_STRONG_RTL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_FIRST_STRONG_RTL"
        },
        "SCROLL_INDICATOR_BOTTOM": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_INDICATOR_BOTTOM"
        },
        "NAVIGATION_BAR_TRANSLUCENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#NAVIGATION_BAR_TRANSLUCENT"
        },
        "SYSTEM_UI_TRANSPARENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_TRANSPARENT"
        },
        "SCREEN_STATE_ON": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCREEN_STATE_ON"
        },
        "PERSISTENT_ANIMATION_CACHE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#PERSISTENT_ANIMATION_CACHE"
        },
        "TEXT_DIRECTION_INHERIT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_INHERIT"
        },
        "IMPORTANT_FOR_ACCESSIBILITY_YES": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#IMPORTANT_FOR_ACCESSIBILITY_YES"
        },
        "SCROLLBARS_INSIDE_OVERLAY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLLBARS_INSIDE_OVERLAY"
        },
        "ROTATION": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#ROTATION"
        },
        "FIND_VIEWS_WITH_ACCESSIBILITY_NODE_PROVIDERS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FIND_VIEWS_WITH_ACCESSIBILITY_NODE_PROVIDERS"
        },
        "SCROLL_INDICATOR_END": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_INDICATOR_END"
        },
        "NAVIGATION_BAR_UNHIDE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#NAVIGATION_BAR_UNHIDE"
        },
        "MEASURED_HEIGHT_STATE_SHIFT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#MEASURED_HEIGHT_STATE_SHIFT"
        },
        "TEXT_DIRECTION_FIRST_STRONG_LTR": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_FIRST_STRONG_LTR"
        },
        "KEEP_SCREEN_ON": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#KEEP_SCREEN_ON"
        },
        "TEXT_DIRECTION_FIRST_STRONG": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_FIRST_STRONG"
        },
        "STATUS_BAR_DISABLE_CLOCK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_CLOCK"
        },
        "STATUS_BAR_DISABLE_EXPAND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_EXPAND"
        },
        "FOCUS_BEFORE_DESCENDANTS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#FOCUS_BEFORE_DESCENDANTS"
        },
        "SYSTEM_UI_FLAG_HIDE_NAVIGATION": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_HIDE_NAVIGATION"
        },
        "SCREEN_STATE_OFF": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCREEN_STATE_OFF"
        },
        "TEXT_ALIGNMENT_TEXT_END": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_ALIGNMENT_TEXT_END"
        },
        "SYSTEM_UI_FLAG_FULLSCREEN": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_FULLSCREEN"
        },
        "FIND_VIEWS_WITH_TEXT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FIND_VIEWS_WITH_TEXT"
        },
        "STATUS_BAR_DISABLE_NOTIFICATION_ICONS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_NOTIFICATION_ICONS"
        },
        "PERSISTENT_NO_CACHE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#PERSISTENT_NO_CACHE"
        },
        "STATUS_BAR_DISABLE_RECENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_RECENT"
        },
        "STATUS_BAR_DISABLE_SYSTEM_INFO": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_SYSTEM_INFO"
        },
        "DRAWING_CACHE_QUALITY_LOW": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#DRAWING_CACHE_QUALITY_LOW"
        },
        "PERSISTENT_SCROLLING_CACHE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#PERSISTENT_SCROLLING_CACHE"
        },
        "SCROLL_INDICATOR_RIGHT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_INDICATOR_RIGHT"
        },
        "MEASURED_STATE_TOO_SMALL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#MEASURED_STATE_TOO_SMALL"
        },
        "TEXT_ALIGNMENT_CENTER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_ALIGNMENT_CENTER"
        },
        "SCROLLBARS_OUTSIDE_INSET": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLLBARS_OUTSIDE_INSET"
        },
        "TEXT_DIRECTION_ANY_RTL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_ANY_RTL"
        },
        "LAYER_TYPE_SOFTWARE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#LAYER_TYPE_SOFTWARE"
        },
        "IMPORTANT_FOR_ACCESSIBILITY_AUTO": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#IMPORTANT_FOR_ACCESSIBILITY_AUTO"
        },
        "MEASURED_SIZE_MASK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#MEASURED_SIZE_MASK"
        },
        "mDebugViewAttributes": {
          "!type": "bool",
          "!url": "http://developer.android.com/reference/android/view/View.html#mDebugViewAttributes"
        },
        "SCROLLBAR_POSITION_RIGHT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLLBAR_POSITION_RIGHT"
        },
        "LAYOUT_DIRECTION_LOCALE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#LAYOUT_DIRECTION_LOCALE"
        },
        "LAYOUT_DIRECTION_UNDEFINED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#LAYOUT_DIRECTION_UNDEFINED"
        },
        "SCROLLBAR_POSITION_DEFAULT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLLBAR_POSITION_DEFAULT"
        },
        "RECENT_APPS_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#RECENT_APPS_VISIBLE"
        },
        "DEBUG_LAYOUT_PROPERTY": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/view/View.html#DEBUG_LAYOUT_PROPERTY"
        },
        "SYSTEM_UI_CLEARABLE_FLAGS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_CLEARABLE_FLAGS"
        },
        "FOCUS_UP": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FOCUS_UP"
        },
        "SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION"
        },
        "SYSTEM_UI_FLAG_LOW_PROFILE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_LOW_PROFILE"
        },
        "SYSTEM_UI_FLAG_IMMERSIVE_STICKY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_IMMERSIVE_STICKY"
        },
        "FOCUS_DOWN": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FOCUS_DOWN"
        },
        "getDefaultSize": {
          "!type": "fn(size: number, measureSpec: number) -> number",
          "!url": "http://developer.android.com/reference/android/view/View.html#getDefaultSize(int, int)"
        },
        "combineMeasuredStates": {
          "!type": "fn(curState: number, newState: number) -> number",
          "!url": "http://developer.android.com/reference/android/view/View.html#combineMeasuredStates(int, int)"
        },
        "getChildMeasureSpec": {
          "!type": "fn(spec: number, padding: number, childDimension: number) -> number",
          "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getChildMeasureSpec(int, int, int)"
        },
        "resolveSizeAndState": {
          "!type": "fn(size: number, measureSpec: number, childMeasuredState: number) -> number",
          "!url": "http://developer.android.com/reference/android/view/View.html#resolveSizeAndState(int, int, int)"
        },
        "resolveSize": {
          "!type": "fn(size: number, measureSpec: number) -> number",
          "!url": "http://developer.android.com/reference/android/view/View.html#resolveSize(int, int)"
        },
        "generateViewId": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/view/View.html#generateViewId()"
        },
        "isLayoutModeOptical": {
          "!type": "fn(o: +java.lang.Object) -> bool",
          "!url": "http://developer.android.com/reference/android/view/View.html#isLayoutModeOptical(java.lang.Object)"
        },
        "inflate": {
          "!type": "fn(context: +android.content.Context, resource: number, root: +android.view.ViewGroup) -> +android.view.View",
          "!url": "http://developer.android.com/reference/android/view/View.html#inflate(android.content.Context, int, android.view.ViewGroup)"
        },
        "prototype": {
          "setFitsSystemWindows": {
            "!type": "fn(fitSystemWindows: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setFitsSystemWindows(boolean)"
          },
          "dispatchSystemUiVisibilityChanged": {
            "!type": "fn(visible: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchSystemUiVisibilityChanged(int)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "isScrollbarFadingEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isScrollbarFadingEnabled()"
          },
          "setPressed": {
            "!type": "fn(pressed: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setPressed(boolean)"
          },
          "setMaxVisible": {
            "!type": "fn(visibleCrumbs: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/FragmentBreadCrumbs.html#setMaxVisible(int)"
          },
          "startAnimation": {
            "!type": "fn(animation: +android.view.animation.Animation) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#startAnimation(android.view.animation.Animation)"
          },
          "getDrawingTime": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/view/View.html#getDrawingTime()"
          },
          "setHorizontalScrollBarEnabled": {
            "!type": "fn(horizontalScrollBarEnabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setHorizontalScrollBarEnabled(boolean)"
          },
          "setTagInternal": {
            "!type": "fn(key: number, tag: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTagInternal(int, java.lang.Object)"
          },
          "removeCallbacks": {
            "!type": "fn(action: +java.lang.Runnable) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#removeCallbacks(java.lang.Runnable)"
          },
          "isShown": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isShown()"
          },
          "onTouchEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onTouchEvent(android.view.MotionEvent)"
          },
          "cancelPendingInputEvents": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#cancelPendingInputEvents()"
          },
          "setTransitionVisibility": {
            "!type": "fn(visibility: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTransitionVisibility(int)"
          },
          "getClipChildren": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getClipChildren()"
          },
          "setEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setEnabled(boolean)"
          },
          "setVerticalScrollBarEnabled": {
            "!type": "fn(verticalScrollBarEnabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setVerticalScrollBarEnabled(boolean)"
          },
          "getRawLayoutDirection": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getRawLayoutDirection()"
          },
          "setRight": {
            "!type": "fn(right: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setRight(int)"
          },
          "getAccessibilityClassName": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getAccessibilityClassName()"
          },
          "getNextFocusDownId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getNextFocusDownId()"
          },
          "setOnBreadCrumbClickListener": {
            "!type": "fn(listener: +android.app.FragmentBreadCrumbs.OnBreadCrumbClickListener) -> void",
            "!url": "http://developer.android.com/reference/android/app/FragmentBreadCrumbs.html#setOnBreadCrumbClickListener(android.app.FragmentBreadCrumbs.OnBreadCrumbClickListener)"
          },
          "setParentTitle": {
            "!type": "fn(title: +java.lang.CharSequence, shortTitle: +java.lang.CharSequence, listener: +android.view.View.OnClickListener) -> void",
            "!url": "http://developer.android.com/reference/android/app/FragmentBreadCrumbs.html#setParentTitle(java.lang.CharSequence, java.lang.CharSequence, android.view.View.OnClickListener)"
          },
          "onRequestSendAccessibilityEventInternal": {
            "!type": "fn(child: +android.view.View, event: +android.view.accessibility.AccessibilityEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onRequestSendAccessibilityEventInternal(android.view.View, android.view.accessibility.AccessibilityEvent)"
          },
          "getTransitionName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTransitionName()"
          },
          "getTop": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTop()"
          },
          "dispatchNestedFling": {
            "!type": "fn(velocityX: +java.lang.Float, velocityY: +java.lang.Float, consumed: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchNestedFling(float, float, boolean)"
          },
          "onKeyUp": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onKeyUp(int, android.view.KeyEvent)"
          },
          "setScrollContainer": {
            "!type": "fn(isScrollContainer: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScrollContainer(boolean)"
          },
          "getVisibility": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getVisibility()"
          },
          "requestFitSystemWindows": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#requestFitSystemWindows()"
          },
          "setAccessibilitySelection": {
            "!type": "fn(start: number, end: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setAccessibilitySelection(int, int)"
          },
          "getLeft": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getLeft()"
          },
          "dispatchWindowFocusChanged": {
            "!type": "fn(hasFocus: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchWindowFocusChanged(boolean)"
          },
          "findViewByPredicateInsideOut": {
            "!type": "fn(start: +android.view.View, predicate: +com.android.internal.util.Predicate) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/View.html#findViewByPredicateInsideOut(android.view.View, com.android.internal.util.Predicate)"
          },
          "getForeground": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/view/View.html#getForeground()"
          },
          "requestChildRectangleOnScreen": {
            "!type": "fn(child: +android.view.View, rectangle: +android.graphics.Rect, immediate: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#requestChildRectangleOnScreen(android.view.View, android.graphics.Rect, boolean)"
          },
          "performAccessibilityActionInternal": {
            "!type": "fn(action: number, arguments: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#performAccessibilityActionInternal(int, android.os.Bundle)"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/view/View.html#getContext()"
          },
          "getClipToOutline": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#getClipToOutline()"
          },
          "isSelected": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isSelected()"
          },
          "scrollBy": {
            "!type": "fn(x: number, y: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#scrollBy(int, int)"
          },
          "hasNestedScrollingParent": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#hasNestedScrollingParent()"
          },
          "getGlobalVisibleRect": {
            "!type": "fn(r: +android.graphics.Rect, globalOffset: +android.graphics.Point) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#getGlobalVisibleRect(android.graphics.Rect, android.graphics.Point)"
          },
          "setKeepScreenOn": {
            "!type": "fn(keepScreenOn: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setKeepScreenOn(boolean)"
          },
          "setTranslationZ": {
            "!type": "fn(translationZ: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTranslationZ(float)"
          },
          "setTranslationY": {
            "!type": "fn(translationY: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTranslationY(float)"
          },
          "setTranslationX": {
            "!type": "fn(translationX: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTranslationX(float)"
          },
          "setDuplicateParentStateEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setDuplicateParentStateEnabled(boolean)"
          },
          "onFilterTouchEventForSecurity": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onFilterTouchEventForSecurity(android.view.MotionEvent)"
          },
          "setTop": {
            "!type": "fn(top: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTop(int)"
          },
          "getHardwareRenderer": {
            "!type": "fn() -> +android.view.HardwareRenderer",
            "!url": "http://developer.android.com/reference/android/view/View.html#getHardwareRenderer()"
          },
          "onInterceptHoverEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onInterceptHoverEvent(android.view.MotionEvent)"
          },
          "getLocationInWindow": {
            "!type": "fn(location: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#getLocationInWindow(int[])"
          },
          "pointInView": {
            "!type": "fn(localX: +java.lang.Float, localY: +java.lang.Float, slop: +java.lang.Float) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#pointInView(float, float, float)"
          },
          "setAlpha": {
            "!type": "fn(alpha: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setAlpha(float)"
          },
          "setAnimationMatrix": {
            "!type": "fn(matrix: +android.graphics.Matrix) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setAnimationMatrix(android.graphics.Matrix)"
          },
          "getApplicationWindowToken": {
            "!type": "fn() -> +android.os.IBinder",
            "!url": "http://developer.android.com/reference/android/view/View.html#getApplicationWindowToken()"
          },
          "resetRtlProperties": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#resetRtlProperties()"
          },
          "getMeasuredHeightAndState": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getMeasuredHeightAndState()"
          },
          "getDrawingCacheBackgroundColor": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getDrawingCacheBackgroundColor()"
          },
          "resolveRtlPropertiesIfNeeded": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resolveRtlPropertiesIfNeeded()"
          },
          "transformMatrixToGlobal": {
            "!type": "fn(m: +android.graphics.Matrix) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#transformMatrixToGlobal(android.graphics.Matrix)"
          },
          "setClickable": {
            "!type": "fn(clickable: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setClickable(boolean)"
          },
          "offsetLeftAndRight": {
            "!type": "fn(offset: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#offsetLeftAndRight(int)"
          },
          "getFilterTouchesWhenObscured": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#getFilterTouchesWhenObscured()"
          },
          "performAccessibilityAction": {
            "!type": "fn(action: number, arguments: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#performAccessibilityAction(int, android.os.Bundle)"
          },
          "isHorizontalFadingEdgeEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isHorizontalFadingEdgeEnabled()"
          },
          "setBackgroundTintMode": {
            "!type": "fn(tintMode: +android.graphics.PorterDuff.Mode) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setBackgroundTintMode(android.graphics.PorterDuff.Mode)"
          },
          "createContextMenu": {
            "!type": "fn(menu: +android.view.ContextMenu) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#createContextMenu(android.view.ContextMenu)"
          },
          "getCameraDistance": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getCameraDistance()"
          },
          "isPressed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isPressed()"
          },
          "getScrollBarStyle": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getScrollBarStyle()"
          },
          "saveHierarchyState": {
            "!type": "fn(container: +android.util.SparseArray) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#saveHierarchyState(android.util.SparseArray)"
          },
          "setSoundEffectsEnabled": {
            "!type": "fn(soundEffectsEnabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setSoundEffectsEnabled(boolean)"
          },
          "setLayoutMode": {
            "!type": "fn(layoutMode: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setLayoutMode(int)"
          },
          "performHapticFeedback": {
            "!type": "fn(feedbackConstant: number) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#performHapticFeedback(int)"
          },
          "onKeyLongPress": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onKeyLongPress(int, android.view.KeyEvent)"
          },
          "getLayoutMode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getLayoutMode()"
          },
          "getWindowSystemUiVisibility": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getWindowSystemUiVisibility()"
          },
          "getPersistentDrawingCache": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getPersistentDrawingCache()"
          },
          "animate": {
            "!type": "fn() -> +android.view.ViewPropertyAnimator",
            "!url": "http://developer.android.com/reference/android/view/View.html#animate()"
          },
          "addView": {
            "!type": "fn(child: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#addView(android.view.View)"
          },
          "getOnFocusChangeListener": {
            "!type": "fn() -> +android.view.View.OnFocusChangeListener",
            "!url": "http://developer.android.com/reference/android/view/View.html#getOnFocusChangeListener()"
          },
          "isPaddingRelative": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isPaddingRelative()"
          },
          "hasOverlappingRendering": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#hasOverlappingRendering()"
          },
          "isEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isEnabled()"
          },
          "setBottom": {
            "!type": "fn(bottom: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setBottom(int)"
          },
          "isTextAlignmentInherited": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isTextAlignmentInherited()"
          },
          "onHoverChanged": {
            "!type": "fn(hovered: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onHoverChanged(boolean)"
          },
          "sendAccessibilityEventInternal": {
            "!type": "fn(eventType: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#sendAccessibilityEventInternal(int)"
          },
          "canHaveDisplayList": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#canHaveDisplayList()"
          },
          "dispatchStartTemporaryDetach": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchStartTemporaryDetach()"
          },
          "onResolveDrawables": {
            "!type": "fn(layoutDirection: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onResolveDrawables(int)"
          },
          "setLongClickable": {
            "!type": "fn(longClickable: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setLongClickable(boolean)"
          },
          "dispatchNestedScroll": {
            "!type": "fn(dxConsumed: number, dyConsumed: number, dxUnconsumed: number, dyUnconsumed: number, offsetInWindow: +java.newArray) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchNestedScroll(int, int, int, int, int[])"
          },
          "getScrollBarFadeDuration": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getScrollBarFadeDuration()"
          },
          "removeAllViewsInLayout": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#removeAllViewsInLayout()"
          },
          "getHeight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getHeight()"
          },
          "setOnKeyListener": {
            "!type": "fn(l: +android.view.View.OnKeyListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnKeyListener(android.view.View.OnKeyListener)"
          },
          "sendAccessibilityEventUnchecked": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)"
          },
          "onCreateInputConnection": {
            "!type": "fn(outAttrs: +android.view.inputmethod.EditorInfo) -> +android.view.inputmethod.InputConnection",
            "!url": "http://developer.android.com/reference/android/view/View.html#onCreateInputConnection(android.view.inputmethod.EditorInfo)"
          },
          "performContextClick": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#performContextClick()"
          },
          "isHovered": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isHovered()"
          },
          "getScrollBarDefaultDelayBeforeFade": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getScrollBarDefaultDelayBeforeFade()"
          },
          "setVerticalScrollbarPosition": {
            "!type": "fn(position: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setVerticalScrollbarPosition(int)"
          },
          "setVerticalFadingEdgeEnabled": {
            "!type": "fn(verticalFadingEdgeEnabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setVerticalFadingEdgeEnabled(boolean)"
          },
          "setVisibility": {
            "!type": "fn(visibility: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setVisibility(int)"
          },
          "suppressLayout": {
            "!type": "fn(suppress: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#suppressLayout(boolean)"
          },
          "getTranslationZ": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTranslationZ()"
          },
          "getKeepScreenOn": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#getKeepScreenOn()"
          },
          "getTranslationY": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTranslationY()"
          },
          "getAnimation": {
            "!type": "fn() -> +android.view.animation.Animation",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAnimation()"
          },
          "getTranslationX": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTranslationX()"
          },
          "getHandler": {
            "!type": "fn() -> +android.os.Handler",
            "!url": "http://developer.android.com/reference/android/view/View.html#getHandler()"
          },
          "setForeground": {
            "!type": "fn(foreground: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setForeground(android.graphics.drawable.Drawable)"
          },
          "onKeyShortcut": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onKeyShortcut(int, android.view.KeyEvent)"
          },
          "dispatchWindowVisibilityChanged": {
            "!type": "fn(visibility: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchWindowVisibilityChanged(int)"
          },
          "setForegroundTintList": {
            "!type": "fn(tint: +android.content.res.ColorStateList) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setForegroundTintList(android.content.res.ColorStateList)"
          },
          "shouldDelayChildPressedState": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#shouldDelayChildPressedState()"
          },
          "onInitializeAccessibilityEventInternal": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onInitializeAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)"
          },
          "postOnAnimationDelayed": {
            "!type": "fn(action: +java.lang.Runnable, delayMillis: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#postOnAnimationDelayed(java.lang.Runnable, long)"
          },
          "postInvalidateOnAnimation": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#postInvalidateOnAnimation()"
          },
          "resetResolvedLayoutDirection": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resetResolvedLayoutDirection()"
          },
          "getInverseMatrix": {
            "!type": "fn() -> +android.graphics.Matrix",
            "!url": "http://developer.android.com/reference/android/view/View.html#getInverseMatrix()"
          },
          "setSystemUiVisibility": {
            "!type": "fn(visibility: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setSystemUiVisibility(int)"
          },
          "isScrollContainer": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isScrollContainer()"
          },
          "onNestedScrollAccepted": {
            "!type": "fn(child: +android.view.View, target: +android.view.View, axes: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onNestedScrollAccepted(android.view.View, android.view.View, int)"
          },
          "getLabelFor": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getLabelFor()"
          },
          "isSaveEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isSaveEnabled()"
          },
          "onNestedPreFling": {
            "!type": "fn(target: +android.view.View, velocityX: +java.lang.Float, velocityY: +java.lang.Float) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onNestedPreFling(android.view.View, float, float)"
          },
          "setRotationY": {
            "!type": "fn(rotationY: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setRotationY(float)"
          },
          "setRotationX": {
            "!type": "fn(rotationX: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setRotationX(float)"
          },
          "findViewWithTag": {
            "!type": "fn(tag: +java.lang.Object) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/View.html#findViewWithTag(java.lang.Object)"
          },
          "getOutlineProvider": {
            "!type": "fn() -> +android.view.ViewOutlineProvider",
            "!url": "http://developer.android.com/reference/android/view/View.html#getOutlineProvider()"
          },
          "setDisabledSystemUiVisibility": {
            "!type": "fn(flags: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setDisabledSystemUiVisibility(int)"
          },
          "dispatchWindowSystemUiVisiblityChanged": {
            "!type": "fn(visible: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchWindowSystemUiVisiblityChanged(int)"
          },
          "onStartTemporaryDetach": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onStartTemporaryDetach()"
          },
          "invalidate": {
            "!type": "fn(dirty: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#invalidate(android.graphics.Rect)"
          },
          "getForegroundGravity": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getForegroundGravity()"
          },
          "toGlobalMotionEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#toGlobalMotionEvent(android.view.MotionEvent)"
          },
          "dispatchTrackballEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchTrackballEvent(android.view.MotionEvent)"
          },
          "clearChildFocus": {
            "!type": "fn(child: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#clearChildFocus(android.view.View)"
          },
          "setAccessibilityDelegate": {
            "!type": "fn(delegate: +android.view.View.AccessibilityDelegate) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setAccessibilityDelegate(android.view.View.AccessibilityDelegate)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "hackTurnOffWindowResizeAnim": {
            "!type": "fn(off: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#hackTurnOffWindowResizeAnim(boolean)"
          },
          "onDrawForeground": {
            "!type": "fn(canvas: +android.graphics.Canvas) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onDrawForeground(android.graphics.Canvas)"
          },
          "setElevation": {
            "!type": "fn(elevation: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setElevation(float)"
          },
          "onNestedScroll": {
            "!type": "fn(target: +android.view.View, dxConsumed: number, dyConsumed: number, dxUnconsumed: number, dyUnconsumed: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onNestedScroll(android.view.View, int, int, int, int)"
          },
          "isMotionEventSplittingEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#isMotionEventSplittingEnabled()"
          },
          "notifyViewAccessibilityStateChangedIfNeeded": {
            "!type": "fn(changeType: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#notifyViewAccessibilityStateChangedIfNeeded(int)"
          },
          "getMeasuredWidthAndState": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getMeasuredWidthAndState()"
          },
          "setLeft": {
            "!type": "fn(left: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setLeft(int)"
          },
          "setDrawingCacheBackgroundColor": {
            "!type": "fn(color: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setDrawingCacheBackgroundColor(int)"
          },
          "resolvePadding": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resolvePadding()"
          },
          "isLaidOut": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isLaidOut()"
          },
          "outputDirtyFlags": {
            "!type": "fn(indent: string, clear: bool, clearMask: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#outputDirtyFlags(java.lang.String, boolean, int)"
          },
          "hasFocusable": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#hasFocusable()"
          },
          "getWindowVisibleDisplayFrame": {
            "!type": "fn(outRect: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#getWindowVisibleDisplayFrame(android.graphics.Rect)"
          },
          "setDrawingCacheQuality": {
            "!type": "fn(quality: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setDrawingCacheQuality(int)"
          },
          "onFinishTemporaryDetach": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onFinishTemporaryDetach()"
          },
          "isNestedScrollingEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isNestedScrollingEnabled()"
          },
          "getOpticalInsets": {
            "!type": "fn() -> +android.graphics.Insets",
            "!url": "http://developer.android.com/reference/android/view/View.html#getOpticalInsets()"
          },
          "setOnFocusChangeListener": {
            "!type": "fn(l: +android.view.View.OnFocusChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnFocusChangeListener(android.view.View.OnFocusChangeListener)"
          },
          "setOnDragListener": {
            "!type": "fn(l: +android.view.View.OnDragListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnDragListener(android.view.View.OnDragListener)"
          },
          "cancelLongPress": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#cancelLongPress()"
          },
          "getMeasuredState": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getMeasuredState()"
          },
          "setHorizontalFadingEdgeEnabled": {
            "!type": "fn(horizontalFadingEdgeEnabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setHorizontalFadingEdgeEnabled(boolean)"
          },
          "dispatchDrawableHotspotChanged": {
            "!type": "fn(x: +java.lang.Float, y: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchDrawableHotspotChanged(float, float)"
          },
          "dispatchSetSelected": {
            "!type": "fn(selected: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchSetSelected(boolean)"
          },
          "onDragEvent": {
            "!type": "fn(event: +android.view.DragEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onDragEvent(android.view.DragEvent)"
          },
          "requestApplyInsets": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#requestApplyInsets()"
          },
          "setScrollIndicators": {
            "!type": "fn(indicators: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScrollIndicators(int)"
          },
          "onStopNestedScroll": {
            "!type": "fn(child: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onStopNestedScroll(android.view.View)"
          },
          "setScaleY": {
            "!type": "fn(scaleY: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScaleY(float)"
          },
          "setScaleX": {
            "!type": "fn(scaleX: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScaleX(float)"
          },
          "startActionMode": {
            "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/view/View.html#startActionMode(android.view.ActionMode.Callback)"
          },
          "getChildCount": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getChildCount()"
          },
          "setNextFocusForwardId": {
            "!type": "fn(nextFocusForwardId: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setNextFocusForwardId(int)"
          },
          "setAccessibilityTraversalBefore": {
            "!type": "fn(beforeId: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setAccessibilityTraversalBefore(int)"
          },
          "findFocus": {
            "!type": "fn() -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#findFocus()"
          },
          "getTag": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTag()"
          },
          "setFocusable": {
            "!type": "fn(focusable: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setFocusable(boolean)"
          },
          "isVerticalScrollBarEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isVerticalScrollBarEnabled()"
          },
          "getNextFocusLeftId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getNextFocusLeftId()"
          },
          "onStartNestedScroll": {
            "!type": "fn(child: +android.view.View, target: +android.view.View, nestedScrollAxes: number) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onStartNestedScroll(android.view.View, android.view.View, int)"
          },
          "isVerticalFadingEdgeEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isVerticalFadingEdgeEnabled()"
          },
          "onKeyMultiple": {
            "!type": "fn(keyCode: number, repeatCount: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onKeyMultiple(int, int, android.view.KeyEvent)"
          },
          "generateLayoutParams": {
            "!type": "fn(attrs: +android.util.AttributeSet) -> +android.view.ViewGroup.LayoutParams",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#generateLayoutParams(android.util.AttributeSet)"
          },
          "setTransitionAlpha": {
            "!type": "fn(alpha: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTransitionAlpha(float)"
          },
          "getMeasuredWidth": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getMeasuredWidth()"
          },
          "getLocationOnScreen": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/view/View.html#getLocationOnScreen()"
          },
          "encode": {
            "!type": "fn(stream: +android.view.ViewHierarchyEncoder) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#encode(android.view.ViewHierarchyEncoder)"
          },
          "getTransientView": {
            "!type": "fn(position: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getTransientView(int)"
          },
          "addChildrenForAccessibility": {
            "!type": "fn(outChildren: +java.util.ArrayList) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#addChildrenForAccessibility(java.util.ArrayList)"
          },
          "onActivityResult": {
            "!type": "fn(requestCode: number, resultCode: number, data: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onActivityResult(int, int, android.content.Intent)"
          },
          "isTextDirectionResolved": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isTextDirectionResolved()"
          },
          "setRotation": {
            "!type": "fn(rotation: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setRotation(float)"
          },
          "getTransientViewCount": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getTransientViewCount()"
          },
          "resolveLayoutDirection": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resolveLayoutDirection()"
          },
          "getPaddingRight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getPaddingRight()"
          },
          "getZ": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getZ()"
          },
          "getNestedScrollAxes": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getNestedScrollAxes()"
          },
          "getY": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getY()"
          },
          "getX": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getX()"
          },
          "setPadding": {
            "!type": "fn(left: number, top: number, right: number, bottom: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setPadding(int, int, int, int)"
          },
          "setLayoutAnimationListener": {
            "!type": "fn(animationListener: +android.view.animation.Animation.AnimationListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setLayoutAnimationListener(android.view.animation.Animation.AnimationListener)"
          },
          "damageChildDeferred": {
            "!type": "fn(child: +android.view.View) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#damageChildDeferred(android.view.View)"
          },
          "setForegroundTintMode": {
            "!type": "fn(tintMode: +android.graphics.PorterDuff.Mode) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setForegroundTintMode(android.graphics.PorterDuff.Mode)"
          },
          "gatherTransparentRegion": {
            "!type": "fn(region: +android.graphics.Region) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#gatherTransparentRegion(android.graphics.Region)"
          },
          "showContextMenu": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#showContextMenu()"
          },
          "isHorizontalScrollBarEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isHorizontalScrollBarEnabled()"
          },
          "onCheckIsTextEditor": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onCheckIsTextEditor()"
          },
          "setLayoutTransition": {
            "!type": "fn(transition: +android.animation.LayoutTransition) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setLayoutTransition(android.animation.LayoutTransition)"
          },
          "setOnSystemUiVisibilityChangeListener": {
            "!type": "fn(l: +android.view.View.OnSystemUiVisibilityChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnSystemUiVisibilityChangeListener(android.view.View.OnSystemUiVisibilityChangeListener)"
          },
          "setBackgroundColor": {
            "!type": "fn(color: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setBackgroundColor(int)"
          },
          "captureTransitioningViews": {
            "!type": "fn(transitioningViews: +java.util.List) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#captureTransitioningViews(java.util.List)"
          },
          "setOnHierarchyChangeListener": {
            "!type": "fn(listener: +android.view.ViewGroup.OnHierarchyChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setOnHierarchyChangeListener(android.view.ViewGroup.OnHierarchyChangeListener)"
          },
          "setNextFocusRightId": {
            "!type": "fn(nextFocusRightId: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setNextFocusRightId(int)"
          },
          "makeOptionalFitsSystemWindows": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#makeOptionalFitsSystemWindows()"
          },
          "setTag": {
            "!type": "fn(tag: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTag(java.lang.Object)"
          },
          "onInitializeAccessibilityNodeInfo": {
            "!type": "fn(info: +android.view.accessibility.AccessibilityNodeInfo) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)"
          },
          "willNotDraw": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#willNotDraw()"
          },
          "setCameraDistance": {
            "!type": "fn(distance: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setCameraDistance(float)"
          },
          "removeViewInLayout": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#removeViewInLayout(android.view.View)"
          },
          "setTransitionGroup": {
            "!type": "fn(isTransitionGroup: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setTransitionGroup(boolean)"
          },
          "hasWindowFocus": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#hasWindowFocus()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "startActionModeForChild": {
            "!type": "fn(originalView: +android.view.View, callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#startActionModeForChild(android.view.View, android.view.ActionMode.Callback)"
          },
          "getPaddingEnd": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getPaddingEnd()"
          },
          "getRootWindowInsets": {
            "!type": "fn() -> +android.view.WindowInsets",
            "!url": "http://developer.android.com/reference/android/view/View.html#getRootWindowInsets()"
          },
          "onNestedPreScroll": {
            "!type": "fn(target: +android.view.View, dx: number, dy: number, consumed: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onNestedPreScroll(android.view.View, int, int, int[])"
          },
          "setContentDescription": {
            "!type": "fn(contentDescription: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setContentDescription(java.lang.CharSequence)"
          },
          "onWindowFocusChanged": {
            "!type": "fn(hasWindowFocus: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onWindowFocusChanged(boolean)"
          },
          "getRootView": {
            "!type": "fn() -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/View.html#getRootView()"
          },
          "addOnLayoutChangeListener": {
            "!type": "fn(listener: +android.view.View.OnLayoutChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#addOnLayoutChangeListener(android.view.View.OnLayoutChangeListener)"
          },
          "getParentForAccessibility": {
            "!type": "fn() -> +android.view.ViewParent",
            "!url": "http://developer.android.com/reference/android/view/View.html#getParentForAccessibility()"
          },
          "isDirty": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isDirty()"
          },
          "requestDisallowInterceptTouchEvent": {
            "!type": "fn(disallowIntercept: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#requestDisallowInterceptTouchEvent(boolean)"
          },
          "focusSearch": {
            "!type": "fn(focused: +android.view.View, direction: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#focusSearch(android.view.View, int)"
          },
          "findNamedViews": {
            "!type": "fn(namedElements: +java.util.Map) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#findNamedViews(java.util.Map)"
          },
          "post": {
            "!type": "fn(action: +java.lang.Runnable) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#post(java.lang.Runnable)"
          },
          "announceForAccessibility": {
            "!type": "fn(text: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#announceForAccessibility(java.lang.CharSequence)"
          },
          "getTouchscreenBlocksFocus": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getTouchscreenBlocksFocus()"
          },
          "getRawTextDirection": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getRawTextDirection()"
          },
          "canResolveTextDirection": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#canResolveTextDirection()"
          },
          "setClipToOutline": {
            "!type": "fn(clipToOutline: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setClipToOutline(boolean)"
          },
          "getFitsSystemWindows": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#getFitsSystemWindows()"
          },
          "getRawTextAlignment": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getRawTextAlignment()"
          },
          "getDescendantFocusability": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getDescendantFocusability()"
          },
          "isAlwaysDrawnWithCacheEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#isAlwaysDrawnWithCacheEnabled()"
          },
          "buildLayer": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#buildLayer()"
          },
          "getOutsets": {
            "!type": "fn(outOutsetRect: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#getOutsets(android.graphics.Rect)"
          },
          "setTransitionName": {
            "!type": "fn(transitionName: string) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTransitionName(java.lang.String)"
          },
          "getRight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getRight()"
          },
          "getNextFocusUpId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getNextFocusUpId()"
          },
          "onWindowSystemUiVisibilityChanged": {
            "!type": "fn(visible: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onWindowSystemUiVisibilityChanged(int)"
          },
          "onScreenStateChanged": {
            "!type": "fn(screenState: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onScreenStateChanged(int)"
          },
          "setZ": {
            "!type": "fn(z: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setZ(float)"
          },
          "setY": {
            "!type": "fn(y: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setY(float)"
          },
          "setX": {
            "!type": "fn(x: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setX(float)"
          },
          "setPivotY": {
            "!type": "fn(pivotY: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setPivotY(float)"
          },
          "getPaddingBottom": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getPaddingBottom()"
          },
          "setPivotX": {
            "!type": "fn(pivotX: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setPivotX(float)"
          },
          "setOnContextClickListener": {
            "!type": "fn(l: +android.view.View.OnContextClickListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnContextClickListener(android.view.View.OnContextClickListener)"
          },
          "setScrollBarFadeDuration": {
            "!type": "fn(scrollBarFadeDuration: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScrollBarFadeDuration(int)"
          },
          "setActivated": {
            "!type": "fn(activated: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setActivated(boolean)"
          },
          "getDrawingCacheQuality": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getDrawingCacheQuality()"
          },
          "getBottom": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getBottom()"
          },
          "setPersistentDrawingCache": {
            "!type": "fn(drawingCacheToKeep: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setPersistentDrawingCache(int)"
          },
          "includeForAccessibility": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#includeForAccessibility()"
          },
          "startLayoutAnimation": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#startLayoutAnimation()"
          },
          "getId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getId()"
          },
          "getLayoutAnimationListener": {
            "!type": "fn() -> +android.view.animation.Animation.AnimationListener",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getLayoutAnimationListener()"
          },
          "resolveTextDirection": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resolveTextDirection()"
          },
          "setOnApplyWindowInsetsListener": {
            "!type": "fn(listener: +android.view.View.OnApplyWindowInsetsListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)"
          },
          "setStateListAnimator": {
            "!type": "fn(stateListAnimator: +android.animation.StateListAnimator) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setStateListAnimator(android.animation.StateListAnimator)"
          },
          "canScrollVertically": {
            "!type": "fn(direction: number) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#canScrollVertically(int)"
          },
          "setContextClickable": {
            "!type": "fn(contextClickable: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setContextClickable(boolean)"
          },
          "updateDisplayListIfDirty": {
            "!type": "fn() -> +android.view.RenderNode",
            "!url": "http://developer.android.com/reference/android/view/View.html#updateDisplayListIfDirty()"
          },
          "resolveTextAlignment": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resolveTextAlignment()"
          },
          "dispatchKeyEventPreIme": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchKeyEventPreIme(android.view.KeyEvent)"
          },
          "removeTransientView": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#removeTransientView(android.view.View)"
          },
          "setScrollY": {
            "!type": "fn(value: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScrollY(int)"
          },
          "setScrollX": {
            "!type": "fn(value: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScrollX(int)"
          },
          "setWillNotCacheDrawing": {
            "!type": "fn(willNotCacheDrawing: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setWillNotCacheDrawing(boolean)"
          },
          "setHapticFeedbackEnabled": {
            "!type": "fn(hapticFeedbackEnabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setHapticFeedbackEnabled(boolean)"
          },
          "performLongClick": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#performLongClick()"
          },
          "onHoverEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onHoverEvent(android.view.MotionEvent)"
          },
          "onKeyDown": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onKeyDown(int, android.view.KeyEvent)"
          },
          "requestFocus": {
            "!type": "fn(direction: number, previouslyFocusedRect: +android.graphics.Rect) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#requestFocus(int, android.graphics.Rect)"
          },
          "getMinimumHeight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getMinimumHeight()"
          },
          "dispatchPopulateAccessibilityEvent": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
          },
          "setSelected": {
            "!type": "fn(selected: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setSelected(boolean)"
          },
          "hasTransientState": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#hasTransientState()"
          },
          "setAddStatesFromChildren": {
            "!type": "fn(addsStates: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setAddStatesFromChildren(boolean)"
          },
          "postOnAnimation": {
            "!type": "fn(action: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#postOnAnimation(java.lang.Runnable)"
          },
          "onInitializeAccessibilityEvent": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
          },
          "setOpticalInsets": {
            "!type": "fn(insets: +android.graphics.Insets) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOpticalInsets(android.graphics.Insets)"
          },
          "isClickable": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isClickable()"
          },
          "isLayoutRtl": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isLayoutRtl()"
          },
          "setLayoutDirection": {
            "!type": "fn(layoutDirection: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setLayoutDirection(int)"
          },
          "postInvalidateDelayed": {
            "!type": "fn(delayMilliseconds: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#postInvalidateDelayed(long)"
          },
          "isInScrollingContainer": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isInScrollingContainer()"
          },
          "jumpDrawablesToCurrentState": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#jumpDrawablesToCurrentState()"
          },
          "notifySubtreeAccessibilityStateChangedIfNeeded": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#notifySubtreeAccessibilityStateChangedIfNeeded()"
          },
          "setScrollBarDefaultDelayBeforeFade": {
            "!type": "fn(scrollBarDefaultDelayBeforeFade: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScrollBarDefaultDelayBeforeFade(int)"
          },
          "getDrawingRect": {
            "!type": "fn(outRect: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#getDrawingRect(android.graphics.Rect)"
          },
          "getBackgroundTintList": {
            "!type": "fn() -> +android.content.res.ColorStateList",
            "!url": "http://developer.android.com/reference/android/view/View.html#getBackgroundTintList()"
          },
          "getTouchables": {
            "!type": "fn() -> +java.util.ArrayList",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTouchables()"
          },
          "getAlpha": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAlpha()"
          },
          "onNestedPrePerformAccessibilityAction": {
            "!type": "fn(target: +android.view.View, action: number, args: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onNestedPrePerformAccessibilityAction(android.view.View, int, android.os.Bundle)"
          },
          "onKeyPreIme": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onKeyPreIme(int, android.view.KeyEvent)"
          },
          "setTitle": {
            "!type": "fn(title: +java.lang.CharSequence, shortTitle: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/app/FragmentBreadCrumbs.html#setTitle(java.lang.CharSequence, java.lang.CharSequence)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "setScrollBarStyle": {
            "!type": "fn(style: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScrollBarStyle(int)"
          },
          "getLocalVisibleRect": {
            "!type": "fn(r: +android.graphics.Rect) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#getLocalVisibleRect(android.graphics.Rect)"
          },
          "getSolidColor": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getSolidColor()"
          },
          "offsetRectIntoDescendantCoords": {
            "!type": "fn(descendant: +android.view.View, rect: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#offsetRectIntoDescendantCoords(android.view.View, android.graphics.Rect)"
          },
          "toLocalMotionEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#toLocalMotionEvent(android.view.MotionEvent)"
          },
          "isInLayout": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isInLayout()"
          },
          "requestTransitionStart": {
            "!type": "fn(transition: +android.animation.LayoutTransition) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#requestTransitionStart(android.animation.LayoutTransition)"
          },
          "removeAllViews": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#removeAllViews()"
          },
          "onCloseSystemDialogs": {
            "!type": "fn(reason: string) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onCloseSystemDialogs(java.lang.String)"
          },
          "getVerticalScrollbarWidth": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getVerticalScrollbarWidth()"
          },
          "isAccessibilitySelectionExtendable": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isAccessibilitySelectionExtendable()"
          },
          "getAccessibilityTraversalAfter": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilityTraversalAfter()"
          },
          "onProvideVirtualStructure": {
            "!type": "fn(structure: +android.view.ViewStructure) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onProvideVirtualStructure(android.view.ViewStructure)"
          },
          "canResolveLayoutDirection": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#canResolveLayoutDirection()"
          },
          "scheduleLayoutAnimation": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#scheduleLayoutAnimation()"
          },
          "getScrollIndicators": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getScrollIndicators()"
          },
          "getScrollBarSize": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getScrollBarSize()"
          },
          "dispatchApplyWindowInsets": {
            "!type": "fn(insets: +android.view.WindowInsets) -> +android.view.WindowInsets",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchApplyWindowInsets(android.view.WindowInsets)"
          },
          "getAccessibilityViewId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilityViewId()"
          },
          "isTransitionGroup": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#isTransitionGroup()"
          },
          "transformPointToViewLocal": {
            "!type": "fn(point: +java.newArray, child: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#transformPointToViewLocal(float[], android.view.View)"
          },
          "onPopulateAccessibilityEventInternal": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)"
          },
          "isDrawingCacheEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isDrawingCacheEnabled()"
          },
          "getOverlay": {
            "!type": "fn() -> +android.view.ViewGroupOverlay",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getOverlay()"
          },
          "onProvideStructure": {
            "!type": "fn(structure: +android.view.ViewStructure) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onProvideStructure(android.view.ViewStructure)"
          },
          "setNextFocusDownId": {
            "!type": "fn(nextFocusDownId: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setNextFocusDownId(int)"
          },
          "getVerticalScrollbarPosition": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getVerticalScrollbarPosition()"
          },
          "childHasTransientStateChanged": {
            "!type": "fn(child: +android.view.View, childHasTransientState: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#childHasTransientStateChanged(android.view.View, boolean)"
          },
          "setFilterTouchesWhenObscured": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setFilterTouchesWhenObscured(boolean)"
          },
          "getMeasuredHeight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getMeasuredHeight()"
          },
          "getFocusables": {
            "!type": "fn(direction: number) -> +java.util.ArrayList",
            "!url": "http://developer.android.com/reference/android/view/View.html#getFocusables(int)"
          },
          "setOnTouchListener": {
            "!type": "fn(l: +android.view.View.OnTouchListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnTouchListener(android.view.View.OnTouchListener)"
          },
          "getOverScrollMode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getOverScrollMode()"
          },
          "endViewTransition": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#endViewTransition(android.view.View)"
          },
          "refreshDrawableState": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#refreshDrawableState()"
          },
          "requestSendAccessibilityEvent": {
            "!type": "fn(child: +android.view.View, event: +android.view.accessibility.AccessibilityEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#requestSendAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent)"
          },
          "isInEditMode": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isInEditMode()"
          },
          "canResolveTextAlignment": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#canResolveTextAlignment()"
          },
          "startViewTransition": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#startViewTransition(android.view.View)"
          },
          "dispatchTouchEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchTouchEvent(android.view.MotionEvent)"
          },
          "dispatchUnhandledMove": {
            "!type": "fn(focused: +android.view.View, direction: number) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchUnhandledMove(android.view.View, int)"
          },
          "setImportantForAccessibility": {
            "!type": "fn(mode: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setImportantForAccessibility(int)"
          },
          "setMotionEventSplittingEnabled": {
            "!type": "fn(split: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setMotionEventSplittingEnabled(boolean)"
          },
          "focusableViewAvailable": {
            "!type": "fn(v: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#focusableViewAvailable(android.view.View)"
          },
          "isLayoutRequested": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isLayoutRequested()"
          },
          "invalidateChild": {
            "!type": "fn(child: +android.view.View, dirty: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#invalidateChild(android.view.View, android.graphics.Rect)"
          },
          "setSaveFromParentEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setSaveFromParentEnabled(boolean)"
          },
          "dispatchGenericMotionEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchGenericMotionEvent(android.view.MotionEvent)"
          },
          "getLayerType": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getLayerType()"
          },
          "getHotspotBounds": {
            "!type": "fn(outRect: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#getHotspotBounds(android.graphics.Rect)"
          },
          "setScrollbarFadingEnabled": {
            "!type": "fn(fadeScrollbars: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScrollbarFadingEnabled(boolean)"
          },
          "getLayoutTransition": {
            "!type": "fn() -> +android.animation.LayoutTransition",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getLayoutTransition()"
          },
          "removeViewAt": {
            "!type": "fn(index: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#removeViewAt(int)"
          },
          "recomputeViewAttributes": {
            "!type": "fn(child: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#recomputeViewAttributes(android.view.View)"
          },
          "setBackground": {
            "!type": "fn(background: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setBackground(android.graphics.drawable.Drawable)"
          },
          "getRotation": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getRotation()"
          },
          "drawableHotspotChanged": {
            "!type": "fn(x: +java.lang.Float, y: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#drawableHotspotChanged(float, float)"
          },
          "getNextFocusRightId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getNextFocusRightId()"
          },
          "getFocusedChild": {
            "!type": "fn() -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getFocusedChild()"
          },
          "isHardwareAccelerated": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isHardwareAccelerated()"
          },
          "setAlwaysDrawnWithCacheEnabled": {
            "!type": "fn(always: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setAlwaysDrawnWithCacheEnabled(boolean)"
          },
          "getBackground": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/view/View.html#getBackground()"
          },
          "requestAccessibilityFocus": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#requestAccessibilityFocus()"
          },
          "removeViews": {
            "!type": "fn(start: number, count: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#removeViews(int, int)"
          },
          "setAnimation": {
            "!type": "fn(animation: +android.view.animation.Animation) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setAnimation(android.view.animation.Animation)"
          },
          "getAccessibilityNodeProvider": {
            "!type": "fn() -> +android.view.accessibility.AccessibilityNodeProvider",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilityNodeProvider()"
          },
          "resetResolvedPadding": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resetResolvedPadding()"
          },
          "getScaleY": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getScaleY()"
          },
          "forceLayout": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#forceLayout()"
          },
          "isLayoutDirectionResolved": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isLayoutDirectionResolved()"
          },
          "getScaleX": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getScaleX()"
          },
          "setFocusableInTouchMode": {
            "!type": "fn(focusableInTouchMode: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setFocusableInTouchMode(boolean)"
          },
          "updateViewLayout": {
            "!type": "fn(view: +android.view.View, params: +android.view.ViewGroup.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#updateViewLayout(android.view.View, android.view.ViewGroup.LayoutParams)"
          },
          "addStatesFromChildren": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#addStatesFromChildren()"
          },
          "setAnimationCacheEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setAnimationCacheEnabled(boolean)"
          },
          "getTransitionAlpha": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTransitionAlpha()"
          },
          "getWindowId": {
            "!type": "fn() -> +android.view.WindowId",
            "!url": "http://developer.android.com/reference/android/view/View.html#getWindowId()"
          },
          "transformMatrixToLocal": {
            "!type": "fn(m: +android.graphics.Matrix) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#transformMatrixToLocal(android.graphics.Matrix)"
          },
          "dispatchFinishTemporaryDetach": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchFinishTemporaryDetach()"
          },
          "getViewTreeObserver": {
            "!type": "fn() -> +android.view.ViewTreeObserver",
            "!url": "http://developer.android.com/reference/android/view/View.html#getViewTreeObserver()"
          },
          "onPopulateAccessibilityEvent": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
          },
          "clearAnimation": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#clearAnimation()"
          },
          "unscheduleDrawable": {
            "!type": "fn(who: +android.graphics.drawable.Drawable, what: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#unscheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable)"
          },
          "getVerticalFadingEdgeLength": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getVerticalFadingEdgeLength()"
          },
          "onViewRemoved": {
            "!type": "fn(child: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onViewRemoved(android.view.View)"
          },
          "requestLayout": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#requestLayout()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "setLayoutAnimation": {
            "!type": "fn(controller: +android.view.animation.LayoutAnimationController) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setLayoutAnimation(android.view.animation.LayoutAnimationController)"
          },
          "dispatchNestedPreFling": {
            "!type": "fn(velocityX: +java.lang.Float, velocityY: +java.lang.Float) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchNestedPreFling(float, float)"
          },
          "setOnClickListener": {
            "!type": "fn(l: +android.view.View.OnClickListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnClickListener(android.view.View.OnClickListener)"
          },
          "isTextDirectionInherited": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isTextDirectionInherited()"
          },
          "onApplyWindowInsets": {
            "!type": "fn(insets: +android.view.WindowInsets) -> +android.view.WindowInsets",
            "!url": "http://developer.android.com/reference/android/view/View.html#onApplyWindowInsets(android.view.WindowInsets)"
          },
          "setNextFocusUpId": {
            "!type": "fn(nextFocusUpId: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setNextFocusUpId(int)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getChildAt": {
            "!type": "fn(index: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getChildAt(int)"
          },
          "getBackgroundTintMode": {
            "!type": "fn() -> +android.graphics.PorterDuff.Mode",
            "!url": "http://developer.android.com/reference/android/view/View.html#getBackgroundTintMode()"
          },
          "onCancelPendingInputEvents": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onCancelPendingInputEvents()"
          },
          "getHorizontalFadingEdgeLength": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getHorizontalFadingEdgeLength()"
          },
          "sendAccessibilityEvent": {
            "!type": "fn(eventType: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#sendAccessibilityEvent(int)"
          },
          "setActivity": {
            "!type": "fn(a: +android.app.Activity) -> void",
            "!url": "http://developer.android.com/reference/android/app/FragmentBreadCrumbs.html#setActivity(android.app.Activity)"
          },
          "getPaddingLeft": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getPaddingLeft()"
          },
          "setRevealClip": {
            "!type": "fn(shouldClip: bool, x: +java.lang.Float, y: +java.lang.Float, radius: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setRevealClip(boolean, float, float, float)"
          },
          "isFocused": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isFocused()"
          },
          "removeViewsInLayout": {
            "!type": "fn(start: number, count: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#removeViewsInLayout(int, int)"
          },
          "onInitializeAccessibilityNodeInfoInternal": {
            "!type": "fn(info: +android.view.accessibility.AccessibilityNodeInfo) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo)"
          },
          "isAssistBlocked": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isAssistBlocked()"
          },
          "showContextMenuForChild": {
            "!type": "fn(originalView: +android.view.View) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#showContextMenuForChild(android.view.View)"
          },
          "getWindowToken": {
            "!type": "fn() -> +android.os.IBinder",
            "!url": "http://developer.android.com/reference/android/view/View.html#getWindowToken()"
          },
          "startDrag": {
            "!type": "fn(data: +android.content.ClipData, shadowBuilder: +android.view.View.DragShadowBuilder, myLocalState: +java.lang.Object, flags: number) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#startDrag(android.content.ClipData, android.view.View.DragShadowBuilder, java.lang.Object, int)"
          },
          "scheduleDrawable": {
            "!type": "fn(who: +android.graphics.drawable.Drawable, what: +java.lang.Runnable, when: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#scheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable, long)"
          },
          "canScrollHorizontally": {
            "!type": "fn(direction: number) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#canScrollHorizontally(int)"
          },
          "invalidateChildInParent": {
            "!type": "fn(location: +java.newArray, dirty: +android.graphics.Rect) -> +android.view.ViewParent",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#invalidateChildInParent(int[], android.graphics.Rect)"
          },
          "dispatchNestedPreScroll": {
            "!type": "fn(dx: number, dy: number, consumed: +java.newArray, offsetInWindow: +java.newArray) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchNestedPreScroll(int, int, int[], int[])"
          },
          "getLayoutParams": {
            "!type": "fn() -> +android.view.ViewGroup.LayoutParams",
            "!url": "http://developer.android.com/reference/android/view/View.html#getLayoutParams()"
          },
          "getScrollY": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getScrollY()"
          },
          "getScrollX": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getScrollX()"
          },
          "postDelayed": {
            "!type": "fn(action: +java.lang.Runnable, delayMillis: +java.lang.Long) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#postDelayed(java.lang.Runnable, long)"
          },
          "getKeyDispatcherState": {
            "!type": "fn() -> +android.view.KeyEvent.DispatcherState",
            "!url": "http://developer.android.com/reference/android/view/View.html#getKeyDispatcherState()"
          },
          "setMinimumHeight": {
            "!type": "fn(minHeight: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setMinimumHeight(int)"
          },
          "hasFocus": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#hasFocus()"
          },
          "scrollTo": {
            "!type": "fn(x: number, y: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#scrollTo(int, int)"
          },
          "setAccessibilityTraversalAfter": {
            "!type": "fn(afterId: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setAccessibilityTraversalAfter(int)"
          },
          "getClipToPadding": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getClipToPadding()"
          },
          "isHapticFeedbackEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isHapticFeedbackEnabled()"
          },
          "isFocusable": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isFocusable()"
          },
          "getTransientViewIndex": {
            "!type": "fn(position: number) -> number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getTransientViewIndex(int)"
          },
          "requestRectangleOnScreen": {
            "!type": "fn(rectangle: +android.graphics.Rect) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#requestRectangleOnScreen(android.graphics.Rect)"
          },
          "isSoundEffectsEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isSoundEffectsEnabled()"
          },
          "findViewByPredicate": {
            "!type": "fn(predicate: +com.android.internal.util.Predicate) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/View.html#findViewByPredicate(com.android.internal.util.Predicate)"
          },
          "startActivityForResult": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#startActivityForResult(android.content.Intent, int)"
          },
          "setLayerPaint": {
            "!type": "fn(paint: +android.graphics.Paint) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setLayerPaint(android.graphics.Paint)"
          },
          "setLayoutParams": {
            "!type": "fn(params: +android.view.ViewGroup.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setLayoutParams(android.view.ViewGroup.LayoutParams)"
          },
          "isContextClickable": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isContextClickable()"
          },
          "isImportantForAccessibility": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isImportantForAccessibility()"
          },
          "dispatchPointerEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchPointerEvent(android.view.MotionEvent)"
          },
          "invalidateOutline": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#invalidateOutline()"
          },
          "getTouchDelegate": {
            "!type": "fn() -> +android.view.TouchDelegate",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTouchDelegate()"
          },
          "setHasTransientState": {
            "!type": "fn(hasTransientState: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setHasTransientState(boolean)"
          },
          "getIterableTextForAccessibility": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/view/View.html#getIterableTextForAccessibility()"
          },
          "checkInputConnectionProxy": {
            "!type": "fn(view: +android.view.View) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#checkInputConnectionProxy(android.view.View)"
          },
          "getChildVisibleRect": {
            "!type": "fn(child: +android.view.View, r: +android.graphics.Rect, offset: +android.graphics.Point) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getChildVisibleRect(android.view.View, android.graphics.Rect, android.graphics.Point)"
          },
          "findViewByAccessibilityIdTraversal": {
            "!type": "fn(accessibilityId: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#findViewByAccessibilityIdTraversal(int)"
          },
          "clearFocus": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#clearFocus()"
          },
          "findViewsWithText": {
            "!type": "fn(outViews: +java.util.ArrayList, text: +java.lang.CharSequence, flags: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#findViewsWithText(java.util.ArrayList, java.lang.CharSequence, int)"
          },
          "addTransientView": {
            "!type": "fn(view: +android.view.View, index: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#addTransientView(android.view.View, int)"
          },
          "invalidateDrawable": {
            "!type": "fn(drawable: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#invalidateDrawable(android.graphics.drawable.Drawable)"
          },
          "getViewRootImpl": {
            "!type": "fn() -> +android.view.ViewRootImpl",
            "!url": "http://developer.android.com/reference/android/view/View.html#getViewRootImpl()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/view/View.html#toString()"
          },
          "setOnHoverListener": {
            "!type": "fn(l: +android.view.View.OnHoverListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnHoverListener(android.view.View.OnHoverListener)"
          },
          "getForegroundTintList": {
            "!type": "fn() -> +android.content.res.ColorStateList",
            "!url": "http://developer.android.com/reference/android/view/View.html#getForegroundTintList()"
          },
          "setNestedScrollingEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setNestedScrollingEnabled(boolean)"
          },
          "clearAccessibilityFocus": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#clearAccessibilityFocus()"
          },
          "getResources": {
            "!type": "fn() -> +android.content.res.Resources",
            "!url": "http://developer.android.com/reference/android/view/View.html#getResources()"
          },
          "buildDrawingCache": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#buildDrawingCache()"
          },
          "getTextDirection": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTextDirection()"
          },
          "getWindowVisibility": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getWindowVisibility()"
          },
          "onInterceptTouchEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onInterceptTouchEvent(android.view.MotionEvent)"
          },
          "clearDisappearingChildren": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#clearDisappearingChildren()"
          },
          "setDescendantFocusability": {
            "!type": "fn(focusability: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setDescendantFocusability(int)"
          },
          "setId": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setId(int)"
          },
          "setAccessibilityLiveRegion": {
            "!type": "fn(mode: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setAccessibilityLiveRegion(int)"
          },
          "getTextAlignment": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTextAlignment()"
          },
          "setMinimumWidth": {
            "!type": "fn(minWidth: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setMinimumWidth(int)"
          },
          "bringToFront": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#bringToFront()"
          },
          "isTextAlignmentResolved": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isTextAlignmentResolved()"
          },
          "hasOnClickListeners": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#hasOnClickListeners()"
          },
          "getSystemUiVisibility": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getSystemUiVisibility()"
          },
          "findViewById": {
            "!type": "fn(id: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/View.html#findViewById(int)"
          },
          "getPivotY": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getPivotY()"
          },
          "getPivotX": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getPivotX()"
          },
          "getStateListAnimator": {
            "!type": "fn() -> +android.animation.StateListAnimator",
            "!url": "http://developer.android.com/reference/android/view/View.html#getStateListAnimator()"
          },
          "getPaddingStart": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getPaddingStart()"
          },
          "resolveLayoutParams": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resolveLayoutParams()"
          },
          "dispatchActivityResult": {
            "!type": "fn(who: string, requestCode: number, resultCode: number, data: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchActivityResult(java.lang.String, int, int, android.content.Intent)"
          },
          "setScrollBarSize": {
            "!type": "fn(scrollBarSize: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScrollBarSize(int)"
          },
          "dispatchDisplayHint": {
            "!type": "fn(hint: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchDisplayHint(int)"
          },
          "debug": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#debug()"
          },
          "getBoundsOnScreen": {
            "!type": "fn(outRect: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#getBoundsOnScreen(android.graphics.Rect)"
          },
          "setOutlineProvider": {
            "!type": "fn(provider: +android.view.ViewOutlineProvider) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOutlineProvider(android.view.ViewOutlineProvider)"
          },
          "measure": {
            "!type": "fn(widthMeasureSpec: number, heightMeasureSpec: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#measure(int, int)"
          },
          "dispatchKeyEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchKeyEvent(android.view.KeyEvent)"
          },
          "getMatrix": {
            "!type": "fn() -> +android.graphics.Matrix",
            "!url": "http://developer.android.com/reference/android/view/View.html#getMatrix()"
          },
          "setOnScrollChangeListener": {
            "!type": "fn(l: +android.view.View.OnScrollChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnScrollChangeListener(android.view.View.OnScrollChangeListener)"
          },
          "isActionableForAccessibility": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isActionableForAccessibility()"
          },
          "dispatchProvideStructure": {
            "!type": "fn(structure: +android.view.ViewStructure) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchProvideStructure(android.view.ViewStructure)"
          },
          "draw": {
            "!type": "fn(canvas: +android.graphics.Canvas) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#draw(android.graphics.Canvas)"
          },
          "callOnClick": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#callOnClick()"
          },
          "resetPaddingToInitialValues": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#resetPaddingToInitialValues()"
          },
          "getRotationY": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getRotationY()"
          },
          "setClipBounds": {
            "!type": "fn(clipBounds: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setClipBounds(android.graphics.Rect)"
          },
          "getRotationX": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getRotationX()"
          },
          "getHitRect": {
            "!type": "fn(outRect: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#getHitRect(android.graphics.Rect)"
          },
          "removeView": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#removeView(android.view.View)"
          },
          "getAccessibilitySelectionEnd": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilitySelectionEnd()"
          },
          "sendAccessibilityEventUncheckedInternal": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#sendAccessibilityEventUncheckedInternal(android.view.accessibility.AccessibilityEvent)"
          },
          "getClipBounds": {
            "!type": "fn() -> +android.graphics.Rect",
            "!url": "http://developer.android.com/reference/android/view/View.html#getClipBounds()"
          },
          "addTouchables": {
            "!type": "fn(views: +java.util.ArrayList) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#addTouchables(java.util.ArrayList)"
          },
          "getLayoutDirection": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getLayoutDirection()"
          },
          "dispatchConfigurationChanged": {
            "!type": "fn(newConfig: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchConfigurationChanged(android.content.res.Configuration)"
          },
          "isAttachedToWindow": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isAttachedToWindow()"
          },
          "onTrackballEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onTrackballEvent(android.view.MotionEvent)"
          },
          "resetResolvedTextDirection": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resetResolvedTextDirection()"
          },
          "restoreHierarchyState": {
            "!type": "fn(container: +android.util.SparseArray) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#restoreHierarchyState(android.util.SparseArray)"
          },
          "hasShadow": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#hasShadow()"
          },
          "getElevation": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getElevation()"
          },
          "setLeftTopRightBottom": {
            "!type": "fn(left: number, top: number, right: number, bottom: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setLeftTopRightBottom(int, int, int, int)"
          },
          "resetResolvedTextAlignment": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resetResolvedTextAlignment()"
          },
          "isSaveFromParentEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isSaveFromParentEnabled()"
          },
          "willNotCacheDrawing": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#willNotCacheDrawing()"
          },
          "removeOnAttachStateChangeListener": {
            "!type": "fn(listener: +android.view.View.OnAttachStateChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#removeOnAttachStateChangeListener(android.view.View.OnAttachStateChangeListener)"
          },
          "onBackStackChanged": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/FragmentBreadCrumbs.html#onBackStackChanged()"
          },
          "offsetTopAndBottom": {
            "!type": "fn(offset: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#offsetTopAndBottom(int)"
          },
          "isRootNamespace": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isRootNamespace()"
          },
          "setOverScrollMode": {
            "!type": "fn(overScrollMode: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOverScrollMode(int)"
          },
          "getDrawableState": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/view/View.html#getDrawableState()"
          },
          "stopNestedScroll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#stopNestedScroll()"
          },
          "addOnAttachStateChangeListener": {
            "!type": "fn(listener: +android.view.View.OnAttachStateChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#addOnAttachStateChangeListener(android.view.View.OnAttachStateChangeListener)"
          },
          "onRequestSendAccessibilityEvent": {
            "!type": "fn(child: +android.view.View, event: +android.view.accessibility.AccessibilityEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onRequestSendAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent)"
          },
          "dispatchPopulateAccessibilityEventInternal": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)"
          },
          "getAccessibilitySelectionStart": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilitySelectionStart()"
          },
          "setOnGenericMotionListener": {
            "!type": "fn(l: +android.view.View.OnGenericMotionListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnGenericMotionListener(android.view.View.OnGenericMotionListener)"
          },
          "postInvalidate": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#postInvalidate()"
          },
          "dispatchNestedPrePerformAccessibilityAction": {
            "!type": "fn(action: number, arguments: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchNestedPrePerformAccessibilityAction(int, android.os.Bundle)"
          },
          "isActivated": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isActivated()"
          },
          "setWillNotDraw": {
            "!type": "fn(willNotDraw: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setWillNotDraw(boolean)"
          },
          "getNextFocusForwardId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getNextFocusForwardId()"
          },
          "isAnimationCacheEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#isAnimationCacheEnabled()"
          },
          "setNextFocusLeftId": {
            "!type": "fn(nextFocusLeftId: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setNextFocusLeftId(int)"
          },
          "requestChildFocus": {
            "!type": "fn(child: +android.view.View, focused: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#requestChildFocus(android.view.View, android.view.View)"
          },
          "isLongClickable": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isLongClickable()"
          },
          "childDrawableStateChanged": {
            "!type": "fn(child: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#childDrawableStateChanged(android.view.View)"
          },
          "applyDrawableToTransparentRegion": {
            "!type": "fn(dr: +android.graphics.drawable.Drawable, region: +android.graphics.Region) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#applyDrawableToTransparentRegion(android.graphics.drawable.Drawable, android.graphics.Region)"
          },
          "addFocusables": {
            "!type": "fn(views: +java.util.ArrayList, direction: number, focusableMode: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#addFocusables(java.util.ArrayList, int, int)"
          },
          "isAccessibilityFocused": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isAccessibilityFocused()"
          },
          "getDrawingCache": {
            "!type": "fn() -> +android.graphics.Bitmap",
            "!url": "http://developer.android.com/reference/android/view/View.html#getDrawingCache()"
          },
          "getWidth": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getWidth()"
          },
          "computeScroll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#computeScroll()"
          },
          "getAccessibilityLiveRegion": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilityLiveRegion()"
          },
          "isFocusableInTouchMode": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isFocusableInTouchMode()"
          },
          "indexOfChild": {
            "!type": "fn(child: +android.view.View) -> number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#indexOfChild(android.view.View)"
          },
          "getMinimumWidth": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getMinimumWidth()"
          },
          "dispatchSetActivated": {
            "!type": "fn(activated: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchSetActivated(boolean)"
          },
          "setLayerType": {
            "!type": "fn(layerType: number, paint: +android.graphics.Paint) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setLayerType(int, android.graphics.Paint)"
          },
          "isInTouchMode": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isInTouchMode()"
          },
          "isLayoutDirectionInherited": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isLayoutDirectionInherited()"
          },
          "isDuplicateParentStateEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isDuplicateParentStateEnabled()"
          },
          "getDisplay": {
            "!type": "fn() -> +android.view.Display",
            "!url": "http://developer.android.com/reference/android/view/View.html#getDisplay()"
          },
          "offsetChildrenTopAndBottom": {
            "!type": "fn(offset: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#offsetChildrenTopAndBottom(int)"
          },
          "setTouchscreenBlocksFocus": {
            "!type": "fn(touchscreenBlocksFocus: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setTouchscreenBlocksFocus(boolean)"
          },
          "getIteratorForGranularity": {
            "!type": "fn(granularity: number) -> +android.view.AccessibilityIterators.TextSegmentIterator",
            "!url": "http://developer.android.com/reference/android/view/View.html#getIteratorForGranularity(int)"
          },
          "getForegroundTintMode": {
            "!type": "fn() -> +android.graphics.PorterDuff.Mode",
            "!url": "http://developer.android.com/reference/android/view/View.html#getForegroundTintMode()"
          },
          "getBaseline": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getBaseline()"
          },
          "setFadingEdgeLength": {
            "!type": "fn(length: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setFadingEdgeLength(int)"
          },
          "fitsSystemWindows": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#fitsSystemWindows()"
          },
          "setSaveEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setSaveEnabled(boolean)"
          },
          "setClipChildren": {
            "!type": "fn(clipChildren: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setClipChildren(boolean)"
          },
          "createAccessibilityNodeInfo": {
            "!type": "fn() -> +android.view.accessibility.AccessibilityNodeInfo",
            "!url": "http://developer.android.com/reference/android/view/View.html#createAccessibilityNodeInfo()"
          },
          "getParent": {
            "!type": "fn() -> +android.view.ViewParent",
            "!url": "http://developer.android.com/reference/android/view/View.html#getParent()"
          },
          "bringChildToFront": {
            "!type": "fn(child: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#bringChildToFront(android.view.View)"
          },
          "setHovered": {
            "!type": "fn(hovered: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setHovered(boolean)"
          },
          "dispatchKeyShortcutEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchKeyShortcutEvent(android.view.KeyEvent)"
          },
          "getAccessibilityWindowId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilityWindowId()"
          },
          "requestUnbufferedDispatch": {
            "!type": "fn(event: +android.view.MotionEvent) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#requestUnbufferedDispatch(android.view.MotionEvent)"
          },
          "onNestedFling": {
            "!type": "fn(target: +android.view.View, velocityX: +java.lang.Float, velocityY: +java.lang.Float, consumed: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onNestedFling(android.view.View, float, float, boolean)"
          },
          "startNestedScroll": {
            "!type": "fn(axes: number) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#startNestedScroll(int)"
          },
          "onRtlPropertiesChanged": {
            "!type": "fn(layoutDirection: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onRtlPropertiesChanged(int)"
          },
          "playSoundEffect": {
            "!type": "fn(soundConstant: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#playSoundEffect(int)"
          },
          "requestFocusFromTouch": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#requestFocusFromTouch()"
          },
          "createAccessibilityNodeInfoInternal": {
            "!type": "fn() -> +android.view.accessibility.AccessibilityNodeInfo",
            "!url": "http://developer.android.com/reference/android/view/View.html#createAccessibilityNodeInfoInternal()"
          },
          "setClipToPadding": {
            "!type": "fn(clipToPadding: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setClipToPadding(boolean)"
          },
          "isLayoutSuppressed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#isLayoutSuppressed()"
          },
          "setIsRootNamespace": {
            "!type": "fn(isRoot: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setIsRootNamespace(boolean)"
          },
          "destroyDrawingCache": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#destroyDrawingCache()"
          },
          "setForegroundGravity": {
            "!type": "fn(gravity: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setForegroundGravity(int)"
          },
          "getContentDescription": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/view/View.html#getContentDescription()"
          },
          "setTouchDelegate": {
            "!type": "fn(delegate: +android.view.TouchDelegate) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTouchDelegate(android.view.TouchDelegate)"
          },
          "setOnCreateContextMenuListener": {
            "!type": "fn(l: +android.view.View.OnCreateContextMenuListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnCreateContextMenuListener(android.view.View.OnCreateContextMenuListener)"
          },
          "getAccessibilityTraversalBefore": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilityTraversalBefore()"
          },
          "onGenericMotionEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onGenericMotionEvent(android.view.MotionEvent)"
          },
          "getAccessibilityDelegate": {
            "!type": "fn() -> +android.view.View.AccessibilityDelegate",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilityDelegate()"
          },
          "setLabelFor": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setLabelFor(int)"
          },
          "setOnLongClickListener": {
            "!type": "fn(l: +android.view.View.OnLongClickListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnLongClickListener(android.view.View.OnLongClickListener)"
          },
          "setBackgroundDrawable": {
            "!type": "fn(background: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setBackgroundDrawable(android.graphics.drawable.Drawable)"
          },
          "damageChild": {
            "!type": "fn(child: +android.view.View, dirty: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#damageChild(android.view.View, android.graphics.Rect)"
          },
          "notifySubtreeAccessibilityStateChanged": {
            "!type": "fn(child: +android.view.View, source: +android.view.View, changeType: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#notifySubtreeAccessibilityStateChanged(android.view.View, android.view.View, int)"
          },
          "computeSystemWindowInsets": {
            "!type": "fn(in: +android.view.WindowInsets, outLocalInsets: +android.graphics.Rect) -> +android.view.WindowInsets",
            "!url": "http://developer.android.com/reference/android/view/View.html#computeSystemWindowInsets(android.view.WindowInsets, android.graphics.Rect)"
          },
          "offsetDescendantRectToMyCoords": {
            "!type": "fn(descendant: +android.view.View, rect: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#offsetDescendantRectToMyCoords(android.view.View, android.graphics.Rect)"
          },
          "getLayoutAnimation": {
            "!type": "fn() -> +android.view.animation.LayoutAnimationController",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getLayoutAnimation()"
          },
          "removeOnLayoutChangeListener": {
            "!type": "fn(listener: +android.view.View.OnLayoutChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#removeOnLayoutChangeListener(android.view.View.OnLayoutChangeListener)"
          },
          "setPaddingRelative": {
            "!type": "fn(start: number, top: number, end: number, bottom: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setPaddingRelative(int, int, int, int)"
          },
          "isOpaque": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isOpaque()"
          },
          "performClick": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#performClick()"
          },
          "setTextDirection": {
            "!type": "fn(textDirection: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTextDirection(int)"
          },
          "getFocusedRect": {
            "!type": "fn(r: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#getFocusedRect(android.graphics.Rect)"
          },
          "setBackgroundTintList": {
            "!type": "fn(tint: +android.content.res.ColorStateList) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setBackgroundTintList(android.content.res.ColorStateList)"
          },
          "setDrawingCacheEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setDrawingCacheEnabled(boolean)"
          },
          "onViewAdded": {
            "!type": "fn(child: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onViewAdded(android.view.View)"
          },
          "setAssistBlocked": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setAssistBlocked(boolean)"
          },
          "layout": {
            "!type": "fn(l: number, t: number, r: number, b: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#layout(int, int, int, int)"
          },
          "dispatchDragEvent": {
            "!type": "fn(event: +android.view.DragEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchDragEvent(android.view.DragEvent)"
          },
          "isForegroundInsidePadding": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isForegroundInsidePadding()"
          },
          "setTextAlignment": {
            "!type": "fn(textAlignment: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTextAlignment(int)"
          },
          "setBackgroundResource": {
            "!type": "fn(resid: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setBackgroundResource(int)"
          },
          "getImportantForAccessibility": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getImportantForAccessibility()"
          },
          "getPaddingTop": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getPaddingTop()"
          },
          "requestTransparentRegion": {
            "!type": "fn(child: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#requestTransparentRegion(android.view.View)"
          }
        }
      },
      "PackageDeleteObserver": {
        "!url": "http://developer.android.com/reference/android/app/PackageDeleteObserver.html",
        "!type": "fn()",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "onUserActionRequired": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/PackageDeleteObserver.html#onUserActionRequired(android.content.Intent)"
          },
          "onPackageDeleted": {
            "!type": "fn(basePackageName: string, returnCode: number, msg: string) -> void",
            "!url": "http://developer.android.com/reference/android/app/PackageDeleteObserver.html#onPackageDeleted(java.lang.String, int, java.lang.String)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getBinder": {
            "!type": "fn() -> IPackageDeleteObserver2",
            "!url": "http://developer.android.com/reference/android/app/PackageDeleteObserver.html#getBinder()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "SharedElementCallback": {
        "!url": "http://developer.android.com/reference/android/app/SharedElementCallback.html",
        "!type": "fn()",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "onMapSharedElements": {
            "!type": "fn(names: +java.util.List, sharedElements: +java.util.Map) -> void",
            "!url": "http://developer.android.com/reference/android/app/SharedElementCallback.html#onMapSharedElements(java.util.List, java.util.Map)"
          },
          "onCaptureSharedElementSnapshot": {
            "!type": "fn(sharedElement: +android.view.View, viewToGlobalMatrix: +android.graphics.Matrix, screenBounds: +android.graphics.RectF) -> +android.os.Parcelable",
            "!url": "http://developer.android.com/reference/android/app/SharedElementCallback.html#onCaptureSharedElementSnapshot(android.view.View, android.graphics.Matrix, android.graphics.RectF)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "onRejectSharedElements": {
            "!type": "fn(rejectedSharedElements: +java.util.List) -> void",
            "!url": "http://developer.android.com/reference/android/app/SharedElementCallback.html#onRejectSharedElements(java.util.List)"
          },
          "onSharedElementEnd": {
            "!type": "fn(sharedElementNames: +java.util.List, sharedElements: +java.util.List, sharedElementSnapshots: +java.util.List) -> void",
            "!url": "http://developer.android.com/reference/android/app/SharedElementCallback.html#onSharedElementEnd(java.util.List, java.util.List, java.util.List)"
          },
          "onSharedElementsArrived": {
            "!type": "fn(sharedElementNames: +java.util.List, sharedElements: +java.util.List, listener: +android.app.SharedElementCallback.OnSharedElementsReadyListener) -> void",
            "!url": "http://developer.android.com/reference/android/app/SharedElementCallback.html#onSharedElementsArrived(java.util.List, java.util.List, android.app.SharedElementCallback.OnSharedElementsReadyListener)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "onCreateSnapshotView": {
            "!type": "fn(context: +android.content.Context, snapshot: +android.os.Parcelable) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/SharedElementCallback.html#onCreateSnapshotView(android.content.Context, android.os.Parcelable)"
          },
          "onSharedElementStart": {
            "!type": "fn(sharedElementNames: +java.util.List, sharedElements: +java.util.List, sharedElementSnapshots: +java.util.List) -> void",
            "!url": "http://developer.android.com/reference/android/app/SharedElementCallback.html#onSharedElementStart(java.util.List, java.util.List, java.util.List)"
          }
        }
      },
      "UiModeManager": {
        "!url": "http://developer.android.com/reference/android/app/UiModeManager.html",
        "ACTION_EXIT_CAR_MODE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/UiModeManager.html#ACTION_EXIT_CAR_MODE"
        },
        "ACTION_EXIT_DESK_MODE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/UiModeManager.html#ACTION_EXIT_DESK_MODE"
        },
        "DISABLE_CAR_MODE_GO_HOME": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/UiModeManager.html#DISABLE_CAR_MODE_GO_HOME"
        },
        "ACTION_ENTER_CAR_MODE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/UiModeManager.html#ACTION_ENTER_CAR_MODE"
        },
        "ENABLE_CAR_MODE_ALLOW_SLEEP": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/UiModeManager.html#ENABLE_CAR_MODE_ALLOW_SLEEP"
        },
        "MODE_NIGHT_YES": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/UiModeManager.html#MODE_NIGHT_YES"
        },
        "ENABLE_CAR_MODE_GO_CAR_HOME": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/UiModeManager.html#ENABLE_CAR_MODE_GO_CAR_HOME"
        },
        "MODE_NIGHT_NO": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/UiModeManager.html#MODE_NIGHT_NO"
        },
        "ACTION_ENTER_DESK_MODE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/UiModeManager.html#ACTION_ENTER_DESK_MODE"
        },
        "MODE_NIGHT_AUTO": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/UiModeManager.html#MODE_NIGHT_AUTO"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "getCurrentModeType": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/UiModeManager.html#getCurrentModeType()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "setNightMode": {
            "!type": "fn(mode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/UiModeManager.html#setNightMode(int)"
          },
          "enableCarMode": {
            "!type": "fn(flags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/UiModeManager.html#enableCarMode(int)"
          },
          "disableCarMode": {
            "!type": "fn(flags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/UiModeManager.html#disableCarMode(int)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getNightMode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/UiModeManager.html#getNightMode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "LocalActivityManager": {
        "!url": "http://developer.android.com/reference/android/app/LocalActivityManager.html",
        "!type": "fn(parent: +android.app.Activity, singleMode: bool)",
        "prototype": {
          "saveInstanceState": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/app/LocalActivityManager.html#saveInstanceState()"
          },
          "getCurrentActivity": {
            "!type": "fn() -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/app/LocalActivityManager.html#getCurrentActivity()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getActivity": {
            "!type": "fn(id: string) -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/app/LocalActivityManager.html#getActivity(java.lang.String)"
          },
          "dispatchRetainNonConfigurationInstance": {
            "!type": "fn() -> +java.util.HashMap",
            "!url": "http://developer.android.com/reference/android/app/LocalActivityManager.html#dispatchRetainNonConfigurationInstance()"
          },
          "dispatchResume": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/LocalActivityManager.html#dispatchResume()"
          },
          "destroyActivity": {
            "!type": "fn(id: string, finish: bool) -> +android.view.Window",
            "!url": "http://developer.android.com/reference/android/app/LocalActivityManager.html#destroyActivity(java.lang.String, boolean)"
          },
          "removeAllActivities": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/LocalActivityManager.html#removeAllActivities()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "dispatchPause": {
            "!type": "fn(finishing: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/LocalActivityManager.html#dispatchPause(boolean)"
          },
          "dispatchCreate": {
            "!type": "fn(state: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/LocalActivityManager.html#dispatchCreate(android.os.Bundle)"
          },
          "startActivity": {
            "!type": "fn(id: string, intent: +android.content.Intent) -> +android.view.Window",
            "!url": "http://developer.android.com/reference/android/app/LocalActivityManager.html#startActivity(java.lang.String, android.content.Intent)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "dispatchDestroy": {
            "!type": "fn(finishing: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/LocalActivityManager.html#dispatchDestroy(boolean)"
          },
          "dispatchStop": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/LocalActivityManager.html#dispatchStop()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "getCurrentId": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/LocalActivityManager.html#getCurrentId()"
          }
        }
      },
      "WallpaperInfo": {
        "!url": "http://developer.android.com/reference/android/app/WallpaperInfo.html",
        "!type": "fn(context: +android.content.Context, service: +android.content.pm.ResolveInfo)",
        "CREATOR": {
          "!type": "+android.os.Parcelable.Creator",
          "!url": "http://developer.android.com/reference/android/app/WallpaperInfo.html#CREATOR"
        },
        "prototype": {
          "writeToParcel": {
            "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/WallpaperInfo.html#writeToParcel(android.os.Parcel, int)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getServiceName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/WallpaperInfo.html#getServiceName()"
          },
          "getSettingsActivity": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/WallpaperInfo.html#getSettingsActivity()"
          },
          "dump": {
            "!type": "fn(pw: +android.util.Printer, prefix: string) -> void",
            "!url": "http://developer.android.com/reference/android/app/WallpaperInfo.html#dump(android.util.Printer, java.lang.String)"
          },
          "loadDescription": {
            "!type": "fn(pm: +android.content.pm.PackageManager) -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/app/WallpaperInfo.html#loadDescription(android.content.pm.PackageManager)"
          },
          "describeContents": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/WallpaperInfo.html#describeContents()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "loadAuthor": {
            "!type": "fn(pm: +android.content.pm.PackageManager) -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/app/WallpaperInfo.html#loadAuthor(android.content.pm.PackageManager)"
          },
          "getComponent": {
            "!type": "fn() -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/app/WallpaperInfo.html#getComponent()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/WallpaperInfo.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getPackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/WallpaperInfo.html#getPackageName()"
          },
          "loadIcon": {
            "!type": "fn(pm: +android.content.pm.PackageManager) -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/app/WallpaperInfo.html#loadIcon(android.content.pm.PackageManager)"
          },
          "loadThumbnail": {
            "!type": "fn(pm: +android.content.pm.PackageManager) -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/app/WallpaperInfo.html#loadThumbnail(android.content.pm.PackageManager)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "loadLabel": {
            "!type": "fn(pm: +android.content.pm.PackageManager) -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/app/WallpaperInfo.html#loadLabel(android.content.pm.PackageManager)"
          },
          "getServiceInfo": {
            "!type": "fn() -> +android.content.pm.ServiceInfo",
            "!url": "http://developer.android.com/reference/android/app/WallpaperInfo.html#getServiceInfo()"
          }
        }
      },
      "Application": {
        "!url": "http://developer.android.com/reference/android/app/Application.html",
        "!type": "fn()",
        "BIND_WAIVE_PRIORITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_WAIVE_PRIORITY"
        },
        "MEDIA_PROJECTION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_PROJECTION_SERVICE"
        },
        "ETHERNET_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ETHERNET_SERVICE"
        },
        "WIFI_RTT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_RTT_SERVICE"
        },
        "SENSOR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SENSOR_SERVICE"
        },
        "TELEPHONY_SUBSCRIPTION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SUBSCRIPTION_SERVICE"
        },
        "CAPTIONING_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CAPTIONING_SERVICE"
        },
        "CAMERA_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CAMERA_SERVICE"
        },
        "BIND_DEBUG_UNBIND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_DEBUG_UNBIND"
        },
        "STATUS_BAR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#STATUS_BAR_SERVICE"
        },
        "DEVICE_POLICY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_POLICY_SERVICE"
        },
        "BIND_IMPORTANT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_IMPORTANT"
        },
        "NSD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NSD_SERVICE"
        },
        "DOWNLOAD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DOWNLOAD_SERVICE"
        },
        "BIND_NOT_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_VISIBLE"
        },
        "CONTEXT_IGNORE_SECURITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_IGNORE_SECURITY"
        },
        "USAGE_STATS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USAGE_STATS_SERVICE"
        },
        "MODE_WORLD_READABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_READABLE"
        },
        "KEYGUARD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#KEYGUARD_SERVICE"
        },
        "BIND_ADJUST_WITH_ACTIVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ADJUST_WITH_ACTIVITY"
        },
        "UI_MODE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#UI_MODE_SERVICE"
        },
        "MODE_PRIVATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_PRIVATE"
        },
        "CONTEXT_INCLUDE_CODE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_INCLUDE_CODE"
        },
        "ACCESSIBILITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACCESSIBILITY_SERVICE"
        },
        "HDMI_CONTROL_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#HDMI_CONTROL_SERVICE"
        },
        "BIND_SHOWING_UI": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_SHOWING_UI"
        },
        "MODE_APPEND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_APPEND"
        },
        "AUDIO_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#AUDIO_SERVICE"
        },
        "NETWORK_SCORE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_SCORE_SERVICE"
        },
        "UPDATE_LOCK_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#UPDATE_LOCK_SERVICE"
        },
        "MEDIA_ROUTER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_ROUTER_SERVICE"
        },
        "JOB_SCHEDULER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#JOB_SCHEDULER_SERVICE"
        },
        "DEVICE_IDLE_CONTROLLER": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_IDLE_CONTROLLER"
        },
        "INPUT_METHOD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_METHOD_SERVICE"
        },
        "BIND_ABOVE_CLIENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ABOVE_CLIENT"
        },
        "INPUT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_SERVICE"
        },
        "MODE_WORLD_WRITEABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_WRITEABLE"
        },
        "NETWORKMANAGEMENT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORKMANAGEMENT_SERVICE"
        },
        "WINDOW_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WINDOW_SERVICE"
        },
        "MEDIA_SESSION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_SESSION_SERVICE"
        },
        "WIFI_P2P_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_P2P_SERVICE"
        },
        "MODE_ENABLE_WRITE_AHEAD_LOGGING": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_ENABLE_WRITE_AHEAD_LOGGING"
        },
        "WIFI_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SERVICE"
        },
        "PERSISTENT_DATA_BLOCK_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#PERSISTENT_DATA_BLOCK_SERVICE"
        },
        "TV_INPUT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TV_INPUT_SERVICE"
        },
        "SIP_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SIP_SERVICE"
        },
        "FINGERPRINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#FINGERPRINT_SERVICE"
        },
        "LOCATION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LOCATION_SERVICE"
        },
        "LAUNCHER_APPS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LAUNCHER_APPS_SERVICE"
        },
        "NETWORK_STATS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_STATS_SERVICE"
        },
        "VOICE_INTERACTION_MANAGER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#VOICE_INTERACTION_MANAGER_SERVICE"
        },
        "TELECOM_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELECOM_SERVICE"
        },
        "SEARCH_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SEARCH_SERVICE"
        },
        "RADIO_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#RADIO_SERVICE"
        },
        "BIND_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_VISIBLE"
        },
        "BIND_NOT_FOREGROUND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_FOREGROUND"
        },
        "CONTEXT_RESTRICTED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_RESTRICTED"
        },
        "USER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USER_SERVICE"
        },
        "DROPBOX_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DROPBOX_SERVICE"
        },
        "BIND_TREAT_LIKE_ACTIVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_TREAT_LIKE_ACTIVITY"
        },
        "BIND_FOREGROUND_SERVICE_WHILE_AWAKE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE_WHILE_AWAKE"
        },
        "CLIPBOARD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CLIPBOARD_SERVICE"
        },
        "LAYOUT_INFLATER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LAYOUT_INFLATER_SERVICE"
        },
        "WIFI_SCANNING_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SCANNING_SERVICE"
        },
        "PRINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#PRINT_SERVICE"
        },
        "WALLPAPER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WALLPAPER_SERVICE"
        },
        "ALARM_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ALARM_SERVICE"
        },
        "ACCOUNT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACCOUNT_SERVICE"
        },
        "TRUST_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TRUST_SERVICE"
        },
        "VIBRATOR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#VIBRATOR_SERVICE"
        },
        "NOTIFICATION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NOTIFICATION_SERVICE"
        },
        "NFC_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NFC_SERVICE"
        },
        "BLUETOOTH_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BLUETOOTH_SERVICE"
        },
        "POWER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#POWER_SERVICE"
        },
        "BIND_ALLOW_OOM_MANAGEMENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ALLOW_OOM_MANAGEMENT"
        },
        "BACKUP_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BACKUP_SERVICE"
        },
        "COUNTRY_DETECTOR": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#COUNTRY_DETECTOR"
        },
        "SERIAL_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SERIAL_SERVICE"
        },
        "WIFI_PASSPOINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_PASSPOINT_SERVICE"
        },
        "CONSUMER_IR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONSUMER_IR_SERVICE"
        },
        "APP_OPS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#APP_OPS_SERVICE"
        },
        "ACTIVITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACTIVITY_SERVICE"
        },
        "STORAGE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#STORAGE_SERVICE"
        },
        "BIND_FOREGROUND_SERVICE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE"
        },
        "RESTRICTIONS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#RESTRICTIONS_SERVICE"
        },
        "CONNECTIVITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONNECTIVITY_SERVICE"
        },
        "TEXT_SERVICES_MANAGER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TEXT_SERVICES_MANAGER_SERVICE"
        },
        "USB_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USB_SERVICE"
        },
        "APPWIDGET_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#APPWIDGET_SERVICE"
        },
        "CONTEXT_REGISTER_PACKAGE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_REGISTER_PACKAGE"
        },
        "CARRIER_CONFIG_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CARRIER_CONFIG_SERVICE"
        },
        "NETWORK_POLICY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_POLICY_SERVICE"
        },
        "MIDI_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MIDI_SERVICE"
        },
        "MODE_MULTI_PROCESS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_MULTI_PROCESS"
        },
        "BATTERY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BATTERY_SERVICE"
        },
        "BIND_AUTO_CREATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_AUTO_CREATE"
        },
        "DISPLAY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DISPLAY_SERVICE"
        },
        "TELEPHONY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SERVICE"
        },
        "prototype": {
          "getExternalCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDir()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "openFileInput": {
            "!type": "fn(name: string) -> +java.io.FileInputStream",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileInput(java.lang.String)"
          },
          "getBaseContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBaseContext()"
          },
          "checkPermission": {
            "!type": "fn(permission: string, pid: number, uid: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkPermission(java.lang.String, int, int)"
          },
          "openFileOutput": {
            "!type": "fn(name: string, mode: number) -> +java.io.FileOutputStream",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileOutput(java.lang.String, int)"
          },
          "deleteDatabase": {
            "!type": "fn(name: string) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteDatabase(java.lang.String)"
          },
          "startActivityAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivityAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "getOpPackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getOpPackageName()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "getObbDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDirs()"
          },
          "getString": {
            "!type": "fn(resId: number) -> string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getString(int)"
          },
          "getDatabasePath": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDatabasePath(java.lang.String)"
          },
          "sendOrderedBroadcast": {
            "!type": "fn(intent: +android.content.Intent, receiverPermission: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcast(android.content.Intent, java.lang.String)"
          },
          "bindServiceAsUser": {
            "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number, user: +android.os.UserHandle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindServiceAsUser(android.content.Intent, android.content.ServiceConnection, int, android.os.UserHandle)"
          },
          "getNoBackupFilesDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getNoBackupFilesDir()"
          },
          "fileList": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#fileList()"
          },
          "bindService": {
            "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindService(android.content.Intent, android.content.ServiceConnection, int)"
          },
          "checkSelfPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkSelfPermission(java.lang.String)"
          },
          "removeStickyBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcast(android.content.Intent)"
          },
          "sendStickyBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "enforceCallingPermission": {
            "!type": "fn(permission: string, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingPermission(java.lang.String, java.lang.String)"
          },
          "getCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCacheDir()"
          },
          "getSharedPrefsFile": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPrefsFile(java.lang.String)"
          },
          "deleteFile": {
            "!type": "fn(name: string) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteFile(java.lang.String)"
          },
          "createApplicationContext": {
            "!type": "fn(application: +android.content.pm.ApplicationInfo, flags: number) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createApplicationContext(android.content.pm.ApplicationInfo, int)"
          },
          "getExternalFilesDirs": {
            "!type": "fn(type: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDirs(java.lang.String)"
          },
          "isRestricted": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#isRestricted()"
          },
          "startInstrumentation": {
            "!type": "fn(className: +android.content.ComponentName, profileFile: string, arguments: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startInstrumentation(android.content.ComponentName, java.lang.String, android.os.Bundle)"
          },
          "createPackageContext": {
            "!type": "fn(packageName: string, flags: number) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContext(java.lang.String, int)"
          },
          "obtainStyledAttributes": {
            "!type": "fn(attrs: +java.newArray) -> +android.content.res.TypedArray",
            "!url": "http://developer.android.com/reference/android/content/Context.html#obtainStyledAttributes(int[])"
          },
          "setWallpaper": {
            "!type": "fn(bitmap: +android.graphics.Bitmap) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#setWallpaper(android.graphics.Bitmap)"
          },
          "setTheme": {
            "!type": "fn(resid: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#setTheme(int)"
          },
          "sendStickyOrderedBroadcast": {
            "!type": "fn(intent: +android.content.Intent, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcast(android.content.Intent, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "enforcePermission": {
            "!type": "fn(permission: string, pid: number, uid: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforcePermission(java.lang.String, int, int, java.lang.String)"
          },
          "getDir": {
            "!type": "fn(name: string, mode: number) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDir(java.lang.String, int)"
          },
          "checkCallingOrSelfUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfUriPermission(android.net.Uri, int)"
          },
          "sendBroadcastMultiplePermissions": {
            "!type": "fn(intent: +android.content.Intent, receiverPermissions: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastMultiplePermissions(android.content.Intent, java.lang.String[])"
          },
          "getExternalFilesDir": {
            "!type": "fn(type: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDir(java.lang.String)"
          },
          "openOrCreateDatabase": {
            "!type": "fn(name: string, mode: number, factory: +android.database.sqlite.SQLiteDatabase.CursorFactory) -> +android.database.sqlite.SQLiteDatabase",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openOrCreateDatabase(java.lang.String, int, android.database.sqlite.SQLiteDatabase.CursorFactory)"
          },
          "registerOnProvideAssistDataListener": {
            "!type": "fn(callback: +android.app.Application.OnProvideAssistDataListener) -> void",
            "!url": "http://developer.android.com/reference/android/app/Application.html#registerOnProvideAssistDataListener(android.app.Application.OnProvideAssistDataListener)"
          },
          "getContentResolver": {
            "!type": "fn() -> +android.content.ContentResolver",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getContentResolver()"
          },
          "getThemeResId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getThemeResId()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getObbDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDir()"
          },
          "getDisplayAdjustments": {
            "!type": "fn(displayId: number) -> +android.view.DisplayAdjustments",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDisplayAdjustments(int)"
          },
          "checkCallingOrSelfPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfPermission(java.lang.String)"
          },
          "unregisterReceiver": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unregisterReceiver(android.content.BroadcastReceiver)"
          },
          "clearWallpaper": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#clearWallpaper()"
          },
          "createPackageContextAsUser": {
            "!type": "fn(packageName: string, flags: number, user: +android.os.UserHandle) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContextAsUser(java.lang.String, int, android.os.UserHandle)"
          },
          "onCreate": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Application.html#onCreate()"
          },
          "onLowMemory": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Application.html#onLowMemory()"
          },
          "startServiceAsUser": {
            "!type": "fn(service: +android.content.Intent, user: +android.os.UserHandle) -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startServiceAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getWallpaper": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaper()"
          },
          "peekWallpaper": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#peekWallpaper()"
          },
          "getApplicationContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationContext()"
          },
          "getFilesDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFilesDir()"
          },
          "getCodeCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCodeCacheDir()"
          },
          "sendOrderedBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, receiverPermission: string, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, java.lang.String, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "getColor": {
            "!type": "fn(id: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getColor(int)"
          },
          "registerReceiverAsUser": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver, user: +android.os.UserHandle, filter: +android.content.IntentFilter, broadcastPermission: string, scheduler: +android.os.Handler) -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiverAsUser(android.content.BroadcastReceiver, android.os.UserHandle, android.content.IntentFilter, java.lang.String, android.os.Handler)"
          },
          "getText": {
            "!type": "fn(resId: number) -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getText(int)"
          },
          "getMainLooper": {
            "!type": "fn() -> +android.os.Looper",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getMainLooper()"
          },
          "startActivity": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivity(android.content.Intent)"
          },
          "getColorStateList": {
            "!type": "fn(id: number) -> +android.content.res.ColorStateList",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getColorStateList(int)"
          },
          "enforceCallingOrSelfUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfUriPermission(android.net.Uri, int, java.lang.String)"
          },
          "registerActivityLifecycleCallbacks": {
            "!type": "fn(callback: +android.app.Application.ActivityLifecycleCallbacks) -> void",
            "!url": "http://developer.android.com/reference/android/app/Application.html#registerActivityLifecycleCallbacks(android.app.Application.ActivityLifecycleCallbacks)"
          },
          "getAssets": {
            "!type": "fn() -> +android.content.res.AssetManager",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getAssets()"
          },
          "onConfigurationChanged": {
            "!type": "fn(newConfig: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/app/Application.html#onConfigurationChanged(android.content.res.Configuration)"
          },
          "onTrimMemory": {
            "!type": "fn(level: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Application.html#onTrimMemory(int)"
          },
          "grantUriPermission": {
            "!type": "fn(toPackage: string, uri: +android.net.Uri, modeFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#grantUriPermission(java.lang.String, android.net.Uri, int)"
          },
          "canStartActivityForResult": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#canStartActivityForResult()"
          },
          "getBasePackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBasePackageName()"
          },
          "unregisterOnProvideAssistDataListener": {
            "!type": "fn(callback: +android.app.Application.OnProvideAssistDataListener) -> void",
            "!url": "http://developer.android.com/reference/android/app/Application.html#unregisterOnProvideAssistDataListener(android.app.Application.OnProvideAssistDataListener)"
          },
          "registerReceiver": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver, filter: +android.content.IntentFilter) -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "stopService": {
            "!type": "fn(name: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopService(android.content.Intent)"
          },
          "getWallpaperDesiredMinimumHeight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumHeight()"
          },
          "getExternalCacheDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDirs()"
          },
          "getTheme": {
            "!type": "fn() -> +android.content.res.Resources.Theme",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getTheme()"
          },
          "getPackageCodePath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageCodePath()"
          },
          "registerComponentCallbacks": {
            "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
            "!url": "http://developer.android.com/reference/android/app/Application.html#registerComponentCallbacks(android.content.ComponentCallbacks)"
          },
          "enforceUriPermission": {
            "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceUriPermission(android.net.Uri, int, int, int, java.lang.String)"
          },
          "getSystemServiceName": {
            "!type": "fn(serviceClass: +java.lang.Class) -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSystemServiceName(java.lang.Class)"
          },
          "getApplicationInfo": {
            "!type": "fn() -> +android.content.pm.ApplicationInfo",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationInfo()"
          },
          "createDisplayContext": {
            "!type": "fn(display: +android.view.Display) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createDisplayContext(android.view.Display)"
          },
          "getSharedPreferences": {
            "!type": "fn(name: string, mode: number) -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPreferences(java.lang.String, int)"
          },
          "enforceCallingUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingUriPermission(android.net.Uri, int, java.lang.String)"
          },
          "getSystemService": {
            "!type": "fn(name: string) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSystemService(java.lang.String)"
          },
          "unbindService": {
            "!type": "fn(conn: +android.content.ServiceConnection) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unbindService(android.content.ServiceConnection)"
          },
          "sendStickyOrderedBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getClassLoader": {
            "!type": "fn() -> +java.lang.ClassLoader",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getClassLoader()"
          },
          "unregisterActivityLifecycleCallbacks": {
            "!type": "fn(callback: +android.app.Application.ActivityLifecycleCallbacks) -> void",
            "!url": "http://developer.android.com/reference/android/app/Application.html#unregisterActivityLifecycleCallbacks(android.app.Application.ActivityLifecycleCallbacks)"
          },
          "databaseList": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#databaseList()"
          },
          "checkCallingUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingUriPermission(android.net.Uri, int)"
          },
          "enforceCallingOrSelfPermission": {
            "!type": "fn(permission: string, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfPermission(java.lang.String, java.lang.String)"
          },
          "createConfigurationContext": {
            "!type": "fn(overrideConfiguration: +android.content.res.Configuration) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createConfigurationContext(android.content.res.Configuration)"
          },
          "removeStickyBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "getFileStreamPath": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFileStreamPath(java.lang.String)"
          },
          "checkUriPermission": {
            "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkUriPermission(android.net.Uri, int, int, int)"
          },
          "startService": {
            "!type": "fn(service: +android.content.Intent) -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startService(android.content.Intent)"
          },
          "checkCallingPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingPermission(java.lang.String)"
          },
          "getPackageManager": {
            "!type": "fn() -> +android.content.pm.PackageManager",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageManager()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "startActivitiesAsUser": {
            "!type": "fn(intents: +java.newArray, options: +android.os.Bundle, userHandle: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivitiesAsUser(android.content.Intent[], android.os.Bundle, android.os.UserHandle)"
          },
          "onTerminate": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Application.html#onTerminate()"
          },
          "sendBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "sendBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcast(android.content.Intent)"
          },
          "getPackageResourcePath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageResourcePath()"
          },
          "startIntentSender": {
            "!type": "fn(intent: +android.content.IntentSender, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startIntentSender(android.content.IntentSender, android.content.Intent, int, int, int)"
          },
          "startActivityForResult": {
            "!type": "fn(who: string, intent: +android.content.Intent, requestCode: number, options: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivityForResult(java.lang.String, android.content.Intent, int, android.os.Bundle)"
          },
          "startActivities": {
            "!type": "fn(intents: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivities(android.content.Intent[])"
          },
          "getDrawable": {
            "!type": "fn(id: number) -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getDrawable(int)"
          },
          "getPackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageName()"
          },
          "revokeUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#revokeUriPermission(android.net.Uri, int)"
          },
          "getUserId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getUserId()"
          },
          "unregisterComponentCallbacks": {
            "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
            "!url": "http://developer.android.com/reference/android/app/Application.html#unregisterComponentCallbacks(android.content.ComponentCallbacks)"
          },
          "getResources": {
            "!type": "fn() -> +android.content.res.Resources",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getResources()"
          },
          "stopServiceAsUser": {
            "!type": "fn(name: +android.content.Intent, user: +android.os.UserHandle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopServiceAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "getExternalMediaDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalMediaDirs()"
          },
          "getWallpaperDesiredMinimumWidth": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumWidth()"
          },
          "sendStickyBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcast(android.content.Intent)"
          }
        }
      },
      "VoiceInteractor": {
        "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.html",
        "Request": {
          "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Request.html",
          "prototype": {
            "getName": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Request.html#getName()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "onDetached": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Request.html#onDetached()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Request.html#toString()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "getActivity": {
              "!type": "fn() -> +android.app.Activity",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Request.html#getActivity()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "onCancel": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Request.html#onCancel()"
            },
            "getContext": {
              "!type": "fn() -> +android.content.Context",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Request.html#getContext()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "onAttached": {
              "!type": "fn(activity: +android.app.Activity) -> void",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Request.html#onAttached(android.app.Activity)"
            },
            "cancel": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Request.html#cancel()"
            }
          }
        },
        "ConfirmationRequest": {
          "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.ConfirmationRequest.html",
          "!type": "fn(prompt: +android.app.VoiceInteractor.Prompt, extras: +android.os.Bundle)",
          "prototype": {
            "getName": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Request.html#getName()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Request.html#toString()"
            },
            "onDetached": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Request.html#onDetached()"
            },
            "onConfirmationResult": {
              "!type": "fn(confirmed: bool, result: +android.os.Bundle) -> void",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.ConfirmationRequest.html#onConfirmationResult(boolean, android.os.Bundle)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "getActivity": {
              "!type": "fn() -> +android.app.Activity",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Request.html#getActivity()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "onCancel": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Request.html#onCancel()"
            },
            "getContext": {
              "!type": "fn() -> +android.content.Context",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Request.html#getContext()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "onAttached": {
              "!type": "fn(activity: +android.app.Activity) -> void",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Request.html#onAttached(android.app.Activity)"
            },
            "cancel": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Request.html#cancel()"
            }
          }
        },
        "PickOptionRequest": {
          "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.PickOptionRequest.html",
          "!type": "fn(prompt: +android.app.VoiceInteractor.Prompt, options: +java.newArray, extras: +android.os.Bundle)",
          "Option": {
            "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.PickOptionRequest.Option.html",
            "!type": "fn(label: +java.lang.CharSequence)",
            "CREATOR": {
              "!type": "+android.os.Parcelable.Creator",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.PickOptionRequest.Option.html#CREATOR"
            },
            "prototype": {
              "notifyAll": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
              },
              "getIndex": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.PickOptionRequest.Option.html#getIndex()"
              },
              "setExtras": {
                "!type": "fn(extras: +android.os.Bundle) -> void",
                "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.PickOptionRequest.Option.html#setExtras(android.os.Bundle)"
              },
              "toString": {
                "!type": "fn() -> string",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
              },
              "equals": {
                "!type": "fn(o: +java.lang.Object) -> bool",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
              },
              "describeContents": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.PickOptionRequest.Option.html#describeContents()"
              },
              "getSynonymAt": {
                "!type": "fn(index: number) -> +java.lang.CharSequence",
                "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.PickOptionRequest.Option.html#getSynonymAt(int)"
              },
              "getLabel": {
                "!type": "fn() -> +java.lang.CharSequence",
                "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.PickOptionRequest.Option.html#getLabel()"
              },
              "countSynonyms": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.PickOptionRequest.Option.html#countSynonyms()"
              },
              "wait": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
              },
              "writeToParcel": {
                "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
                "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.PickOptionRequest.Option.html#writeToParcel(android.os.Parcel, int)"
              },
              "hashCode": {
                "!type": "fn() -> number",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
              },
              "getClass": {
                "!type": "fn() -> +java.lang.Class",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
              },
              "notify": {
                "!type": "fn() -> void",
                "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
              },
              "getExtras": {
                "!type": "fn() -> +android.os.Bundle",
                "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.PickOptionRequest.Option.html#getExtras()"
              },
              "addSynonym": {
                "!type": "fn(synonym: +java.lang.CharSequence) -> +android.app.VoiceInteractor.PickOptionRequest.Option",
                "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.PickOptionRequest.Option.html#addSynonym(java.lang.CharSequence)"
              }
            }
          },
          "prototype": {
            "getName": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Request.html#getName()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Request.html#toString()"
            },
            "onDetached": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Request.html#onDetached()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "getActivity": {
              "!type": "fn() -> +android.app.Activity",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Request.html#getActivity()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "onPickOptionResult": {
              "!type": "fn(finished: bool, selections: +java.newArray, result: +android.os.Bundle) -> void",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.PickOptionRequest.html#onPickOptionResult(boolean, android.app.VoiceInteractor.PickOptionRequest.Option[], android.os.Bundle)"
            },
            "onCancel": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Request.html#onCancel()"
            },
            "getContext": {
              "!type": "fn() -> +android.content.Context",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Request.html#getContext()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "onAttached": {
              "!type": "fn(activity: +android.app.Activity) -> void",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Request.html#onAttached(android.app.Activity)"
            },
            "cancel": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Request.html#cancel()"
            }
          }
        },
        "CompleteVoiceRequest": {
          "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.CompleteVoiceRequest.html",
          "!type": "fn(prompt: +android.app.VoiceInteractor.Prompt, extras: +android.os.Bundle)",
          "prototype": {
            "getName": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Request.html#getName()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Request.html#toString()"
            },
            "onDetached": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Request.html#onDetached()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "onCompleteResult": {
              "!type": "fn(result: +android.os.Bundle) -> void",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.CompleteVoiceRequest.html#onCompleteResult(android.os.Bundle)"
            },
            "getActivity": {
              "!type": "fn() -> +android.app.Activity",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Request.html#getActivity()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "onCancel": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Request.html#onCancel()"
            },
            "getContext": {
              "!type": "fn() -> +android.content.Context",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Request.html#getContext()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "onAttached": {
              "!type": "fn(activity: +android.app.Activity) -> void",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Request.html#onAttached(android.app.Activity)"
            },
            "cancel": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Request.html#cancel()"
            }
          }
        },
        "AbortVoiceRequest": {
          "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.AbortVoiceRequest.html",
          "!type": "fn(prompt: +android.app.VoiceInteractor.Prompt, extras: +android.os.Bundle)",
          "prototype": {
            "getName": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Request.html#getName()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Request.html#toString()"
            },
            "onDetached": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Request.html#onDetached()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "onAbortResult": {
              "!type": "fn(result: +android.os.Bundle) -> void",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.AbortVoiceRequest.html#onAbortResult(android.os.Bundle)"
            },
            "getActivity": {
              "!type": "fn() -> +android.app.Activity",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Request.html#getActivity()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "onCancel": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Request.html#onCancel()"
            },
            "getContext": {
              "!type": "fn() -> +android.content.Context",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Request.html#getContext()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "onAttached": {
              "!type": "fn(activity: +android.app.Activity) -> void",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Request.html#onAttached(android.app.Activity)"
            },
            "cancel": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Request.html#cancel()"
            }
          }
        },
        "CommandRequest": {
          "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.CommandRequest.html",
          "!type": "fn(command: string, args: +android.os.Bundle)",
          "prototype": {
            "getName": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Request.html#getName()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Request.html#toString()"
            },
            "onDetached": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Request.html#onDetached()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "getActivity": {
              "!type": "fn() -> +android.app.Activity",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Request.html#getActivity()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "onCommandResult": {
              "!type": "fn(isCompleted: bool, result: +android.os.Bundle) -> void",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.CommandRequest.html#onCommandResult(boolean, android.os.Bundle)"
            },
            "onCancel": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Request.html#onCancel()"
            },
            "getContext": {
              "!type": "fn() -> +android.content.Context",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Request.html#getContext()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "onAttached": {
              "!type": "fn(activity: +android.app.Activity) -> void",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Request.html#onAttached(android.app.Activity)"
            },
            "cancel": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Request.html#cancel()"
            }
          }
        },
        "Prompt": {
          "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Prompt.html",
          "!type": "fn(voicePrompts: +java.newArray, visualPrompt: +java.lang.CharSequence)",
          "CREATOR": {
            "!type": "+android.os.Parcelable.Creator",
            "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Prompt.html#CREATOR"
          },
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Prompt.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "describeContents": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Prompt.html#describeContents()"
            },
            "countVoicePrompts": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Prompt.html#countVoicePrompts()"
            },
            "getVoicePromptAt": {
              "!type": "fn(index: number) -> +java.lang.CharSequence",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Prompt.html#getVoicePromptAt(int)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "writeToParcel": {
              "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Prompt.html#writeToParcel(android.os.Parcel, int)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "getVisualPrompt": {
              "!type": "fn() -> +java.lang.CharSequence",
              "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.Prompt.html#getVisualPrompt()"
            }
          }
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "submitRequest": {
            "!type": "fn(request: +android.app.VoiceInteractor.Request) -> bool",
            "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.html#submitRequest(android.app.VoiceInteractor.Request)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getActiveRequests": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.html#getActiveRequests()"
          },
          "supportsCommands": {
            "!type": "fn(commands: +java.newArray) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.html#supportsCommands(java.lang.String[])"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "getActiveRequest": {
            "!type": "fn(name: string) -> +android.app.VoiceInteractor.Request",
            "!url": "http://developer.android.com/reference/android/app/VoiceInteractor.html#getActiveRequest(java.lang.String)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "FragmentController": {
        "!url": "http://developer.android.com/reference/android/app/FragmentController.html",
        "createController": {
          "!type": "fn(callbacks: +android.app.FragmentHostCallback) -> +android.app.FragmentController",
          "!url": "http://developer.android.com/reference/android/app/FragmentController.html#createController(android.app.FragmentHostCallback)"
        },
        "prototype": {
          "dispatchOptionsMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/FragmentController.html#dispatchOptionsMenuClosed(android.view.Menu)"
          },
          "dumpLoaders": {
            "!type": "fn(prefix: string, fd: +java.io.FileDescriptor, writer: +java.io.PrintWriter, args: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/FragmentController.html#dumpLoaders(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])"
          },
          "getFragmentManager": {
            "!type": "fn() -> +android.app.FragmentManager",
            "!url": "http://developer.android.com/reference/android/app/FragmentController.html#getFragmentManager()"
          },
          "doLoaderDestroy": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/FragmentController.html#doLoaderDestroy()"
          },
          "retainNonConfig": {
            "!type": "fn() -> +java.util.List",
            "!url": "http://developer.android.com/reference/android/app/FragmentController.html#retainNonConfig()"
          },
          "dispatchStop": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/FragmentController.html#dispatchStop()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "restoreLoaderNonConfig": {
            "!type": "fn(loaderManagers: +android.util.ArrayMap) -> void",
            "!url": "http://developer.android.com/reference/android/app/FragmentController.html#restoreLoaderNonConfig(android.util.ArrayMap)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "dispatchDestroy": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/FragmentController.html#dispatchDestroy()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "dispatchPause": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/FragmentController.html#dispatchPause()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getLoaderManager": {
            "!type": "fn() -> +android.app.LoaderManager",
            "!url": "http://developer.android.com/reference/android/app/FragmentController.html#getLoaderManager()"
          },
          "dispatchTrimMemory": {
            "!type": "fn(level: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/FragmentController.html#dispatchTrimMemory(int)"
          },
          "doLoaderStop": {
            "!type": "fn(retain: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/FragmentController.html#doLoaderStop(boolean)"
          },
          "dispatchCreateOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu, inflater: +android.view.MenuInflater) -> bool",
            "!url": "http://developer.android.com/reference/android/app/FragmentController.html#dispatchCreateOptionsMenu(android.view.Menu, android.view.MenuInflater)"
          },
          "dispatchDestroyView": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/FragmentController.html#dispatchDestroyView()"
          },
          "attachHost": {
            "!type": "fn(parent: +android.app.Fragment) -> void",
            "!url": "http://developer.android.com/reference/android/app/FragmentController.html#attachHost(android.app.Fragment)"
          },
          "dispatchPrepareOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/FragmentController.html#dispatchPrepareOptionsMenu(android.view.Menu)"
          },
          "dispatchOptionsItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/FragmentController.html#dispatchOptionsItemSelected(android.view.MenuItem)"
          },
          "reportLoaderStart": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/FragmentController.html#reportLoaderStart()"
          },
          "restoreAllState": {
            "!type": "fn(state: +android.os.Parcelable, nonConfigList: +java.util.List) -> void",
            "!url": "http://developer.android.com/reference/android/app/FragmentController.html#restoreAllState(android.os.Parcelable, java.util.List)"
          },
          "dispatchConfigurationChanged": {
            "!type": "fn(newConfig: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/app/FragmentController.html#dispatchConfigurationChanged(android.content.res.Configuration)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "onCreateView": {
            "!type": "fn(parent: +android.view.View, name: string, context: +android.content.Context, attrs: +android.util.AttributeSet) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/FragmentController.html#onCreateView(android.view.View, java.lang.String, android.content.Context, android.util.AttributeSet)"
          },
          "doLoaderStart": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/FragmentController.html#doLoaderStart()"
          },
          "findFragmentByWho": {
            "!type": "fn(who: string) -> +android.app.Fragment",
            "!url": "http://developer.android.com/reference/android/app/FragmentController.html#findFragmentByWho(java.lang.String)"
          },
          "dispatchCreate": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/FragmentController.html#dispatchCreate()"
          },
          "dispatchResume": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/FragmentController.html#dispatchResume()"
          },
          "saveAllState": {
            "!type": "fn() -> +android.os.Parcelable",
            "!url": "http://developer.android.com/reference/android/app/FragmentController.html#saveAllState()"
          },
          "dispatchStart": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/FragmentController.html#dispatchStart()"
          },
          "noteStateNotSaved": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/FragmentController.html#noteStateNotSaved()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "dispatchContextItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/FragmentController.html#dispatchContextItemSelected(android.view.MenuItem)"
          },
          "retainLoaderNonConfig": {
            "!type": "fn() -> +android.util.ArrayMap",
            "!url": "http://developer.android.com/reference/android/app/FragmentController.html#retainLoaderNonConfig()"
          },
          "execPendingActions": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/FragmentController.html#execPendingActions()"
          },
          "dispatchLowMemory": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/FragmentController.html#dispatchLowMemory()"
          },
          "dispatchActivityCreated": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/FragmentController.html#dispatchActivityCreated()"
          }
        }
      },
      "ProgressDialog": {
        "!url": "http://developer.android.com/reference/android/app/ProgressDialog.html",
        "!type": "fn(context: +android.content.Context)",
        "STYLE_HORIZONTAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ProgressDialog.html#STYLE_HORIZONTAL"
        },
        "LAYOUT_HINT_SIDE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#LAYOUT_HINT_SIDE"
        },
        "LAYOUT_HINT_NONE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#LAYOUT_HINT_NONE"
        },
        "THEME_HOLO_DARK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#THEME_HOLO_DARK"
        },
        "THEME_DEVICE_DEFAULT_LIGHT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#THEME_DEVICE_DEFAULT_LIGHT"
        },
        "THEME_DEVICE_DEFAULT_DARK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#THEME_DEVICE_DEFAULT_DARK"
        },
        "THEME_HOLO_LIGHT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#THEME_HOLO_LIGHT"
        },
        "THEME_TRADITIONAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#THEME_TRADITIONAL"
        },
        "STYLE_SPINNER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ProgressDialog.html#STYLE_SPINNER"
        },
        "show": {
          "!type": "fn(context: +android.content.Context, title: +java.lang.CharSequence, message: +java.lang.CharSequence) -> +android.app.ProgressDialog",
          "!url": "http://developer.android.com/reference/android/app/ProgressDialog.html#show(android.content.Context, java.lang.CharSequence, java.lang.CharSequence)"
        },
        "prototype": {
          "onKeyLongPress": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onKeyLongPress(int, android.view.KeyEvent)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "onPanelClosed": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onPanelClosed(int, android.view.Menu)"
          },
          "dispatchKeyShortcutEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#dispatchKeyShortcutEvent(android.view.KeyEvent)"
          },
          "onTrackballEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onTrackballEvent(android.view.MotionEvent)"
          },
          "onGenericMotionEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onGenericMotionEvent(android.view.MotionEvent)"
          },
          "setFeatureDrawableAlpha": {
            "!type": "fn(featureId: number, alpha: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setFeatureDrawableAlpha(int, int)"
          },
          "getVolumeControlStream": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getVolumeControlStream()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "onTouchEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onTouchEvent(android.view.MotionEvent)"
          },
          "onCreateOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onCreateOptionsMenu(android.view.Menu)"
          },
          "onCreatePanelView": {
            "!type": "fn(featureId: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onCreatePanelView(int)"
          },
          "show": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#show()"
          },
          "setInverseBackgroundForced": {
            "!type": "fn(forceInverseBackground: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#setInverseBackgroundForced(boolean)"
          },
          "addContentView": {
            "!type": "fn(view: +android.view.View, params: +android.view.ViewGroup.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#addContentView(android.view.View, android.view.ViewGroup.LayoutParams)"
          },
          "onContextItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onContextItemSelected(android.view.MenuItem)"
          },
          "getSearchEvent": {
            "!type": "fn() -> +android.view.SearchEvent",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getSearchEvent()"
          },
          "setProgressStyle": {
            "!type": "fn(style: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/ProgressDialog.html#setProgressStyle(int)"
          },
          "onDetachedFromWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onDetachedFromWindow()"
          },
          "onAttachedToWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onAttachedToWindow()"
          },
          "setMax": {
            "!type": "fn(max: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/ProgressDialog.html#setMax(int)"
          },
          "onContextMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onContextMenuClosed(android.view.Menu)"
          },
          "dismiss": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#dismiss()"
          },
          "setIconAttribute": {
            "!type": "fn(attrId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#setIconAttribute(int)"
          },
          "create": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#create()"
          },
          "findViewById": {
            "!type": "fn(id: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#findViewById(int)"
          },
          "getListView": {
            "!type": "fn() -> +android.widget.ListView",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#getListView()"
          },
          "dispatchTrackballEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#dispatchTrackballEvent(android.view.MotionEvent)"
          },
          "setIndeterminate": {
            "!type": "fn(indeterminate: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/ProgressDialog.html#setIndeterminate(boolean)"
          },
          "takeCancelAndDismissListeners": {
            "!type": "fn(msg: string, cancel: +android.content.DialogInterface.OnCancelListener, dismiss: +android.content.DialogInterface.OnDismissListener) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#takeCancelAndDismissListeners(java.lang.String, android.content.DialogInterface.OnCancelListener, android.content.DialogInterface.OnDismissListener)"
          },
          "dispatchGenericMotionEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#dispatchGenericMotionEvent(android.view.MotionEvent)"
          },
          "onKeyMultiple": {
            "!type": "fn(keyCode: number, repeatCount: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onKeyMultiple(int, int, android.view.KeyEvent)"
          },
          "setContentView": {
            "!type": "fn(layoutResID: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setContentView(int)"
          },
          "getCurrentFocus": {
            "!type": "fn() -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getCurrentFocus()"
          },
          "getMax": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/ProgressDialog.html#getMax()"
          },
          "onPrepareOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onPrepareOptionsMenu(android.view.Menu)"
          },
          "onKeyShortcut": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onKeyShortcut(int, android.view.KeyEvent)"
          },
          "setProgressNumberFormat": {
            "!type": "fn(format: string) -> void",
            "!url": "http://developer.android.com/reference/android/app/ProgressDialog.html#setProgressNumberFormat(java.lang.String)"
          },
          "onCreateContextMenu": {
            "!type": "fn(menu: +android.view.ContextMenu, v: +android.view.View, menuInfo: +android.view.ContextMenu.ContextMenuInfo) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenu.ContextMenuInfo)"
          },
          "onKeyDown": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#onKeyDown(int, android.view.KeyEvent)"
          },
          "setButton3": {
            "!type": "fn(text: +java.lang.CharSequence, msg: +android.os.Message) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#setButton3(java.lang.CharSequence, android.os.Message)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "setButton2": {
            "!type": "fn(text: +java.lang.CharSequence, msg: +android.os.Message) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#setButton2(java.lang.CharSequence, android.os.Message)"
          },
          "setButton": {
            "!type": "fn(whichButton: number, text: +java.lang.CharSequence, msg: +android.os.Message) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#setButton(int, java.lang.CharSequence, android.os.Message)"
          },
          "setOnCancelListener": {
            "!type": "fn(listener: +android.content.DialogInterface.OnCancelListener) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setOnCancelListener(android.content.DialogInterface.OnCancelListener)"
          },
          "setView": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#setView(android.view.View)"
          },
          "setOnShowListener": {
            "!type": "fn(listener: +android.content.DialogInterface.OnShowListener) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setOnShowListener(android.content.DialogInterface.OnShowListener)"
          },
          "onRestoreInstanceState": {
            "!type": "fn(savedInstanceState: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onRestoreInstanceState(android.os.Bundle)"
          },
          "setMessage": {
            "!type": "fn(message: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/app/ProgressDialog.html#setMessage(java.lang.CharSequence)"
          },
          "onWindowDismissed": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onWindowDismissed()"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getContext()"
          },
          "dispatchKeyEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#dispatchKeyEvent(android.view.KeyEvent)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "incrementProgressBy": {
            "!type": "fn(diff: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/ProgressDialog.html#incrementProgressBy(int)"
          },
          "onSearchRequested": {
            "!type": "fn(searchEvent: +android.view.SearchEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onSearchRequested(android.view.SearchEvent)"
          },
          "setCancelMessage": {
            "!type": "fn(msg: +android.os.Message) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setCancelMessage(android.os.Message)"
          },
          "isIndeterminate": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/ProgressDialog.html#isIndeterminate()"
          },
          "onOptionsMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onOptionsMenuClosed(android.view.Menu)"
          },
          "setFeatureDrawable": {
            "!type": "fn(featureId: number, drawable: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setFeatureDrawable(int, android.graphics.drawable.Drawable)"
          },
          "onOptionsItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onOptionsItemSelected(android.view.MenuItem)"
          },
          "setProgressPercentFormat": {
            "!type": "fn(format: +java.text.NumberFormat) -> void",
            "!url": "http://developer.android.com/reference/android/app/ProgressDialog.html#setProgressPercentFormat(java.text.NumberFormat)"
          },
          "onSaveInstanceState": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onSaveInstanceState()"
          },
          "onCreatePanelMenu": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onCreatePanelMenu(int, android.view.Menu)"
          },
          "setDismissMessage": {
            "!type": "fn(msg: +android.os.Message) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setDismissMessage(android.os.Message)"
          },
          "requestWindowFeature": {
            "!type": "fn(featureId: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#requestWindowFeature(int)"
          },
          "dispatchTouchEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#dispatchTouchEvent(android.view.MotionEvent)"
          },
          "closeOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#closeOptionsMenu()"
          },
          "onStart": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/ProgressDialog.html#onStart()"
          },
          "setFeatureDrawableResource": {
            "!type": "fn(featureId: number, resId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setFeatureDrawableResource(int, int)"
          },
          "getWindow": {
            "!type": "fn() -> +android.view.Window",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getWindow()"
          },
          "setFeatureDrawableUri": {
            "!type": "fn(featureId: number, uri: +android.net.Uri) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setFeatureDrawableUri(int, android.net.Uri)"
          },
          "setProgress": {
            "!type": "fn(value: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/ProgressDialog.html#setProgress(int)"
          },
          "getOwnerActivity": {
            "!type": "fn() -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getOwnerActivity()"
          },
          "setVolumeControlStream": {
            "!type": "fn(streamType: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setVolumeControlStream(int)"
          },
          "setIcon": {
            "!type": "fn(resId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#setIcon(int)"
          },
          "setOwnerActivity": {
            "!type": "fn(activity: +android.app.Activity) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setOwnerActivity(android.app.Activity)"
          },
          "onKeyUp": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#onKeyUp(int, android.view.KeyEvent)"
          },
          "hide": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#hide()"
          },
          "unregisterForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#unregisterForContextMenu(android.view.View)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "onPreparePanel": {
            "!type": "fn(featureId: number, view: +android.view.View, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onPreparePanel(int, android.view.View, android.view.Menu)"
          },
          "setOnKeyListener": {
            "!type": "fn(onKeyListener: +android.content.DialogInterface.OnKeyListener) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setOnKeyListener(android.content.DialogInterface.OnKeyListener)"
          },
          "getActionBar": {
            "!type": "fn() -> +android.app.ActionBar",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getActionBar()"
          },
          "registerForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#registerForContextMenu(android.view.View)"
          },
          "onActionModeFinished": {
            "!type": "fn(mode: +android.view.ActionMode) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onActionModeFinished(android.view.ActionMode)"
          },
          "getButton": {
            "!type": "fn(whichButton: number) -> +android.widget.Button",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#getButton(int)"
          },
          "onContentChanged": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onContentChanged()"
          },
          "setIndeterminateDrawable": {
            "!type": "fn(d: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/app/ProgressDialog.html#setIndeterminateDrawable(android.graphics.drawable.Drawable)"
          },
          "incrementSecondaryProgressBy": {
            "!type": "fn(diff: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/ProgressDialog.html#incrementSecondaryProgressBy(int)"
          },
          "takeKeyEvents": {
            "!type": "fn(get: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#takeKeyEvents(boolean)"
          },
          "onMenuItemSelected": {
            "!type": "fn(featureId: number, item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onMenuItemSelected(int, android.view.MenuItem)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "dispatchPopulateAccessibilityEvent": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
          },
          "setSecondaryProgress": {
            "!type": "fn(secondaryProgress: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/ProgressDialog.html#setSecondaryProgress(int)"
          },
          "isShowing": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#isShowing()"
          },
          "setProgressDrawable": {
            "!type": "fn(d: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/app/ProgressDialog.html#setProgressDrawable(android.graphics.drawable.Drawable)"
          },
          "setCancelable": {
            "!type": "fn(flag: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setCancelable(boolean)"
          },
          "openOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#openOptionsMenu()"
          },
          "setOnDismissListener": {
            "!type": "fn(listener: +android.content.DialogInterface.OnDismissListener) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setOnDismissListener(android.content.DialogInterface.OnDismissListener)"
          },
          "onBackPressed": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onBackPressed()"
          },
          "setCanceledOnTouchOutside": {
            "!type": "fn(cancel: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setCanceledOnTouchOutside(boolean)"
          },
          "onWindowAttributesChanged": {
            "!type": "fn(params: +android.view.WindowManager.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onWindowAttributesChanged(android.view.WindowManager.LayoutParams)"
          },
          "setCustomTitle": {
            "!type": "fn(customTitleView: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#setCustomTitle(android.view.View)"
          },
          "getProgress": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/ProgressDialog.html#getProgress()"
          },
          "onWindowFocusChanged": {
            "!type": "fn(hasFocus: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onWindowFocusChanged(boolean)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getLayoutInflater": {
            "!type": "fn() -> +android.view.LayoutInflater",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getLayoutInflater()"
          },
          "invalidateOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#invalidateOptionsMenu()"
          },
          "onWindowStartingActionMode": {
            "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onWindowStartingActionMode(android.view.ActionMode.Callback)"
          },
          "openContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#openContextMenu(android.view.View)"
          },
          "cancel": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#cancel()"
          },
          "getSecondaryProgress": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/ProgressDialog.html#getSecondaryProgress()"
          },
          "onMenuOpened": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onMenuOpened(int, android.view.Menu)"
          },
          "setTitle": {
            "!type": "fn(title: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#setTitle(java.lang.CharSequence)"
          },
          "onActionModeStarted": {
            "!type": "fn(mode: +android.view.ActionMode) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onActionModeStarted(android.view.ActionMode)"
          }
        }
      },
      "BroadcastOptions": {
        "!url": "http://developer.android.com/reference/android/app/BroadcastOptions.html",
        "!type": "fn(opts: +android.os.Bundle)",
        "KEY_TEMPORARY_APP_WHITELIST_DURATION": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/BroadcastOptions.html#KEY_TEMPORARY_APP_WHITELIST_DURATION"
        },
        "makeBasic": {
          "!type": "fn() -> +android.app.BroadcastOptions",
          "!url": "http://developer.android.com/reference/android/app/BroadcastOptions.html#makeBasic()"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "setTemporaryAppWhitelistDuration": {
            "!type": "fn(duration: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/android/app/BroadcastOptions.html#setTemporaryAppWhitelistDuration(long)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getTemporaryAppWhitelistDuration": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/app/BroadcastOptions.html#getTemporaryAppWhitelistDuration()"
          },
          "toBundle": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/app/BroadcastOptions.html#toBundle()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "TimePickerDialog": {
        "!url": "http://developer.android.com/reference/android/app/TimePickerDialog.html",
        "!type": "fn(context: +android.content.Context, listener: +android.app.TimePickerDialog.OnTimeSetListener, hourOfDay: number, minute: number, is24HourView: bool)",
        "THEME_DEVICE_DEFAULT_DARK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#THEME_DEVICE_DEFAULT_DARK"
        },
        "THEME_TRADITIONAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#THEME_TRADITIONAL"
        },
        "THEME_HOLO_DARK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#THEME_HOLO_DARK"
        },
        "LAYOUT_HINT_SIDE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#LAYOUT_HINT_SIDE"
        },
        "LAYOUT_HINT_NONE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#LAYOUT_HINT_NONE"
        },
        "THEME_HOLO_LIGHT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#THEME_HOLO_LIGHT"
        },
        "THEME_DEVICE_DEFAULT_LIGHT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#THEME_DEVICE_DEFAULT_LIGHT"
        },
        "prototype": {
          "onKeyLongPress": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onKeyLongPress(int, android.view.KeyEvent)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "onPanelClosed": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onPanelClosed(int, android.view.Menu)"
          },
          "dispatchKeyShortcutEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#dispatchKeyShortcutEvent(android.view.KeyEvent)"
          },
          "onTrackballEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onTrackballEvent(android.view.MotionEvent)"
          },
          "onGenericMotionEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onGenericMotionEvent(android.view.MotionEvent)"
          },
          "setFeatureDrawableAlpha": {
            "!type": "fn(featureId: number, alpha: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setFeatureDrawableAlpha(int, int)"
          },
          "getVolumeControlStream": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getVolumeControlStream()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "onTouchEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onTouchEvent(android.view.MotionEvent)"
          },
          "onCreateOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onCreateOptionsMenu(android.view.Menu)"
          },
          "onCreatePanelView": {
            "!type": "fn(featureId: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onCreatePanelView(int)"
          },
          "show": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#show()"
          },
          "setInverseBackgroundForced": {
            "!type": "fn(forceInverseBackground: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#setInverseBackgroundForced(boolean)"
          },
          "addContentView": {
            "!type": "fn(view: +android.view.View, params: +android.view.ViewGroup.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#addContentView(android.view.View, android.view.ViewGroup.LayoutParams)"
          },
          "onContextItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onContextItemSelected(android.view.MenuItem)"
          },
          "getSearchEvent": {
            "!type": "fn() -> +android.view.SearchEvent",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getSearchEvent()"
          },
          "onDetachedFromWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onDetachedFromWindow()"
          },
          "onAttachedToWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onAttachedToWindow()"
          },
          "onContextMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onContextMenuClosed(android.view.Menu)"
          },
          "dismiss": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#dismiss()"
          },
          "setIconAttribute": {
            "!type": "fn(attrId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#setIconAttribute(int)"
          },
          "create": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#create()"
          },
          "findViewById": {
            "!type": "fn(id: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#findViewById(int)"
          },
          "getListView": {
            "!type": "fn() -> +android.widget.ListView",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#getListView()"
          },
          "dispatchTrackballEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#dispatchTrackballEvent(android.view.MotionEvent)"
          },
          "takeCancelAndDismissListeners": {
            "!type": "fn(msg: string, cancel: +android.content.DialogInterface.OnCancelListener, dismiss: +android.content.DialogInterface.OnDismissListener) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#takeCancelAndDismissListeners(java.lang.String, android.content.DialogInterface.OnCancelListener, android.content.DialogInterface.OnDismissListener)"
          },
          "dispatchGenericMotionEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#dispatchGenericMotionEvent(android.view.MotionEvent)"
          },
          "onKeyMultiple": {
            "!type": "fn(keyCode: number, repeatCount: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onKeyMultiple(int, int, android.view.KeyEvent)"
          },
          "setContentView": {
            "!type": "fn(layoutResID: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setContentView(int)"
          },
          "getCurrentFocus": {
            "!type": "fn() -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getCurrentFocus()"
          },
          "onKeyShortcut": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onKeyShortcut(int, android.view.KeyEvent)"
          },
          "onPrepareOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onPrepareOptionsMenu(android.view.Menu)"
          },
          "onCreateContextMenu": {
            "!type": "fn(menu: +android.view.ContextMenu, v: +android.view.View, menuInfo: +android.view.ContextMenu.ContextMenuInfo) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenu.ContextMenuInfo)"
          },
          "onKeyDown": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#onKeyDown(int, android.view.KeyEvent)"
          },
          "setButton3": {
            "!type": "fn(text: +java.lang.CharSequence, msg: +android.os.Message) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#setButton3(java.lang.CharSequence, android.os.Message)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "setButton2": {
            "!type": "fn(text: +java.lang.CharSequence, msg: +android.os.Message) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#setButton2(java.lang.CharSequence, android.os.Message)"
          },
          "setButton": {
            "!type": "fn(whichButton: number, text: +java.lang.CharSequence, msg: +android.os.Message) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#setButton(int, java.lang.CharSequence, android.os.Message)"
          },
          "setOnCancelListener": {
            "!type": "fn(listener: +android.content.DialogInterface.OnCancelListener) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setOnCancelListener(android.content.DialogInterface.OnCancelListener)"
          },
          "setView": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#setView(android.view.View)"
          },
          "setOnShowListener": {
            "!type": "fn(listener: +android.content.DialogInterface.OnShowListener) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setOnShowListener(android.content.DialogInterface.OnShowListener)"
          },
          "onRestoreInstanceState": {
            "!type": "fn(savedInstanceState: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/TimePickerDialog.html#onRestoreInstanceState(android.os.Bundle)"
          },
          "setMessage": {
            "!type": "fn(message: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#setMessage(java.lang.CharSequence)"
          },
          "onWindowDismissed": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onWindowDismissed()"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getContext()"
          },
          "dispatchKeyEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#dispatchKeyEvent(android.view.KeyEvent)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "onSearchRequested": {
            "!type": "fn(searchEvent: +android.view.SearchEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onSearchRequested(android.view.SearchEvent)"
          },
          "setCancelMessage": {
            "!type": "fn(msg: +android.os.Message) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setCancelMessage(android.os.Message)"
          },
          "onOptionsMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onOptionsMenuClosed(android.view.Menu)"
          },
          "setFeatureDrawable": {
            "!type": "fn(featureId: number, drawable: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setFeatureDrawable(int, android.graphics.drawable.Drawable)"
          },
          "updateTime": {
            "!type": "fn(hourOfDay: number, minuteOfHour: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/TimePickerDialog.html#updateTime(int, int)"
          },
          "onOptionsItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onOptionsItemSelected(android.view.MenuItem)"
          },
          "onSaveInstanceState": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/app/TimePickerDialog.html#onSaveInstanceState()"
          },
          "onCreatePanelMenu": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onCreatePanelMenu(int, android.view.Menu)"
          },
          "setDismissMessage": {
            "!type": "fn(msg: +android.os.Message) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setDismissMessage(android.os.Message)"
          },
          "requestWindowFeature": {
            "!type": "fn(featureId: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#requestWindowFeature(int)"
          },
          "dispatchTouchEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#dispatchTouchEvent(android.view.MotionEvent)"
          },
          "closeOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#closeOptionsMenu()"
          },
          "setFeatureDrawableResource": {
            "!type": "fn(featureId: number, resId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setFeatureDrawableResource(int, int)"
          },
          "getWindow": {
            "!type": "fn() -> +android.view.Window",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getWindow()"
          },
          "onClick": {
            "!type": "fn(dialog: +android.content.DialogInterface, which: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/TimePickerDialog.html#onClick(android.content.DialogInterface, int)"
          },
          "setFeatureDrawableUri": {
            "!type": "fn(featureId: number, uri: +android.net.Uri) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setFeatureDrawableUri(int, android.net.Uri)"
          },
          "getOwnerActivity": {
            "!type": "fn() -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getOwnerActivity()"
          },
          "setVolumeControlStream": {
            "!type": "fn(streamType: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setVolumeControlStream(int)"
          },
          "setIcon": {
            "!type": "fn(resId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#setIcon(int)"
          },
          "setOwnerActivity": {
            "!type": "fn(activity: +android.app.Activity) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setOwnerActivity(android.app.Activity)"
          },
          "onKeyUp": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#onKeyUp(int, android.view.KeyEvent)"
          },
          "hide": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#hide()"
          },
          "unregisterForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#unregisterForContextMenu(android.view.View)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "onPreparePanel": {
            "!type": "fn(featureId: number, view: +android.view.View, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onPreparePanel(int, android.view.View, android.view.Menu)"
          },
          "setOnKeyListener": {
            "!type": "fn(onKeyListener: +android.content.DialogInterface.OnKeyListener) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setOnKeyListener(android.content.DialogInterface.OnKeyListener)"
          },
          "getActionBar": {
            "!type": "fn() -> +android.app.ActionBar",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getActionBar()"
          },
          "registerForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#registerForContextMenu(android.view.View)"
          },
          "onActionModeFinished": {
            "!type": "fn(mode: +android.view.ActionMode) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onActionModeFinished(android.view.ActionMode)"
          },
          "getButton": {
            "!type": "fn(whichButton: number) -> +android.widget.Button",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#getButton(int)"
          },
          "onContentChanged": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onContentChanged()"
          },
          "takeKeyEvents": {
            "!type": "fn(get: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#takeKeyEvents(boolean)"
          },
          "onMenuItemSelected": {
            "!type": "fn(featureId: number, item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onMenuItemSelected(int, android.view.MenuItem)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "dispatchPopulateAccessibilityEvent": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
          },
          "isShowing": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#isShowing()"
          },
          "setCancelable": {
            "!type": "fn(flag: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setCancelable(boolean)"
          },
          "openOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#openOptionsMenu()"
          },
          "setOnDismissListener": {
            "!type": "fn(listener: +android.content.DialogInterface.OnDismissListener) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setOnDismissListener(android.content.DialogInterface.OnDismissListener)"
          },
          "onBackPressed": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onBackPressed()"
          },
          "setCanceledOnTouchOutside": {
            "!type": "fn(cancel: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setCanceledOnTouchOutside(boolean)"
          },
          "onWindowAttributesChanged": {
            "!type": "fn(params: +android.view.WindowManager.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onWindowAttributesChanged(android.view.WindowManager.LayoutParams)"
          },
          "setCustomTitle": {
            "!type": "fn(customTitleView: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#setCustomTitle(android.view.View)"
          },
          "onWindowFocusChanged": {
            "!type": "fn(hasFocus: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onWindowFocusChanged(boolean)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getLayoutInflater": {
            "!type": "fn() -> +android.view.LayoutInflater",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getLayoutInflater()"
          },
          "onTimeChanged": {
            "!type": "fn(view: +android.widget.TimePicker, hourOfDay: number, minute: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/TimePickerDialog.html#onTimeChanged(android.widget.TimePicker, int, int)"
          },
          "invalidateOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#invalidateOptionsMenu()"
          },
          "onWindowStartingActionMode": {
            "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onWindowStartingActionMode(android.view.ActionMode.Callback)"
          },
          "openContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#openContextMenu(android.view.View)"
          },
          "cancel": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#cancel()"
          },
          "onMenuOpened": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onMenuOpened(int, android.view.Menu)"
          },
          "setTitle": {
            "!type": "fn(title: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#setTitle(java.lang.CharSequence)"
          },
          "onActionModeStarted": {
            "!type": "fn(mode: +android.view.ActionMode) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onActionModeStarted(android.view.ActionMode)"
          }
        }
      },
      "ActivityManagerInternal": {
        "!url": "http://developer.android.com/reference/android/app/ActivityManagerInternal.html",
        "!type": "fn()",
        "SleepToken": {
          "!url": "http://developer.android.com/reference/android/app/ActivityManagerInternal.SleepToken.html",
          "!type": "fn()",
          "prototype": {
            "release": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/ActivityManagerInternal.SleepToken.html#release()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            }
          }
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "acquireSleepToken": {
            "!type": "fn(tag: string) -> +android.app.ActivityManagerInternal.SleepToken",
            "!url": "http://developer.android.com/reference/android/app/ActivityManagerInternal.html#acquireSleepToken(java.lang.String)"
          },
          "onWakefulnessChanged": {
            "!type": "fn(wakefulness: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActivityManagerInternal.html#onWakefulnessChanged(int)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getHomeActivityForUser": {
            "!type": "fn(userId: number) -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/app/ActivityManagerInternal.html#getHomeActivityForUser(int)"
          },
          "startIsolatedProcess": {
            "!type": "fn(entryPoint: string, mainArgs: +java.newArray, processName: string, abiOverride: string, uid: number, crashHandler: +java.lang.Runnable) -> number",
            "!url": "http://developer.android.com/reference/android/app/ActivityManagerInternal.html#startIsolatedProcess(java.lang.String, java.lang.String[], java.lang.String, java.lang.String, int, java.lang.Runnable)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "InstrumentationTest": {
        "!url": "http://developer.android.com/reference/android/app/InstrumentationTest.html",
        "!type": "fn()",
        "prototype": {
          "launchActivity": {
            "!type": "fn(pkg: string, activityCls: +java.lang.Class, extras: +android.os.Bundle) -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#launchActivity(java.lang.String, java.lang.Class, android.os.Bundle)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "injectInstrumentation": {
            "!type": "fn(instrumentation: +android.app.Instrumentation) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#injectInstrumentation(android.app.Instrumentation)"
          },
          "launchActivityWithIntent": {
            "!type": "fn(pkg: string, activityCls: +java.lang.Class, intent: +android.content.Intent) -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#launchActivityWithIntent(java.lang.String, java.lang.Class, android.content.Intent)"
          },
          "runTestOnUiThread": {
            "!type": "fn(r: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#runTestOnUiThread(java.lang.Runnable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "sendKeys": {
            "!type": "fn(keysSequence: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#sendKeys(java.lang.String)"
          },
          "sendRepeatedKeys": {
            "!type": "fn(keys: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#sendRepeatedKeys(int[])"
          },
          "testSendStatus": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/InstrumentationTest.html#testSendStatus()"
          },
          "getInstrumentation": {
            "!type": "fn() -> +android.app.Instrumentation",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#getInstrumentation()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "injectInsrumentation": {
            "!type": "fn(instrumentation: +android.app.Instrumentation) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#injectInsrumentation(android.app.Instrumentation)"
          }
        }
      },
      "ApplicationErrorReport": {
        "!url": "http://developer.android.com/reference/android/app/ApplicationErrorReport.html",
        "!type": "fn()",
        "CrashInfo": {
          "!url": "http://developer.android.com/reference/android/app/ApplicationErrorReport.CrashInfo.html",
          "!type": "fn()",
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "dump": {
              "!type": "fn(pw: +android.util.Printer, prefix: string) -> void",
              "!url": "http://developer.android.com/reference/android/app/ApplicationErrorReport.CrashInfo.html#dump(android.util.Printer, java.lang.String)"
            },
            "writeToParcel": {
              "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
              "!url": "http://developer.android.com/reference/android/app/ApplicationErrorReport.CrashInfo.html#writeToParcel(android.os.Parcel, int)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "AnrInfo": {
          "!url": "http://developer.android.com/reference/android/app/ApplicationErrorReport.AnrInfo.html",
          "!type": "fn()",
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "dump": {
              "!type": "fn(pw: +android.util.Printer, prefix: string) -> void",
              "!url": "http://developer.android.com/reference/android/app/ApplicationErrorReport.AnrInfo.html#dump(android.util.Printer, java.lang.String)"
            },
            "writeToParcel": {
              "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
              "!url": "http://developer.android.com/reference/android/app/ApplicationErrorReport.AnrInfo.html#writeToParcel(android.os.Parcel, int)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "BatteryInfo": {
          "!url": "http://developer.android.com/reference/android/app/ApplicationErrorReport.BatteryInfo.html",
          "!type": "fn()",
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "dump": {
              "!type": "fn(pw: +android.util.Printer, prefix: string) -> void",
              "!url": "http://developer.android.com/reference/android/app/ApplicationErrorReport.BatteryInfo.html#dump(android.util.Printer, java.lang.String)"
            },
            "writeToParcel": {
              "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
              "!url": "http://developer.android.com/reference/android/app/ApplicationErrorReport.BatteryInfo.html#writeToParcel(android.os.Parcel, int)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "RunningServiceInfo": {
          "!url": "http://developer.android.com/reference/android/app/ApplicationErrorReport.RunningServiceInfo.html",
          "!type": "fn()",
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "dump": {
              "!type": "fn(pw: +android.util.Printer, prefix: string) -> void",
              "!url": "http://developer.android.com/reference/android/app/ApplicationErrorReport.RunningServiceInfo.html#dump(android.util.Printer, java.lang.String)"
            },
            "writeToParcel": {
              "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
              "!url": "http://developer.android.com/reference/android/app/ApplicationErrorReport.RunningServiceInfo.html#writeToParcel(android.os.Parcel, int)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "CREATOR": {
          "!type": "+android.os.Parcelable.Creator",
          "!url": "http://developer.android.com/reference/android/app/ApplicationErrorReport.html#CREATOR"
        },
        "TYPE_CRASH": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ApplicationErrorReport.html#TYPE_CRASH"
        },
        "TYPE_BATTERY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ApplicationErrorReport.html#TYPE_BATTERY"
        },
        "TYPE_ANR": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ApplicationErrorReport.html#TYPE_ANR"
        },
        "TYPE_RUNNING_SERVICE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ApplicationErrorReport.html#TYPE_RUNNING_SERVICE"
        },
        "TYPE_NONE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ApplicationErrorReport.html#TYPE_NONE"
        },
        "getErrorReportReceiver": {
          "!type": "fn(context: +android.content.Context, packageName: string, appFlags: number) -> +android.content.ComponentName",
          "!url": "http://developer.android.com/reference/android/app/ApplicationErrorReport.html#getErrorReportReceiver(android.content.Context, java.lang.String, int)"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "describeContents": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/ApplicationErrorReport.html#describeContents()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "dump": {
            "!type": "fn(pw: +android.util.Printer, prefix: string) -> void",
            "!url": "http://developer.android.com/reference/android/app/ApplicationErrorReport.html#dump(android.util.Printer, java.lang.String)"
          },
          "writeToParcel": {
            "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/ApplicationErrorReport.html#writeToParcel(android.os.Parcel, int)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "readFromParcel": {
            "!type": "fn(in: +android.os.Parcel) -> void",
            "!url": "http://developer.android.com/reference/android/app/ApplicationErrorReport.html#readFromParcel(android.os.Parcel)"
          }
        }
      },
      "WallpaperManager": {
        "!url": "http://developer.android.com/reference/android/app/WallpaperManager.html",
        "COMMAND_DROP": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/WallpaperManager.html#COMMAND_DROP"
        },
        "ACTION_CROP_AND_SET_WALLPAPER": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/WallpaperManager.html#ACTION_CROP_AND_SET_WALLPAPER"
        },
        "COMMAND_TAP": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/WallpaperManager.html#COMMAND_TAP"
        },
        "ACTION_CHANGE_LIVE_WALLPAPER": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/WallpaperManager.html#ACTION_CHANGE_LIVE_WALLPAPER"
        },
        "COMMAND_SECONDARY_TAP": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/WallpaperManager.html#COMMAND_SECONDARY_TAP"
        },
        "WALLPAPER_PREVIEW_META_DATA": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/WallpaperManager.html#WALLPAPER_PREVIEW_META_DATA"
        },
        "EXTRA_LIVE_WALLPAPER_COMPONENT": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/WallpaperManager.html#EXTRA_LIVE_WALLPAPER_COMPONENT"
        },
        "ACTION_LIVE_WALLPAPER_CHOOSER": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/WallpaperManager.html#ACTION_LIVE_WALLPAPER_CHOOSER"
        },
        "openDefaultWallpaper": {
          "!type": "fn(context: +android.content.Context) -> +java.io.InputStream",
          "!url": "http://developer.android.com/reference/android/app/WallpaperManager.html#openDefaultWallpaper(android.content.Context)"
        },
        "getInstance": {
          "!type": "fn(context: +android.content.Context) -> +android.app.WallpaperManager",
          "!url": "http://developer.android.com/reference/android/app/WallpaperManager.html#getInstance(android.content.Context)"
        },
        "getDefaultWallpaperComponent": {
          "!type": "fn(context: +android.content.Context) -> +android.content.ComponentName",
          "!url": "http://developer.android.com/reference/android/app/WallpaperManager.html#getDefaultWallpaperComponent(android.content.Context)"
        },
        "prototype": {
          "suggestDesiredDimensions": {
            "!type": "fn(minimumWidth: number, minimumHeight: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/WallpaperManager.html#suggestDesiredDimensions(int, int)"
          },
          "getWallpaperInfo": {
            "!type": "fn() -> +android.app.WallpaperInfo",
            "!url": "http://developer.android.com/reference/android/app/WallpaperManager.html#getWallpaperInfo()"
          },
          "clearWallpaper": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/WallpaperManager.html#clearWallpaper()"
          },
          "getDrawable": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/app/WallpaperManager.html#getDrawable()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getBuiltInDrawable": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/app/WallpaperManager.html#getBuiltInDrawable()"
          },
          "clearWallpaperOffsets": {
            "!type": "fn(windowToken: +android.os.IBinder) -> void",
            "!url": "http://developer.android.com/reference/android/app/WallpaperManager.html#clearWallpaperOffsets(android.os.IBinder)"
          },
          "sendWallpaperCommand": {
            "!type": "fn(windowToken: +android.os.IBinder, action: string, x: number, y: number, z: number, extras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/WallpaperManager.html#sendWallpaperCommand(android.os.IBinder, java.lang.String, int, int, int, android.os.Bundle)"
          },
          "setResource": {
            "!type": "fn(resid: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/WallpaperManager.html#setResource(int)"
          },
          "peekFastDrawable": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/app/WallpaperManager.html#peekFastDrawable()"
          },
          "getIWallpaperManager": {
            "!type": "fn() -> IWallpaperManager",
            "!url": "http://developer.android.com/reference/android/app/WallpaperManager.html#getIWallpaperManager()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "setDisplayPadding": {
            "!type": "fn(padding: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/app/WallpaperManager.html#setDisplayPadding(android.graphics.Rect)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getDesiredMinimumWidth": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/WallpaperManager.html#getDesiredMinimumWidth()"
          },
          "forgetLoadedWallpaper": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/WallpaperManager.html#forgetLoadedWallpaper()"
          },
          "getDesiredMinimumHeight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/WallpaperManager.html#getDesiredMinimumHeight()"
          },
          "setDisplayOffset": {
            "!type": "fn(windowToken: +android.os.IBinder, x: number, y: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/WallpaperManager.html#setDisplayOffset(android.os.IBinder, int, int)"
          },
          "peekDrawable": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/app/WallpaperManager.html#peekDrawable()"
          },
          "getCropAndSetWallpaperIntent": {
            "!type": "fn(imageUri: +android.net.Uri) -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/app/WallpaperManager.html#getCropAndSetWallpaperIntent(android.net.Uri)"
          },
          "clear": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/WallpaperManager.html#clear()"
          },
          "setBitmap": {
            "!type": "fn(bitmap: +android.graphics.Bitmap) -> void",
            "!url": "http://developer.android.com/reference/android/app/WallpaperManager.html#setBitmap(android.graphics.Bitmap)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getFastDrawable": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/app/WallpaperManager.html#getFastDrawable()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "setWallpaperOffsets": {
            "!type": "fn(windowToken: +android.os.IBinder, xOffset: +java.lang.Float, yOffset: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/app/WallpaperManager.html#setWallpaperOffsets(android.os.IBinder, float, float)"
          },
          "hasResourceWallpaper": {
            "!type": "fn(resid: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/WallpaperManager.html#hasResourceWallpaper(int)"
          },
          "getBitmap": {
            "!type": "fn() -> +android.graphics.Bitmap",
            "!url": "http://developer.android.com/reference/android/app/WallpaperManager.html#getBitmap()"
          },
          "isWallpaperSupported": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/WallpaperManager.html#isWallpaperSupported()"
          },
          "setStream": {
            "!type": "fn(data: +java.io.InputStream) -> void",
            "!url": "http://developer.android.com/reference/android/app/WallpaperManager.html#setStream(java.io.InputStream)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "setWallpaperOffsetSteps": {
            "!type": "fn(xStep: +java.lang.Float, yStep: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/app/WallpaperManager.html#setWallpaperOffsetSteps(float, float)"
          },
          "setWallpaperComponent": {
            "!type": "fn(name: +android.content.ComponentName) -> bool",
            "!url": "http://developer.android.com/reference/android/app/WallpaperManager.html#setWallpaperComponent(android.content.ComponentName)"
          }
        }
      },
      "ExpandableListActivity": {
        "!url": "http://developer.android.com/reference/android/app/ExpandableListActivity.html",
        "!type": "fn()",
        "BIND_WAIVE_PRIORITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_WAIVE_PRIORITY"
        },
        "RESULT_FIRST_USER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_FIRST_USER"
        },
        "DEFAULT_KEYS_SHORTCUT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SHORTCUT"
        },
        "MEDIA_PROJECTION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_PROJECTION_SERVICE"
        },
        "ETHERNET_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ETHERNET_SERVICE"
        },
        "WIFI_RTT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_RTT_SERVICE"
        },
        "SENSOR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SENSOR_SERVICE"
        },
        "TELEPHONY_SUBSCRIPTION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SUBSCRIPTION_SERVICE"
        },
        "CAPTIONING_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CAPTIONING_SERVICE"
        },
        "CAMERA_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CAMERA_SERVICE"
        },
        "BIND_DEBUG_UNBIND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_DEBUG_UNBIND"
        },
        "STATUS_BAR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#STATUS_BAR_SERVICE"
        },
        "DEVICE_POLICY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_POLICY_SERVICE"
        },
        "BIND_IMPORTANT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_IMPORTANT"
        },
        "NSD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NSD_SERVICE"
        },
        "DOWNLOAD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DOWNLOAD_SERVICE"
        },
        "BIND_NOT_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_VISIBLE"
        },
        "CONTEXT_IGNORE_SECURITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_IGNORE_SECURITY"
        },
        "USAGE_STATS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USAGE_STATS_SERVICE"
        },
        "MODE_WORLD_READABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_READABLE"
        },
        "KEYGUARD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#KEYGUARD_SERVICE"
        },
        "BIND_ADJUST_WITH_ACTIVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ADJUST_WITH_ACTIVITY"
        },
        "UI_MODE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#UI_MODE_SERVICE"
        },
        "MODE_PRIVATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_PRIVATE"
        },
        "CONTEXT_INCLUDE_CODE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_INCLUDE_CODE"
        },
        "DEFAULT_KEYS_DISABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_DISABLE"
        },
        "ACCESSIBILITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACCESSIBILITY_SERVICE"
        },
        "HDMI_CONTROL_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#HDMI_CONTROL_SERVICE"
        },
        "BIND_SHOWING_UI": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_SHOWING_UI"
        },
        "MODE_APPEND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_APPEND"
        },
        "AUDIO_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#AUDIO_SERVICE"
        },
        "NETWORK_SCORE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_SCORE_SERVICE"
        },
        "UPDATE_LOCK_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#UPDATE_LOCK_SERVICE"
        },
        "MEDIA_ROUTER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_ROUTER_SERVICE"
        },
        "JOB_SCHEDULER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#JOB_SCHEDULER_SERVICE"
        },
        "DEVICE_IDLE_CONTROLLER": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_IDLE_CONTROLLER"
        },
        "INPUT_METHOD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_METHOD_SERVICE"
        },
        "RESULT_CANCELED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_CANCELED"
        },
        "BIND_ABOVE_CLIENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ABOVE_CLIENT"
        },
        "INPUT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_SERVICE"
        },
        "MODE_WORLD_WRITEABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_WRITEABLE"
        },
        "NETWORKMANAGEMENT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORKMANAGEMENT_SERVICE"
        },
        "WINDOW_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WINDOW_SERVICE"
        },
        "MEDIA_SESSION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_SESSION_SERVICE"
        },
        "WIFI_P2P_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_P2P_SERVICE"
        },
        "DEFAULT_KEYS_SEARCH_GLOBAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SEARCH_GLOBAL"
        },
        "MODE_ENABLE_WRITE_AHEAD_LOGGING": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_ENABLE_WRITE_AHEAD_LOGGING"
        },
        "WIFI_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SERVICE"
        },
        "PERSISTENT_DATA_BLOCK_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#PERSISTENT_DATA_BLOCK_SERVICE"
        },
        "TV_INPUT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TV_INPUT_SERVICE"
        },
        "SIP_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SIP_SERVICE"
        },
        "FINGERPRINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#FINGERPRINT_SERVICE"
        },
        "LOCATION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LOCATION_SERVICE"
        },
        "LAUNCHER_APPS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LAUNCHER_APPS_SERVICE"
        },
        "NETWORK_STATS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_STATS_SERVICE"
        },
        "VOICE_INTERACTION_MANAGER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#VOICE_INTERACTION_MANAGER_SERVICE"
        },
        "TELECOM_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELECOM_SERVICE"
        },
        "SEARCH_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SEARCH_SERVICE"
        },
        "RADIO_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#RADIO_SERVICE"
        },
        "BIND_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_VISIBLE"
        },
        "BIND_NOT_FOREGROUND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_FOREGROUND"
        },
        "CONTEXT_RESTRICTED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_RESTRICTED"
        },
        "USER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USER_SERVICE"
        },
        "DROPBOX_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DROPBOX_SERVICE"
        },
        "BIND_TREAT_LIKE_ACTIVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_TREAT_LIKE_ACTIVITY"
        },
        "DEFAULT_KEYS_SEARCH_LOCAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SEARCH_LOCAL"
        },
        "BIND_FOREGROUND_SERVICE_WHILE_AWAKE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE_WHILE_AWAKE"
        },
        "CLIPBOARD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CLIPBOARD_SERVICE"
        },
        "LAYOUT_INFLATER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LAYOUT_INFLATER_SERVICE"
        },
        "WIFI_SCANNING_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SCANNING_SERVICE"
        },
        "PRINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#PRINT_SERVICE"
        },
        "WALLPAPER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WALLPAPER_SERVICE"
        },
        "ALARM_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ALARM_SERVICE"
        },
        "ACCOUNT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACCOUNT_SERVICE"
        },
        "TRUST_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TRUST_SERVICE"
        },
        "VIBRATOR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#VIBRATOR_SERVICE"
        },
        "RESULT_OK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_OK"
        },
        "NFC_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NFC_SERVICE"
        },
        "NOTIFICATION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NOTIFICATION_SERVICE"
        },
        "BLUETOOTH_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BLUETOOTH_SERVICE"
        },
        "POWER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#POWER_SERVICE"
        },
        "BIND_ALLOW_OOM_MANAGEMENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ALLOW_OOM_MANAGEMENT"
        },
        "DEFAULT_KEYS_DIALER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_DIALER"
        },
        "BACKUP_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BACKUP_SERVICE"
        },
        "COUNTRY_DETECTOR": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#COUNTRY_DETECTOR"
        },
        "SERIAL_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SERIAL_SERVICE"
        },
        "WIFI_PASSPOINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_PASSPOINT_SERVICE"
        },
        "CONSUMER_IR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONSUMER_IR_SERVICE"
        },
        "APP_OPS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#APP_OPS_SERVICE"
        },
        "ACTIVITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACTIVITY_SERVICE"
        },
        "STORAGE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#STORAGE_SERVICE"
        },
        "BIND_FOREGROUND_SERVICE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE"
        },
        "RESTRICTIONS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#RESTRICTIONS_SERVICE"
        },
        "CONNECTIVITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONNECTIVITY_SERVICE"
        },
        "TEXT_SERVICES_MANAGER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TEXT_SERVICES_MANAGER_SERVICE"
        },
        "USB_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USB_SERVICE"
        },
        "APPWIDGET_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#APPWIDGET_SERVICE"
        },
        "CONTEXT_REGISTER_PACKAGE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_REGISTER_PACKAGE"
        },
        "CARRIER_CONFIG_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CARRIER_CONFIG_SERVICE"
        },
        "NETWORK_POLICY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_POLICY_SERVICE"
        },
        "MIDI_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MIDI_SERVICE"
        },
        "BATTERY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BATTERY_SERVICE"
        },
        "MODE_MULTI_PROCESS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_MULTI_PROCESS"
        },
        "BIND_AUTO_CREATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_AUTO_CREATE"
        },
        "DISPLAY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DISPLAY_SERVICE"
        },
        "TELEPHONY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SERVICE"
        },
        "prototype": {
          "isBackgroundVisibleBehind": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isBackgroundVisibleBehind()"
          },
          "setProgressBarVisibility": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarVisibility(boolean)"
          },
          "setFeatureDrawableResource": {
            "!type": "fn(featureId: number, resId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableResource(int, int)"
          },
          "dispatchEnterAnimationComplete": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchEnterAnimationComplete()"
          },
          "finishActivityFromChild": {
            "!type": "fn(child: +android.app.Activity, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishActivityFromChild(android.app.Activity, int)"
          },
          "startPostponedEnterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startPostponedEnterTransition()"
          },
          "onProvideAssistContent": {
            "!type": "fn(outContent: +android.app.assist.AssistContent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideAssistContent(android.app.assist.AssistContent)"
          },
          "sendBroadcastMultiplePermissions": {
            "!type": "fn(intent: +android.content.Intent, receiverPermissions: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastMultiplePermissions(android.content.Intent, java.lang.String[])"
          },
          "getString": {
            "!type": "fn(resId: number) -> string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getString(int)"
          },
          "onKeyDown": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyDown(int, android.view.KeyEvent)"
          },
          "getResources": {
            "!type": "fn() -> +android.content.res.Resources",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getResources()"
          },
          "sendStickyBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcast(android.content.Intent)"
          },
          "startActivityFromFragment": {
            "!type": "fn(fragment: +android.app.Fragment, intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityFromFragment(android.app.Fragment, android.content.Intent, int)"
          },
          "onCreateThumbnail": {
            "!type": "fn(outBitmap: +android.graphics.Bitmap, canvas: +android.graphics.Canvas) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateThumbnail(android.graphics.Bitmap, android.graphics.Canvas)"
          },
          "getOpPackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getOpPackageName()"
          },
          "getCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCacheDir()"
          },
          "onWindowDismissed": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowDismissed()"
          },
          "getBaseContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBaseContext()"
          },
          "checkCallingOrSelfPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfPermission(java.lang.String)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "isVoiceInteractionRoot": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isVoiceInteractionRoot()"
          },
          "onDetachedFromWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onDetachedFromWindow()"
          },
          "setResult": {
            "!type": "fn(resultCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setResult(int)"
          },
          "onOptionsItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onOptionsItemSelected(android.view.MenuItem)"
          },
          "isChangingConfigurations": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isChangingConfigurations()"
          },
          "getCodeCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCodeCacheDir()"
          },
          "createPendingResult": {
            "!type": "fn(requestCode: number, data: +android.content.Intent, flags: number) -> +android.app.PendingIntent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#createPendingResult(int, android.content.Intent, int)"
          },
          "getPackageResourcePath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageResourcePath()"
          },
          "getCurrentFocus": {
            "!type": "fn() -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCurrentFocus()"
          },
          "triggerSearch": {
            "!type": "fn(query: string, appSearchData: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#triggerSearch(java.lang.String, android.os.Bundle)"
          },
          "convertToTranslucent": {
            "!type": "fn(callback: +android.app.Activity.TranslucentConversionListener, options: +android.app.ActivityOptions) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#convertToTranslucent(android.app.Activity.TranslucentConversionListener, android.app.ActivityOptions)"
          },
          "setListAdapter": {
            "!type": "fn(adapter: +android.widget.ExpandableListAdapter) -> void",
            "!url": "http://developer.android.com/reference/android/app/ExpandableListActivity.html#setListAdapter(android.widget.ExpandableListAdapter)"
          },
          "startActivityForResult": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityForResult(android.content.Intent, int)"
          },
          "getLayoutInflater": {
            "!type": "fn() -> +android.view.LayoutInflater",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLayoutInflater()"
          },
          "createPackageContext": {
            "!type": "fn(packageName: string, flags: number) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContext(java.lang.String, int)"
          },
          "enforcePermission": {
            "!type": "fn(permission: string, pid: number, uid: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforcePermission(java.lang.String, int, int, java.lang.String)"
          },
          "onWindowStartingActionMode": {
            "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowStartingActionMode(android.view.ActionMode.Callback)"
          },
          "registerForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#registerForContextMenu(android.view.View)"
          },
          "setSecondaryProgress": {
            "!type": "fn(secondaryProgress: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setSecondaryProgress(int)"
          },
          "onContentChanged": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/ExpandableListActivity.html#onContentChanged()"
          },
          "finishAndRemoveTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAndRemoveTask()"
          },
          "setFinishOnTouchOutside": {
            "!type": "fn(finish: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFinishOnTouchOutside(boolean)"
          },
          "requestWindowFeature": {
            "!type": "fn(featureId: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestWindowFeature(int)"
          },
          "createConfigurationContext": {
            "!type": "fn(overrideConfiguration: +android.content.res.Configuration) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createConfigurationContext(android.content.res.Configuration)"
          },
          "showDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showDialog(int)"
          },
          "onSearchRequested": {
            "!type": "fn(searchEvent: +android.view.SearchEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onSearchRequested(android.view.SearchEvent)"
          },
          "onContextItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onContextItemSelected(android.view.MenuItem)"
          },
          "onTrackballEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTrackballEvent(android.view.MotionEvent)"
          },
          "requestPermissions": {
            "!type": "fn(permissions: +java.newArray, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestPermissions(java.lang.String[], int)"
          },
          "getVoiceInteractor": {
            "!type": "fn() -> +android.app.VoiceInteractor",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getVoiceInteractor()"
          },
          "peekWallpaper": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#peekWallpaper()"
          },
          "onPrepareOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPrepareOptionsMenu(android.view.Menu)"
          },
          "onSaveInstanceState": {
            "!type": "fn(outState: +android.os.Bundle, outPersistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onSaveInstanceState(android.os.Bundle, android.os.PersistableBundle)"
          },
          "registerReceiver": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver, filter: +android.content.IntentFilter) -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter)"
          },
          "setActionBar": {
            "!type": "fn(toolbar: +android.widget.Toolbar) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setActionBar(android.widget.Toolbar)"
          },
          "getIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getIntent()"
          },
          "getObbDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDirs()"
          },
          "setSelectedChild": {
            "!type": "fn(groupPosition: number, childPosition: number, shouldExpandGroup: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/app/ExpandableListActivity.html#setSelectedChild(int, int, boolean)"
          },
          "getPackageManager": {
            "!type": "fn() -> +android.content.pm.PackageManager",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageManager()"
          },
          "getSystemServiceName": {
            "!type": "fn(serviceClass: +java.lang.Class) -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSystemServiceName(java.lang.Class)"
          },
          "obtainStyledAttributes": {
            "!type": "fn(attrs: +java.newArray) -> +android.content.res.TypedArray",
            "!url": "http://developer.android.com/reference/android/content/Context.html#obtainStyledAttributes(int[])"
          },
          "getApplicationInfo": {
            "!type": "fn() -> +android.content.pm.ApplicationInfo",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationInfo()"
          },
          "setDefaultKeyMode": {
            "!type": "fn(mode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setDefaultKeyMode(int)"
          },
          "setProgressBarIndeterminate": {
            "!type": "fn(indeterminate: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarIndeterminate(boolean)"
          },
          "isRestricted": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#isRestricted()"
          },
          "hasWindowFocus": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#hasWindowFocus()"
          },
          "onConfigurationChanged": {
            "!type": "fn(newConfig: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onConfigurationChanged(android.content.res.Configuration)"
          },
          "getExpandableListAdapter": {
            "!type": "fn() -> +android.widget.ExpandableListAdapter",
            "!url": "http://developer.android.com/reference/android/app/ExpandableListActivity.html#getExpandableListAdapter()"
          },
          "getVolumeControlStream": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getVolumeControlStream()"
          },
          "databaseList": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#databaseList()"
          },
          "setTheme": {
            "!type": "fn(resid: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#setTheme(int)"
          },
          "isChild": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isChild()"
          },
          "isResumed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isResumed()"
          },
          "setRequestedOrientation": {
            "!type": "fn(requestedOrientation: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setRequestedOrientation(int)"
          },
          "getExpandableListView": {
            "!type": "fn() -> +android.widget.ExpandableListView",
            "!url": "http://developer.android.com/reference/android/app/ExpandableListActivity.html#getExpandableListView()"
          },
          "onNewActivityOptions": {
            "!type": "fn(options: +android.app.ActivityOptions) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNewActivityOptions(android.app.ActivityOptions)"
          },
          "startActivity": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivity(android.content.Intent)"
          },
          "onGenericMotionEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onGenericMotionEvent(android.view.MotionEvent)"
          },
          "onWindowAttributesChanged": {
            "!type": "fn(params: +android.view.WindowManager.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowAttributesChanged(android.view.WindowManager.LayoutParams)"
          },
          "onPostCreate": {
            "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPostCreate(android.os.Bundle, android.os.PersistableBundle)"
          },
          "onKeyUp": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyUp(int, android.view.KeyEvent)"
          },
          "enforceCallingOrSelfUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfUriPermission(android.net.Uri, int, java.lang.String)"
          },
          "grantUriPermission": {
            "!type": "fn(toPackage: string, uri: +android.net.Uri, modeFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#grantUriPermission(java.lang.String, android.net.Uri, int)"
          },
          "startActivityAsCaller": {
            "!type": "fn(intent: +android.content.Intent, options: +android.os.Bundle, ignoreTargetSecurity: bool, userId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityAsCaller(android.content.Intent, android.os.Bundle, boolean, int)"
          },
          "onActivityReenter": {
            "!type": "fn(resultCode: number, data: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActivityReenter(int, android.content.Intent)"
          },
          "dispatchKeyShortcutEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchKeyShortcutEvent(android.view.KeyEvent)"
          },
          "onNavigateUpFromChild": {
            "!type": "fn(child: +android.app.Activity) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNavigateUpFromChild(android.app.Activity)"
          },
          "onEnterAnimationComplete": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onEnterAnimationComplete()"
          },
          "setContentView": {
            "!type": "fn(layoutResID: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setContentView(int)"
          },
          "getPackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageName()"
          },
          "getActionBar": {
            "!type": "fn() -> +android.app.ActionBar",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getActionBar()"
          },
          "isDestroyed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isDestroyed()"
          },
          "sendBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "getSelectedPosition": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/app/ExpandableListActivity.html#getSelectedPosition()"
          },
          "runOnUiThread": {
            "!type": "fn(action: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#runOnUiThread(java.lang.Runnable)"
          },
          "stopLockTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#stopLockTask()"
          },
          "createApplicationContext": {
            "!type": "fn(application: +android.content.pm.ApplicationInfo, flags: number) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createApplicationContext(android.content.pm.ApplicationInfo, int)"
          },
          "finishAffinity": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAffinity()"
          },
          "openContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#openContextMenu(android.view.View)"
          },
          "setTaskDescription": {
            "!type": "fn(taskDescription: +android.app.ActivityManager.TaskDescription) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setTaskDescription(android.app.ActivityManager.TaskDescription)"
          },
          "setTitleColor": {
            "!type": "fn(textColor: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setTitleColor(int)"
          },
          "showAssist": {
            "!type": "fn(args: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showAssist(android.os.Bundle)"
          },
          "onVisibleBehindCanceled": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onVisibleBehindCanceled()"
          },
          "finishAfterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAfterTransition()"
          },
          "startServiceAsUser": {
            "!type": "fn(service: +android.content.Intent, user: +android.os.UserHandle) -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startServiceAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "onNavigateUp": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNavigateUp()"
          },
          "getActivityToken": {
            "!type": "fn() -> +android.os.IBinder",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getActivityToken()"
          },
          "onAttachFragment": {
            "!type": "fn(fragment: +android.app.Fragment) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onAttachFragment(android.app.Fragment)"
          },
          "getApplication": {
            "!type": "fn() -> +android.app.Application",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getApplication()"
          },
          "applyOverrideConfiguration": {
            "!type": "fn(overrideConfiguration: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#applyOverrideConfiguration(android.content.res.Configuration)"
          },
          "fileList": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#fileList()"
          },
          "getTaskId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTaskId()"
          },
          "openOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#openOptionsMenu()"
          },
          "onBackgroundVisibleBehindChanged": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onBackgroundVisibleBehindChanged(boolean)"
          },
          "startNextMatchingActivity": {
            "!type": "fn(intent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startNextMatchingActivity(android.content.Intent)"
          },
          "onPrepareNavigateUpTaskStack": {
            "!type": "fn(builder: +android.app.TaskStackBuilder) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPrepareNavigateUpTaskStack(android.app.TaskStackBuilder)"
          },
          "onActionModeFinished": {
            "!type": "fn(mode: +android.view.ActionMode) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActionModeFinished(android.view.ActionMode)"
          },
          "getLocalClassName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLocalClassName()"
          },
          "managedQuery": {
            "!type": "fn(uri: +android.net.Uri, projection: +java.newArray, selection: string, sortOrder: string) -> +android.database.Cursor",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#managedQuery(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String)"
          },
          "checkPermission": {
            "!type": "fn(permission: string, pid: number, uid: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkPermission(java.lang.String, int, int)"
          },
          "getWallpaperDesiredMinimumHeight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumHeight()"
          },
          "startManagingCursor": {
            "!type": "fn(c: +android.database.Cursor) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startManagingCursor(android.database.Cursor)"
          },
          "revokeUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#revokeUriPermission(android.net.Uri, int)"
          },
          "onRequestPermissionsResult": {
            "!type": "fn(requestCode: number, permissions: +java.newArray, grantResults: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRequestPermissionsResult(int, java.lang.String[], int[])"
          },
          "startActivityIfNeeded": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityIfNeeded(android.content.Intent, int)"
          },
          "moveTaskToBack": {
            "!type": "fn(nonRoot: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#moveTaskToBack(boolean)"
          },
          "unregisterForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#unregisterForContextMenu(android.view.View)"
          },
          "setPersistent": {
            "!type": "fn(isPersistent: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setPersistent(boolean)"
          },
          "onUserInteraction": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onUserInteraction()"
          },
          "setFeatureDrawableUri": {
            "!type": "fn(featureId: number, uri: +android.net.Uri) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableUri(int, android.net.Uri)"
          },
          "onStateNotSaved": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onStateNotSaved()"
          },
          "sendStickyOrderedBroadcast": {
            "!type": "fn(intent: +android.content.Intent, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcast(android.content.Intent, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "sendStickyOrderedBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "setContentTransitionManager": {
            "!type": "fn(tm: +android.transition.TransitionManager) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setContentTransitionManager(android.transition.TransitionManager)"
          },
          "getLoaderManager": {
            "!type": "fn() -> +android.app.LoaderManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLoaderManager()"
          },
          "onRetainNonConfigurationInstance": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRetainNonConfigurationInstance()"
          },
          "getExternalFilesDir": {
            "!type": "fn(type: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDir(java.lang.String)"
          },
          "bindService": {
            "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindService(android.content.Intent, android.content.ServiceConnection, int)"
          },
          "startActivitiesAsUser": {
            "!type": "fn(intents: +java.newArray, options: +android.os.Bundle, userHandle: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivitiesAsUser(android.content.Intent[], android.os.Bundle, android.os.UserHandle)"
          },
          "onRestoreInstanceState": {
            "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRestoreInstanceState(android.os.Bundle, android.os.PersistableBundle)"
          },
          "recreate": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#recreate()"
          },
          "getDatabasePath": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDatabasePath(java.lang.String)"
          },
          "setEnterSharedElementCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setEnterSharedElementCallback(android.app.SharedElementCallback)"
          },
          "onCreateContextMenu": {
            "!type": "fn(menu: +android.view.ContextMenu, v: +android.view.View, menuInfo: +android.view.ContextMenu.ContextMenuInfo) -> void",
            "!url": "http://developer.android.com/reference/android/app/ExpandableListActivity.html#onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenu.ContextMenuInfo)"
          },
          "onProvideAssistData": {
            "!type": "fn(data: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideAssistData(android.os.Bundle)"
          },
          "checkSelfPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkSelfPermission(java.lang.String)"
          },
          "onPanelClosed": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPanelClosed(int, android.view.Menu)"
          },
          "onCreate": {
            "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreate(android.os.Bundle, android.os.PersistableBundle)"
          },
          "enforceCallingOrSelfPermission": {
            "!type": "fn(permission: string, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfPermission(java.lang.String, java.lang.String)"
          },
          "onTouchEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTouchEvent(android.view.MotionEvent)"
          },
          "getTheme": {
            "!type": "fn() -> +android.content.res.Resources.Theme",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getTheme()"
          },
          "onKeyLongPress": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyLongPress(int, android.view.KeyEvent)"
          },
          "setMediaController": {
            "!type": "fn(controller: +android.media.session.MediaController) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setMediaController(android.media.session.MediaController)"
          },
          "getChangingConfigurations": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getChangingConfigurations()"
          },
          "finishActivity": {
            "!type": "fn(requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishActivity(int)"
          },
          "onCreatePanelView": {
            "!type": "fn(featureId: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreatePanelView(int)"
          },
          "getSearchEvent": {
            "!type": "fn() -> +android.view.SearchEvent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getSearchEvent()"
          },
          "setVisible": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setVisible(boolean)"
          },
          "startIntentSender": {
            "!type": "fn(intent: +android.content.IntentSender, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSender(android.content.IntentSender, android.content.Intent, int, int, int)"
          },
          "getExternalFilesDirs": {
            "!type": "fn(type: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDirs(java.lang.String)"
          },
          "stopServiceAsUser": {
            "!type": "fn(name: +android.content.Intent, user: +android.os.UserHandle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopServiceAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "unbindService": {
            "!type": "fn(conn: +android.content.ServiceConnection) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unbindService(android.content.ServiceConnection)"
          },
          "startActivityAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "onKeyShortcut": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyShortcut(int, android.view.KeyEvent)"
          },
          "getSharedPrefsFile": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPrefsFile(java.lang.String)"
          },
          "getDir": {
            "!type": "fn(name: string, mode: number) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDir(java.lang.String, int)"
          },
          "releaseInstance": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#releaseInstance()"
          },
          "onKeyMultiple": {
            "!type": "fn(keyCode: number, repeatCount: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyMultiple(int, int, android.view.KeyEvent)"
          },
          "onPreparePanel": {
            "!type": "fn(featureId: number, view: +android.view.View, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPreparePanel(int, android.view.View, android.view.Menu)"
          },
          "bindServiceAsUser": {
            "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number, user: +android.os.UserHandle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindServiceAsUser(android.content.Intent, android.content.ServiceConnection, int, android.os.UserHandle)"
          },
          "closeContextMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#closeContextMenu()"
          },
          "startSearch": {
            "!type": "fn(initialQuery: string, selectInitialQuery: bool, appSearchData: +android.os.Bundle, globalSearch: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startSearch(java.lang.String, boolean, android.os.Bundle, boolean)"
          },
          "getComponentName": {
            "!type": "fn() -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getComponentName()"
          },
          "showLockTaskEscapeMessage": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showLockTaskEscapeMessage()"
          },
          "getContentTransitionManager": {
            "!type": "fn() -> +android.transition.TransitionManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getContentTransitionManager()"
          },
          "onBackPressed": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onBackPressed()"
          },
          "getExternalCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDir()"
          },
          "getDrawable": {
            "!type": "fn(id: number) -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getDrawable(int)"
          },
          "setImmersive": {
            "!type": "fn(i: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setImmersive(boolean)"
          },
          "openFileOutput": {
            "!type": "fn(name: string, mode: number) -> +java.io.FileOutputStream",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileOutput(java.lang.String, int)"
          },
          "getAssets": {
            "!type": "fn() -> +android.content.res.AssetManager",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getAssets()"
          },
          "onLowMemory": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onLowMemory()"
          },
          "getParentActivityIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getParentActivityIntent()"
          },
          "onChildClick": {
            "!type": "fn(parent: +android.widget.ExpandableListView, v: +android.view.View, groupPosition: number, childPosition: number, id: +java.lang.Long) -> bool",
            "!url": "http://developer.android.com/reference/android/app/ExpandableListActivity.html#onChildClick(android.widget.ExpandableListView, android.view.View, int, int, long)"
          },
          "convertFromTranslucent": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#convertFromTranslucent()"
          },
          "dispatchTouchEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchTouchEvent(android.view.MotionEvent)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getContentScene": {
            "!type": "fn() -> +android.transition.Scene",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getContentScene()"
          },
          "getCallingPackage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCallingPackage()"
          },
          "deleteDatabase": {
            "!type": "fn(name: string) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteDatabase(java.lang.String)"
          },
          "setSelectedGroup": {
            "!type": "fn(groupPosition: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/ExpandableListActivity.html#setSelectedGroup(int)"
          },
          "checkCallingPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingPermission(java.lang.String)"
          },
          "dispatchGenericMotionEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchGenericMotionEvent(android.view.MotionEvent)"
          },
          "getExternalMediaDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalMediaDirs()"
          },
          "getCallingActivity": {
            "!type": "fn() -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCallingActivity()"
          },
          "onAttachedToWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onAttachedToWindow()"
          },
          "clearWallpaper": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#clearWallpaper()"
          },
          "setTitle": {
            "!type": "fn(title: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setTitle(java.lang.CharSequence)"
          },
          "enforceCallingUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingUriPermission(android.net.Uri, int, java.lang.String)"
          },
          "getThemeResId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getThemeResId()"
          },
          "onWindowFocusChanged": {
            "!type": "fn(hasFocus: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowFocusChanged(boolean)"
          },
          "registerComponentCallbacks": {
            "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
            "!url": "http://developer.android.com/reference/android/content/Context.html#registerComponentCallbacks(android.content.ComponentCallbacks)"
          },
          "getText": {
            "!type": "fn(resId: number) -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getText(int)"
          },
          "enforceUriPermission": {
            "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceUriPermission(android.net.Uri, int, int, int, java.lang.String)"
          },
          "onProvideReferrer": {
            "!type": "fn() -> +android.net.Uri",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideReferrer()"
          },
          "onGroupExpand": {
            "!type": "fn(groupPosition: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/ExpandableListActivity.html#onGroupExpand(int)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "unregisterComponentCallbacks": {
            "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
            "!url": "http://developer.android.com/reference/android/content/Context.html#unregisterComponentCallbacks(android.content.ComponentCallbacks)"
          },
          "finish": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finish()"
          },
          "getWallpaperDesiredMinimumWidth": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumWidth()"
          },
          "onMenuItemSelected": {
            "!type": "fn(featureId: number, item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onMenuItemSelected(int, android.view.MenuItem)"
          },
          "getWallpaper": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaper()"
          },
          "isVoiceInteraction": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isVoiceInteraction()"
          },
          "navigateUpTo": {
            "!type": "fn(upIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#navigateUpTo(android.content.Intent)"
          },
          "onCreatePanelMenu": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreatePanelMenu(int, android.view.Menu)"
          },
          "openOrCreateDatabase": {
            "!type": "fn(name: string, mode: number, factory: +android.database.sqlite.SQLiteDatabase.CursorFactory) -> +android.database.sqlite.SQLiteDatabase",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openOrCreateDatabase(java.lang.String, int, android.database.sqlite.SQLiteDatabase.CursorFactory)"
          },
          "openFileInput": {
            "!type": "fn(name: string) -> +java.io.FileInputStream",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileInput(java.lang.String)"
          },
          "dump": {
            "!type": "fn(prefix: string, fd: +java.io.FileDescriptor, writer: +java.io.PrintWriter, args: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])"
          },
          "onCreateDescription": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateDescription()"
          },
          "invalidateOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#invalidateOptionsMenu()"
          },
          "sendOrderedBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, receiverPermission: string, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, java.lang.String, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "canStartActivityForResult": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#canStartActivityForResult()"
          },
          "setProgress": {
            "!type": "fn(progress: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgress(int)"
          },
          "navigateUpToFromChild": {
            "!type": "fn(child: +android.app.Activity, upIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#navigateUpToFromChild(android.app.Activity, android.content.Intent)"
          },
          "getContentResolver": {
            "!type": "fn() -> +android.content.ContentResolver",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getContentResolver()"
          },
          "isFinishing": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isFinishing()"
          },
          "getFragmentManager": {
            "!type": "fn() -> +android.app.FragmentManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getFragmentManager()"
          },
          "getParent": {
            "!type": "fn() -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getParent()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "checkCallingUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingUriPermission(android.net.Uri, int)"
          },
          "setExitSharedElementCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setExitSharedElementCallback(android.app.SharedElementCallback)"
          },
          "checkUriPermission": {
            "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkUriPermission(android.net.Uri, int, int, int)"
          },
          "setFeatureDrawableAlpha": {
            "!type": "fn(featureId: number, alpha: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableAlpha(int, int)"
          },
          "registerReceiverAsUser": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver, user: +android.os.UserHandle, filter: +android.content.IntentFilter, broadcastPermission: string, scheduler: +android.os.Handler) -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiverAsUser(android.content.BroadcastReceiver, android.os.UserHandle, android.content.IntentFilter, java.lang.String, android.os.Handler)"
          },
          "getPackageCodePath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageCodePath()"
          },
          "getWindow": {
            "!type": "fn() -> +android.view.Window",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getWindow()"
          },
          "startIntentSenderFromChild": {
            "!type": "fn(child: +android.app.Activity, intent: +android.content.IntentSender, requestCode: number, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSenderFromChild(android.app.Activity, android.content.IntentSender, int, android.content.Intent, int, int, int)"
          },
          "postponeEnterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#postponeEnterTransition()"
          },
          "shouldUpRecreateTask": {
            "!type": "fn(targetIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#shouldUpRecreateTask(android.content.Intent)"
          },
          "removeStickyBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "deleteFile": {
            "!type": "fn(name: string) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteFile(java.lang.String)"
          },
          "onContextMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onContextMenuClosed(android.view.Menu)"
          },
          "getSelectedId": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/app/ExpandableListActivity.html#getSelectedId()"
          },
          "onCreateOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateOptionsMenu(android.view.Menu)"
          },
          "getClassLoader": {
            "!type": "fn() -> +java.lang.ClassLoader",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getClassLoader()"
          },
          "dispatchPopulateAccessibilityEvent": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
          },
          "setIntent": {
            "!type": "fn(newIntent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setIntent(android.content.Intent)"
          },
          "setVolumeControlStream": {
            "!type": "fn(streamType: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setVolumeControlStream(int)"
          },
          "getObbDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDir()"
          },
          "startInstrumentation": {
            "!type": "fn(className: +android.content.ComponentName, profileFile: string, arguments: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startInstrumentation(android.content.ComponentName, java.lang.String, android.os.Bundle)"
          },
          "reportFullyDrawn": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#reportFullyDrawn()"
          },
          "setProgressBarIndeterminateVisibility": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarIndeterminateVisibility(boolean)"
          },
          "finishFromChild": {
            "!type": "fn(child: +android.app.Activity) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishFromChild(android.app.Activity)"
          },
          "getColorStateList": {
            "!type": "fn(id: number) -> +android.content.res.ColorStateList",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getColorStateList(int)"
          },
          "getTitleColor": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTitleColor()"
          },
          "getMediaController": {
            "!type": "fn() -> +android.media.session.MediaController",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getMediaController()"
          },
          "sendBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcast(android.content.Intent)"
          },
          "overridePendingTransition": {
            "!type": "fn(enterAnim: number, exitAnim: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#overridePendingTransition(int, int)"
          },
          "dispatchTrackballEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchTrackballEvent(android.view.MotionEvent)"
          },
          "getNoBackupFilesDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getNoBackupFilesDir()"
          },
          "startActionMode": {
            "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActionMode(android.view.ActionMode.Callback)"
          },
          "getApplicationContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationContext()"
          },
          "onCreateNavigateUpTaskStack": {
            "!type": "fn(builder: +android.app.TaskStackBuilder) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateNavigateUpTaskStack(android.app.TaskStackBuilder)"
          },
          "createDisplayContext": {
            "!type": "fn(display: +android.view.Display) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createDisplayContext(android.view.Display)"
          },
          "onActionModeStarted": {
            "!type": "fn(mode: +android.view.ActionMode) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActionModeStarted(android.view.ActionMode)"
          },
          "dispatchKeyEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchKeyEvent(android.view.KeyEvent)"
          },
          "enforceCallingPermission": {
            "!type": "fn(permission: string, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingPermission(java.lang.String, java.lang.String)"
          },
          "createPackageContextAsUser": {
            "!type": "fn(packageName: string, flags: number, user: +android.os.UserHandle) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContextAsUser(java.lang.String, int, android.os.UserHandle)"
          },
          "setFeatureDrawable": {
            "!type": "fn(featureId: number, drawable: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawable(int, android.graphics.drawable.Drawable)"
          },
          "dismissDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dismissDialog(int)"
          },
          "onMenuOpened": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onMenuOpened(int, android.view.Menu)"
          },
          "getSystemService": {
            "!type": "fn(name: string) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getSystemService(java.lang.String)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "startActivities": {
            "!type": "fn(intents: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivities(android.content.Intent[])"
          },
          "startService": {
            "!type": "fn(service: +android.content.Intent) -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startService(android.content.Intent)"
          },
          "getFileStreamPath": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFileStreamPath(java.lang.String)"
          },
          "addContentView": {
            "!type": "fn(view: +android.view.View, params: +android.view.ViewGroup.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#addContentView(android.view.View, android.view.ViewGroup.LayoutParams)"
          },
          "closeOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#closeOptionsMenu()"
          },
          "sendStickyBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "takeKeyEvents": {
            "!type": "fn(get: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#takeKeyEvents(boolean)"
          },
          "getTitle": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTitle()"
          },
          "getWindowManager": {
            "!type": "fn() -> +android.view.WindowManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getWindowManager()"
          },
          "checkCallingOrSelfUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfUriPermission(android.net.Uri, int)"
          },
          "getBasePackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBasePackageName()"
          },
          "stopManagingCursor": {
            "!type": "fn(c: +android.database.Cursor) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#stopManagingCursor(android.database.Cursor)"
          },
          "setWallpaper": {
            "!type": "fn(bitmap: +android.graphics.Bitmap) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#setWallpaper(android.graphics.Bitmap)"
          },
          "sendOrderedBroadcast": {
            "!type": "fn(intent: +android.content.Intent, receiverPermission: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcast(android.content.Intent, java.lang.String)"
          },
          "unregisterReceiver": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unregisterReceiver(android.content.BroadcastReceiver)"
          },
          "getColor": {
            "!type": "fn(id: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getColor(int)"
          },
          "getMenuInflater": {
            "!type": "fn() -> +android.view.MenuInflater",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getMenuInflater()"
          },
          "stopService": {
            "!type": "fn(name: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopService(android.content.Intent)"
          },
          "getMainLooper": {
            "!type": "fn() -> +android.os.Looper",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getMainLooper()"
          },
          "startActivityFromChild": {
            "!type": "fn(child: +android.app.Activity, intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityFromChild(android.app.Activity, android.content.Intent, int)"
          },
          "startLockTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startLockTask()"
          },
          "removeStickyBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcast(android.content.Intent)"
          },
          "getExternalCacheDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDirs()"
          },
          "getReferrer": {
            "!type": "fn() -> +android.net.Uri",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getReferrer()"
          },
          "isImmersive": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isImmersive()"
          },
          "shouldShowRequestPermissionRationale": {
            "!type": "fn(permission: string) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#shouldShowRequestPermissionRationale(java.lang.String)"
          },
          "getPreferences": {
            "!type": "fn(mode: number) -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getPreferences(int)"
          },
          "getFilesDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFilesDir()"
          },
          "findViewById": {
            "!type": "fn(id: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#findViewById(int)"
          },
          "getSharedPreferences": {
            "!type": "fn(name: string, mode: number) -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPreferences(java.lang.String, int)"
          },
          "isTaskRoot": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isTaskRoot()"
          },
          "getLastNonConfigurationInstance": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLastNonConfigurationInstance()"
          },
          "getDisplayAdjustments": {
            "!type": "fn(displayId: number) -> +android.view.DisplayAdjustments",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDisplayAdjustments(int)"
          },
          "getRequestedOrientation": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getRequestedOrientation()"
          },
          "onTrimMemory": {
            "!type": "fn(level: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTrimMemory(int)"
          },
          "removeDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#removeDialog(int)"
          },
          "getUserId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getUserId()"
          },
          "requestVisibleBehind": {
            "!type": "fn(visible: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestVisibleBehind(boolean)"
          },
          "onOptionsMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onOptionsMenuClosed(android.view.Menu)"
          },
          "onCreateView": {
            "!type": "fn(name: string, context: +android.content.Context, attrs: +android.util.AttributeSet) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateView(java.lang.String, android.content.Context, android.util.AttributeSet)"
          },
          "onGroupCollapse": {
            "!type": "fn(groupPosition: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/ExpandableListActivity.html#onGroupCollapse(int)"
          },
          "startActivityForResultAsUser": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityForResultAsUser(android.content.Intent, int, android.os.UserHandle)"
          },
          "startIntentSenderForResult": {
            "!type": "fn(intent: +android.content.IntentSender, requestCode: number, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSenderForResult(android.content.IntentSender, int, android.content.Intent, int, int, int)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          }
        }
      },
      "FragmentManager": {
        "!url": "http://developer.android.com/reference/android/app/FragmentManager.html",
        "!type": "fn()",
        "POP_BACK_STACK_INCLUSIVE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/FragmentManager.html#POP_BACK_STACK_INCLUSIVE"
        },
        "enableDebugLogging": {
          "!type": "fn(enabled: bool) -> void",
          "!url": "http://developer.android.com/reference/android/app/FragmentManager.html#enableDebugLogging(boolean)"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "putFragment": {
            "!type": "fn(bundle: +android.os.Bundle, key: string, fragment: +android.app.Fragment) -> void",
            "!url": "http://developer.android.com/reference/android/app/FragmentManager.html#putFragment(android.os.Bundle, java.lang.String, android.app.Fragment)"
          },
          "saveFragmentInstanceState": {
            "!type": "fn(f: +android.app.Fragment) -> +android.app.Fragment.SavedState",
            "!url": "http://developer.android.com/reference/android/app/FragmentManager.html#saveFragmentInstanceState(android.app.Fragment)"
          },
          "isDestroyed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/FragmentManager.html#isDestroyed()"
          },
          "popBackStackImmediate": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/FragmentManager.html#popBackStackImmediate()"
          },
          "popBackStack": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/FragmentManager.html#popBackStack()"
          },
          "executePendingTransactions": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/FragmentManager.html#executePendingTransactions()"
          },
          "addOnBackStackChangedListener": {
            "!type": "fn(listener: +android.app.FragmentManager.OnBackStackChangedListener) -> void",
            "!url": "http://developer.android.com/reference/android/app/FragmentManager.html#addOnBackStackChangedListener(android.app.FragmentManager.OnBackStackChangedListener)"
          },
          "getBackStackEntryAt": {
            "!type": "fn(index: number) -> +android.app.FragmentManager.BackStackEntry",
            "!url": "http://developer.android.com/reference/android/app/FragmentManager.html#getBackStackEntryAt(int)"
          },
          "dump": {
            "!type": "fn(prefix: string, fd: +java.io.FileDescriptor, writer: +java.io.PrintWriter, args: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/FragmentManager.html#dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])"
          },
          "openTransaction": {
            "!type": "fn() -> +android.app.FragmentTransaction",
            "!url": "http://developer.android.com/reference/android/app/FragmentManager.html#openTransaction()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "findFragmentByTag": {
            "!type": "fn(tag: string) -> +android.app.Fragment",
            "!url": "http://developer.android.com/reference/android/app/FragmentManager.html#findFragmentByTag(java.lang.String)"
          },
          "removeOnBackStackChangedListener": {
            "!type": "fn(listener: +android.app.FragmentManager.OnBackStackChangedListener) -> void",
            "!url": "http://developer.android.com/reference/android/app/FragmentManager.html#removeOnBackStackChangedListener(android.app.FragmentManager.OnBackStackChangedListener)"
          },
          "invalidateOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/FragmentManager.html#invalidateOptionsMenu()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "beginTransaction": {
            "!type": "fn() -> +android.app.FragmentTransaction",
            "!url": "http://developer.android.com/reference/android/app/FragmentManager.html#beginTransaction()"
          },
          "getBackStackEntryCount": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/FragmentManager.html#getBackStackEntryCount()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "findFragmentById": {
            "!type": "fn(id: number) -> +android.app.Fragment",
            "!url": "http://developer.android.com/reference/android/app/FragmentManager.html#findFragmentById(int)"
          },
          "getFragment": {
            "!type": "fn(bundle: +android.os.Bundle, key: string) -> +android.app.Fragment",
            "!url": "http://developer.android.com/reference/android/app/FragmentManager.html#getFragment(android.os.Bundle, java.lang.String)"
          }
        }
      },
      "FragmentTransaction": {
        "!url": "http://developer.android.com/reference/android/app/FragmentTransaction.html",
        "!type": "fn()",
        "TRANSIT_EXIT_MASK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/FragmentTransaction.html#TRANSIT_EXIT_MASK"
        },
        "TRANSIT_FRAGMENT_OPEN": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/FragmentTransaction.html#TRANSIT_FRAGMENT_OPEN"
        },
        "TRANSIT_NONE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/FragmentTransaction.html#TRANSIT_NONE"
        },
        "TRANSIT_ENTER_MASK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/FragmentTransaction.html#TRANSIT_ENTER_MASK"
        },
        "TRANSIT_FRAGMENT_FADE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/FragmentTransaction.html#TRANSIT_FRAGMENT_FADE"
        },
        "TRANSIT_UNSET": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/FragmentTransaction.html#TRANSIT_UNSET"
        },
        "TRANSIT_FRAGMENT_CLOSE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/FragmentTransaction.html#TRANSIT_FRAGMENT_CLOSE"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "setTransition": {
            "!type": "fn(transit: number) -> +android.app.FragmentTransaction",
            "!url": "http://developer.android.com/reference/android/app/FragmentTransaction.html#setTransition(int)"
          },
          "commitAllowingStateLoss": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/FragmentTransaction.html#commitAllowingStateLoss()"
          },
          "isAddToBackStackAllowed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/FragmentTransaction.html#isAddToBackStackAllowed()"
          },
          "addSharedElement": {
            "!type": "fn(sharedElement: +android.view.View, name: string) -> +android.app.FragmentTransaction",
            "!url": "http://developer.android.com/reference/android/app/FragmentTransaction.html#addSharedElement(android.view.View, java.lang.String)"
          },
          "setBreadCrumbShortTitle": {
            "!type": "fn(res: number) -> +android.app.FragmentTransaction",
            "!url": "http://developer.android.com/reference/android/app/FragmentTransaction.html#setBreadCrumbShortTitle(int)"
          },
          "commit": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/FragmentTransaction.html#commit()"
          },
          "addToBackStack": {
            "!type": "fn(name: string) -> +android.app.FragmentTransaction",
            "!url": "http://developer.android.com/reference/android/app/FragmentTransaction.html#addToBackStack(java.lang.String)"
          },
          "setTransitionStyle": {
            "!type": "fn(styleRes: number) -> +android.app.FragmentTransaction",
            "!url": "http://developer.android.com/reference/android/app/FragmentTransaction.html#setTransitionStyle(int)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "hide": {
            "!type": "fn(fragment: +android.app.Fragment) -> +android.app.FragmentTransaction",
            "!url": "http://developer.android.com/reference/android/app/FragmentTransaction.html#hide(android.app.Fragment)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "isEmpty": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/FragmentTransaction.html#isEmpty()"
          },
          "add": {
            "!type": "fn(fragment: +android.app.Fragment, tag: string) -> +android.app.FragmentTransaction",
            "!url": "http://developer.android.com/reference/android/app/FragmentTransaction.html#add(android.app.Fragment, java.lang.String)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "disallowAddToBackStack": {
            "!type": "fn() -> +android.app.FragmentTransaction",
            "!url": "http://developer.android.com/reference/android/app/FragmentTransaction.html#disallowAddToBackStack()"
          },
          "attach": {
            "!type": "fn(fragment: +android.app.Fragment) -> +android.app.FragmentTransaction",
            "!url": "http://developer.android.com/reference/android/app/FragmentTransaction.html#attach(android.app.Fragment)"
          },
          "replace": {
            "!type": "fn(containerViewId: number, fragment: +android.app.Fragment) -> +android.app.FragmentTransaction",
            "!url": "http://developer.android.com/reference/android/app/FragmentTransaction.html#replace(int, android.app.Fragment)"
          },
          "show": {
            "!type": "fn(fragment: +android.app.Fragment) -> +android.app.FragmentTransaction",
            "!url": "http://developer.android.com/reference/android/app/FragmentTransaction.html#show(android.app.Fragment)"
          },
          "setCustomAnimations": {
            "!type": "fn(enter: number, exit: number) -> +android.app.FragmentTransaction",
            "!url": "http://developer.android.com/reference/android/app/FragmentTransaction.html#setCustomAnimations(int, int)"
          },
          "detach": {
            "!type": "fn(fragment: +android.app.Fragment) -> +android.app.FragmentTransaction",
            "!url": "http://developer.android.com/reference/android/app/FragmentTransaction.html#detach(android.app.Fragment)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "setBreadCrumbTitle": {
            "!type": "fn(res: number) -> +android.app.FragmentTransaction",
            "!url": "http://developer.android.com/reference/android/app/FragmentTransaction.html#setBreadCrumbTitle(int)"
          },
          "remove": {
            "!type": "fn(fragment: +android.app.Fragment) -> +android.app.FragmentTransaction",
            "!url": "http://developer.android.com/reference/android/app/FragmentTransaction.html#remove(android.app.Fragment)"
          }
        }
      },
      "UiAutomationConnection": {
        "!url": "http://developer.android.com/reference/android/app/UiAutomationConnection.html",
        "!type": "fn()",
        "prototype": {
          "connect": {
            "!type": "fn(client: IAccessibilityServiceClient) -> void",
            "!url": "http://developer.android.com/reference/android/app/UiAutomationConnection.html#connect(IAccessibilityServiceClient)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "executeShellCommand": {
            "!type": "fn(command: string, sink: +android.os.ParcelFileDescriptor) -> void",
            "!url": "http://developer.android.com/reference/android/app/UiAutomationConnection.html#executeShellCommand(java.lang.String, android.os.ParcelFileDescriptor)"
          },
          "injectInputEvent": {
            "!type": "fn(event: +android.view.InputEvent, sync: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/app/UiAutomationConnection.html#injectInputEvent(android.view.InputEvent, boolean)"
          },
          "takeScreenshot": {
            "!type": "fn(width: number, height: number) -> +android.graphics.Bitmap",
            "!url": "http://developer.android.com/reference/android/app/UiAutomationConnection.html#takeScreenshot(int, int)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getWindowContentFrameStats": {
            "!type": "fn(windowId: number) -> +android.view.WindowContentFrameStats",
            "!url": "http://developer.android.com/reference/android/app/UiAutomationConnection.html#getWindowContentFrameStats(int)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "shutdown": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/UiAutomationConnection.html#shutdown()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "clearWindowAnimationFrameStats": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/UiAutomationConnection.html#clearWindowAnimationFrameStats()"
          },
          "clearWindowContentFrameStats": {
            "!type": "fn(windowId: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/UiAutomationConnection.html#clearWindowContentFrameStats(int)"
          },
          "setRotation": {
            "!type": "fn(rotation: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/UiAutomationConnection.html#setRotation(int)"
          },
          "disconnect": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/UiAutomationConnection.html#disconnect()"
          },
          "getWindowAnimationFrameStats": {
            "!type": "fn() -> +android.view.WindowAnimationFrameStats",
            "!url": "http://developer.android.com/reference/android/app/UiAutomationConnection.html#getWindowAnimationFrameStats()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "DialogFragment": {
        "!url": "http://developer.android.com/reference/android/app/DialogFragment.html",
        "!type": "fn()",
        "STYLE_NO_FRAME": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/DialogFragment.html#STYLE_NO_FRAME"
        },
        "STYLE_NO_TITLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/DialogFragment.html#STYLE_NO_TITLE"
        },
        "STYLE_NO_INPUT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/DialogFragment.html#STYLE_NO_INPUT"
        },
        "STYLE_NORMAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/DialogFragment.html#STYLE_NORMAL"
        },
        "instantiate": {
          "!type": "fn(context: +android.content.Context, fname: string) -> +android.app.Fragment",
          "!url": "http://developer.android.com/reference/android/app/Fragment.html#instantiate(android.content.Context, java.lang.String)"
        },
        "prototype": {
          "getReturnTransition": {
            "!type": "fn() -> +android.transition.Transition",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getReturnTransition()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#hashCode()"
          },
          "isResumed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#isResumed()"
          },
          "setSharedElementReturnTransition": {
            "!type": "fn(transition: +android.transition.Transition) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setSharedElementReturnTransition(android.transition.Transition)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "onCreateOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu, inflater: +android.view.MenuInflater) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onCreateOptionsMenu(android.view.Menu, android.view.MenuInflater)"
          },
          "onResume": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onResume()"
          },
          "getReenterTransition": {
            "!type": "fn() -> +android.transition.Transition",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getReenterTransition()"
          },
          "getString": {
            "!type": "fn(resId: number) -> string",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getString(int)"
          },
          "onDestroy": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onDestroy()"
          },
          "getDialog": {
            "!type": "fn() -> +android.app.Dialog",
            "!url": "http://developer.android.com/reference/android/app/DialogFragment.html#getDialog()"
          },
          "show": {
            "!type": "fn(manager: +android.app.FragmentManager, tag: string) -> void",
            "!url": "http://developer.android.com/reference/android/app/DialogFragment.html#show(android.app.FragmentManager, java.lang.String)"
          },
          "setEnterSharedElementCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setEnterSharedElementCallback(android.app.SharedElementCallback)"
          },
          "dismissAllowingStateLoss": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/DialogFragment.html#dismissAllowingStateLoss()"
          },
          "onContextItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onContextItemSelected(android.view.MenuItem)"
          },
          "getTag": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getTag()"
          },
          "isRemoving": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#isRemoving()"
          },
          "onDetach": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/DialogFragment.html#onDetach()"
          },
          "getFragmentManager": {
            "!type": "fn() -> +android.app.FragmentManager",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getFragmentManager()"
          },
          "setHasOptionsMenu": {
            "!type": "fn(hasMenu: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setHasOptionsMenu(boolean)"
          },
          "setEnterTransition": {
            "!type": "fn(transition: +android.transition.Transition) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setEnterTransition(android.transition.Transition)"
          },
          "onCancel": {
            "!type": "fn(dialog: +android.content.DialogInterface) -> void",
            "!url": "http://developer.android.com/reference/android/app/DialogFragment.html#onCancel(android.content.DialogInterface)"
          },
          "dismiss": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/DialogFragment.html#dismiss()"
          },
          "getParentFragment": {
            "!type": "fn() -> +android.app.Fragment",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getParentFragment()"
          },
          "setInitialSavedState": {
            "!type": "fn(state: +android.app.Fragment.SavedState) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setInitialSavedState(android.app.Fragment.SavedState)"
          },
          "onDismiss": {
            "!type": "fn(dialog: +android.content.DialogInterface) -> void",
            "!url": "http://developer.android.com/reference/android/app/DialogFragment.html#onDismiss(android.content.DialogInterface)"
          },
          "getId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getId()"
          },
          "getSharedElementReturnTransition": {
            "!type": "fn() -> +android.transition.Transition",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getSharedElementReturnTransition()"
          },
          "getAllowEnterTransitionOverlap": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getAllowEnterTransitionOverlap()"
          },
          "onPrepareOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onPrepareOptionsMenu(android.view.Menu)"
          },
          "onCreateDialog": {
            "!type": "fn(savedInstanceState: +android.os.Bundle) -> +android.app.Dialog",
            "!url": "http://developer.android.com/reference/android/app/DialogFragment.html#onCreateDialog(android.os.Bundle)"
          },
          "setStyle": {
            "!type": "fn(style: number, theme: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/DialogFragment.html#setStyle(int, int)"
          },
          "onCreateContextMenu": {
            "!type": "fn(menu: +android.view.ContextMenu, v: +android.view.View, menuInfo: +android.view.ContextMenu.ContextMenuInfo) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenu.ContextMenuInfo)"
          },
          "setMenuVisibility": {
            "!type": "fn(menuVisible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setMenuVisibility(boolean)"
          },
          "isDetached": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#isDetached()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#equals(java.lang.Object)"
          },
          "onViewCreated": {
            "!type": "fn(view: +android.view.View, savedInstanceState: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onViewCreated(android.view.View, android.os.Bundle)"
          },
          "getSharedElementEnterTransition": {
            "!type": "fn() -> +android.transition.Transition",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getSharedElementEnterTransition()"
          },
          "getEnterTransition": {
            "!type": "fn() -> +android.transition.Transition",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getEnterTransition()"
          },
          "setUserVisibleHint": {
            "!type": "fn(isVisibleToUser: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setUserVisibleHint(boolean)"
          },
          "onLowMemory": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onLowMemory()"
          },
          "onCreate": {
            "!type": "fn(savedInstanceState: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/DialogFragment.html#onCreate(android.os.Bundle)"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getContext()"
          },
          "getExitTransition": {
            "!type": "fn() -> +android.transition.Transition",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getExitTransition()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "setAllowEnterTransitionOverlap": {
            "!type": "fn(allow: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setAllowEnterTransitionOverlap(boolean)"
          },
          "setShowsDialog": {
            "!type": "fn(showsDialog: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/DialogFragment.html#setShowsDialog(boolean)"
          },
          "onActivityResult": {
            "!type": "fn(requestCode: number, resultCode: number, data: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onActivityResult(int, int, android.content.Intent)"
          },
          "setExitSharedElementTransitionCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setExitSharedElementTransitionCallback(android.app.SharedElementCallback)"
          },
          "isHidden": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#isHidden()"
          },
          "onViewStateRestored": {
            "!type": "fn(savedInstanceState: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onViewStateRestored(android.os.Bundle)"
          },
          "onOptionsMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onOptionsMenuClosed(android.view.Menu)"
          },
          "onRequestPermissionsResult": {
            "!type": "fn(requestCode: number, permissions: +java.newArray, grantResults: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onRequestPermissionsResult(int, java.lang.String[], int[])"
          },
          "getView": {
            "!type": "fn() -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getView()"
          },
          "onOptionsItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onOptionsItemSelected(android.view.MenuItem)"
          },
          "setArguments": {
            "!type": "fn(args: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setArguments(android.os.Bundle)"
          },
          "getText": {
            "!type": "fn(resId: number) -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getText(int)"
          },
          "onStop": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/DialogFragment.html#onStop()"
          },
          "isInLayout": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#isInLayout()"
          },
          "getShowsDialog": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/DialogFragment.html#getShowsDialog()"
          },
          "setSharedElementEnterTransition": {
            "!type": "fn(transition: +android.transition.Transition) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setSharedElementEnterTransition(android.transition.Transition)"
          },
          "onSaveInstanceState": {
            "!type": "fn(outState: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/DialogFragment.html#onSaveInstanceState(android.os.Bundle)"
          },
          "startActivity": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#startActivity(android.content.Intent)"
          },
          "getTargetFragment": {
            "!type": "fn() -> +android.app.Fragment",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getTargetFragment()"
          },
          "getArguments": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getArguments()"
          },
          "onConfigurationChanged": {
            "!type": "fn(newConfig: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onConfigurationChanged(android.content.res.Configuration)"
          },
          "isAdded": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#isAdded()"
          },
          "onStart": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/DialogFragment.html#onStart()"
          },
          "onTrimMemory": {
            "!type": "fn(level: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onTrimMemory(int)"
          },
          "setExitTransition": {
            "!type": "fn(transition: +android.transition.Transition) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setExitTransition(android.transition.Transition)"
          },
          "onDestroyView": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/DialogFragment.html#onDestroyView()"
          },
          "onCreateView": {
            "!type": "fn(inflater: +android.view.LayoutInflater, container: +android.view.ViewGroup, savedInstanceState: +android.os.Bundle) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onCreateView(android.view.LayoutInflater, android.view.ViewGroup, android.os.Bundle)"
          },
          "getUserVisibleHint": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getUserVisibleHint()"
          },
          "getLoaderManager": {
            "!type": "fn() -> +android.app.LoaderManager",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getLoaderManager()"
          },
          "dump": {
            "!type": "fn(prefix: string, fd: +java.io.FileDescriptor, writer: +java.io.PrintWriter, args: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/DialogFragment.html#dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])"
          },
          "unregisterForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#unregisterForContextMenu(android.view.View)"
          },
          "getRetainInstance": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getRetainInstance()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#toString()"
          },
          "getTheme": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/DialogFragment.html#getTheme()"
          },
          "getHost": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getHost()"
          },
          "requestPermissions": {
            "!type": "fn(permissions: +java.newArray, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#requestPermissions(java.lang.String[], int)"
          },
          "onInflate": {
            "!type": "fn(attrs: +android.util.AttributeSet, savedInstanceState: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onInflate(android.util.AttributeSet, android.os.Bundle)"
          },
          "registerForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#registerForContextMenu(android.view.View)"
          },
          "getActivity": {
            "!type": "fn() -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getActivity()"
          },
          "getAllowReturnTransitionOverlap": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getAllowReturnTransitionOverlap()"
          },
          "setTargetFragment": {
            "!type": "fn(fragment: +android.app.Fragment, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setTargetFragment(android.app.Fragment, int)"
          },
          "onDestroyOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onDestroyOptionsMenu()"
          },
          "onActivityCreated": {
            "!type": "fn(savedInstanceState: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/DialogFragment.html#onActivityCreated(android.os.Bundle)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "setExitSharedElementCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setExitSharedElementCallback(android.app.SharedElementCallback)"
          },
          "onHiddenChanged": {
            "!type": "fn(hidden: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onHiddenChanged(boolean)"
          },
          "setReturnTransition": {
            "!type": "fn(transition: +android.transition.Transition) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setReturnTransition(android.transition.Transition)"
          },
          "onAttach": {
            "!type": "fn(activity: +android.app.Activity) -> void",
            "!url": "http://developer.android.com/reference/android/app/DialogFragment.html#onAttach(android.app.Activity)"
          },
          "setCancelable": {
            "!type": "fn(cancelable: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/DialogFragment.html#setCancelable(boolean)"
          },
          "setRetainInstance": {
            "!type": "fn(retain: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setRetainInstance(boolean)"
          },
          "setAllowReturnTransitionOverlap": {
            "!type": "fn(allow: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setAllowReturnTransitionOverlap(boolean)"
          },
          "getTargetRequestCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getTargetRequestCode()"
          },
          "getChildFragmentManager": {
            "!type": "fn() -> +android.app.FragmentManager",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getChildFragmentManager()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getLayoutInflater": {
            "!type": "fn(savedInstanceState: +android.os.Bundle) -> +android.view.LayoutInflater",
            "!url": "http://developer.android.com/reference/android/app/DialogFragment.html#getLayoutInflater(android.os.Bundle)"
          },
          "isVisible": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#isVisible()"
          },
          "setEnterSharedElementTransitionCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setEnterSharedElementTransitionCallback(android.app.SharedElementCallback)"
          },
          "onPause": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onPause()"
          },
          "isCancelable": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/DialogFragment.html#isCancelable()"
          },
          "setReenterTransition": {
            "!type": "fn(transition: +android.transition.Transition) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#setReenterTransition(android.transition.Transition)"
          },
          "startActivityForResult": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#startActivityForResult(android.content.Intent, int)"
          },
          "onCreateAnimator": {
            "!type": "fn(transit: number, enter: bool, nextAnim: number) -> +android.animation.Animator",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#onCreateAnimator(int, boolean, int)"
          },
          "shouldShowRequestPermissionRationale": {
            "!type": "fn(permission: string) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#shouldShowRequestPermissionRationale(java.lang.String)"
          },
          "getResources": {
            "!type": "fn() -> +android.content.res.Resources",
            "!url": "http://developer.android.com/reference/android/app/Fragment.html#getResources()"
          }
        }
      },
      "Dialog": {
        "!url": "http://developer.android.com/reference/android/app/Dialog.html",
        "!type": "fn(context: +android.content.Context)",
        "prototype": {
          "onKeyLongPress": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onKeyLongPress(int, android.view.KeyEvent)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "onPanelClosed": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onPanelClosed(int, android.view.Menu)"
          },
          "dispatchKeyShortcutEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#dispatchKeyShortcutEvent(android.view.KeyEvent)"
          },
          "onTrackballEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onTrackballEvent(android.view.MotionEvent)"
          },
          "onGenericMotionEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onGenericMotionEvent(android.view.MotionEvent)"
          },
          "setFeatureDrawableAlpha": {
            "!type": "fn(featureId: number, alpha: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setFeatureDrawableAlpha(int, int)"
          },
          "getVolumeControlStream": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getVolumeControlStream()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "onTouchEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onTouchEvent(android.view.MotionEvent)"
          },
          "onCreateOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onCreateOptionsMenu(android.view.Menu)"
          },
          "onCreatePanelView": {
            "!type": "fn(featureId: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onCreatePanelView(int)"
          },
          "show": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#show()"
          },
          "addContentView": {
            "!type": "fn(view: +android.view.View, params: +android.view.ViewGroup.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#addContentView(android.view.View, android.view.ViewGroup.LayoutParams)"
          },
          "onContextItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onContextItemSelected(android.view.MenuItem)"
          },
          "getSearchEvent": {
            "!type": "fn() -> +android.view.SearchEvent",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getSearchEvent()"
          },
          "onDetachedFromWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onDetachedFromWindow()"
          },
          "onAttachedToWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onAttachedToWindow()"
          },
          "onContextMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onContextMenuClosed(android.view.Menu)"
          },
          "dismiss": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#dismiss()"
          },
          "create": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#create()"
          },
          "findViewById": {
            "!type": "fn(id: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#findViewById(int)"
          },
          "dispatchTrackballEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#dispatchTrackballEvent(android.view.MotionEvent)"
          },
          "takeCancelAndDismissListeners": {
            "!type": "fn(msg: string, cancel: +android.content.DialogInterface.OnCancelListener, dismiss: +android.content.DialogInterface.OnDismissListener) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#takeCancelAndDismissListeners(java.lang.String, android.content.DialogInterface.OnCancelListener, android.content.DialogInterface.OnDismissListener)"
          },
          "dispatchGenericMotionEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#dispatchGenericMotionEvent(android.view.MotionEvent)"
          },
          "onKeyMultiple": {
            "!type": "fn(keyCode: number, repeatCount: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onKeyMultiple(int, int, android.view.KeyEvent)"
          },
          "setContentView": {
            "!type": "fn(layoutResID: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setContentView(int)"
          },
          "getCurrentFocus": {
            "!type": "fn() -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getCurrentFocus()"
          },
          "onKeyShortcut": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onKeyShortcut(int, android.view.KeyEvent)"
          },
          "onPrepareOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onPrepareOptionsMenu(android.view.Menu)"
          },
          "onCreateContextMenu": {
            "!type": "fn(menu: +android.view.ContextMenu, v: +android.view.View, menuInfo: +android.view.ContextMenu.ContextMenuInfo) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenu.ContextMenuInfo)"
          },
          "onKeyDown": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onKeyDown(int, android.view.KeyEvent)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "setOnCancelListener": {
            "!type": "fn(listener: +android.content.DialogInterface.OnCancelListener) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setOnCancelListener(android.content.DialogInterface.OnCancelListener)"
          },
          "setOnShowListener": {
            "!type": "fn(listener: +android.content.DialogInterface.OnShowListener) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setOnShowListener(android.content.DialogInterface.OnShowListener)"
          },
          "onRestoreInstanceState": {
            "!type": "fn(savedInstanceState: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onRestoreInstanceState(android.os.Bundle)"
          },
          "onWindowDismissed": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onWindowDismissed()"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getContext()"
          },
          "dispatchKeyEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#dispatchKeyEvent(android.view.KeyEvent)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "onSearchRequested": {
            "!type": "fn(searchEvent: +android.view.SearchEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onSearchRequested(android.view.SearchEvent)"
          },
          "setCancelMessage": {
            "!type": "fn(msg: +android.os.Message) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setCancelMessage(android.os.Message)"
          },
          "onOptionsMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onOptionsMenuClosed(android.view.Menu)"
          },
          "setFeatureDrawable": {
            "!type": "fn(featureId: number, drawable: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setFeatureDrawable(int, android.graphics.drawable.Drawable)"
          },
          "onOptionsItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onOptionsItemSelected(android.view.MenuItem)"
          },
          "onSaveInstanceState": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onSaveInstanceState()"
          },
          "onCreatePanelMenu": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onCreatePanelMenu(int, android.view.Menu)"
          },
          "setDismissMessage": {
            "!type": "fn(msg: +android.os.Message) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setDismissMessage(android.os.Message)"
          },
          "dispatchTouchEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#dispatchTouchEvent(android.view.MotionEvent)"
          },
          "requestWindowFeature": {
            "!type": "fn(featureId: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#requestWindowFeature(int)"
          },
          "closeOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#closeOptionsMenu()"
          },
          "setFeatureDrawableResource": {
            "!type": "fn(featureId: number, resId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setFeatureDrawableResource(int, int)"
          },
          "getWindow": {
            "!type": "fn() -> +android.view.Window",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getWindow()"
          },
          "setFeatureDrawableUri": {
            "!type": "fn(featureId: number, uri: +android.net.Uri) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setFeatureDrawableUri(int, android.net.Uri)"
          },
          "getOwnerActivity": {
            "!type": "fn() -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getOwnerActivity()"
          },
          "setVolumeControlStream": {
            "!type": "fn(streamType: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setVolumeControlStream(int)"
          },
          "setOwnerActivity": {
            "!type": "fn(activity: +android.app.Activity) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setOwnerActivity(android.app.Activity)"
          },
          "onKeyUp": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onKeyUp(int, android.view.KeyEvent)"
          },
          "hide": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#hide()"
          },
          "unregisterForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#unregisterForContextMenu(android.view.View)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "onPreparePanel": {
            "!type": "fn(featureId: number, view: +android.view.View, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onPreparePanel(int, android.view.View, android.view.Menu)"
          },
          "setOnKeyListener": {
            "!type": "fn(onKeyListener: +android.content.DialogInterface.OnKeyListener) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setOnKeyListener(android.content.DialogInterface.OnKeyListener)"
          },
          "getActionBar": {
            "!type": "fn() -> +android.app.ActionBar",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getActionBar()"
          },
          "registerForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#registerForContextMenu(android.view.View)"
          },
          "onActionModeFinished": {
            "!type": "fn(mode: +android.view.ActionMode) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onActionModeFinished(android.view.ActionMode)"
          },
          "onContentChanged": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onContentChanged()"
          },
          "onMenuItemSelected": {
            "!type": "fn(featureId: number, item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onMenuItemSelected(int, android.view.MenuItem)"
          },
          "takeKeyEvents": {
            "!type": "fn(get: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#takeKeyEvents(boolean)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "dispatchPopulateAccessibilityEvent": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
          },
          "isShowing": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#isShowing()"
          },
          "setCancelable": {
            "!type": "fn(flag: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setCancelable(boolean)"
          },
          "openOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#openOptionsMenu()"
          },
          "setOnDismissListener": {
            "!type": "fn(listener: +android.content.DialogInterface.OnDismissListener) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setOnDismissListener(android.content.DialogInterface.OnDismissListener)"
          },
          "onBackPressed": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onBackPressed()"
          },
          "setCanceledOnTouchOutside": {
            "!type": "fn(cancel: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setCanceledOnTouchOutside(boolean)"
          },
          "onWindowAttributesChanged": {
            "!type": "fn(params: +android.view.WindowManager.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onWindowAttributesChanged(android.view.WindowManager.LayoutParams)"
          },
          "onWindowFocusChanged": {
            "!type": "fn(hasFocus: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onWindowFocusChanged(boolean)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getLayoutInflater": {
            "!type": "fn() -> +android.view.LayoutInflater",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getLayoutInflater()"
          },
          "invalidateOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#invalidateOptionsMenu()"
          },
          "onWindowStartingActionMode": {
            "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onWindowStartingActionMode(android.view.ActionMode.Callback)"
          },
          "openContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#openContextMenu(android.view.View)"
          },
          "cancel": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#cancel()"
          },
          "onMenuOpened": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onMenuOpened(int, android.view.Menu)"
          },
          "setTitle": {
            "!type": "fn(title: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setTitle(java.lang.CharSequence)"
          },
          "onActionModeStarted": {
            "!type": "fn(mode: +android.view.ActionMode) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onActionModeStarted(android.view.ActionMode)"
          }
        }
      },
      "SearchManagerTest": {
        "!url": "http://developer.android.com/reference/android/app/SearchManagerTest.html",
        "!type": "fn()",
        "prototype": {
          "setActivityInitialTouchMode": {
            "!type": "fn(initialTouchMode: bool) -> void",
            "!url": "http://developer.android.com/reference/android/test/ActivityInstrumentationTestCase2.html#setActivityInitialTouchMode(boolean)"
          },
          "setActivityIntent": {
            "!type": "fn(i: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/test/ActivityInstrumentationTestCase2.html#setActivityIntent(android.content.Intent)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getActivity": {
            "!type": "fn() -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/test/ActivityInstrumentationTestCase2.html#getActivity()"
          },
          "runTestOnUiThread": {
            "!type": "fn(r: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#runTestOnUiThread(java.lang.Runnable)"
          },
          "testStartSearchIdempotent": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/SearchManagerTest.html#testStartSearchIdempotent()"
          },
          "testSearchManagerInterfaceAvailable": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/SearchManagerTest.html#testSearchManagerInterfaceAvailable()"
          },
          "launchActivity": {
            "!type": "fn(pkg: string, activityCls: +java.lang.Class, extras: +android.os.Bundle) -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#launchActivity(java.lang.String, java.lang.Class, android.os.Bundle)"
          },
          "testStopSearchIdempotent": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/SearchManagerTest.html#testStopSearchIdempotent()"
          },
          "injectInstrumentation": {
            "!type": "fn(instrumentation: +android.app.Instrumentation) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#injectInstrumentation(android.app.Instrumentation)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "testSearchManagerInvocations": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/SearchManagerTest.html#testSearchManagerInvocations()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "setUp": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/SearchManagerTest.html#setUp()"
          },
          "launchActivityWithIntent": {
            "!type": "fn(pkg: string, activityCls: +java.lang.Class, intent: +android.content.Intent) -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#launchActivityWithIntent(java.lang.String, java.lang.Class, android.content.Intent)"
          },
          "getInstrumentation": {
            "!type": "fn() -> +android.app.Instrumentation",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#getInstrumentation()"
          },
          "injectInsrumentation": {
            "!type": "fn(instrumentation: +android.app.Instrumentation) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#injectInsrumentation(android.app.Instrumentation)"
          },
          "sendRepeatedKeys": {
            "!type": "fn(keys: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#sendRepeatedKeys(int[])"
          },
          "sendKeys": {
            "!type": "fn(keysSequence: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#sendKeys(java.lang.String)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "testSearchManagerAvailable": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/SearchManagerTest.html#testSearchManagerAvailable()"
          }
        }
      },
      "LoadedApk": {
        "!url": "http://developer.android.com/reference/android/app/LoadedApk.html",
        "!type": "fn(activityThread: +android.app.ActivityThread, aInfo: +android.content.pm.ApplicationInfo, compatInfo: +android.content.res.CompatibilityInfo, baseLoader: +java.lang.ClassLoader, securityViolation: bool, includeCode: bool, registerPackage: bool)",
        "prototype": {
          "getResources": {
            "!type": "fn(mainThread: +android.app.ActivityThread) -> +android.content.res.Resources",
            "!url": "http://developer.android.com/reference/android/app/LoadedApk.html#getResources(android.app.ActivityThread)"
          },
          "forgetServiceDispatcher": {
            "!type": "fn(context: +android.content.Context, c: +android.content.ServiceConnection) -> IServiceConnection",
            "!url": "http://developer.android.com/reference/android/app/LoadedApk.html#forgetServiceDispatcher(android.content.Context, android.content.ServiceConnection)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "forgetReceiverDispatcher": {
            "!type": "fn(context: +android.content.Context, r: +android.content.BroadcastReceiver) -> IIntentReceiver",
            "!url": "http://developer.android.com/reference/android/app/LoadedApk.html#forgetReceiverDispatcher(android.content.Context, android.content.BroadcastReceiver)"
          },
          "removeContextRegistrations": {
            "!type": "fn(context: +android.content.Context, who: string, what: string) -> void",
            "!url": "http://developer.android.com/reference/android/app/LoadedApk.html#removeContextRegistrations(android.content.Context, java.lang.String, java.lang.String)"
          },
          "isSecurityViolation": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/LoadedApk.html#isSecurityViolation()"
          },
          "getReceiverDispatcher": {
            "!type": "fn(r: +android.content.BroadcastReceiver, context: +android.content.Context, handler: +android.os.Handler, instrumentation: +android.app.Instrumentation, registered: bool) -> IIntentReceiver",
            "!url": "http://developer.android.com/reference/android/app/LoadedApk.html#getReceiverDispatcher(android.content.BroadcastReceiver, android.content.Context, android.os.Handler, android.app.Instrumentation, boolean)"
          },
          "getResDir": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/LoadedApk.html#getResDir()"
          },
          "getOverlayDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/app/LoadedApk.html#getOverlayDirs()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getAppDir": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/LoadedApk.html#getAppDir()"
          },
          "getLibDir": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/LoadedApk.html#getLibDir()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getDataDir": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/LoadedApk.html#getDataDir()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getServiceDispatcher": {
            "!type": "fn(c: +android.content.ServiceConnection, context: +android.content.Context, handler: +android.os.Handler, flags: number) -> IServiceConnection",
            "!url": "http://developer.android.com/reference/android/app/LoadedApk.html#getServiceDispatcher(android.content.ServiceConnection, android.content.Context, android.os.Handler, int)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "getCompatibilityInfo": {
            "!type": "fn() -> +android.content.res.CompatibilityInfo",
            "!url": "http://developer.android.com/reference/android/app/LoadedApk.html#getCompatibilityInfo()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getApplicationInfo": {
            "!type": "fn() -> +android.content.pm.ApplicationInfo",
            "!url": "http://developer.android.com/reference/android/app/LoadedApk.html#getApplicationInfo()"
          },
          "getPackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/LoadedApk.html#getPackageName()"
          },
          "getAssets": {
            "!type": "fn(mainThread: +android.app.ActivityThread) -> +android.content.res.AssetManager",
            "!url": "http://developer.android.com/reference/android/app/LoadedApk.html#getAssets(android.app.ActivityThread)"
          },
          "getDataDirFile": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/app/LoadedApk.html#getDataDirFile()"
          },
          "getSplitResDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/app/LoadedApk.html#getSplitResDirs()"
          },
          "makeApplication": {
            "!type": "fn(forceDefaultAppClass: bool, instrumentation: +android.app.Instrumentation) -> +android.app.Application",
            "!url": "http://developer.android.com/reference/android/app/LoadedApk.html#makeApplication(boolean, android.app.Instrumentation)"
          },
          "getSplitAppDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/app/LoadedApk.html#getSplitAppDirs()"
          },
          "getClassLoader": {
            "!type": "fn() -> +java.lang.ClassLoader",
            "!url": "http://developer.android.com/reference/android/app/LoadedApk.html#getClassLoader()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "setCompatibilityInfo": {
            "!type": "fn(compatInfo: +android.content.res.CompatibilityInfo) -> void",
            "!url": "http://developer.android.com/reference/android/app/LoadedApk.html#setCompatibilityInfo(android.content.res.CompatibilityInfo)"
          }
        }
      },
      "NotificationManager": {
        "!url": "http://developer.android.com/reference/android/app/NotificationManager.html",
        "Policy": {
          "!url": "http://developer.android.com/reference/android/app/NotificationManager.Policy.html",
          "!type": "fn(priorityCategories: number, priorityCallSenders: number, priorityMessageSenders: number)",
          "PRIORITY_CATEGORY_MESSAGES": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/NotificationManager.Policy.html#PRIORITY_CATEGORY_MESSAGES"
          },
          "PRIORITY_SENDERS_STARRED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/NotificationManager.Policy.html#PRIORITY_SENDERS_STARRED"
          },
          "CREATOR": {
            "!type": "+android.os.Parcelable.Creator",
            "!url": "http://developer.android.com/reference/android/app/NotificationManager.Policy.html#CREATOR"
          },
          "PRIORITY_CATEGORY_REPEAT_CALLERS": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/NotificationManager.Policy.html#PRIORITY_CATEGORY_REPEAT_CALLERS"
          },
          "PRIORITY_CATEGORY_CALLS": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/NotificationManager.Policy.html#PRIORITY_CATEGORY_CALLS"
          },
          "PRIORITY_SENDERS_ANY": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/NotificationManager.Policy.html#PRIORITY_SENDERS_ANY"
          },
          "PRIORITY_SENDERS_CONTACTS": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/NotificationManager.Policy.html#PRIORITY_SENDERS_CONTACTS"
          },
          "PRIORITY_CATEGORY_REMINDERS": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/NotificationManager.Policy.html#PRIORITY_CATEGORY_REMINDERS"
          },
          "PRIORITY_CATEGORY_EVENTS": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/NotificationManager.Policy.html#PRIORITY_CATEGORY_EVENTS"
          },
          "prioritySendersToString": {
            "!type": "fn(prioritySenders: number) -> string",
            "!url": "http://developer.android.com/reference/android/app/NotificationManager.Policy.html#prioritySendersToString(int)"
          },
          "priorityCategoriesToString": {
            "!type": "fn(priorityCategories: number) -> string",
            "!url": "http://developer.android.com/reference/android/app/NotificationManager.Policy.html#priorityCategoriesToString(int)"
          },
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/app/NotificationManager.Policy.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/android/app/NotificationManager.Policy.html#equals(java.lang.Object)"
            },
            "describeContents": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/app/NotificationManager.Policy.html#describeContents()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "writeToParcel": {
              "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
              "!url": "http://developer.android.com/reference/android/app/NotificationManager.Policy.html#writeToParcel(android.os.Parcel, int)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/app/NotificationManager.Policy.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "INTERRUPTION_FILTER_PRIORITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/NotificationManager.html#INTERRUPTION_FILTER_PRIORITY"
        },
        "ACTION_EFFECTS_SUPPRESSOR_CHANGED": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/NotificationManager.html#ACTION_EFFECTS_SUPPRESSOR_CHANGED"
        },
        "ACTION_NOTIFICATION_POLICY_ACCESS_GRANTED_CHANGED": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/NotificationManager.html#ACTION_NOTIFICATION_POLICY_ACCESS_GRANTED_CHANGED"
        },
        "ACTION_NOTIFICATION_POLICY_CHANGED": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/NotificationManager.html#ACTION_NOTIFICATION_POLICY_CHANGED"
        },
        "INTERRUPTION_FILTER_ALL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/NotificationManager.html#INTERRUPTION_FILTER_ALL"
        },
        "INTERRUPTION_FILTER_UNKNOWN": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/NotificationManager.html#INTERRUPTION_FILTER_UNKNOWN"
        },
        "INTERRUPTION_FILTER_NONE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/NotificationManager.html#INTERRUPTION_FILTER_NONE"
        },
        "INTERRUPTION_FILTER_ALARMS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/NotificationManager.html#INTERRUPTION_FILTER_ALARMS"
        },
        "ACTION_INTERRUPTION_FILTER_CHANGED": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/NotificationManager.html#ACTION_INTERRUPTION_FILTER_CHANGED"
        },
        "zenModeToInterruptionFilter": {
          "!type": "fn(zen: number) -> number",
          "!url": "http://developer.android.com/reference/android/app/NotificationManager.html#zenModeToInterruptionFilter(int)"
        },
        "getService": {
          "!type": "fn() -> INotificationManager",
          "!url": "http://developer.android.com/reference/android/app/NotificationManager.html#getService()"
        },
        "zenModeFromInterruptionFilter": {
          "!type": "fn(interruptionFilter: number, defValue: number) -> number",
          "!url": "http://developer.android.com/reference/android/app/NotificationManager.html#zenModeFromInterruptionFilter(int, int)"
        },
        "from": {
          "!type": "fn(context: +android.content.Context) -> +android.app.NotificationManager",
          "!url": "http://developer.android.com/reference/android/app/NotificationManager.html#from(android.content.Context)"
        },
        "prototype": {
          "getCurrentInterruptionFilter": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/NotificationManager.html#getCurrentInterruptionFilter()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "matchesCallFilter": {
            "!type": "fn(extras: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/app/NotificationManager.html#matchesCallFilter(android.os.Bundle)"
          },
          "isNotificationPolicyAccessGranted": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/NotificationManager.html#isNotificationPolicyAccessGranted()"
          },
          "cancel": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/NotificationManager.html#cancel(int)"
          },
          "notifyAsUser": {
            "!type": "fn(tag: string, id: number, notification: +android.app.Notification, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/app/NotificationManager.html#notifyAsUser(java.lang.String, int, android.app.Notification, android.os.UserHandle)"
          },
          "setZenMode": {
            "!type": "fn(mode: number, conditionId: +android.net.Uri, reason: string) -> void",
            "!url": "http://developer.android.com/reference/android/app/NotificationManager.html#setZenMode(int, android.net.Uri, java.lang.String)"
          },
          "setNotificationPolicyAccessGranted": {
            "!type": "fn(pkg: string, granted: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/NotificationManager.html#setNotificationPolicyAccessGranted(java.lang.String, boolean)"
          },
          "setInterruptionFilter": {
            "!type": "fn(interruptionFilter: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/NotificationManager.html#setInterruptionFilter(int)"
          },
          "cancelAsUser": {
            "!type": "fn(tag: string, id: number, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/app/NotificationManager.html#cancelAsUser(java.lang.String, int, android.os.UserHandle)"
          },
          "cancelAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/NotificationManager.html#cancelAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn(id: number, notification: +android.app.Notification) -> void",
            "!url": "http://developer.android.com/reference/android/app/NotificationManager.html#notify(int, android.app.Notification)"
          },
          "getEffectsSuppressor": {
            "!type": "fn() -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/app/NotificationManager.html#getEffectsSuppressor()"
          },
          "isNotificationPolicyAccessGrantedForPackage": {
            "!type": "fn(pkg: string) -> bool",
            "!url": "http://developer.android.com/reference/android/app/NotificationManager.html#isNotificationPolicyAccessGrantedForPackage(java.lang.String)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "getNotificationPolicy": {
            "!type": "fn() -> +android.app.NotificationManager.Policy",
            "!url": "http://developer.android.com/reference/android/app/NotificationManager.html#getNotificationPolicy()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getZenModeConfig": {
            "!type": "fn() -> +android.service.notification.ZenModeConfig",
            "!url": "http://developer.android.com/reference/android/app/NotificationManager.html#getZenModeConfig()"
          },
          "getActiveNotifications": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/app/NotificationManager.html#getActiveNotifications()"
          },
          "getZenMode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/NotificationManager.html#getZenMode()"
          },
          "getPackagesRequestingNotificationPolicyAccess": {
            "!type": "fn() -> +android.util.ArraySet",
            "!url": "http://developer.android.com/reference/android/app/NotificationManager.html#getPackagesRequestingNotificationPolicyAccess()"
          },
          "requestZenModeConditions": {
            "!type": "fn(listener: IConditionListener, relevance: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/NotificationManager.html#requestZenModeConditions(IConditionListener, int)"
          },
          "setNotificationPolicy": {
            "!type": "fn(policy: +android.app.NotificationManager.Policy) -> void",
            "!url": "http://developer.android.com/reference/android/app/NotificationManager.html#setNotificationPolicy(android.app.NotificationManager.Policy)"
          },
          "isSystemConditionProviderEnabled": {
            "!type": "fn(path: string) -> bool",
            "!url": "http://developer.android.com/reference/android/app/NotificationManager.html#isSystemConditionProviderEnabled(java.lang.String)"
          },
          "setZenModeConfig": {
            "!type": "fn(config: +android.service.notification.ZenModeConfig, reason: string) -> bool",
            "!url": "http://developer.android.com/reference/android/app/NotificationManager.html#setZenModeConfig(android.service.notification.ZenModeConfig, java.lang.String)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "LauncherActivity": {
        "!url": "http://developer.android.com/reference/android/app/LauncherActivity.html",
        "!type": "fn()",
        "ListItem": {
          "!url": "http://developer.android.com/reference/android/app/LauncherActivity.ListItem.html",
          "!type": "fn()",
          "prototype": {
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            }
          }
        },
        "IconResizer": {
          "!url": "http://developer.android.com/reference/android/app/LauncherActivity.IconResizer.html",
          "!type": "fn()",
          "prototype": {
            "createIconThumbnail": {
              "!type": "fn(icon: +android.graphics.drawable.Drawable) -> +android.graphics.drawable.Drawable",
              "!url": "http://developer.android.com/reference/android/app/LauncherActivity.IconResizer.html#createIconThumbnail(android.graphics.drawable.Drawable)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            }
          }
        },
        "BIND_WAIVE_PRIORITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_WAIVE_PRIORITY"
        },
        "RESULT_FIRST_USER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_FIRST_USER"
        },
        "DEFAULT_KEYS_SHORTCUT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SHORTCUT"
        },
        "MEDIA_PROJECTION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_PROJECTION_SERVICE"
        },
        "ETHERNET_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ETHERNET_SERVICE"
        },
        "WIFI_RTT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_RTT_SERVICE"
        },
        "SENSOR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SENSOR_SERVICE"
        },
        "TELEPHONY_SUBSCRIPTION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SUBSCRIPTION_SERVICE"
        },
        "CAPTIONING_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CAPTIONING_SERVICE"
        },
        "CAMERA_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CAMERA_SERVICE"
        },
        "BIND_DEBUG_UNBIND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_DEBUG_UNBIND"
        },
        "STATUS_BAR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#STATUS_BAR_SERVICE"
        },
        "DEVICE_POLICY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_POLICY_SERVICE"
        },
        "BIND_IMPORTANT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_IMPORTANT"
        },
        "NSD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NSD_SERVICE"
        },
        "DOWNLOAD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DOWNLOAD_SERVICE"
        },
        "BIND_NOT_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_VISIBLE"
        },
        "CONTEXT_IGNORE_SECURITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_IGNORE_SECURITY"
        },
        "USAGE_STATS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USAGE_STATS_SERVICE"
        },
        "MODE_WORLD_READABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_READABLE"
        },
        "KEYGUARD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#KEYGUARD_SERVICE"
        },
        "BIND_ADJUST_WITH_ACTIVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ADJUST_WITH_ACTIVITY"
        },
        "UI_MODE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#UI_MODE_SERVICE"
        },
        "MODE_PRIVATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_PRIVATE"
        },
        "CONTEXT_INCLUDE_CODE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_INCLUDE_CODE"
        },
        "DEFAULT_KEYS_DISABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_DISABLE"
        },
        "ACCESSIBILITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACCESSIBILITY_SERVICE"
        },
        "HDMI_CONTROL_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#HDMI_CONTROL_SERVICE"
        },
        "BIND_SHOWING_UI": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_SHOWING_UI"
        },
        "MODE_APPEND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_APPEND"
        },
        "AUDIO_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#AUDIO_SERVICE"
        },
        "NETWORK_SCORE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_SCORE_SERVICE"
        },
        "UPDATE_LOCK_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#UPDATE_LOCK_SERVICE"
        },
        "MEDIA_ROUTER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_ROUTER_SERVICE"
        },
        "JOB_SCHEDULER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#JOB_SCHEDULER_SERVICE"
        },
        "DEVICE_IDLE_CONTROLLER": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_IDLE_CONTROLLER"
        },
        "INPUT_METHOD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_METHOD_SERVICE"
        },
        "RESULT_CANCELED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_CANCELED"
        },
        "BIND_ABOVE_CLIENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ABOVE_CLIENT"
        },
        "INPUT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_SERVICE"
        },
        "MODE_WORLD_WRITEABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_WRITEABLE"
        },
        "NETWORKMANAGEMENT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORKMANAGEMENT_SERVICE"
        },
        "WINDOW_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WINDOW_SERVICE"
        },
        "MEDIA_SESSION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_SESSION_SERVICE"
        },
        "WIFI_P2P_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_P2P_SERVICE"
        },
        "DEFAULT_KEYS_SEARCH_GLOBAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SEARCH_GLOBAL"
        },
        "MODE_ENABLE_WRITE_AHEAD_LOGGING": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_ENABLE_WRITE_AHEAD_LOGGING"
        },
        "WIFI_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SERVICE"
        },
        "PERSISTENT_DATA_BLOCK_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#PERSISTENT_DATA_BLOCK_SERVICE"
        },
        "TV_INPUT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TV_INPUT_SERVICE"
        },
        "SIP_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SIP_SERVICE"
        },
        "FINGERPRINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#FINGERPRINT_SERVICE"
        },
        "LOCATION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LOCATION_SERVICE"
        },
        "LAUNCHER_APPS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LAUNCHER_APPS_SERVICE"
        },
        "NETWORK_STATS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_STATS_SERVICE"
        },
        "VOICE_INTERACTION_MANAGER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#VOICE_INTERACTION_MANAGER_SERVICE"
        },
        "TELECOM_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELECOM_SERVICE"
        },
        "SEARCH_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SEARCH_SERVICE"
        },
        "RADIO_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#RADIO_SERVICE"
        },
        "BIND_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_VISIBLE"
        },
        "BIND_NOT_FOREGROUND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_FOREGROUND"
        },
        "CONTEXT_RESTRICTED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_RESTRICTED"
        },
        "USER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USER_SERVICE"
        },
        "DROPBOX_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DROPBOX_SERVICE"
        },
        "BIND_TREAT_LIKE_ACTIVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_TREAT_LIKE_ACTIVITY"
        },
        "DEFAULT_KEYS_SEARCH_LOCAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SEARCH_LOCAL"
        },
        "BIND_FOREGROUND_SERVICE_WHILE_AWAKE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE_WHILE_AWAKE"
        },
        "CLIPBOARD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CLIPBOARD_SERVICE"
        },
        "LAYOUT_INFLATER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LAYOUT_INFLATER_SERVICE"
        },
        "WIFI_SCANNING_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SCANNING_SERVICE"
        },
        "PRINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#PRINT_SERVICE"
        },
        "WALLPAPER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WALLPAPER_SERVICE"
        },
        "ALARM_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ALARM_SERVICE"
        },
        "ACCOUNT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACCOUNT_SERVICE"
        },
        "TRUST_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TRUST_SERVICE"
        },
        "VIBRATOR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#VIBRATOR_SERVICE"
        },
        "RESULT_OK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_OK"
        },
        "NFC_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NFC_SERVICE"
        },
        "NOTIFICATION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NOTIFICATION_SERVICE"
        },
        "BLUETOOTH_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BLUETOOTH_SERVICE"
        },
        "POWER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#POWER_SERVICE"
        },
        "BIND_ALLOW_OOM_MANAGEMENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ALLOW_OOM_MANAGEMENT"
        },
        "DEFAULT_KEYS_DIALER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_DIALER"
        },
        "BACKUP_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BACKUP_SERVICE"
        },
        "COUNTRY_DETECTOR": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#COUNTRY_DETECTOR"
        },
        "SERIAL_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SERIAL_SERVICE"
        },
        "WIFI_PASSPOINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_PASSPOINT_SERVICE"
        },
        "CONSUMER_IR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONSUMER_IR_SERVICE"
        },
        "APP_OPS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#APP_OPS_SERVICE"
        },
        "ACTIVITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACTIVITY_SERVICE"
        },
        "STORAGE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#STORAGE_SERVICE"
        },
        "BIND_FOREGROUND_SERVICE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE"
        },
        "RESTRICTIONS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#RESTRICTIONS_SERVICE"
        },
        "CONNECTIVITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONNECTIVITY_SERVICE"
        },
        "TEXT_SERVICES_MANAGER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TEXT_SERVICES_MANAGER_SERVICE"
        },
        "USB_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USB_SERVICE"
        },
        "APPWIDGET_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#APPWIDGET_SERVICE"
        },
        "CONTEXT_REGISTER_PACKAGE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_REGISTER_PACKAGE"
        },
        "CARRIER_CONFIG_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CARRIER_CONFIG_SERVICE"
        },
        "NETWORK_POLICY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_POLICY_SERVICE"
        },
        "MIDI_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MIDI_SERVICE"
        },
        "BATTERY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BATTERY_SERVICE"
        },
        "MODE_MULTI_PROCESS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_MULTI_PROCESS"
        },
        "BIND_AUTO_CREATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_AUTO_CREATE"
        },
        "DISPLAY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DISPLAY_SERVICE"
        },
        "TELEPHONY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SERVICE"
        },
        "prototype": {
          "isBackgroundVisibleBehind": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isBackgroundVisibleBehind()"
          },
          "setProgressBarVisibility": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarVisibility(boolean)"
          },
          "setFeatureDrawableResource": {
            "!type": "fn(featureId: number, resId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableResource(int, int)"
          },
          "dispatchEnterAnimationComplete": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchEnterAnimationComplete()"
          },
          "finishActivityFromChild": {
            "!type": "fn(child: +android.app.Activity, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishActivityFromChild(android.app.Activity, int)"
          },
          "startPostponedEnterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startPostponedEnterTransition()"
          },
          "onProvideAssistContent": {
            "!type": "fn(outContent: +android.app.assist.AssistContent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideAssistContent(android.app.assist.AssistContent)"
          },
          "sendBroadcastMultiplePermissions": {
            "!type": "fn(intent: +android.content.Intent, receiverPermissions: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastMultiplePermissions(android.content.Intent, java.lang.String[])"
          },
          "getString": {
            "!type": "fn(resId: number) -> string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getString(int)"
          },
          "onKeyDown": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyDown(int, android.view.KeyEvent)"
          },
          "getResources": {
            "!type": "fn() -> +android.content.res.Resources",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getResources()"
          },
          "sendStickyBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcast(android.content.Intent)"
          },
          "startActivityFromFragment": {
            "!type": "fn(fragment: +android.app.Fragment, intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityFromFragment(android.app.Fragment, android.content.Intent, int)"
          },
          "onCreateThumbnail": {
            "!type": "fn(outBitmap: +android.graphics.Bitmap, canvas: +android.graphics.Canvas) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateThumbnail(android.graphics.Bitmap, android.graphics.Canvas)"
          },
          "getOpPackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getOpPackageName()"
          },
          "getCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCacheDir()"
          },
          "onWindowDismissed": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowDismissed()"
          },
          "getBaseContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBaseContext()"
          },
          "checkCallingOrSelfPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfPermission(java.lang.String)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "isVoiceInteractionRoot": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isVoiceInteractionRoot()"
          },
          "onDetachedFromWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onDetachedFromWindow()"
          },
          "setResult": {
            "!type": "fn(resultCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setResult(int)"
          },
          "onOptionsItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onOptionsItemSelected(android.view.MenuItem)"
          },
          "isChangingConfigurations": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isChangingConfigurations()"
          },
          "getCodeCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCodeCacheDir()"
          },
          "createPendingResult": {
            "!type": "fn(requestCode: number, data: +android.content.Intent, flags: number) -> +android.app.PendingIntent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#createPendingResult(int, android.content.Intent, int)"
          },
          "getPackageResourcePath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageResourcePath()"
          },
          "getCurrentFocus": {
            "!type": "fn() -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCurrentFocus()"
          },
          "triggerSearch": {
            "!type": "fn(query: string, appSearchData: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#triggerSearch(java.lang.String, android.os.Bundle)"
          },
          "convertToTranslucent": {
            "!type": "fn(callback: +android.app.Activity.TranslucentConversionListener, options: +android.app.ActivityOptions) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#convertToTranslucent(android.app.Activity.TranslucentConversionListener, android.app.ActivityOptions)"
          },
          "setListAdapter": {
            "!type": "fn(adapter: +android.widget.ListAdapter) -> void",
            "!url": "http://developer.android.com/reference/android/app/ListActivity.html#setListAdapter(android.widget.ListAdapter)"
          },
          "startActivityForResult": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityForResult(android.content.Intent, int)"
          },
          "getLayoutInflater": {
            "!type": "fn() -> +android.view.LayoutInflater",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLayoutInflater()"
          },
          "createPackageContext": {
            "!type": "fn(packageName: string, flags: number) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContext(java.lang.String, int)"
          },
          "enforcePermission": {
            "!type": "fn(permission: string, pid: number, uid: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforcePermission(java.lang.String, int, int, java.lang.String)"
          },
          "onWindowStartingActionMode": {
            "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowStartingActionMode(android.view.ActionMode.Callback)"
          },
          "registerForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#registerForContextMenu(android.view.View)"
          },
          "setSecondaryProgress": {
            "!type": "fn(secondaryProgress: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setSecondaryProgress(int)"
          },
          "onContentChanged": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/ListActivity.html#onContentChanged()"
          },
          "finishAndRemoveTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAndRemoveTask()"
          },
          "setFinishOnTouchOutside": {
            "!type": "fn(finish: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFinishOnTouchOutside(boolean)"
          },
          "requestWindowFeature": {
            "!type": "fn(featureId: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestWindowFeature(int)"
          },
          "createConfigurationContext": {
            "!type": "fn(overrideConfiguration: +android.content.res.Configuration) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createConfigurationContext(android.content.res.Configuration)"
          },
          "showDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showDialog(int)"
          },
          "onSearchRequested": {
            "!type": "fn(searchEvent: +android.view.SearchEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onSearchRequested(android.view.SearchEvent)"
          },
          "onContextItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onContextItemSelected(android.view.MenuItem)"
          },
          "onTrackballEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTrackballEvent(android.view.MotionEvent)"
          },
          "requestPermissions": {
            "!type": "fn(permissions: +java.newArray, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestPermissions(java.lang.String[], int)"
          },
          "getVoiceInteractor": {
            "!type": "fn() -> +android.app.VoiceInteractor",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getVoiceInteractor()"
          },
          "peekWallpaper": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#peekWallpaper()"
          },
          "onPrepareOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPrepareOptionsMenu(android.view.Menu)"
          },
          "onSaveInstanceState": {
            "!type": "fn(outState: +android.os.Bundle, outPersistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onSaveInstanceState(android.os.Bundle, android.os.PersistableBundle)"
          },
          "registerReceiver": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver, filter: +android.content.IntentFilter) -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter)"
          },
          "setActionBar": {
            "!type": "fn(toolbar: +android.widget.Toolbar) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setActionBar(android.widget.Toolbar)"
          },
          "getIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getIntent()"
          },
          "makeListItems": {
            "!type": "fn() -> +java.util.List",
            "!url": "http://developer.android.com/reference/android/app/LauncherActivity.html#makeListItems()"
          },
          "getObbDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDirs()"
          },
          "getPackageManager": {
            "!type": "fn() -> +android.content.pm.PackageManager",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageManager()"
          },
          "getSystemServiceName": {
            "!type": "fn(serviceClass: +java.lang.Class) -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSystemServiceName(java.lang.Class)"
          },
          "obtainStyledAttributes": {
            "!type": "fn(attrs: +java.newArray) -> +android.content.res.TypedArray",
            "!url": "http://developer.android.com/reference/android/content/Context.html#obtainStyledAttributes(int[])"
          },
          "getApplicationInfo": {
            "!type": "fn() -> +android.content.pm.ApplicationInfo",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationInfo()"
          },
          "setDefaultKeyMode": {
            "!type": "fn(mode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setDefaultKeyMode(int)"
          },
          "setProgressBarIndeterminate": {
            "!type": "fn(indeterminate: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarIndeterminate(boolean)"
          },
          "isRestricted": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#isRestricted()"
          },
          "hasWindowFocus": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#hasWindowFocus()"
          },
          "onConfigurationChanged": {
            "!type": "fn(newConfig: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onConfigurationChanged(android.content.res.Configuration)"
          },
          "getVolumeControlStream": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getVolumeControlStream()"
          },
          "databaseList": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#databaseList()"
          },
          "setTheme": {
            "!type": "fn(resid: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#setTheme(int)"
          },
          "isChild": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isChild()"
          },
          "isResumed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isResumed()"
          },
          "setRequestedOrientation": {
            "!type": "fn(requestedOrientation: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setRequestedOrientation(int)"
          },
          "onNewActivityOptions": {
            "!type": "fn(options: +android.app.ActivityOptions) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNewActivityOptions(android.app.ActivityOptions)"
          },
          "startActivity": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivity(android.content.Intent)"
          },
          "onGenericMotionEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onGenericMotionEvent(android.view.MotionEvent)"
          },
          "getSelectedItemId": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/app/ListActivity.html#getSelectedItemId()"
          },
          "onWindowAttributesChanged": {
            "!type": "fn(params: +android.view.WindowManager.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowAttributesChanged(android.view.WindowManager.LayoutParams)"
          },
          "onPostCreate": {
            "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPostCreate(android.os.Bundle, android.os.PersistableBundle)"
          },
          "onKeyUp": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyUp(int, android.view.KeyEvent)"
          },
          "enforceCallingOrSelfUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfUriPermission(android.net.Uri, int, java.lang.String)"
          },
          "grantUriPermission": {
            "!type": "fn(toPackage: string, uri: +android.net.Uri, modeFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#grantUriPermission(java.lang.String, android.net.Uri, int)"
          },
          "startActivityAsCaller": {
            "!type": "fn(intent: +android.content.Intent, options: +android.os.Bundle, ignoreTargetSecurity: bool, userId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityAsCaller(android.content.Intent, android.os.Bundle, boolean, int)"
          },
          "onActivityReenter": {
            "!type": "fn(resultCode: number, data: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActivityReenter(int, android.content.Intent)"
          },
          "dispatchKeyShortcutEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchKeyShortcutEvent(android.view.KeyEvent)"
          },
          "onNavigateUpFromChild": {
            "!type": "fn(child: +android.app.Activity) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNavigateUpFromChild(android.app.Activity)"
          },
          "onEnterAnimationComplete": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onEnterAnimationComplete()"
          },
          "setContentView": {
            "!type": "fn(layoutResID: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setContentView(int)"
          },
          "getPackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageName()"
          },
          "getActionBar": {
            "!type": "fn() -> +android.app.ActionBar",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getActionBar()"
          },
          "isDestroyed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isDestroyed()"
          },
          "sendBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "runOnUiThread": {
            "!type": "fn(action: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#runOnUiThread(java.lang.Runnable)"
          },
          "stopLockTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#stopLockTask()"
          },
          "createApplicationContext": {
            "!type": "fn(application: +android.content.pm.ApplicationInfo, flags: number) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createApplicationContext(android.content.pm.ApplicationInfo, int)"
          },
          "finishAffinity": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAffinity()"
          },
          "openContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#openContextMenu(android.view.View)"
          },
          "setTaskDescription": {
            "!type": "fn(taskDescription: +android.app.ActivityManager.TaskDescription) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setTaskDescription(android.app.ActivityManager.TaskDescription)"
          },
          "setTitleColor": {
            "!type": "fn(textColor: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setTitleColor(int)"
          },
          "showAssist": {
            "!type": "fn(args: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showAssist(android.os.Bundle)"
          },
          "onVisibleBehindCanceled": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onVisibleBehindCanceled()"
          },
          "finishAfterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAfterTransition()"
          },
          "startServiceAsUser": {
            "!type": "fn(service: +android.content.Intent, user: +android.os.UserHandle) -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startServiceAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "onNavigateUp": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNavigateUp()"
          },
          "getActivityToken": {
            "!type": "fn() -> +android.os.IBinder",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getActivityToken()"
          },
          "onAttachFragment": {
            "!type": "fn(fragment: +android.app.Fragment) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onAttachFragment(android.app.Fragment)"
          },
          "getApplication": {
            "!type": "fn() -> +android.app.Application",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getApplication()"
          },
          "applyOverrideConfiguration": {
            "!type": "fn(overrideConfiguration: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#applyOverrideConfiguration(android.content.res.Configuration)"
          },
          "fileList": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#fileList()"
          },
          "setSelection": {
            "!type": "fn(position: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/ListActivity.html#setSelection(int)"
          },
          "getTaskId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTaskId()"
          },
          "openOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#openOptionsMenu()"
          },
          "onBackgroundVisibleBehindChanged": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onBackgroundVisibleBehindChanged(boolean)"
          },
          "startNextMatchingActivity": {
            "!type": "fn(intent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startNextMatchingActivity(android.content.Intent)"
          },
          "onPrepareNavigateUpTaskStack": {
            "!type": "fn(builder: +android.app.TaskStackBuilder) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPrepareNavigateUpTaskStack(android.app.TaskStackBuilder)"
          },
          "onActionModeFinished": {
            "!type": "fn(mode: +android.view.ActionMode) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActionModeFinished(android.view.ActionMode)"
          },
          "getLocalClassName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLocalClassName()"
          },
          "managedQuery": {
            "!type": "fn(uri: +android.net.Uri, projection: +java.newArray, selection: string, sortOrder: string) -> +android.database.Cursor",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#managedQuery(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String)"
          },
          "checkPermission": {
            "!type": "fn(permission: string, pid: number, uid: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkPermission(java.lang.String, int, int)"
          },
          "getWallpaperDesiredMinimumHeight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumHeight()"
          },
          "startManagingCursor": {
            "!type": "fn(c: +android.database.Cursor) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startManagingCursor(android.database.Cursor)"
          },
          "onRequestPermissionsResult": {
            "!type": "fn(requestCode: number, permissions: +java.newArray, grantResults: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRequestPermissionsResult(int, java.lang.String[], int[])"
          },
          "revokeUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#revokeUriPermission(android.net.Uri, int)"
          },
          "startActivityIfNeeded": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityIfNeeded(android.content.Intent, int)"
          },
          "moveTaskToBack": {
            "!type": "fn(nonRoot: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#moveTaskToBack(boolean)"
          },
          "unregisterForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#unregisterForContextMenu(android.view.View)"
          },
          "setPersistent": {
            "!type": "fn(isPersistent: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setPersistent(boolean)"
          },
          "onUserInteraction": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onUserInteraction()"
          },
          "setFeatureDrawableUri": {
            "!type": "fn(featureId: number, uri: +android.net.Uri) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableUri(int, android.net.Uri)"
          },
          "onStateNotSaved": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onStateNotSaved()"
          },
          "sendStickyOrderedBroadcast": {
            "!type": "fn(intent: +android.content.Intent, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcast(android.content.Intent, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "sendStickyOrderedBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "setContentTransitionManager": {
            "!type": "fn(tm: +android.transition.TransitionManager) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setContentTransitionManager(android.transition.TransitionManager)"
          },
          "getLoaderManager": {
            "!type": "fn() -> +android.app.LoaderManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLoaderManager()"
          },
          "onRetainNonConfigurationInstance": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRetainNonConfigurationInstance()"
          },
          "getExternalFilesDir": {
            "!type": "fn(type: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDir(java.lang.String)"
          },
          "bindService": {
            "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindService(android.content.Intent, android.content.ServiceConnection, int)"
          },
          "startActivitiesAsUser": {
            "!type": "fn(intents: +java.newArray, options: +android.os.Bundle, userHandle: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivitiesAsUser(android.content.Intent[], android.os.Bundle, android.os.UserHandle)"
          },
          "onRestoreInstanceState": {
            "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRestoreInstanceState(android.os.Bundle, android.os.PersistableBundle)"
          },
          "recreate": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#recreate()"
          },
          "getDatabasePath": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDatabasePath(java.lang.String)"
          },
          "getListAdapter": {
            "!type": "fn() -> +android.widget.ListAdapter",
            "!url": "http://developer.android.com/reference/android/app/ListActivity.html#getListAdapter()"
          },
          "setEnterSharedElementCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setEnterSharedElementCallback(android.app.SharedElementCallback)"
          },
          "onCreateContextMenu": {
            "!type": "fn(menu: +android.view.ContextMenu, v: +android.view.View, menuInfo: +android.view.ContextMenu.ContextMenuInfo) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenu.ContextMenuInfo)"
          },
          "onProvideAssistData": {
            "!type": "fn(data: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideAssistData(android.os.Bundle)"
          },
          "checkSelfPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkSelfPermission(java.lang.String)"
          },
          "onPanelClosed": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPanelClosed(int, android.view.Menu)"
          },
          "onCreate": {
            "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreate(android.os.Bundle, android.os.PersistableBundle)"
          },
          "enforceCallingOrSelfPermission": {
            "!type": "fn(permission: string, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfPermission(java.lang.String, java.lang.String)"
          },
          "onTouchEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTouchEvent(android.view.MotionEvent)"
          },
          "getTheme": {
            "!type": "fn() -> +android.content.res.Resources.Theme",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getTheme()"
          },
          "onKeyLongPress": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyLongPress(int, android.view.KeyEvent)"
          },
          "setMediaController": {
            "!type": "fn(controller: +android.media.session.MediaController) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setMediaController(android.media.session.MediaController)"
          },
          "getChangingConfigurations": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getChangingConfigurations()"
          },
          "finishActivity": {
            "!type": "fn(requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishActivity(int)"
          },
          "onCreatePanelView": {
            "!type": "fn(featureId: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreatePanelView(int)"
          },
          "getSearchEvent": {
            "!type": "fn() -> +android.view.SearchEvent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getSearchEvent()"
          },
          "setVisible": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setVisible(boolean)"
          },
          "startIntentSender": {
            "!type": "fn(intent: +android.content.IntentSender, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSender(android.content.IntentSender, android.content.Intent, int, int, int)"
          },
          "getExternalFilesDirs": {
            "!type": "fn(type: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDirs(java.lang.String)"
          },
          "stopServiceAsUser": {
            "!type": "fn(name: +android.content.Intent, user: +android.os.UserHandle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopServiceAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "unbindService": {
            "!type": "fn(conn: +android.content.ServiceConnection) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unbindService(android.content.ServiceConnection)"
          },
          "startActivityAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "onKeyShortcut": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyShortcut(int, android.view.KeyEvent)"
          },
          "getSharedPrefsFile": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPrefsFile(java.lang.String)"
          },
          "getDir": {
            "!type": "fn(name: string, mode: number) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDir(java.lang.String, int)"
          },
          "releaseInstance": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#releaseInstance()"
          },
          "onKeyMultiple": {
            "!type": "fn(keyCode: number, repeatCount: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyMultiple(int, int, android.view.KeyEvent)"
          },
          "onPreparePanel": {
            "!type": "fn(featureId: number, view: +android.view.View, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPreparePanel(int, android.view.View, android.view.Menu)"
          },
          "bindServiceAsUser": {
            "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number, user: +android.os.UserHandle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindServiceAsUser(android.content.Intent, android.content.ServiceConnection, int, android.os.UserHandle)"
          },
          "closeContextMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#closeContextMenu()"
          },
          "startSearch": {
            "!type": "fn(initialQuery: string, selectInitialQuery: bool, appSearchData: +android.os.Bundle, globalSearch: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startSearch(java.lang.String, boolean, android.os.Bundle, boolean)"
          },
          "getComponentName": {
            "!type": "fn() -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getComponentName()"
          },
          "showLockTaskEscapeMessage": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showLockTaskEscapeMessage()"
          },
          "getContentTransitionManager": {
            "!type": "fn() -> +android.transition.TransitionManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getContentTransitionManager()"
          },
          "onBackPressed": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onBackPressed()"
          },
          "getExternalCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDir()"
          },
          "getDrawable": {
            "!type": "fn(id: number) -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getDrawable(int)"
          },
          "setImmersive": {
            "!type": "fn(i: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setImmersive(boolean)"
          },
          "openFileOutput": {
            "!type": "fn(name: string, mode: number) -> +java.io.FileOutputStream",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileOutput(java.lang.String, int)"
          },
          "getAssets": {
            "!type": "fn() -> +android.content.res.AssetManager",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getAssets()"
          },
          "onLowMemory": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onLowMemory()"
          },
          "getParentActivityIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getParentActivityIntent()"
          },
          "convertFromTranslucent": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#convertFromTranslucent()"
          },
          "dispatchTouchEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchTouchEvent(android.view.MotionEvent)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getContentScene": {
            "!type": "fn() -> +android.transition.Scene",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getContentScene()"
          },
          "getCallingPackage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCallingPackage()"
          },
          "deleteDatabase": {
            "!type": "fn(name: string) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteDatabase(java.lang.String)"
          },
          "checkCallingPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingPermission(java.lang.String)"
          },
          "dispatchGenericMotionEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchGenericMotionEvent(android.view.MotionEvent)"
          },
          "getExternalMediaDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalMediaDirs()"
          },
          "getCallingActivity": {
            "!type": "fn() -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCallingActivity()"
          },
          "onAttachedToWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onAttachedToWindow()"
          },
          "clearWallpaper": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#clearWallpaper()"
          },
          "setTitle": {
            "!type": "fn(title: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/app/LauncherActivity.html#setTitle(java.lang.CharSequence)"
          },
          "getSelectedItemPosition": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/ListActivity.html#getSelectedItemPosition()"
          },
          "enforceCallingUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingUriPermission(android.net.Uri, int, java.lang.String)"
          },
          "getThemeResId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getThemeResId()"
          },
          "onWindowFocusChanged": {
            "!type": "fn(hasFocus: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowFocusChanged(boolean)"
          },
          "registerComponentCallbacks": {
            "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
            "!url": "http://developer.android.com/reference/android/content/Context.html#registerComponentCallbacks(android.content.ComponentCallbacks)"
          },
          "getText": {
            "!type": "fn(resId: number) -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getText(int)"
          },
          "enforceUriPermission": {
            "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceUriPermission(android.net.Uri, int, int, int, java.lang.String)"
          },
          "onProvideReferrer": {
            "!type": "fn() -> +android.net.Uri",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideReferrer()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "unregisterComponentCallbacks": {
            "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
            "!url": "http://developer.android.com/reference/android/content/Context.html#unregisterComponentCallbacks(android.content.ComponentCallbacks)"
          },
          "finish": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finish()"
          },
          "getWallpaperDesiredMinimumWidth": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumWidth()"
          },
          "onMenuItemSelected": {
            "!type": "fn(featureId: number, item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onMenuItemSelected(int, android.view.MenuItem)"
          },
          "getWallpaper": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaper()"
          },
          "isVoiceInteraction": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isVoiceInteraction()"
          },
          "navigateUpTo": {
            "!type": "fn(upIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#navigateUpTo(android.content.Intent)"
          },
          "onCreatePanelMenu": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreatePanelMenu(int, android.view.Menu)"
          },
          "openOrCreateDatabase": {
            "!type": "fn(name: string, mode: number, factory: +android.database.sqlite.SQLiteDatabase.CursorFactory) -> +android.database.sqlite.SQLiteDatabase",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openOrCreateDatabase(java.lang.String, int, android.database.sqlite.SQLiteDatabase.CursorFactory)"
          },
          "openFileInput": {
            "!type": "fn(name: string) -> +java.io.FileInputStream",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileInput(java.lang.String)"
          },
          "dump": {
            "!type": "fn(prefix: string, fd: +java.io.FileDescriptor, writer: +java.io.PrintWriter, args: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])"
          },
          "onCreateDescription": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateDescription()"
          },
          "invalidateOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#invalidateOptionsMenu()"
          },
          "sendOrderedBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, receiverPermission: string, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, java.lang.String, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "canStartActivityForResult": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#canStartActivityForResult()"
          },
          "setProgress": {
            "!type": "fn(progress: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgress(int)"
          },
          "navigateUpToFromChild": {
            "!type": "fn(child: +android.app.Activity, upIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#navigateUpToFromChild(android.app.Activity, android.content.Intent)"
          },
          "getContentResolver": {
            "!type": "fn() -> +android.content.ContentResolver",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getContentResolver()"
          },
          "isFinishing": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isFinishing()"
          },
          "getFragmentManager": {
            "!type": "fn() -> +android.app.FragmentManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getFragmentManager()"
          },
          "getParent": {
            "!type": "fn() -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getParent()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "checkCallingUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingUriPermission(android.net.Uri, int)"
          },
          "setExitSharedElementCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setExitSharedElementCallback(android.app.SharedElementCallback)"
          },
          "checkUriPermission": {
            "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkUriPermission(android.net.Uri, int, int, int)"
          },
          "setFeatureDrawableAlpha": {
            "!type": "fn(featureId: number, alpha: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableAlpha(int, int)"
          },
          "registerReceiverAsUser": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver, user: +android.os.UserHandle, filter: +android.content.IntentFilter, broadcastPermission: string, scheduler: +android.os.Handler) -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiverAsUser(android.content.BroadcastReceiver, android.os.UserHandle, android.content.IntentFilter, java.lang.String, android.os.Handler)"
          },
          "getPackageCodePath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageCodePath()"
          },
          "getWindow": {
            "!type": "fn() -> +android.view.Window",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getWindow()"
          },
          "startIntentSenderFromChild": {
            "!type": "fn(child: +android.app.Activity, intent: +android.content.IntentSender, requestCode: number, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSenderFromChild(android.app.Activity, android.content.IntentSender, int, android.content.Intent, int, int, int)"
          },
          "postponeEnterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#postponeEnterTransition()"
          },
          "shouldUpRecreateTask": {
            "!type": "fn(targetIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#shouldUpRecreateTask(android.content.Intent)"
          },
          "removeStickyBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "deleteFile": {
            "!type": "fn(name: string) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteFile(java.lang.String)"
          },
          "onContextMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onContextMenuClosed(android.view.Menu)"
          },
          "onCreateOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateOptionsMenu(android.view.Menu)"
          },
          "getClassLoader": {
            "!type": "fn() -> +java.lang.ClassLoader",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getClassLoader()"
          },
          "dispatchPopulateAccessibilityEvent": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
          },
          "setIntent": {
            "!type": "fn(newIntent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setIntent(android.content.Intent)"
          },
          "setVolumeControlStream": {
            "!type": "fn(streamType: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setVolumeControlStream(int)"
          },
          "getObbDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDir()"
          },
          "startInstrumentation": {
            "!type": "fn(className: +android.content.ComponentName, profileFile: string, arguments: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startInstrumentation(android.content.ComponentName, java.lang.String, android.os.Bundle)"
          },
          "reportFullyDrawn": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#reportFullyDrawn()"
          },
          "setProgressBarIndeterminateVisibility": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarIndeterminateVisibility(boolean)"
          },
          "finishFromChild": {
            "!type": "fn(child: +android.app.Activity) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishFromChild(android.app.Activity)"
          },
          "getColorStateList": {
            "!type": "fn(id: number) -> +android.content.res.ColorStateList",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getColorStateList(int)"
          },
          "getTitleColor": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTitleColor()"
          },
          "getMediaController": {
            "!type": "fn() -> +android.media.session.MediaController",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getMediaController()"
          },
          "sendBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcast(android.content.Intent)"
          },
          "overridePendingTransition": {
            "!type": "fn(enterAnim: number, exitAnim: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#overridePendingTransition(int, int)"
          },
          "dispatchTrackballEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchTrackballEvent(android.view.MotionEvent)"
          },
          "getNoBackupFilesDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getNoBackupFilesDir()"
          },
          "startActionMode": {
            "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActionMode(android.view.ActionMode.Callback)"
          },
          "getApplicationContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationContext()"
          },
          "onCreateNavigateUpTaskStack": {
            "!type": "fn(builder: +android.app.TaskStackBuilder) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateNavigateUpTaskStack(android.app.TaskStackBuilder)"
          },
          "createDisplayContext": {
            "!type": "fn(display: +android.view.Display) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createDisplayContext(android.view.Display)"
          },
          "onActionModeStarted": {
            "!type": "fn(mode: +android.view.ActionMode) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActionModeStarted(android.view.ActionMode)"
          },
          "dispatchKeyEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchKeyEvent(android.view.KeyEvent)"
          },
          "enforceCallingPermission": {
            "!type": "fn(permission: string, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingPermission(java.lang.String, java.lang.String)"
          },
          "createPackageContextAsUser": {
            "!type": "fn(packageName: string, flags: number, user: +android.os.UserHandle) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContextAsUser(java.lang.String, int, android.os.UserHandle)"
          },
          "setFeatureDrawable": {
            "!type": "fn(featureId: number, drawable: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawable(int, android.graphics.drawable.Drawable)"
          },
          "dismissDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dismissDialog(int)"
          },
          "onMenuOpened": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onMenuOpened(int, android.view.Menu)"
          },
          "getSystemService": {
            "!type": "fn(name: string) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getSystemService(java.lang.String)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "startActivities": {
            "!type": "fn(intents: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivities(android.content.Intent[])"
          },
          "startService": {
            "!type": "fn(service: +android.content.Intent) -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startService(android.content.Intent)"
          },
          "getFileStreamPath": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFileStreamPath(java.lang.String)"
          },
          "addContentView": {
            "!type": "fn(view: +android.view.View, params: +android.view.ViewGroup.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#addContentView(android.view.View, android.view.ViewGroup.LayoutParams)"
          },
          "closeOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#closeOptionsMenu()"
          },
          "sendStickyBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "takeKeyEvents": {
            "!type": "fn(get: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#takeKeyEvents(boolean)"
          },
          "getTitle": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTitle()"
          },
          "getWindowManager": {
            "!type": "fn() -> +android.view.WindowManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getWindowManager()"
          },
          "checkCallingOrSelfUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfUriPermission(android.net.Uri, int)"
          },
          "getBasePackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBasePackageName()"
          },
          "stopManagingCursor": {
            "!type": "fn(c: +android.database.Cursor) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#stopManagingCursor(android.database.Cursor)"
          },
          "setWallpaper": {
            "!type": "fn(bitmap: +android.graphics.Bitmap) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#setWallpaper(android.graphics.Bitmap)"
          },
          "sendOrderedBroadcast": {
            "!type": "fn(intent: +android.content.Intent, receiverPermission: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcast(android.content.Intent, java.lang.String)"
          },
          "unregisterReceiver": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unregisterReceiver(android.content.BroadcastReceiver)"
          },
          "getColor": {
            "!type": "fn(id: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getColor(int)"
          },
          "getMenuInflater": {
            "!type": "fn() -> +android.view.MenuInflater",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getMenuInflater()"
          },
          "stopService": {
            "!type": "fn(name: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopService(android.content.Intent)"
          },
          "getMainLooper": {
            "!type": "fn() -> +android.os.Looper",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getMainLooper()"
          },
          "startActivityFromChild": {
            "!type": "fn(child: +android.app.Activity, intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityFromChild(android.app.Activity, android.content.Intent, int)"
          },
          "startLockTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startLockTask()"
          },
          "removeStickyBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcast(android.content.Intent)"
          },
          "getExternalCacheDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDirs()"
          },
          "getReferrer": {
            "!type": "fn() -> +android.net.Uri",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getReferrer()"
          },
          "isImmersive": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isImmersive()"
          },
          "shouldShowRequestPermissionRationale": {
            "!type": "fn(permission: string) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#shouldShowRequestPermissionRationale(java.lang.String)"
          },
          "getPreferences": {
            "!type": "fn(mode: number) -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getPreferences(int)"
          },
          "getFilesDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFilesDir()"
          },
          "findViewById": {
            "!type": "fn(id: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#findViewById(int)"
          },
          "getSharedPreferences": {
            "!type": "fn(name: string, mode: number) -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPreferences(java.lang.String, int)"
          },
          "isTaskRoot": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isTaskRoot()"
          },
          "getLastNonConfigurationInstance": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLastNonConfigurationInstance()"
          },
          "getDisplayAdjustments": {
            "!type": "fn(displayId: number) -> +android.view.DisplayAdjustments",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDisplayAdjustments(int)"
          },
          "getRequestedOrientation": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getRequestedOrientation()"
          },
          "onTrimMemory": {
            "!type": "fn(level: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTrimMemory(int)"
          },
          "removeDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#removeDialog(int)"
          },
          "getUserId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getUserId()"
          },
          "requestVisibleBehind": {
            "!type": "fn(visible: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestVisibleBehind(boolean)"
          },
          "onOptionsMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onOptionsMenuClosed(android.view.Menu)"
          },
          "onCreateView": {
            "!type": "fn(name: string, context: +android.content.Context, attrs: +android.util.AttributeSet) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateView(java.lang.String, android.content.Context, android.util.AttributeSet)"
          },
          "startActivityForResultAsUser": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityForResultAsUser(android.content.Intent, int, android.os.UserHandle)"
          },
          "startIntentSenderForResult": {
            "!type": "fn(intent: +android.content.IntentSender, requestCode: number, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSenderForResult(android.content.IntentSender, int, android.content.Intent, int, int, int)"
          },
          "getListView": {
            "!type": "fn() -> +android.widget.ListView",
            "!url": "http://developer.android.com/reference/android/app/ListActivity.html#getListView()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          }
        }
      },
      "SearchDialog": {
        "!url": "http://developer.android.com/reference/android/app/SearchDialog.html",
        "!type": "fn(context: +android.content.Context, searchManager: +android.app.SearchManager)",
        "SearchBar": {
          "!url": "http://developer.android.com/reference/android/app/SearchDialog.SearchBar.html",
          "!type": "fn(context: +android.content.Context, attrs: +android.util.AttributeSet)",
          "OVER_SCROLL_ALWAYS": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#OVER_SCROLL_ALWAYS"
          },
          "ACCESSIBILITY_LIVE_REGION_ASSERTIVE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#ACCESSIBILITY_LIVE_REGION_ASSERTIVE"
          },
          "HORIZONTAL": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/widget/LinearLayout.html#HORIZONTAL"
          },
          "LAYOUT_DIRECTION_INHERIT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#LAYOUT_DIRECTION_INHERIT"
          },
          "SCROLL_INDICATOR_TOP": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_INDICATOR_TOP"
          },
          "ACCESSIBILITY_LIVE_REGION_POLITE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#ACCESSIBILITY_LIVE_REGION_POLITE"
          },
          "TEXT_DIRECTION_RTL": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_RTL"
          },
          "PUBLIC_STATUS_BAR_VISIBILITY_MASK": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#PUBLIC_STATUS_BAR_VISIBILITY_MASK"
          },
          "LAYOUT_MODE_DEFAULT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#LAYOUT_MODE_DEFAULT"
          },
          "ROTATION_Y": {
            "!type": "+android.util.Property",
            "!url": "http://developer.android.com/reference/android/view/View.html#ROTATION_Y"
          },
          "ROTATION_X": {
            "!type": "+android.util.Property",
            "!url": "http://developer.android.com/reference/android/view/View.html#ROTATION_X"
          },
          "STATUS_BAR_HIDDEN": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_HIDDEN"
          },
          "SCROLL_AXIS_NONE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_AXIS_NONE"
          },
          "TEXT_ALIGNMENT_VIEW_START": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_ALIGNMENT_VIEW_START"
          },
          "TRANSLATION_Z": {
            "!type": "+android.util.Property",
            "!url": "http://developer.android.com/reference/android/view/View.html#TRANSLATION_Z"
          },
          "IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS"
          },
          "FOCUS_BLOCK_DESCENDANTS": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#FOCUS_BLOCK_DESCENDANTS"
          },
          "TRANSLATION_Y": {
            "!type": "+android.util.Property",
            "!url": "http://developer.android.com/reference/android/view/View.html#TRANSLATION_Y"
          },
          "INVISIBLE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#INVISIBLE"
          },
          "TRANSLATION_X": {
            "!type": "+android.util.Property",
            "!url": "http://developer.android.com/reference/android/view/View.html#TRANSLATION_X"
          },
          "SCROLL_INDICATOR_LEFT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_INDICATOR_LEFT"
          },
          "NO_ID": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#NO_ID"
          },
          "LAYOUT_DIRECTION_RTL": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#LAYOUT_DIRECTION_RTL"
          },
          "SOUND_EFFECTS_ENABLED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#SOUND_EFFECTS_ENABLED"
          },
          "TEXT_DIRECTION_LTR": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_LTR"
          },
          "ALPHA": {
            "!type": "+android.util.Property",
            "!url": "http://developer.android.com/reference/android/view/View.html#ALPHA"
          },
          "LAYER_TYPE_HARDWARE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#LAYER_TYPE_HARDWARE"
          },
          "TEXT_DIRECTION_LOCALE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_LOCALE"
          },
          "SYSTEM_UI_FLAG_LAYOUT_STABLE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_LAYOUT_STABLE"
          },
          "DRAWING_CACHE_QUALITY_HIGH": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#DRAWING_CACHE_QUALITY_HIGH"
          },
          "FOCUS_LEFT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#FOCUS_LEFT"
          },
          "SYSTEM_UI_FLAG_LIGHT_STATUS_BAR": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_LIGHT_STATUS_BAR"
          },
          "SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN"
          },
          "LAYER_TYPE_NONE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#LAYER_TYPE_NONE"
          },
          "TEXT_ALIGNMENT_INHERIT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_ALIGNMENT_INHERIT"
          },
          "STATUS_BAR_DISABLE_BACK": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_BACK"
          },
          "PERSISTENT_ALL_CACHES": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#PERSISTENT_ALL_CACHES"
          },
          "FOCUSABLES_ALL": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#FOCUSABLES_ALL"
          },
          "SCROLL_AXIS_VERTICAL": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_AXIS_VERTICAL"
          },
          "STATUS_BAR_TRANSLUCENT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_TRANSLUCENT"
          },
          "FIND_VIEWS_WITH_CONTENT_DESCRIPTION": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#FIND_VIEWS_WITH_CONTENT_DESCRIPTION"
          },
          "DEBUG_DRAW": {
            "!type": "bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#DEBUG_DRAW"
          },
          "SCALE_Y": {
            "!type": "+android.util.Property",
            "!url": "http://developer.android.com/reference/android/view/View.html#SCALE_Y"
          },
          "SCALE_X": {
            "!type": "+android.util.Property",
            "!url": "http://developer.android.com/reference/android/view/View.html#SCALE_X"
          },
          "SCROLLBAR_POSITION_LEFT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#SCROLLBAR_POSITION_LEFT"
          },
          "STATUS_BAR_UNHIDE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_UNHIDE"
          },
          "LAYOUT_MODE_OPTICAL_BOUNDS": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#LAYOUT_MODE_OPTICAL_BOUNDS"
          },
          "LAYOUT_DIRECTION_LTR": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#LAYOUT_DIRECTION_LTR"
          },
          "NAVIGATION_BAR_TRANSIENT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#NAVIGATION_BAR_TRANSIENT"
          },
          "GONE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#GONE"
          },
          "SCROLLBARS_INSIDE_INSET": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#SCROLLBARS_INSIDE_INSET"
          },
          "FOCUS_BACKWARD": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#FOCUS_BACKWARD"
          },
          "FOCUS_AFTER_DESCENDANTS": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#FOCUS_AFTER_DESCENDANTS"
          },
          "STATUS_BAR_DISABLE_SEARCH": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_SEARCH"
          },
          "STATUS_BAR_DISABLE_HOME": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_HOME"
          },
          "FOCUSABLES_TOUCH_MODE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#FOCUSABLES_TOUCH_MODE"
          },
          "SYSTEM_UI_LAYOUT_FLAGS": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_LAYOUT_FLAGS"
          },
          "STATUS_BAR_DISABLE_NOTIFICATION_ALERTS": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_NOTIFICATION_ALERTS"
          },
          "HAPTIC_FEEDBACK_ENABLED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#HAPTIC_FEEDBACK_ENABLED"
          },
          "STATUS_BAR_VISIBLE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_VISIBLE"
          },
          "FOCUS_FORWARD": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#FOCUS_FORWARD"
          },
          "LAYOUT_MODE_CLIP_BOUNDS": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#LAYOUT_MODE_CLIP_BOUNDS"
          },
          "DRAG_FLAG_GLOBAL": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#DRAG_FLAG_GLOBAL"
          },
          "SYSTEM_UI_FLAG_VISIBLE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_VISIBLE"
          },
          "ACCESSIBILITY_CURSOR_POSITION_UNDEFINED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#ACCESSIBILITY_CURSOR_POSITION_UNDEFINED"
          },
          "SYSTEM_UI_FLAG_IMMERSIVE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_IMMERSIVE"
          },
          "STATUS_BAR_TRANSIENT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_TRANSIENT"
          },
          "MEASURED_STATE_MASK": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#MEASURED_STATE_MASK"
          },
          "ACCESSIBILITY_LIVE_REGION_NONE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#ACCESSIBILITY_LIVE_REGION_NONE"
          },
          "SCROLLBARS_OUTSIDE_OVERLAY": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#SCROLLBARS_OUTSIDE_OVERLAY"
          },
          "TEXT_ALIGNMENT_GRAVITY": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_ALIGNMENT_GRAVITY"
          },
          "DRAWING_CACHE_QUALITY_AUTO": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#DRAWING_CACHE_QUALITY_AUTO"
          },
          "TEXT_ALIGNMENT_VIEW_END": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_ALIGNMENT_VIEW_END"
          },
          "Z": {
            "!type": "+android.util.Property",
            "!url": "http://developer.android.com/reference/android/view/View.html#Z"
          },
          "Y": {
            "!type": "+android.util.Property",
            "!url": "http://developer.android.com/reference/android/view/View.html#Y"
          },
          "X": {
            "!type": "+android.util.Property",
            "!url": "http://developer.android.com/reference/android/view/View.html#X"
          },
          "SCROLL_INDICATOR_START": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_INDICATOR_START"
          },
          "VISIBLE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#VISIBLE"
          },
          "TEXT_ALIGNMENT_TEXT_START": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_ALIGNMENT_TEXT_START"
          },
          "SCROLL_AXIS_HORIZONTAL": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_AXIS_HORIZONTAL"
          },
          "IMPORTANT_FOR_ACCESSIBILITY_NO": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#IMPORTANT_FOR_ACCESSIBILITY_NO"
          },
          "STATUS_BAR_DISABLE_NOTIFICATION_TICKER": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_NOTIFICATION_TICKER"
          },
          "OVER_SCROLL_IF_CONTENT_SCROLLS": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#OVER_SCROLL_IF_CONTENT_SCROLLS"
          },
          "FOCUS_RIGHT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#FOCUS_RIGHT"
          },
          "OVER_SCROLL_NEVER": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#OVER_SCROLL_NEVER"
          },
          "TEXT_DIRECTION_FIRST_STRONG_RTL": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_FIRST_STRONG_RTL"
          },
          "SCROLL_INDICATOR_BOTTOM": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_INDICATOR_BOTTOM"
          },
          "NAVIGATION_BAR_TRANSLUCENT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#NAVIGATION_BAR_TRANSLUCENT"
          },
          "SHOW_DIVIDER_MIDDLE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/widget/LinearLayout.html#SHOW_DIVIDER_MIDDLE"
          },
          "SYSTEM_UI_TRANSPARENT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_TRANSPARENT"
          },
          "SCREEN_STATE_ON": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#SCREEN_STATE_ON"
          },
          "VERTICAL": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/widget/LinearLayout.html#VERTICAL"
          },
          "PERSISTENT_ANIMATION_CACHE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#PERSISTENT_ANIMATION_CACHE"
          },
          "TEXT_DIRECTION_INHERIT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_INHERIT"
          },
          "IMPORTANT_FOR_ACCESSIBILITY_YES": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#IMPORTANT_FOR_ACCESSIBILITY_YES"
          },
          "SCROLLBARS_INSIDE_OVERLAY": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#SCROLLBARS_INSIDE_OVERLAY"
          },
          "ROTATION": {
            "!type": "+android.util.Property",
            "!url": "http://developer.android.com/reference/android/view/View.html#ROTATION"
          },
          "FIND_VIEWS_WITH_ACCESSIBILITY_NODE_PROVIDERS": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#FIND_VIEWS_WITH_ACCESSIBILITY_NODE_PROVIDERS"
          },
          "SCROLL_INDICATOR_END": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_INDICATOR_END"
          },
          "NAVIGATION_BAR_UNHIDE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#NAVIGATION_BAR_UNHIDE"
          },
          "MEASURED_HEIGHT_STATE_SHIFT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#MEASURED_HEIGHT_STATE_SHIFT"
          },
          "TEXT_DIRECTION_FIRST_STRONG_LTR": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_FIRST_STRONG_LTR"
          },
          "KEEP_SCREEN_ON": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#KEEP_SCREEN_ON"
          },
          "TEXT_DIRECTION_FIRST_STRONG": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_FIRST_STRONG"
          },
          "STATUS_BAR_DISABLE_CLOCK": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_CLOCK"
          },
          "STATUS_BAR_DISABLE_EXPAND": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_EXPAND"
          },
          "FOCUS_BEFORE_DESCENDANTS": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#FOCUS_BEFORE_DESCENDANTS"
          },
          "SYSTEM_UI_FLAG_HIDE_NAVIGATION": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_HIDE_NAVIGATION"
          },
          "SCREEN_STATE_OFF": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#SCREEN_STATE_OFF"
          },
          "TEXT_ALIGNMENT_TEXT_END": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_ALIGNMENT_TEXT_END"
          },
          "SYSTEM_UI_FLAG_FULLSCREEN": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_FULLSCREEN"
          },
          "FIND_VIEWS_WITH_TEXT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#FIND_VIEWS_WITH_TEXT"
          },
          "STATUS_BAR_DISABLE_NOTIFICATION_ICONS": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_NOTIFICATION_ICONS"
          },
          "PERSISTENT_NO_CACHE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#PERSISTENT_NO_CACHE"
          },
          "STATUS_BAR_DISABLE_RECENT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_RECENT"
          },
          "STATUS_BAR_DISABLE_SYSTEM_INFO": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_SYSTEM_INFO"
          },
          "DRAWING_CACHE_QUALITY_LOW": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#DRAWING_CACHE_QUALITY_LOW"
          },
          "PERSISTENT_SCROLLING_CACHE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#PERSISTENT_SCROLLING_CACHE"
          },
          "SCROLL_INDICATOR_RIGHT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_INDICATOR_RIGHT"
          },
          "MEASURED_STATE_TOO_SMALL": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#MEASURED_STATE_TOO_SMALL"
          },
          "TEXT_ALIGNMENT_CENTER": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_ALIGNMENT_CENTER"
          },
          "SCROLLBARS_OUTSIDE_INSET": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#SCROLLBARS_OUTSIDE_INSET"
          },
          "TEXT_DIRECTION_ANY_RTL": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_ANY_RTL"
          },
          "LAYER_TYPE_SOFTWARE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#LAYER_TYPE_SOFTWARE"
          },
          "IMPORTANT_FOR_ACCESSIBILITY_AUTO": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#IMPORTANT_FOR_ACCESSIBILITY_AUTO"
          },
          "MEASURED_SIZE_MASK": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#MEASURED_SIZE_MASK"
          },
          "mDebugViewAttributes": {
            "!type": "bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#mDebugViewAttributes"
          },
          "SCROLLBAR_POSITION_RIGHT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#SCROLLBAR_POSITION_RIGHT"
          },
          "LAYOUT_DIRECTION_LOCALE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#LAYOUT_DIRECTION_LOCALE"
          },
          "SHOW_DIVIDER_BEGINNING": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/widget/LinearLayout.html#SHOW_DIVIDER_BEGINNING"
          },
          "LAYOUT_DIRECTION_UNDEFINED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#LAYOUT_DIRECTION_UNDEFINED"
          },
          "SCROLLBAR_POSITION_DEFAULT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#SCROLLBAR_POSITION_DEFAULT"
          },
          "SHOW_DIVIDER_NONE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/widget/LinearLayout.html#SHOW_DIVIDER_NONE"
          },
          "RECENT_APPS_VISIBLE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#RECENT_APPS_VISIBLE"
          },
          "DEBUG_LAYOUT_PROPERTY": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/view/View.html#DEBUG_LAYOUT_PROPERTY"
          },
          "SYSTEM_UI_CLEARABLE_FLAGS": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_CLEARABLE_FLAGS"
          },
          "FOCUS_UP": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#FOCUS_UP"
          },
          "SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION"
          },
          "SYSTEM_UI_FLAG_LOW_PROFILE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_LOW_PROFILE"
          },
          "SYSTEM_UI_FLAG_IMMERSIVE_STICKY": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_IMMERSIVE_STICKY"
          },
          "SHOW_DIVIDER_END": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/widget/LinearLayout.html#SHOW_DIVIDER_END"
          },
          "FOCUS_DOWN": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/View.html#FOCUS_DOWN"
          },
          "getDefaultSize": {
            "!type": "fn(size: number, measureSpec: number) -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getDefaultSize(int, int)"
          },
          "combineMeasuredStates": {
            "!type": "fn(curState: number, newState: number) -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#combineMeasuredStates(int, int)"
          },
          "getChildMeasureSpec": {
            "!type": "fn(spec: number, padding: number, childDimension: number) -> number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getChildMeasureSpec(int, int, int)"
          },
          "resolveSizeAndState": {
            "!type": "fn(size: number, measureSpec: number, childMeasuredState: number) -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#resolveSizeAndState(int, int, int)"
          },
          "resolveSize": {
            "!type": "fn(size: number, measureSpec: number) -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#resolveSize(int, int)"
          },
          "generateViewId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#generateViewId()"
          },
          "isLayoutModeOptical": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isLayoutModeOptical(java.lang.Object)"
          },
          "inflate": {
            "!type": "fn(context: +android.content.Context, resource: number, root: +android.view.ViewGroup) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/View.html#inflate(android.content.Context, int, android.view.ViewGroup)"
          },
          "prototype": {
            "setFitsSystemWindows": {
              "!type": "fn(fitSystemWindows: bool) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setFitsSystemWindows(boolean)"
            },
            "dispatchSystemUiVisibilityChanged": {
              "!type": "fn(visible: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchSystemUiVisibilityChanged(int)"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "isScrollbarFadingEnabled": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isScrollbarFadingEnabled()"
            },
            "setPressed": {
              "!type": "fn(pressed: bool) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setPressed(boolean)"
            },
            "startAnimation": {
              "!type": "fn(animation: +android.view.animation.Animation) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#startAnimation(android.view.animation.Animation)"
            },
            "getDrawingTime": {
              "!type": "fn() -> +java.lang.Long",
              "!url": "http://developer.android.com/reference/android/view/View.html#getDrawingTime()"
            },
            "setHorizontalScrollBarEnabled": {
              "!type": "fn(horizontalScrollBarEnabled: bool) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setHorizontalScrollBarEnabled(boolean)"
            },
            "setTagInternal": {
              "!type": "fn(key: number, tag: +java.lang.Object) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setTagInternal(int, java.lang.Object)"
            },
            "removeCallbacks": {
              "!type": "fn(action: +java.lang.Runnable) -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#removeCallbacks(java.lang.Runnable)"
            },
            "isShown": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isShown()"
            },
            "onTouchEvent": {
              "!type": "fn(event: +android.view.MotionEvent) -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#onTouchEvent(android.view.MotionEvent)"
            },
            "cancelPendingInputEvents": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#cancelPendingInputEvents()"
            },
            "setTransitionVisibility": {
              "!type": "fn(visibility: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setTransitionVisibility(int)"
            },
            "getClipChildren": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getClipChildren()"
            },
            "setEnabled": {
              "!type": "fn(enabled: bool) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setEnabled(boolean)"
            },
            "setVerticalScrollBarEnabled": {
              "!type": "fn(verticalScrollBarEnabled: bool) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setVerticalScrollBarEnabled(boolean)"
            },
            "getRawLayoutDirection": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getRawLayoutDirection()"
            },
            "setRight": {
              "!type": "fn(right: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setRight(int)"
            },
            "getAccessibilityClassName": {
              "!type": "fn() -> +java.lang.CharSequence",
              "!url": "http://developer.android.com/reference/android/widget/LinearLayout.html#getAccessibilityClassName()"
            },
            "getNextFocusDownId": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getNextFocusDownId()"
            },
            "onRequestSendAccessibilityEventInternal": {
              "!type": "fn(child: +android.view.View, event: +android.view.accessibility.AccessibilityEvent) -> bool",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onRequestSendAccessibilityEventInternal(android.view.View, android.view.accessibility.AccessibilityEvent)"
            },
            "getTransitionName": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/view/View.html#getTransitionName()"
            },
            "getTop": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getTop()"
            },
            "dispatchNestedFling": {
              "!type": "fn(velocityX: +java.lang.Float, velocityY: +java.lang.Float, consumed: bool) -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#dispatchNestedFling(float, float, boolean)"
            },
            "onKeyUp": {
              "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#onKeyUp(int, android.view.KeyEvent)"
            },
            "setScrollContainer": {
              "!type": "fn(isScrollContainer: bool) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setScrollContainer(boolean)"
            },
            "getVisibility": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getVisibility()"
            },
            "requestFitSystemWindows": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#requestFitSystemWindows()"
            },
            "setAccessibilitySelection": {
              "!type": "fn(start: number, end: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setAccessibilitySelection(int, int)"
            },
            "getLeft": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getLeft()"
            },
            "dispatchWindowFocusChanged": {
              "!type": "fn(hasFocus: bool) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchWindowFocusChanged(boolean)"
            },
            "findViewByPredicateInsideOut": {
              "!type": "fn(start: +android.view.View, predicate: +com.android.internal.util.Predicate) -> +android.view.View",
              "!url": "http://developer.android.com/reference/android/view/View.html#findViewByPredicateInsideOut(android.view.View, com.android.internal.util.Predicate)"
            },
            "getForeground": {
              "!type": "fn() -> +android.graphics.drawable.Drawable",
              "!url": "http://developer.android.com/reference/android/view/View.html#getForeground()"
            },
            "requestChildRectangleOnScreen": {
              "!type": "fn(child: +android.view.View, rectangle: +android.graphics.Rect, immediate: bool) -> bool",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#requestChildRectangleOnScreen(android.view.View, android.graphics.Rect, boolean)"
            },
            "performAccessibilityActionInternal": {
              "!type": "fn(action: number, arguments: +android.os.Bundle) -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#performAccessibilityActionInternal(int, android.os.Bundle)"
            },
            "getContext": {
              "!type": "fn() -> +android.content.Context",
              "!url": "http://developer.android.com/reference/android/view/View.html#getContext()"
            },
            "getClipToOutline": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#getClipToOutline()"
            },
            "isSelected": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isSelected()"
            },
            "scrollBy": {
              "!type": "fn(x: number, y: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#scrollBy(int, int)"
            },
            "hasNestedScrollingParent": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#hasNestedScrollingParent()"
            },
            "getGlobalVisibleRect": {
              "!type": "fn(r: +android.graphics.Rect, globalOffset: +android.graphics.Point) -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#getGlobalVisibleRect(android.graphics.Rect, android.graphics.Point)"
            },
            "setKeepScreenOn": {
              "!type": "fn(keepScreenOn: bool) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setKeepScreenOn(boolean)"
            },
            "setTranslationZ": {
              "!type": "fn(translationZ: +java.lang.Float) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setTranslationZ(float)"
            },
            "setTranslationY": {
              "!type": "fn(translationY: +java.lang.Float) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setTranslationY(float)"
            },
            "setTranslationX": {
              "!type": "fn(translationX: +java.lang.Float) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setTranslationX(float)"
            },
            "setDuplicateParentStateEnabled": {
              "!type": "fn(enabled: bool) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setDuplicateParentStateEnabled(boolean)"
            },
            "onFilterTouchEventForSecurity": {
              "!type": "fn(event: +android.view.MotionEvent) -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#onFilterTouchEventForSecurity(android.view.MotionEvent)"
            },
            "setTop": {
              "!type": "fn(top: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setTop(int)"
            },
            "getHardwareRenderer": {
              "!type": "fn() -> +android.view.HardwareRenderer",
              "!url": "http://developer.android.com/reference/android/view/View.html#getHardwareRenderer()"
            },
            "onInterceptHoverEvent": {
              "!type": "fn(event: +android.view.MotionEvent) -> bool",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onInterceptHoverEvent(android.view.MotionEvent)"
            },
            "getLocationInWindow": {
              "!type": "fn(location: +java.newArray) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#getLocationInWindow(int[])"
            },
            "pointInView": {
              "!type": "fn(localX: +java.lang.Float, localY: +java.lang.Float, slop: +java.lang.Float) -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#pointInView(float, float, float)"
            },
            "setAlpha": {
              "!type": "fn(alpha: +java.lang.Float) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setAlpha(float)"
            },
            "setAnimationMatrix": {
              "!type": "fn(matrix: +android.graphics.Matrix) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setAnimationMatrix(android.graphics.Matrix)"
            },
            "getApplicationWindowToken": {
              "!type": "fn() -> +android.os.IBinder",
              "!url": "http://developer.android.com/reference/android/view/View.html#getApplicationWindowToken()"
            },
            "resetRtlProperties": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#resetRtlProperties()"
            },
            "getMeasuredHeightAndState": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getMeasuredHeightAndState()"
            },
            "getDrawingCacheBackgroundColor": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getDrawingCacheBackgroundColor()"
            },
            "resolveRtlPropertiesIfNeeded": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resolveRtlPropertiesIfNeeded()"
            },
            "transformMatrixToGlobal": {
              "!type": "fn(m: +android.graphics.Matrix) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#transformMatrixToGlobal(android.graphics.Matrix)"
            },
            "setClickable": {
              "!type": "fn(clickable: bool) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setClickable(boolean)"
            },
            "offsetLeftAndRight": {
              "!type": "fn(offset: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#offsetLeftAndRight(int)"
            },
            "getFilterTouchesWhenObscured": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#getFilterTouchesWhenObscured()"
            },
            "performAccessibilityAction": {
              "!type": "fn(action: number, arguments: +android.os.Bundle) -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#performAccessibilityAction(int, android.os.Bundle)"
            },
            "isHorizontalFadingEdgeEnabled": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isHorizontalFadingEdgeEnabled()"
            },
            "setBackgroundTintMode": {
              "!type": "fn(tintMode: +android.graphics.PorterDuff.Mode) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setBackgroundTintMode(android.graphics.PorterDuff.Mode)"
            },
            "createContextMenu": {
              "!type": "fn(menu: +android.view.ContextMenu) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#createContextMenu(android.view.ContextMenu)"
            },
            "getCameraDistance": {
              "!type": "fn() -> +java.lang.Float",
              "!url": "http://developer.android.com/reference/android/view/View.html#getCameraDistance()"
            },
            "isPressed": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isPressed()"
            },
            "getScrollBarStyle": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getScrollBarStyle()"
            },
            "saveHierarchyState": {
              "!type": "fn(container: +android.util.SparseArray) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#saveHierarchyState(android.util.SparseArray)"
            },
            "setSoundEffectsEnabled": {
              "!type": "fn(soundEffectsEnabled: bool) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setSoundEffectsEnabled(boolean)"
            },
            "setLayoutMode": {
              "!type": "fn(layoutMode: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setLayoutMode(int)"
            },
            "getDividerWidth": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/widget/LinearLayout.html#getDividerWidth()"
            },
            "performHapticFeedback": {
              "!type": "fn(feedbackConstant: number) -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#performHapticFeedback(int)"
            },
            "onKeyLongPress": {
              "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#onKeyLongPress(int, android.view.KeyEvent)"
            },
            "getLayoutMode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getLayoutMode()"
            },
            "getWindowSystemUiVisibility": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getWindowSystemUiVisibility()"
            },
            "setWeightSum": {
              "!type": "fn(weightSum: +java.lang.Float) -> void",
              "!url": "http://developer.android.com/reference/android/widget/LinearLayout.html#setWeightSum(float)"
            },
            "getPersistentDrawingCache": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getPersistentDrawingCache()"
            },
            "animate": {
              "!type": "fn() -> +android.view.ViewPropertyAnimator",
              "!url": "http://developer.android.com/reference/android/view/View.html#animate()"
            },
            "addView": {
              "!type": "fn(child: +android.view.View) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#addView(android.view.View)"
            },
            "getOnFocusChangeListener": {
              "!type": "fn() -> +android.view.View.OnFocusChangeListener",
              "!url": "http://developer.android.com/reference/android/view/View.html#getOnFocusChangeListener()"
            },
            "isPaddingRelative": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isPaddingRelative()"
            },
            "hasOverlappingRendering": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#hasOverlappingRendering()"
            },
            "isEnabled": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isEnabled()"
            },
            "setBottom": {
              "!type": "fn(bottom: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setBottom(int)"
            },
            "isTextAlignmentInherited": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isTextAlignmentInherited()"
            },
            "onHoverChanged": {
              "!type": "fn(hovered: bool) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#onHoverChanged(boolean)"
            },
            "sendAccessibilityEventInternal": {
              "!type": "fn(eventType: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#sendAccessibilityEventInternal(int)"
            },
            "canHaveDisplayList": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#canHaveDisplayList()"
            },
            "dispatchStartTemporaryDetach": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchStartTemporaryDetach()"
            },
            "onResolveDrawables": {
              "!type": "fn(layoutDirection: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#onResolveDrawables(int)"
            },
            "setLongClickable": {
              "!type": "fn(longClickable: bool) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setLongClickable(boolean)"
            },
            "dispatchNestedScroll": {
              "!type": "fn(dxConsumed: number, dyConsumed: number, dxUnconsumed: number, dyUnconsumed: number, offsetInWindow: +java.newArray) -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#dispatchNestedScroll(int, int, int, int, int[])"
            },
            "getScrollBarFadeDuration": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getScrollBarFadeDuration()"
            },
            "removeAllViewsInLayout": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#removeAllViewsInLayout()"
            },
            "getHeight": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getHeight()"
            },
            "setOnKeyListener": {
              "!type": "fn(l: +android.view.View.OnKeyListener) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setOnKeyListener(android.view.View.OnKeyListener)"
            },
            "sendAccessibilityEventUnchecked": {
              "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)"
            },
            "onCreateInputConnection": {
              "!type": "fn(outAttrs: +android.view.inputmethod.EditorInfo) -> +android.view.inputmethod.InputConnection",
              "!url": "http://developer.android.com/reference/android/view/View.html#onCreateInputConnection(android.view.inputmethod.EditorInfo)"
            },
            "performContextClick": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#performContextClick()"
            },
            "isHovered": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isHovered()"
            },
            "getScrollBarDefaultDelayBeforeFade": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getScrollBarDefaultDelayBeforeFade()"
            },
            "setVerticalScrollbarPosition": {
              "!type": "fn(position: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setVerticalScrollbarPosition(int)"
            },
            "setVerticalFadingEdgeEnabled": {
              "!type": "fn(verticalFadingEdgeEnabled: bool) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setVerticalFadingEdgeEnabled(boolean)"
            },
            "setVisibility": {
              "!type": "fn(visibility: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setVisibility(int)"
            },
            "suppressLayout": {
              "!type": "fn(suppress: bool) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#suppressLayout(boolean)"
            },
            "getTranslationZ": {
              "!type": "fn() -> +java.lang.Float",
              "!url": "http://developer.android.com/reference/android/view/View.html#getTranslationZ()"
            },
            "getKeepScreenOn": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#getKeepScreenOn()"
            },
            "getAnimation": {
              "!type": "fn() -> +android.view.animation.Animation",
              "!url": "http://developer.android.com/reference/android/view/View.html#getAnimation()"
            },
            "getTranslationY": {
              "!type": "fn() -> +java.lang.Float",
              "!url": "http://developer.android.com/reference/android/view/View.html#getTranslationY()"
            },
            "getTranslationX": {
              "!type": "fn() -> +java.lang.Float",
              "!url": "http://developer.android.com/reference/android/view/View.html#getTranslationX()"
            },
            "getHandler": {
              "!type": "fn() -> +android.os.Handler",
              "!url": "http://developer.android.com/reference/android/view/View.html#getHandler()"
            },
            "setForeground": {
              "!type": "fn(foreground: +android.graphics.drawable.Drawable) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setForeground(android.graphics.drawable.Drawable)"
            },
            "onKeyShortcut": {
              "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#onKeyShortcut(int, android.view.KeyEvent)"
            },
            "dispatchWindowVisibilityChanged": {
              "!type": "fn(visibility: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchWindowVisibilityChanged(int)"
            },
            "setForegroundTintList": {
              "!type": "fn(tint: +android.content.res.ColorStateList) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setForegroundTintList(android.content.res.ColorStateList)"
            },
            "shouldDelayChildPressedState": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/widget/LinearLayout.html#shouldDelayChildPressedState()"
            },
            "onInitializeAccessibilityEventInternal": {
              "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#onInitializeAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)"
            },
            "postOnAnimationDelayed": {
              "!type": "fn(action: +java.lang.Runnable, delayMillis: +java.lang.Long) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#postOnAnimationDelayed(java.lang.Runnable, long)"
            },
            "postInvalidateOnAnimation": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#postInvalidateOnAnimation()"
            },
            "resetResolvedLayoutDirection": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resetResolvedLayoutDirection()"
            },
            "getInverseMatrix": {
              "!type": "fn() -> +android.graphics.Matrix",
              "!url": "http://developer.android.com/reference/android/view/View.html#getInverseMatrix()"
            },
            "setSystemUiVisibility": {
              "!type": "fn(visibility: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setSystemUiVisibility(int)"
            },
            "isScrollContainer": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isScrollContainer()"
            },
            "onNestedScrollAccepted": {
              "!type": "fn(child: +android.view.View, target: +android.view.View, axes: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onNestedScrollAccepted(android.view.View, android.view.View, int)"
            },
            "getLabelFor": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getLabelFor()"
            },
            "isSaveEnabled": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isSaveEnabled()"
            },
            "onNestedPreFling": {
              "!type": "fn(target: +android.view.View, velocityX: +java.lang.Float, velocityY: +java.lang.Float) -> bool",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onNestedPreFling(android.view.View, float, float)"
            },
            "setRotationY": {
              "!type": "fn(rotationY: +java.lang.Float) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setRotationY(float)"
            },
            "setRotationX": {
              "!type": "fn(rotationX: +java.lang.Float) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setRotationX(float)"
            },
            "findViewWithTag": {
              "!type": "fn(tag: +java.lang.Object) -> +android.view.View",
              "!url": "http://developer.android.com/reference/android/view/View.html#findViewWithTag(java.lang.Object)"
            },
            "getOutlineProvider": {
              "!type": "fn() -> +android.view.ViewOutlineProvider",
              "!url": "http://developer.android.com/reference/android/view/View.html#getOutlineProvider()"
            },
            "setDisabledSystemUiVisibility": {
              "!type": "fn(flags: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setDisabledSystemUiVisibility(int)"
            },
            "dispatchWindowSystemUiVisiblityChanged": {
              "!type": "fn(visible: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchWindowSystemUiVisiblityChanged(int)"
            },
            "onStartTemporaryDetach": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#onStartTemporaryDetach()"
            },
            "invalidate": {
              "!type": "fn(dirty: +android.graphics.Rect) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#invalidate(android.graphics.Rect)"
            },
            "getForegroundGravity": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getForegroundGravity()"
            },
            "toGlobalMotionEvent": {
              "!type": "fn(ev: +android.view.MotionEvent) -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#toGlobalMotionEvent(android.view.MotionEvent)"
            },
            "dispatchTrackballEvent": {
              "!type": "fn(event: +android.view.MotionEvent) -> bool",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchTrackballEvent(android.view.MotionEvent)"
            },
            "clearChildFocus": {
              "!type": "fn(child: +android.view.View) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#clearChildFocus(android.view.View)"
            },
            "setAccessibilityDelegate": {
              "!type": "fn(delegate: +android.view.View.AccessibilityDelegate) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setAccessibilityDelegate(android.view.View.AccessibilityDelegate)"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "hackTurnOffWindowResizeAnim": {
              "!type": "fn(off: bool) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#hackTurnOffWindowResizeAnim(boolean)"
            },
            "onDrawForeground": {
              "!type": "fn(canvas: +android.graphics.Canvas) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#onDrawForeground(android.graphics.Canvas)"
            },
            "setElevation": {
              "!type": "fn(elevation: +java.lang.Float) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setElevation(float)"
            },
            "onNestedScroll": {
              "!type": "fn(target: +android.view.View, dxConsumed: number, dyConsumed: number, dxUnconsumed: number, dyUnconsumed: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onNestedScroll(android.view.View, int, int, int, int)"
            },
            "isMotionEventSplittingEnabled": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#isMotionEventSplittingEnabled()"
            },
            "notifyViewAccessibilityStateChangedIfNeeded": {
              "!type": "fn(changeType: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#notifyViewAccessibilityStateChangedIfNeeded(int)"
            },
            "getMeasuredWidthAndState": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getMeasuredWidthAndState()"
            },
            "setLeft": {
              "!type": "fn(left: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setLeft(int)"
            },
            "setDrawingCacheBackgroundColor": {
              "!type": "fn(color: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setDrawingCacheBackgroundColor(int)"
            },
            "resolvePadding": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resolvePadding()"
            },
            "isLaidOut": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isLaidOut()"
            },
            "outputDirtyFlags": {
              "!type": "fn(indent: string, clear: bool, clearMask: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#outputDirtyFlags(java.lang.String, boolean, int)"
            },
            "getDividerDrawable": {
              "!type": "fn() -> +android.graphics.drawable.Drawable",
              "!url": "http://developer.android.com/reference/android/widget/LinearLayout.html#getDividerDrawable()"
            },
            "hasFocusable": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#hasFocusable()"
            },
            "getDividerPadding": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/widget/LinearLayout.html#getDividerPadding()"
            },
            "getWindowVisibleDisplayFrame": {
              "!type": "fn(outRect: +android.graphics.Rect) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#getWindowVisibleDisplayFrame(android.graphics.Rect)"
            },
            "setDrawingCacheQuality": {
              "!type": "fn(quality: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setDrawingCacheQuality(int)"
            },
            "onFinishTemporaryDetach": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#onFinishTemporaryDetach()"
            },
            "isNestedScrollingEnabled": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isNestedScrollingEnabled()"
            },
            "getOpticalInsets": {
              "!type": "fn() -> +android.graphics.Insets",
              "!url": "http://developer.android.com/reference/android/view/View.html#getOpticalInsets()"
            },
            "setOnFocusChangeListener": {
              "!type": "fn(l: +android.view.View.OnFocusChangeListener) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setOnFocusChangeListener(android.view.View.OnFocusChangeListener)"
            },
            "setOnDragListener": {
              "!type": "fn(l: +android.view.View.OnDragListener) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setOnDragListener(android.view.View.OnDragListener)"
            },
            "cancelLongPress": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#cancelLongPress()"
            },
            "getMeasuredState": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getMeasuredState()"
            },
            "setHorizontalFadingEdgeEnabled": {
              "!type": "fn(horizontalFadingEdgeEnabled: bool) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setHorizontalFadingEdgeEnabled(boolean)"
            },
            "dispatchDrawableHotspotChanged": {
              "!type": "fn(x: +java.lang.Float, y: +java.lang.Float) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchDrawableHotspotChanged(float, float)"
            },
            "dispatchSetSelected": {
              "!type": "fn(selected: bool) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchSetSelected(boolean)"
            },
            "onDragEvent": {
              "!type": "fn(event: +android.view.DragEvent) -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#onDragEvent(android.view.DragEvent)"
            },
            "requestApplyInsets": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#requestApplyInsets()"
            },
            "setScrollIndicators": {
              "!type": "fn(indicators: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setScrollIndicators(int)"
            },
            "getBaselineAlignedChildIndex": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/widget/LinearLayout.html#getBaselineAlignedChildIndex()"
            },
            "onStopNestedScroll": {
              "!type": "fn(child: +android.view.View) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onStopNestedScroll(android.view.View)"
            },
            "setScaleY": {
              "!type": "fn(scaleY: +java.lang.Float) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setScaleY(float)"
            },
            "setScaleX": {
              "!type": "fn(scaleX: +java.lang.Float) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setScaleX(float)"
            },
            "startActionMode": {
              "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
              "!url": "http://developer.android.com/reference/android/view/View.html#startActionMode(android.view.ActionMode.Callback)"
            },
            "getChildCount": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getChildCount()"
            },
            "setNextFocusForwardId": {
              "!type": "fn(nextFocusForwardId: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setNextFocusForwardId(int)"
            },
            "setAccessibilityTraversalBefore": {
              "!type": "fn(beforeId: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setAccessibilityTraversalBefore(int)"
            },
            "findFocus": {
              "!type": "fn() -> +android.view.View",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#findFocus()"
            },
            "getTag": {
              "!type": "fn() -> +java.lang.Object",
              "!url": "http://developer.android.com/reference/android/view/View.html#getTag()"
            },
            "setFocusable": {
              "!type": "fn(focusable: bool) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setFocusable(boolean)"
            },
            "isVerticalScrollBarEnabled": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isVerticalScrollBarEnabled()"
            },
            "getNextFocusLeftId": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getNextFocusLeftId()"
            },
            "onStartNestedScroll": {
              "!type": "fn(child: +android.view.View, target: +android.view.View, nestedScrollAxes: number) -> bool",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onStartNestedScroll(android.view.View, android.view.View, int)"
            },
            "isVerticalFadingEdgeEnabled": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isVerticalFadingEdgeEnabled()"
            },
            "onKeyMultiple": {
              "!type": "fn(keyCode: number, repeatCount: number, event: +android.view.KeyEvent) -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#onKeyMultiple(int, int, android.view.KeyEvent)"
            },
            "generateLayoutParams": {
              "!type": "fn(attrs: +android.util.AttributeSet) -> +android.widget.LinearLayout.LayoutParams",
              "!url": "http://developer.android.com/reference/android/widget/LinearLayout.html#generateLayoutParams(android.util.AttributeSet)"
            },
            "setTransitionAlpha": {
              "!type": "fn(alpha: +java.lang.Float) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setTransitionAlpha(float)"
            },
            "getMeasuredWidth": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getMeasuredWidth()"
            },
            "getLocationOnScreen": {
              "!type": "fn() -> +java.newArray",
              "!url": "http://developer.android.com/reference/android/view/View.html#getLocationOnScreen()"
            },
            "setGravity": {
              "!type": "fn(gravity: number) -> void",
              "!url": "http://developer.android.com/reference/android/widget/LinearLayout.html#setGravity(int)"
            },
            "encode": {
              "!type": "fn(stream: +android.view.ViewHierarchyEncoder) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#encode(android.view.ViewHierarchyEncoder)"
            },
            "getTransientView": {
              "!type": "fn(position: number) -> +android.view.View",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getTransientView(int)"
            },
            "addChildrenForAccessibility": {
              "!type": "fn(outChildren: +java.util.ArrayList) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#addChildrenForAccessibility(java.util.ArrayList)"
            },
            "onActivityResult": {
              "!type": "fn(requestCode: number, resultCode: number, data: +android.content.Intent) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#onActivityResult(int, int, android.content.Intent)"
            },
            "isTextDirectionResolved": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isTextDirectionResolved()"
            },
            "setRotation": {
              "!type": "fn(rotation: +java.lang.Float) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setRotation(float)"
            },
            "getTransientViewCount": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getTransientViewCount()"
            },
            "resolveLayoutDirection": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resolveLayoutDirection()"
            },
            "getPaddingRight": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getPaddingRight()"
            },
            "getZ": {
              "!type": "fn() -> +java.lang.Float",
              "!url": "http://developer.android.com/reference/android/view/View.html#getZ()"
            },
            "getNestedScrollAxes": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getNestedScrollAxes()"
            },
            "getY": {
              "!type": "fn() -> +java.lang.Float",
              "!url": "http://developer.android.com/reference/android/view/View.html#getY()"
            },
            "getX": {
              "!type": "fn() -> +java.lang.Float",
              "!url": "http://developer.android.com/reference/android/view/View.html#getX()"
            },
            "setPadding": {
              "!type": "fn(left: number, top: number, right: number, bottom: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setPadding(int, int, int, int)"
            },
            "setLayoutAnimationListener": {
              "!type": "fn(animationListener: +android.view.animation.Animation.AnimationListener) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setLayoutAnimationListener(android.view.animation.Animation.AnimationListener)"
            },
            "setShowDividers": {
              "!type": "fn(showDividers: number) -> void",
              "!url": "http://developer.android.com/reference/android/widget/LinearLayout.html#setShowDividers(int)"
            },
            "damageChildDeferred": {
              "!type": "fn(child: +android.view.View) -> bool",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#damageChildDeferred(android.view.View)"
            },
            "setForegroundTintMode": {
              "!type": "fn(tintMode: +android.graphics.PorterDuff.Mode) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setForegroundTintMode(android.graphics.PorterDuff.Mode)"
            },
            "gatherTransparentRegion": {
              "!type": "fn(region: +android.graphics.Region) -> bool",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#gatherTransparentRegion(android.graphics.Region)"
            },
            "showContextMenu": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#showContextMenu()"
            },
            "isHorizontalScrollBarEnabled": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isHorizontalScrollBarEnabled()"
            },
            "onCheckIsTextEditor": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#onCheckIsTextEditor()"
            },
            "setLayoutTransition": {
              "!type": "fn(transition: +android.animation.LayoutTransition) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setLayoutTransition(android.animation.LayoutTransition)"
            },
            "setOnSystemUiVisibilityChangeListener": {
              "!type": "fn(l: +android.view.View.OnSystemUiVisibilityChangeListener) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setOnSystemUiVisibilityChangeListener(android.view.View.OnSystemUiVisibilityChangeListener)"
            },
            "setBackgroundColor": {
              "!type": "fn(color: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setBackgroundColor(int)"
            },
            "captureTransitioningViews": {
              "!type": "fn(transitioningViews: +java.util.List) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#captureTransitioningViews(java.util.List)"
            },
            "setOnHierarchyChangeListener": {
              "!type": "fn(listener: +android.view.ViewGroup.OnHierarchyChangeListener) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setOnHierarchyChangeListener(android.view.ViewGroup.OnHierarchyChangeListener)"
            },
            "setNextFocusRightId": {
              "!type": "fn(nextFocusRightId: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setNextFocusRightId(int)"
            },
            "makeOptionalFitsSystemWindows": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#makeOptionalFitsSystemWindows()"
            },
            "setTag": {
              "!type": "fn(tag: +java.lang.Object) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setTag(java.lang.Object)"
            },
            "onInitializeAccessibilityNodeInfo": {
              "!type": "fn(info: +android.view.accessibility.AccessibilityNodeInfo) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)"
            },
            "willNotDraw": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#willNotDraw()"
            },
            "setCameraDistance": {
              "!type": "fn(distance: +java.lang.Float) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setCameraDistance(float)"
            },
            "removeViewInLayout": {
              "!type": "fn(view: +android.view.View) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#removeViewInLayout(android.view.View)"
            },
            "setTransitionGroup": {
              "!type": "fn(isTransitionGroup: bool) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setTransitionGroup(boolean)"
            },
            "hasWindowFocus": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#hasWindowFocus()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "startActionModeForChild": {
              "!type": "fn(child: +android.view.View, callback: +android.view.ActionMode.Callback, type: number) -> +android.view.ActionMode",
              "!url": "http://developer.android.com/reference/android/app/SearchDialog.SearchBar.html#startActionModeForChild(android.view.View, android.view.ActionMode.Callback, int)"
            },
            "getPaddingEnd": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getPaddingEnd()"
            },
            "getRootWindowInsets": {
              "!type": "fn() -> +android.view.WindowInsets",
              "!url": "http://developer.android.com/reference/android/view/View.html#getRootWindowInsets()"
            },
            "onNestedPreScroll": {
              "!type": "fn(target: +android.view.View, dx: number, dy: number, consumed: +java.newArray) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onNestedPreScroll(android.view.View, int, int, int[])"
            },
            "setContentDescription": {
              "!type": "fn(contentDescription: +java.lang.CharSequence) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setContentDescription(java.lang.CharSequence)"
            },
            "onWindowFocusChanged": {
              "!type": "fn(hasWindowFocus: bool) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#onWindowFocusChanged(boolean)"
            },
            "getRootView": {
              "!type": "fn() -> +android.view.View",
              "!url": "http://developer.android.com/reference/android/view/View.html#getRootView()"
            },
            "addOnLayoutChangeListener": {
              "!type": "fn(listener: +android.view.View.OnLayoutChangeListener) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#addOnLayoutChangeListener(android.view.View.OnLayoutChangeListener)"
            },
            "getParentForAccessibility": {
              "!type": "fn() -> +android.view.ViewParent",
              "!url": "http://developer.android.com/reference/android/view/View.html#getParentForAccessibility()"
            },
            "isDirty": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isDirty()"
            },
            "requestDisallowInterceptTouchEvent": {
              "!type": "fn(disallowIntercept: bool) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#requestDisallowInterceptTouchEvent(boolean)"
            },
            "focusSearch": {
              "!type": "fn(focused: +android.view.View, direction: number) -> +android.view.View",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#focusSearch(android.view.View, int)"
            },
            "findNamedViews": {
              "!type": "fn(namedElements: +java.util.Map) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#findNamedViews(java.util.Map)"
            },
            "post": {
              "!type": "fn(action: +java.lang.Runnable) -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#post(java.lang.Runnable)"
            },
            "announceForAccessibility": {
              "!type": "fn(text: +java.lang.CharSequence) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#announceForAccessibility(java.lang.CharSequence)"
            },
            "getTouchscreenBlocksFocus": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getTouchscreenBlocksFocus()"
            },
            "getRawTextDirection": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getRawTextDirection()"
            },
            "canResolveTextDirection": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#canResolveTextDirection()"
            },
            "setClipToOutline": {
              "!type": "fn(clipToOutline: bool) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setClipToOutline(boolean)"
            },
            "getFitsSystemWindows": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#getFitsSystemWindows()"
            },
            "getRawTextAlignment": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getRawTextAlignment()"
            },
            "getDescendantFocusability": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getDescendantFocusability()"
            },
            "isAlwaysDrawnWithCacheEnabled": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#isAlwaysDrawnWithCacheEnabled()"
            },
            "buildLayer": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#buildLayer()"
            },
            "getOutsets": {
              "!type": "fn(outOutsetRect: +android.graphics.Rect) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#getOutsets(android.graphics.Rect)"
            },
            "setTransitionName": {
              "!type": "fn(transitionName: string) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setTransitionName(java.lang.String)"
            },
            "getRight": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getRight()"
            },
            "getNextFocusUpId": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getNextFocusUpId()"
            },
            "onWindowSystemUiVisibilityChanged": {
              "!type": "fn(visible: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#onWindowSystemUiVisibilityChanged(int)"
            },
            "onScreenStateChanged": {
              "!type": "fn(screenState: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#onScreenStateChanged(int)"
            },
            "setZ": {
              "!type": "fn(z: +java.lang.Float) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setZ(float)"
            },
            "setY": {
              "!type": "fn(y: +java.lang.Float) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setY(float)"
            },
            "setX": {
              "!type": "fn(x: +java.lang.Float) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setX(float)"
            },
            "setPivotY": {
              "!type": "fn(pivotY: +java.lang.Float) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setPivotY(float)"
            },
            "getPaddingBottom": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getPaddingBottom()"
            },
            "setPivotX": {
              "!type": "fn(pivotX: +java.lang.Float) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setPivotX(float)"
            },
            "setOnContextClickListener": {
              "!type": "fn(l: +android.view.View.OnContextClickListener) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setOnContextClickListener(android.view.View.OnContextClickListener)"
            },
            "setScrollBarFadeDuration": {
              "!type": "fn(scrollBarFadeDuration: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setScrollBarFadeDuration(int)"
            },
            "setActivated": {
              "!type": "fn(activated: bool) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setActivated(boolean)"
            },
            "getDrawingCacheQuality": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getDrawingCacheQuality()"
            },
            "getBottom": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getBottom()"
            },
            "setPersistentDrawingCache": {
              "!type": "fn(drawingCacheToKeep: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setPersistentDrawingCache(int)"
            },
            "includeForAccessibility": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#includeForAccessibility()"
            },
            "startLayoutAnimation": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#startLayoutAnimation()"
            },
            "getId": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getId()"
            },
            "getLayoutAnimationListener": {
              "!type": "fn() -> +android.view.animation.Animation.AnimationListener",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getLayoutAnimationListener()"
            },
            "getShowDividers": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/widget/LinearLayout.html#getShowDividers()"
            },
            "resolveTextDirection": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resolveTextDirection()"
            },
            "setOnApplyWindowInsetsListener": {
              "!type": "fn(listener: +android.view.View.OnApplyWindowInsetsListener) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)"
            },
            "setStateListAnimator": {
              "!type": "fn(stateListAnimator: +android.animation.StateListAnimator) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setStateListAnimator(android.animation.StateListAnimator)"
            },
            "canScrollVertically": {
              "!type": "fn(direction: number) -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#canScrollVertically(int)"
            },
            "setContextClickable": {
              "!type": "fn(contextClickable: bool) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setContextClickable(boolean)"
            },
            "updateDisplayListIfDirty": {
              "!type": "fn() -> +android.view.RenderNode",
              "!url": "http://developer.android.com/reference/android/view/View.html#updateDisplayListIfDirty()"
            },
            "resolveTextAlignment": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resolveTextAlignment()"
            },
            "dispatchKeyEventPreIme": {
              "!type": "fn(event: +android.view.KeyEvent) -> bool",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchKeyEventPreIme(android.view.KeyEvent)"
            },
            "removeTransientView": {
              "!type": "fn(view: +android.view.View) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#removeTransientView(android.view.View)"
            },
            "setScrollY": {
              "!type": "fn(value: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setScrollY(int)"
            },
            "setScrollX": {
              "!type": "fn(value: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setScrollX(int)"
            },
            "setWillNotCacheDrawing": {
              "!type": "fn(willNotCacheDrawing: bool) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setWillNotCacheDrawing(boolean)"
            },
            "setHapticFeedbackEnabled": {
              "!type": "fn(hapticFeedbackEnabled: bool) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setHapticFeedbackEnabled(boolean)"
            },
            "performLongClick": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#performLongClick()"
            },
            "onHoverEvent": {
              "!type": "fn(event: +android.view.MotionEvent) -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#onHoverEvent(android.view.MotionEvent)"
            },
            "onKeyDown": {
              "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#onKeyDown(int, android.view.KeyEvent)"
            },
            "requestFocus": {
              "!type": "fn(direction: number, previouslyFocusedRect: +android.graphics.Rect) -> bool",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#requestFocus(int, android.graphics.Rect)"
            },
            "getMinimumHeight": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getMinimumHeight()"
            },
            "dispatchPopulateAccessibilityEvent": {
              "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
            },
            "getOrientation": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/widget/LinearLayout.html#getOrientation()"
            },
            "setSelected": {
              "!type": "fn(selected: bool) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setSelected(boolean)"
            },
            "hasTransientState": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#hasTransientState()"
            },
            "setAddStatesFromChildren": {
              "!type": "fn(addsStates: bool) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setAddStatesFromChildren(boolean)"
            },
            "postOnAnimation": {
              "!type": "fn(action: +java.lang.Runnable) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#postOnAnimation(java.lang.Runnable)"
            },
            "onInitializeAccessibilityEvent": {
              "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
            },
            "setOpticalInsets": {
              "!type": "fn(insets: +android.graphics.Insets) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setOpticalInsets(android.graphics.Insets)"
            },
            "isClickable": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isClickable()"
            },
            "isLayoutRtl": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isLayoutRtl()"
            },
            "setLayoutDirection": {
              "!type": "fn(layoutDirection: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setLayoutDirection(int)"
            },
            "postInvalidateDelayed": {
              "!type": "fn(delayMilliseconds: +java.lang.Long) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#postInvalidateDelayed(long)"
            },
            "isInScrollingContainer": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isInScrollingContainer()"
            },
            "jumpDrawablesToCurrentState": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#jumpDrawablesToCurrentState()"
            },
            "notifySubtreeAccessibilityStateChangedIfNeeded": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#notifySubtreeAccessibilityStateChangedIfNeeded()"
            },
            "setScrollBarDefaultDelayBeforeFade": {
              "!type": "fn(scrollBarDefaultDelayBeforeFade: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setScrollBarDefaultDelayBeforeFade(int)"
            },
            "getDrawingRect": {
              "!type": "fn(outRect: +android.graphics.Rect) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#getDrawingRect(android.graphics.Rect)"
            },
            "getBackgroundTintList": {
              "!type": "fn() -> +android.content.res.ColorStateList",
              "!url": "http://developer.android.com/reference/android/view/View.html#getBackgroundTintList()"
            },
            "getTouchables": {
              "!type": "fn() -> +java.util.ArrayList",
              "!url": "http://developer.android.com/reference/android/view/View.html#getTouchables()"
            },
            "getAlpha": {
              "!type": "fn() -> +java.lang.Float",
              "!url": "http://developer.android.com/reference/android/view/View.html#getAlpha()"
            },
            "onNestedPrePerformAccessibilityAction": {
              "!type": "fn(target: +android.view.View, action: number, args: +android.os.Bundle) -> bool",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onNestedPrePerformAccessibilityAction(android.view.View, int, android.os.Bundle)"
            },
            "onKeyPreIme": {
              "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#onKeyPreIme(int, android.view.KeyEvent)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "setScrollBarStyle": {
              "!type": "fn(style: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setScrollBarStyle(int)"
            },
            "getLocalVisibleRect": {
              "!type": "fn(r: +android.graphics.Rect) -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#getLocalVisibleRect(android.graphics.Rect)"
            },
            "getSolidColor": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getSolidColor()"
            },
            "offsetRectIntoDescendantCoords": {
              "!type": "fn(descendant: +android.view.View, rect: +android.graphics.Rect) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#offsetRectIntoDescendantCoords(android.view.View, android.graphics.Rect)"
            },
            "toLocalMotionEvent": {
              "!type": "fn(ev: +android.view.MotionEvent) -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#toLocalMotionEvent(android.view.MotionEvent)"
            },
            "isInLayout": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isInLayout()"
            },
            "requestTransitionStart": {
              "!type": "fn(transition: +android.animation.LayoutTransition) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#requestTransitionStart(android.animation.LayoutTransition)"
            },
            "removeAllViews": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#removeAllViews()"
            },
            "onCloseSystemDialogs": {
              "!type": "fn(reason: string) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#onCloseSystemDialogs(java.lang.String)"
            },
            "getVerticalScrollbarWidth": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getVerticalScrollbarWidth()"
            },
            "isAccessibilitySelectionExtendable": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isAccessibilitySelectionExtendable()"
            },
            "getAccessibilityTraversalAfter": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilityTraversalAfter()"
            },
            "onProvideVirtualStructure": {
              "!type": "fn(structure: +android.view.ViewStructure) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#onProvideVirtualStructure(android.view.ViewStructure)"
            },
            "canResolveLayoutDirection": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#canResolveLayoutDirection()"
            },
            "scheduleLayoutAnimation": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#scheduleLayoutAnimation()"
            },
            "getScrollIndicators": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getScrollIndicators()"
            },
            "getScrollBarSize": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getScrollBarSize()"
            },
            "dispatchApplyWindowInsets": {
              "!type": "fn(insets: +android.view.WindowInsets) -> +android.view.WindowInsets",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchApplyWindowInsets(android.view.WindowInsets)"
            },
            "setVerticalGravity": {
              "!type": "fn(verticalGravity: number) -> void",
              "!url": "http://developer.android.com/reference/android/widget/LinearLayout.html#setVerticalGravity(int)"
            },
            "getAccessibilityViewId": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilityViewId()"
            },
            "isTransitionGroup": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#isTransitionGroup()"
            },
            "transformPointToViewLocal": {
              "!type": "fn(point: +java.newArray, child: +android.view.View) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#transformPointToViewLocal(float[], android.view.View)"
            },
            "onPopulateAccessibilityEventInternal": {
              "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#onPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)"
            },
            "isDrawingCacheEnabled": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isDrawingCacheEnabled()"
            },
            "getOverlay": {
              "!type": "fn() -> +android.view.ViewGroupOverlay",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getOverlay()"
            },
            "onProvideStructure": {
              "!type": "fn(structure: +android.view.ViewStructure) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#onProvideStructure(android.view.ViewStructure)"
            },
            "setNextFocusDownId": {
              "!type": "fn(nextFocusDownId: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setNextFocusDownId(int)"
            },
            "getVerticalScrollbarPosition": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getVerticalScrollbarPosition()"
            },
            "childHasTransientStateChanged": {
              "!type": "fn(child: +android.view.View, childHasTransientState: bool) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#childHasTransientStateChanged(android.view.View, boolean)"
            },
            "setFilterTouchesWhenObscured": {
              "!type": "fn(enabled: bool) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setFilterTouchesWhenObscured(boolean)"
            },
            "getMeasuredHeight": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getMeasuredHeight()"
            },
            "getFocusables": {
              "!type": "fn(direction: number) -> +java.util.ArrayList",
              "!url": "http://developer.android.com/reference/android/view/View.html#getFocusables(int)"
            },
            "setOnTouchListener": {
              "!type": "fn(l: +android.view.View.OnTouchListener) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setOnTouchListener(android.view.View.OnTouchListener)"
            },
            "getOverScrollMode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getOverScrollMode()"
            },
            "endViewTransition": {
              "!type": "fn(view: +android.view.View) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#endViewTransition(android.view.View)"
            },
            "refreshDrawableState": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#refreshDrawableState()"
            },
            "requestSendAccessibilityEvent": {
              "!type": "fn(child: +android.view.View, event: +android.view.accessibility.AccessibilityEvent) -> bool",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#requestSendAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent)"
            },
            "isInEditMode": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isInEditMode()"
            },
            "canResolveTextAlignment": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#canResolveTextAlignment()"
            },
            "startViewTransition": {
              "!type": "fn(view: +android.view.View) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#startViewTransition(android.view.View)"
            },
            "dispatchTouchEvent": {
              "!type": "fn(ev: +android.view.MotionEvent) -> bool",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchTouchEvent(android.view.MotionEvent)"
            },
            "dispatchUnhandledMove": {
              "!type": "fn(focused: +android.view.View, direction: number) -> bool",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchUnhandledMove(android.view.View, int)"
            },
            "setImportantForAccessibility": {
              "!type": "fn(mode: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setImportantForAccessibility(int)"
            },
            "setMotionEventSplittingEnabled": {
              "!type": "fn(split: bool) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setMotionEventSplittingEnabled(boolean)"
            },
            "focusableViewAvailable": {
              "!type": "fn(v: +android.view.View) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#focusableViewAvailable(android.view.View)"
            },
            "isLayoutRequested": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isLayoutRequested()"
            },
            "invalidateChild": {
              "!type": "fn(child: +android.view.View, dirty: +android.graphics.Rect) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#invalidateChild(android.view.View, android.graphics.Rect)"
            },
            "setSaveFromParentEnabled": {
              "!type": "fn(enabled: bool) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setSaveFromParentEnabled(boolean)"
            },
            "dispatchGenericMotionEvent": {
              "!type": "fn(event: +android.view.MotionEvent) -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#dispatchGenericMotionEvent(android.view.MotionEvent)"
            },
            "getLayerType": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getLayerType()"
            },
            "getHotspotBounds": {
              "!type": "fn(outRect: +android.graphics.Rect) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#getHotspotBounds(android.graphics.Rect)"
            },
            "setScrollbarFadingEnabled": {
              "!type": "fn(fadeScrollbars: bool) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setScrollbarFadingEnabled(boolean)"
            },
            "getLayoutTransition": {
              "!type": "fn() -> +android.animation.LayoutTransition",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getLayoutTransition()"
            },
            "removeViewAt": {
              "!type": "fn(index: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#removeViewAt(int)"
            },
            "recomputeViewAttributes": {
              "!type": "fn(child: +android.view.View) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#recomputeViewAttributes(android.view.View)"
            },
            "setBackground": {
              "!type": "fn(background: +android.graphics.drawable.Drawable) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setBackground(android.graphics.drawable.Drawable)"
            },
            "getRotation": {
              "!type": "fn() -> +java.lang.Float",
              "!url": "http://developer.android.com/reference/android/view/View.html#getRotation()"
            },
            "drawableHotspotChanged": {
              "!type": "fn(x: +java.lang.Float, y: +java.lang.Float) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#drawableHotspotChanged(float, float)"
            },
            "getNextFocusRightId": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getNextFocusRightId()"
            },
            "getFocusedChild": {
              "!type": "fn() -> +android.view.View",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getFocusedChild()"
            },
            "isHardwareAccelerated": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isHardwareAccelerated()"
            },
            "setAlwaysDrawnWithCacheEnabled": {
              "!type": "fn(always: bool) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setAlwaysDrawnWithCacheEnabled(boolean)"
            },
            "getBackground": {
              "!type": "fn() -> +android.graphics.drawable.Drawable",
              "!url": "http://developer.android.com/reference/android/view/View.html#getBackground()"
            },
            "requestAccessibilityFocus": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#requestAccessibilityFocus()"
            },
            "removeViews": {
              "!type": "fn(start: number, count: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#removeViews(int, int)"
            },
            "setAnimation": {
              "!type": "fn(animation: +android.view.animation.Animation) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setAnimation(android.view.animation.Animation)"
            },
            "getAccessibilityNodeProvider": {
              "!type": "fn() -> +android.view.accessibility.AccessibilityNodeProvider",
              "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilityNodeProvider()"
            },
            "resetResolvedPadding": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resetResolvedPadding()"
            },
            "getScaleY": {
              "!type": "fn() -> +java.lang.Float",
              "!url": "http://developer.android.com/reference/android/view/View.html#getScaleY()"
            },
            "forceLayout": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#forceLayout()"
            },
            "isLayoutDirectionResolved": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isLayoutDirectionResolved()"
            },
            "getScaleX": {
              "!type": "fn() -> +java.lang.Float",
              "!url": "http://developer.android.com/reference/android/view/View.html#getScaleX()"
            },
            "setFocusableInTouchMode": {
              "!type": "fn(focusableInTouchMode: bool) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setFocusableInTouchMode(boolean)"
            },
            "updateViewLayout": {
              "!type": "fn(view: +android.view.View, params: +android.view.ViewGroup.LayoutParams) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#updateViewLayout(android.view.View, android.view.ViewGroup.LayoutParams)"
            },
            "addStatesFromChildren": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#addStatesFromChildren()"
            },
            "setAnimationCacheEnabled": {
              "!type": "fn(enabled: bool) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setAnimationCacheEnabled(boolean)"
            },
            "getTransitionAlpha": {
              "!type": "fn() -> +java.lang.Float",
              "!url": "http://developer.android.com/reference/android/view/View.html#getTransitionAlpha()"
            },
            "setHorizontalGravity": {
              "!type": "fn(horizontalGravity: number) -> void",
              "!url": "http://developer.android.com/reference/android/widget/LinearLayout.html#setHorizontalGravity(int)"
            },
            "getWindowId": {
              "!type": "fn() -> +android.view.WindowId",
              "!url": "http://developer.android.com/reference/android/view/View.html#getWindowId()"
            },
            "transformMatrixToLocal": {
              "!type": "fn(m: +android.graphics.Matrix) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#transformMatrixToLocal(android.graphics.Matrix)"
            },
            "dispatchFinishTemporaryDetach": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchFinishTemporaryDetach()"
            },
            "getViewTreeObserver": {
              "!type": "fn() -> +android.view.ViewTreeObserver",
              "!url": "http://developer.android.com/reference/android/view/View.html#getViewTreeObserver()"
            },
            "clearAnimation": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#clearAnimation()"
            },
            "onPopulateAccessibilityEvent": {
              "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
            },
            "unscheduleDrawable": {
              "!type": "fn(who: +android.graphics.drawable.Drawable, what: +java.lang.Runnable) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#unscheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable)"
            },
            "getVerticalFadingEdgeLength": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getVerticalFadingEdgeLength()"
            },
            "onViewRemoved": {
              "!type": "fn(child: +android.view.View) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onViewRemoved(android.view.View)"
            },
            "requestLayout": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#requestLayout()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "setLayoutAnimation": {
              "!type": "fn(controller: +android.view.animation.LayoutAnimationController) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setLayoutAnimation(android.view.animation.LayoutAnimationController)"
            },
            "dispatchNestedPreFling": {
              "!type": "fn(velocityX: +java.lang.Float, velocityY: +java.lang.Float) -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#dispatchNestedPreFling(float, float)"
            },
            "setOnClickListener": {
              "!type": "fn(l: +android.view.View.OnClickListener) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setOnClickListener(android.view.View.OnClickListener)"
            },
            "isTextDirectionInherited": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isTextDirectionInherited()"
            },
            "onApplyWindowInsets": {
              "!type": "fn(insets: +android.view.WindowInsets) -> +android.view.WindowInsets",
              "!url": "http://developer.android.com/reference/android/view/View.html#onApplyWindowInsets(android.view.WindowInsets)"
            },
            "setNextFocusUpId": {
              "!type": "fn(nextFocusUpId: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setNextFocusUpId(int)"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "getChildAt": {
              "!type": "fn(index: number) -> +android.view.View",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getChildAt(int)"
            },
            "getBackgroundTintMode": {
              "!type": "fn() -> +android.graphics.PorterDuff.Mode",
              "!url": "http://developer.android.com/reference/android/view/View.html#getBackgroundTintMode()"
            },
            "onCancelPendingInputEvents": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#onCancelPendingInputEvents()"
            },
            "getHorizontalFadingEdgeLength": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getHorizontalFadingEdgeLength()"
            },
            "sendAccessibilityEvent": {
              "!type": "fn(eventType: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#sendAccessibilityEvent(int)"
            },
            "getPaddingLeft": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getPaddingLeft()"
            },
            "setRevealClip": {
              "!type": "fn(shouldClip: bool, x: +java.lang.Float, y: +java.lang.Float, radius: +java.lang.Float) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setRevealClip(boolean, float, float, float)"
            },
            "isFocused": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isFocused()"
            },
            "removeViewsInLayout": {
              "!type": "fn(start: number, count: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#removeViewsInLayout(int, int)"
            },
            "onInitializeAccessibilityNodeInfoInternal": {
              "!type": "fn(info: +android.view.accessibility.AccessibilityNodeInfo) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo)"
            },
            "isAssistBlocked": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isAssistBlocked()"
            },
            "showContextMenuForChild": {
              "!type": "fn(originalView: +android.view.View) -> bool",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#showContextMenuForChild(android.view.View)"
            },
            "getWindowToken": {
              "!type": "fn() -> +android.os.IBinder",
              "!url": "http://developer.android.com/reference/android/view/View.html#getWindowToken()"
            },
            "startDrag": {
              "!type": "fn(data: +android.content.ClipData, shadowBuilder: +android.view.View.DragShadowBuilder, myLocalState: +java.lang.Object, flags: number) -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#startDrag(android.content.ClipData, android.view.View.DragShadowBuilder, java.lang.Object, int)"
            },
            "scheduleDrawable": {
              "!type": "fn(who: +android.graphics.drawable.Drawable, what: +java.lang.Runnable, when: +java.lang.Long) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#scheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable, long)"
            },
            "canScrollHorizontally": {
              "!type": "fn(direction: number) -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#canScrollHorizontally(int)"
            },
            "setDividerPadding": {
              "!type": "fn(padding: number) -> void",
              "!url": "http://developer.android.com/reference/android/widget/LinearLayout.html#setDividerPadding(int)"
            },
            "invalidateChildInParent": {
              "!type": "fn(location: +java.newArray, dirty: +android.graphics.Rect) -> +android.view.ViewParent",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#invalidateChildInParent(int[], android.graphics.Rect)"
            },
            "dispatchNestedPreScroll": {
              "!type": "fn(dx: number, dy: number, consumed: +java.newArray, offsetInWindow: +java.newArray) -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#dispatchNestedPreScroll(int, int, int[], int[])"
            },
            "getLayoutParams": {
              "!type": "fn() -> +android.view.ViewGroup.LayoutParams",
              "!url": "http://developer.android.com/reference/android/view/View.html#getLayoutParams()"
            },
            "getScrollY": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getScrollY()"
            },
            "getScrollX": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getScrollX()"
            },
            "postDelayed": {
              "!type": "fn(action: +java.lang.Runnable, delayMillis: +java.lang.Long) -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#postDelayed(java.lang.Runnable, long)"
            },
            "getKeyDispatcherState": {
              "!type": "fn() -> +android.view.KeyEvent.DispatcherState",
              "!url": "http://developer.android.com/reference/android/view/View.html#getKeyDispatcherState()"
            },
            "getWeightSum": {
              "!type": "fn() -> +java.lang.Float",
              "!url": "http://developer.android.com/reference/android/widget/LinearLayout.html#getWeightSum()"
            },
            "setMinimumHeight": {
              "!type": "fn(minHeight: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setMinimumHeight(int)"
            },
            "hasFocus": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#hasFocus()"
            },
            "scrollTo": {
              "!type": "fn(x: number, y: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#scrollTo(int, int)"
            },
            "setAccessibilityTraversalAfter": {
              "!type": "fn(afterId: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setAccessibilityTraversalAfter(int)"
            },
            "getClipToPadding": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getClipToPadding()"
            },
            "isHapticFeedbackEnabled": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isHapticFeedbackEnabled()"
            },
            "isFocusable": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isFocusable()"
            },
            "getTransientViewIndex": {
              "!type": "fn(position: number) -> number",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getTransientViewIndex(int)"
            },
            "requestRectangleOnScreen": {
              "!type": "fn(rectangle: +android.graphics.Rect) -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#requestRectangleOnScreen(android.graphics.Rect)"
            },
            "isSoundEffectsEnabled": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isSoundEffectsEnabled()"
            },
            "findViewByPredicate": {
              "!type": "fn(predicate: +com.android.internal.util.Predicate) -> +android.view.View",
              "!url": "http://developer.android.com/reference/android/view/View.html#findViewByPredicate(com.android.internal.util.Predicate)"
            },
            "startActivityForResult": {
              "!type": "fn(intent: +android.content.Intent, requestCode: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#startActivityForResult(android.content.Intent, int)"
            },
            "setLayerPaint": {
              "!type": "fn(paint: +android.graphics.Paint) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setLayerPaint(android.graphics.Paint)"
            },
            "setLayoutParams": {
              "!type": "fn(params: +android.view.ViewGroup.LayoutParams) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setLayoutParams(android.view.ViewGroup.LayoutParams)"
            },
            "isContextClickable": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isContextClickable()"
            },
            "isImportantForAccessibility": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isImportantForAccessibility()"
            },
            "dispatchPointerEvent": {
              "!type": "fn(event: +android.view.MotionEvent) -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#dispatchPointerEvent(android.view.MotionEvent)"
            },
            "invalidateOutline": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#invalidateOutline()"
            },
            "getTouchDelegate": {
              "!type": "fn() -> +android.view.TouchDelegate",
              "!url": "http://developer.android.com/reference/android/view/View.html#getTouchDelegate()"
            },
            "setHasTransientState": {
              "!type": "fn(hasTransientState: bool) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setHasTransientState(boolean)"
            },
            "getIterableTextForAccessibility": {
              "!type": "fn() -> +java.lang.CharSequence",
              "!url": "http://developer.android.com/reference/android/view/View.html#getIterableTextForAccessibility()"
            },
            "checkInputConnectionProxy": {
              "!type": "fn(view: +android.view.View) -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#checkInputConnectionProxy(android.view.View)"
            },
            "getChildVisibleRect": {
              "!type": "fn(child: +android.view.View, r: +android.graphics.Rect, offset: +android.graphics.Point) -> bool",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getChildVisibleRect(android.view.View, android.graphics.Rect, android.graphics.Point)"
            },
            "findViewByAccessibilityIdTraversal": {
              "!type": "fn(accessibilityId: number) -> +android.view.View",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#findViewByAccessibilityIdTraversal(int)"
            },
            "clearFocus": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#clearFocus()"
            },
            "findViewsWithText": {
              "!type": "fn(outViews: +java.util.ArrayList, text: +java.lang.CharSequence, flags: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#findViewsWithText(java.util.ArrayList, java.lang.CharSequence, int)"
            },
            "addTransientView": {
              "!type": "fn(view: +android.view.View, index: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#addTransientView(android.view.View, int)"
            },
            "invalidateDrawable": {
              "!type": "fn(drawable: +android.graphics.drawable.Drawable) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#invalidateDrawable(android.graphics.drawable.Drawable)"
            },
            "getViewRootImpl": {
              "!type": "fn() -> +android.view.ViewRootImpl",
              "!url": "http://developer.android.com/reference/android/view/View.html#getViewRootImpl()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/view/View.html#toString()"
            },
            "setOnHoverListener": {
              "!type": "fn(l: +android.view.View.OnHoverListener) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setOnHoverListener(android.view.View.OnHoverListener)"
            },
            "getForegroundTintList": {
              "!type": "fn() -> +android.content.res.ColorStateList",
              "!url": "http://developer.android.com/reference/android/view/View.html#getForegroundTintList()"
            },
            "setNestedScrollingEnabled": {
              "!type": "fn(enabled: bool) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setNestedScrollingEnabled(boolean)"
            },
            "clearAccessibilityFocus": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#clearAccessibilityFocus()"
            },
            "getResources": {
              "!type": "fn() -> +android.content.res.Resources",
              "!url": "http://developer.android.com/reference/android/view/View.html#getResources()"
            },
            "buildDrawingCache": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#buildDrawingCache()"
            },
            "setBaselineAligned": {
              "!type": "fn(baselineAligned: bool) -> void",
              "!url": "http://developer.android.com/reference/android/widget/LinearLayout.html#setBaselineAligned(boolean)"
            },
            "getTextDirection": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getTextDirection()"
            },
            "getWindowVisibility": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getWindowVisibility()"
            },
            "onInterceptTouchEvent": {
              "!type": "fn(ev: +android.view.MotionEvent) -> bool",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onInterceptTouchEvent(android.view.MotionEvent)"
            },
            "clearDisappearingChildren": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#clearDisappearingChildren()"
            },
            "setDescendantFocusability": {
              "!type": "fn(focusability: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setDescendantFocusability(int)"
            },
            "setId": {
              "!type": "fn(id: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setId(int)"
            },
            "setAccessibilityLiveRegion": {
              "!type": "fn(mode: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setAccessibilityLiveRegion(int)"
            },
            "getTextAlignment": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getTextAlignment()"
            },
            "setMinimumWidth": {
              "!type": "fn(minWidth: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setMinimumWidth(int)"
            },
            "bringToFront": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#bringToFront()"
            },
            "isTextAlignmentResolved": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isTextAlignmentResolved()"
            },
            "hasOnClickListeners": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#hasOnClickListeners()"
            },
            "getSystemUiVisibility": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getSystemUiVisibility()"
            },
            "findViewById": {
              "!type": "fn(id: number) -> +android.view.View",
              "!url": "http://developer.android.com/reference/android/view/View.html#findViewById(int)"
            },
            "getPivotY": {
              "!type": "fn() -> +java.lang.Float",
              "!url": "http://developer.android.com/reference/android/view/View.html#getPivotY()"
            },
            "getPivotX": {
              "!type": "fn() -> +java.lang.Float",
              "!url": "http://developer.android.com/reference/android/view/View.html#getPivotX()"
            },
            "isMeasureWithLargestChildEnabled": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/widget/LinearLayout.html#isMeasureWithLargestChildEnabled()"
            },
            "getStateListAnimator": {
              "!type": "fn() -> +android.animation.StateListAnimator",
              "!url": "http://developer.android.com/reference/android/view/View.html#getStateListAnimator()"
            },
            "getPaddingStart": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getPaddingStart()"
            },
            "resolveLayoutParams": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resolveLayoutParams()"
            },
            "dispatchActivityResult": {
              "!type": "fn(who: string, requestCode: number, resultCode: number, data: +android.content.Intent) -> bool",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchActivityResult(java.lang.String, int, int, android.content.Intent)"
            },
            "setScrollBarSize": {
              "!type": "fn(scrollBarSize: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setScrollBarSize(int)"
            },
            "dispatchDisplayHint": {
              "!type": "fn(hint: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchDisplayHint(int)"
            },
            "debug": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#debug()"
            },
            "getBoundsOnScreen": {
              "!type": "fn(outRect: +android.graphics.Rect) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#getBoundsOnScreen(android.graphics.Rect)"
            },
            "setOutlineProvider": {
              "!type": "fn(provider: +android.view.ViewOutlineProvider) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setOutlineProvider(android.view.ViewOutlineProvider)"
            },
            "measure": {
              "!type": "fn(widthMeasureSpec: number, heightMeasureSpec: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#measure(int, int)"
            },
            "dispatchKeyEvent": {
              "!type": "fn(event: +android.view.KeyEvent) -> bool",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchKeyEvent(android.view.KeyEvent)"
            },
            "getMatrix": {
              "!type": "fn() -> +android.graphics.Matrix",
              "!url": "http://developer.android.com/reference/android/view/View.html#getMatrix()"
            },
            "setOnScrollChangeListener": {
              "!type": "fn(l: +android.view.View.OnScrollChangeListener) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setOnScrollChangeListener(android.view.View.OnScrollChangeListener)"
            },
            "isActionableForAccessibility": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isActionableForAccessibility()"
            },
            "dispatchProvideStructure": {
              "!type": "fn(structure: +android.view.ViewStructure) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchProvideStructure(android.view.ViewStructure)"
            },
            "draw": {
              "!type": "fn(canvas: +android.graphics.Canvas) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#draw(android.graphics.Canvas)"
            },
            "callOnClick": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#callOnClick()"
            },
            "resetPaddingToInitialValues": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#resetPaddingToInitialValues()"
            },
            "getRotationY": {
              "!type": "fn() -> +java.lang.Float",
              "!url": "http://developer.android.com/reference/android/view/View.html#getRotationY()"
            },
            "setClipBounds": {
              "!type": "fn(clipBounds: +android.graphics.Rect) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setClipBounds(android.graphics.Rect)"
            },
            "getRotationX": {
              "!type": "fn() -> +java.lang.Float",
              "!url": "http://developer.android.com/reference/android/view/View.html#getRotationX()"
            },
            "getHitRect": {
              "!type": "fn(outRect: +android.graphics.Rect) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#getHitRect(android.graphics.Rect)"
            },
            "removeView": {
              "!type": "fn(view: +android.view.View) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#removeView(android.view.View)"
            },
            "getAccessibilitySelectionEnd": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilitySelectionEnd()"
            },
            "sendAccessibilityEventUncheckedInternal": {
              "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#sendAccessibilityEventUncheckedInternal(android.view.accessibility.AccessibilityEvent)"
            },
            "getClipBounds": {
              "!type": "fn() -> +android.graphics.Rect",
              "!url": "http://developer.android.com/reference/android/view/View.html#getClipBounds()"
            },
            "addTouchables": {
              "!type": "fn(views: +java.util.ArrayList) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#addTouchables(java.util.ArrayList)"
            },
            "getLayoutDirection": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getLayoutDirection()"
            },
            "dispatchConfigurationChanged": {
              "!type": "fn(newConfig: +android.content.res.Configuration) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchConfigurationChanged(android.content.res.Configuration)"
            },
            "isAttachedToWindow": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isAttachedToWindow()"
            },
            "onTrackballEvent": {
              "!type": "fn(event: +android.view.MotionEvent) -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#onTrackballEvent(android.view.MotionEvent)"
            },
            "resetResolvedTextDirection": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resetResolvedTextDirection()"
            },
            "restoreHierarchyState": {
              "!type": "fn(container: +android.util.SparseArray) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#restoreHierarchyState(android.util.SparseArray)"
            },
            "setDividerDrawable": {
              "!type": "fn(divider: +android.graphics.drawable.Drawable) -> void",
              "!url": "http://developer.android.com/reference/android/widget/LinearLayout.html#setDividerDrawable(android.graphics.drawable.Drawable)"
            },
            "hasShadow": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#hasShadow()"
            },
            "getElevation": {
              "!type": "fn() -> +java.lang.Float",
              "!url": "http://developer.android.com/reference/android/view/View.html#getElevation()"
            },
            "setLeftTopRightBottom": {
              "!type": "fn(left: number, top: number, right: number, bottom: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setLeftTopRightBottom(int, int, int, int)"
            },
            "resetResolvedTextAlignment": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resetResolvedTextAlignment()"
            },
            "isSaveFromParentEnabled": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isSaveFromParentEnabled()"
            },
            "willNotCacheDrawing": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#willNotCacheDrawing()"
            },
            "removeOnAttachStateChangeListener": {
              "!type": "fn(listener: +android.view.View.OnAttachStateChangeListener) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#removeOnAttachStateChangeListener(android.view.View.OnAttachStateChangeListener)"
            },
            "offsetTopAndBottom": {
              "!type": "fn(offset: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#offsetTopAndBottom(int)"
            },
            "isRootNamespace": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isRootNamespace()"
            },
            "setOverScrollMode": {
              "!type": "fn(overScrollMode: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setOverScrollMode(int)"
            },
            "getDrawableState": {
              "!type": "fn() -> +java.newArray",
              "!url": "http://developer.android.com/reference/android/view/View.html#getDrawableState()"
            },
            "stopNestedScroll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#stopNestedScroll()"
            },
            "addOnAttachStateChangeListener": {
              "!type": "fn(listener: +android.view.View.OnAttachStateChangeListener) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#addOnAttachStateChangeListener(android.view.View.OnAttachStateChangeListener)"
            },
            "onRequestSendAccessibilityEvent": {
              "!type": "fn(child: +android.view.View, event: +android.view.accessibility.AccessibilityEvent) -> bool",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onRequestSendAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent)"
            },
            "dispatchPopulateAccessibilityEventInternal": {
              "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> bool",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)"
            },
            "getAccessibilitySelectionStart": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilitySelectionStart()"
            },
            "setOnGenericMotionListener": {
              "!type": "fn(l: +android.view.View.OnGenericMotionListener) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setOnGenericMotionListener(android.view.View.OnGenericMotionListener)"
            },
            "postInvalidate": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#postInvalidate()"
            },
            "dispatchNestedPrePerformAccessibilityAction": {
              "!type": "fn(action: number, arguments: +android.os.Bundle) -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#dispatchNestedPrePerformAccessibilityAction(int, android.os.Bundle)"
            },
            "isActivated": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isActivated()"
            },
            "setWillNotDraw": {
              "!type": "fn(willNotDraw: bool) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setWillNotDraw(boolean)"
            },
            "getNextFocusForwardId": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getNextFocusForwardId()"
            },
            "isAnimationCacheEnabled": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#isAnimationCacheEnabled()"
            },
            "setNextFocusLeftId": {
              "!type": "fn(nextFocusLeftId: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setNextFocusLeftId(int)"
            },
            "requestChildFocus": {
              "!type": "fn(child: +android.view.View, focused: +android.view.View) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#requestChildFocus(android.view.View, android.view.View)"
            },
            "isLongClickable": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isLongClickable()"
            },
            "childDrawableStateChanged": {
              "!type": "fn(child: +android.view.View) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#childDrawableStateChanged(android.view.View)"
            },
            "applyDrawableToTransparentRegion": {
              "!type": "fn(dr: +android.graphics.drawable.Drawable, region: +android.graphics.Region) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#applyDrawableToTransparentRegion(android.graphics.drawable.Drawable, android.graphics.Region)"
            },
            "addFocusables": {
              "!type": "fn(views: +java.util.ArrayList, direction: number, focusableMode: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#addFocusables(java.util.ArrayList, int, int)"
            },
            "isAccessibilityFocused": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isAccessibilityFocused()"
            },
            "getDrawingCache": {
              "!type": "fn() -> +android.graphics.Bitmap",
              "!url": "http://developer.android.com/reference/android/view/View.html#getDrawingCache()"
            },
            "getWidth": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getWidth()"
            },
            "computeScroll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#computeScroll()"
            },
            "getAccessibilityLiveRegion": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilityLiveRegion()"
            },
            "isFocusableInTouchMode": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isFocusableInTouchMode()"
            },
            "getMinimumWidth": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getMinimumWidth()"
            },
            "indexOfChild": {
              "!type": "fn(child: +android.view.View) -> number",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#indexOfChild(android.view.View)"
            },
            "setMeasureWithLargestChildEnabled": {
              "!type": "fn(enabled: bool) -> void",
              "!url": "http://developer.android.com/reference/android/widget/LinearLayout.html#setMeasureWithLargestChildEnabled(boolean)"
            },
            "dispatchSetActivated": {
              "!type": "fn(activated: bool) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchSetActivated(boolean)"
            },
            "setLayerType": {
              "!type": "fn(layerType: number, paint: +android.graphics.Paint) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setLayerType(int, android.graphics.Paint)"
            },
            "isInTouchMode": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isInTouchMode()"
            },
            "isLayoutDirectionInherited": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isLayoutDirectionInherited()"
            },
            "setOrientation": {
              "!type": "fn(orientation: number) -> void",
              "!url": "http://developer.android.com/reference/android/widget/LinearLayout.html#setOrientation(int)"
            },
            "isDuplicateParentStateEnabled": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isDuplicateParentStateEnabled()"
            },
            "getDisplay": {
              "!type": "fn() -> +android.view.Display",
              "!url": "http://developer.android.com/reference/android/view/View.html#getDisplay()"
            },
            "offsetChildrenTopAndBottom": {
              "!type": "fn(offset: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#offsetChildrenTopAndBottom(int)"
            },
            "setTouchscreenBlocksFocus": {
              "!type": "fn(touchscreenBlocksFocus: bool) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setTouchscreenBlocksFocus(boolean)"
            },
            "getIteratorForGranularity": {
              "!type": "fn(granularity: number) -> +android.view.AccessibilityIterators.TextSegmentIterator",
              "!url": "http://developer.android.com/reference/android/view/View.html#getIteratorForGranularity(int)"
            },
            "getForegroundTintMode": {
              "!type": "fn() -> +android.graphics.PorterDuff.Mode",
              "!url": "http://developer.android.com/reference/android/view/View.html#getForegroundTintMode()"
            },
            "getBaseline": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/widget/LinearLayout.html#getBaseline()"
            },
            "setFadingEdgeLength": {
              "!type": "fn(length: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setFadingEdgeLength(int)"
            },
            "fitsSystemWindows": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#fitsSystemWindows()"
            },
            "setSaveEnabled": {
              "!type": "fn(enabled: bool) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setSaveEnabled(boolean)"
            },
            "setClipChildren": {
              "!type": "fn(clipChildren: bool) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setClipChildren(boolean)"
            },
            "createAccessibilityNodeInfo": {
              "!type": "fn() -> +android.view.accessibility.AccessibilityNodeInfo",
              "!url": "http://developer.android.com/reference/android/view/View.html#createAccessibilityNodeInfo()"
            },
            "getParent": {
              "!type": "fn() -> +android.view.ViewParent",
              "!url": "http://developer.android.com/reference/android/view/View.html#getParent()"
            },
            "bringChildToFront": {
              "!type": "fn(child: +android.view.View) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#bringChildToFront(android.view.View)"
            },
            "setHovered": {
              "!type": "fn(hovered: bool) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setHovered(boolean)"
            },
            "dispatchKeyShortcutEvent": {
              "!type": "fn(event: +android.view.KeyEvent) -> bool",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchKeyShortcutEvent(android.view.KeyEvent)"
            },
            "getAccessibilityWindowId": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilityWindowId()"
            },
            "requestUnbufferedDispatch": {
              "!type": "fn(event: +android.view.MotionEvent) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#requestUnbufferedDispatch(android.view.MotionEvent)"
            },
            "onNestedFling": {
              "!type": "fn(target: +android.view.View, velocityX: +java.lang.Float, velocityY: +java.lang.Float, consumed: bool) -> bool",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onNestedFling(android.view.View, float, float, boolean)"
            },
            "startNestedScroll": {
              "!type": "fn(axes: number) -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#startNestedScroll(int)"
            },
            "setBaselineAlignedChildIndex": {
              "!type": "fn(i: number) -> void",
              "!url": "http://developer.android.com/reference/android/widget/LinearLayout.html#setBaselineAlignedChildIndex(int)"
            },
            "onRtlPropertiesChanged": {
              "!type": "fn(layoutDirection: number) -> void",
              "!url": "http://developer.android.com/reference/android/widget/LinearLayout.html#onRtlPropertiesChanged(int)"
            },
            "playSoundEffect": {
              "!type": "fn(soundConstant: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#playSoundEffect(int)"
            },
            "requestFocusFromTouch": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#requestFocusFromTouch()"
            },
            "createAccessibilityNodeInfoInternal": {
              "!type": "fn() -> +android.view.accessibility.AccessibilityNodeInfo",
              "!url": "http://developer.android.com/reference/android/view/View.html#createAccessibilityNodeInfoInternal()"
            },
            "setClipToPadding": {
              "!type": "fn(clipToPadding: bool) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setClipToPadding(boolean)"
            },
            "isBaselineAligned": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/widget/LinearLayout.html#isBaselineAligned()"
            },
            "isLayoutSuppressed": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#isLayoutSuppressed()"
            },
            "setIsRootNamespace": {
              "!type": "fn(isRoot: bool) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setIsRootNamespace(boolean)"
            },
            "destroyDrawingCache": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#destroyDrawingCache()"
            },
            "setForegroundGravity": {
              "!type": "fn(gravity: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setForegroundGravity(int)"
            },
            "getContentDescription": {
              "!type": "fn() -> +java.lang.CharSequence",
              "!url": "http://developer.android.com/reference/android/view/View.html#getContentDescription()"
            },
            "setTouchDelegate": {
              "!type": "fn(delegate: +android.view.TouchDelegate) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setTouchDelegate(android.view.TouchDelegate)"
            },
            "setOnCreateContextMenuListener": {
              "!type": "fn(l: +android.view.View.OnCreateContextMenuListener) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setOnCreateContextMenuListener(android.view.View.OnCreateContextMenuListener)"
            },
            "getAccessibilityTraversalBefore": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilityTraversalBefore()"
            },
            "onGenericMotionEvent": {
              "!type": "fn(event: +android.view.MotionEvent) -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#onGenericMotionEvent(android.view.MotionEvent)"
            },
            "getAccessibilityDelegate": {
              "!type": "fn() -> +android.view.View.AccessibilityDelegate",
              "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilityDelegate()"
            },
            "setLabelFor": {
              "!type": "fn(id: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setLabelFor(int)"
            },
            "setOnLongClickListener": {
              "!type": "fn(l: +android.view.View.OnLongClickListener) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setOnLongClickListener(android.view.View.OnLongClickListener)"
            },
            "setBackgroundDrawable": {
              "!type": "fn(background: +android.graphics.drawable.Drawable) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setBackgroundDrawable(android.graphics.drawable.Drawable)"
            },
            "damageChild": {
              "!type": "fn(child: +android.view.View, dirty: +android.graphics.Rect) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#damageChild(android.view.View, android.graphics.Rect)"
            },
            "notifySubtreeAccessibilityStateChanged": {
              "!type": "fn(child: +android.view.View, source: +android.view.View, changeType: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#notifySubtreeAccessibilityStateChanged(android.view.View, android.view.View, int)"
            },
            "computeSystemWindowInsets": {
              "!type": "fn(in: +android.view.WindowInsets, outLocalInsets: +android.graphics.Rect) -> +android.view.WindowInsets",
              "!url": "http://developer.android.com/reference/android/view/View.html#computeSystemWindowInsets(android.view.WindowInsets, android.graphics.Rect)"
            },
            "offsetDescendantRectToMyCoords": {
              "!type": "fn(descendant: +android.view.View, rect: +android.graphics.Rect) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#offsetDescendantRectToMyCoords(android.view.View, android.graphics.Rect)"
            },
            "getLayoutAnimation": {
              "!type": "fn() -> +android.view.animation.LayoutAnimationController",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getLayoutAnimation()"
            },
            "removeOnLayoutChangeListener": {
              "!type": "fn(listener: +android.view.View.OnLayoutChangeListener) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#removeOnLayoutChangeListener(android.view.View.OnLayoutChangeListener)"
            },
            "setPaddingRelative": {
              "!type": "fn(start: number, top: number, end: number, bottom: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setPaddingRelative(int, int, int, int)"
            },
            "isOpaque": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isOpaque()"
            },
            "performClick": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#performClick()"
            },
            "setTextDirection": {
              "!type": "fn(textDirection: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setTextDirection(int)"
            },
            "getFocusedRect": {
              "!type": "fn(r: +android.graphics.Rect) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#getFocusedRect(android.graphics.Rect)"
            },
            "setBackgroundTintList": {
              "!type": "fn(tint: +android.content.res.ColorStateList) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setBackgroundTintList(android.content.res.ColorStateList)"
            },
            "setDrawingCacheEnabled": {
              "!type": "fn(enabled: bool) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setDrawingCacheEnabled(boolean)"
            },
            "onViewAdded": {
              "!type": "fn(child: +android.view.View) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onViewAdded(android.view.View)"
            },
            "setAssistBlocked": {
              "!type": "fn(enabled: bool) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setAssistBlocked(boolean)"
            },
            "layout": {
              "!type": "fn(l: number, t: number, r: number, b: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#layout(int, int, int, int)"
            },
            "dispatchDragEvent": {
              "!type": "fn(event: +android.view.DragEvent) -> bool",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchDragEvent(android.view.DragEvent)"
            },
            "isForegroundInsidePadding": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/View.html#isForegroundInsidePadding()"
            },
            "setTextAlignment": {
              "!type": "fn(textAlignment: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setTextAlignment(int)"
            },
            "setBackgroundResource": {
              "!type": "fn(resid: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/View.html#setBackgroundResource(int)"
            },
            "getImportantForAccessibility": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getImportantForAccessibility()"
            },
            "getPaddingTop": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/View.html#getPaddingTop()"
            },
            "requestTransparentRegion": {
              "!type": "fn(child: +android.view.View) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#requestTransparentRegion(android.view.View)"
            }
          }
        },
        "prototype": {
          "onKeyLongPress": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onKeyLongPress(int, android.view.KeyEvent)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "onPanelClosed": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onPanelClosed(int, android.view.Menu)"
          },
          "dispatchKeyShortcutEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#dispatchKeyShortcutEvent(android.view.KeyEvent)"
          },
          "onTrackballEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onTrackballEvent(android.view.MotionEvent)"
          },
          "onGenericMotionEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onGenericMotionEvent(android.view.MotionEvent)"
          },
          "setFeatureDrawableAlpha": {
            "!type": "fn(featureId: number, alpha: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setFeatureDrawableAlpha(int, int)"
          },
          "getVolumeControlStream": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getVolumeControlStream()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "onTouchEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/SearchDialog.html#onTouchEvent(android.view.MotionEvent)"
          },
          "onCreateOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onCreateOptionsMenu(android.view.Menu)"
          },
          "onCreatePanelView": {
            "!type": "fn(featureId: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onCreatePanelView(int)"
          },
          "show": {
            "!type": "fn(initialQuery: string, selectInitialQuery: bool, componentName: +android.content.ComponentName, appSearchData: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/app/SearchDialog.html#show(java.lang.String, boolean, android.content.ComponentName, android.os.Bundle)"
          },
          "launchQuerySearch": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/SearchDialog.html#launchQuerySearch()"
          },
          "addContentView": {
            "!type": "fn(view: +android.view.View, params: +android.view.ViewGroup.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#addContentView(android.view.View, android.view.ViewGroup.LayoutParams)"
          },
          "onContextItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onContextItemSelected(android.view.MenuItem)"
          },
          "getSearchEvent": {
            "!type": "fn() -> +android.view.SearchEvent",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getSearchEvent()"
          },
          "onDetachedFromWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onDetachedFromWindow()"
          },
          "onAttachedToWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onAttachedToWindow()"
          },
          "onContextMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onContextMenuClosed(android.view.Menu)"
          },
          "dismiss": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#dismiss()"
          },
          "create": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#create()"
          },
          "findViewById": {
            "!type": "fn(id: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#findViewById(int)"
          },
          "dispatchTrackballEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#dispatchTrackballEvent(android.view.MotionEvent)"
          },
          "takeCancelAndDismissListeners": {
            "!type": "fn(msg: string, cancel: +android.content.DialogInterface.OnCancelListener, dismiss: +android.content.DialogInterface.OnDismissListener) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#takeCancelAndDismissListeners(java.lang.String, android.content.DialogInterface.OnCancelListener, android.content.DialogInterface.OnDismissListener)"
          },
          "dispatchGenericMotionEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#dispatchGenericMotionEvent(android.view.MotionEvent)"
          },
          "onKeyMultiple": {
            "!type": "fn(keyCode: number, repeatCount: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onKeyMultiple(int, int, android.view.KeyEvent)"
          },
          "setListSelection": {
            "!type": "fn(index: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/SearchDialog.html#setListSelection(int)"
          },
          "setContentView": {
            "!type": "fn(layoutResID: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setContentView(int)"
          },
          "getCurrentFocus": {
            "!type": "fn() -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getCurrentFocus()"
          },
          "onKeyShortcut": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onKeyShortcut(int, android.view.KeyEvent)"
          },
          "onPrepareOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onPrepareOptionsMenu(android.view.Menu)"
          },
          "onCreateContextMenu": {
            "!type": "fn(menu: +android.view.ContextMenu, v: +android.view.View, menuInfo: +android.view.ContextMenu.ContextMenuInfo) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenu.ContextMenuInfo)"
          },
          "onKeyDown": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onKeyDown(int, android.view.KeyEvent)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "setOnCancelListener": {
            "!type": "fn(listener: +android.content.DialogInterface.OnCancelListener) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setOnCancelListener(android.content.DialogInterface.OnCancelListener)"
          },
          "setOnShowListener": {
            "!type": "fn(listener: +android.content.DialogInterface.OnShowListener) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setOnShowListener(android.content.DialogInterface.OnShowListener)"
          },
          "onRestoreInstanceState": {
            "!type": "fn(savedInstanceState: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/SearchDialog.html#onRestoreInstanceState(android.os.Bundle)"
          },
          "onWindowDismissed": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onWindowDismissed()"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getContext()"
          },
          "dispatchKeyEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#dispatchKeyEvent(android.view.KeyEvent)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "onSearchRequested": {
            "!type": "fn(searchEvent: +android.view.SearchEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onSearchRequested(android.view.SearchEvent)"
          },
          "setCancelMessage": {
            "!type": "fn(msg: +android.os.Message) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setCancelMessage(android.os.Message)"
          },
          "onOptionsMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onOptionsMenuClosed(android.view.Menu)"
          },
          "setFeatureDrawable": {
            "!type": "fn(featureId: number, drawable: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setFeatureDrawable(int, android.graphics.drawable.Drawable)"
          },
          "onOptionsItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onOptionsItemSelected(android.view.MenuItem)"
          },
          "onStop": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/SearchDialog.html#onStop()"
          },
          "onSaveInstanceState": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/app/SearchDialog.html#onSaveInstanceState()"
          },
          "onCreatePanelMenu": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onCreatePanelMenu(int, android.view.Menu)"
          },
          "setDismissMessage": {
            "!type": "fn(msg: +android.os.Message) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setDismissMessage(android.os.Message)"
          },
          "dispatchTouchEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#dispatchTouchEvent(android.view.MotionEvent)"
          },
          "requestWindowFeature": {
            "!type": "fn(featureId: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#requestWindowFeature(int)"
          },
          "onConfigurationChanged": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/SearchDialog.html#onConfigurationChanged()"
          },
          "closeOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#closeOptionsMenu()"
          },
          "onStart": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/SearchDialog.html#onStart()"
          },
          "setFeatureDrawableResource": {
            "!type": "fn(featureId: number, resId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setFeatureDrawableResource(int, int)"
          },
          "getWindow": {
            "!type": "fn() -> +android.view.Window",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getWindow()"
          },
          "setFeatureDrawableUri": {
            "!type": "fn(featureId: number, uri: +android.net.Uri) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setFeatureDrawableUri(int, android.net.Uri)"
          },
          "getOwnerActivity": {
            "!type": "fn() -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getOwnerActivity()"
          },
          "setVolumeControlStream": {
            "!type": "fn(streamType: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setVolumeControlStream(int)"
          },
          "setOwnerActivity": {
            "!type": "fn(activity: +android.app.Activity) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setOwnerActivity(android.app.Activity)"
          },
          "setWorking": {
            "!type": "fn(working: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/SearchDialog.html#setWorking(boolean)"
          },
          "onKeyUp": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onKeyUp(int, android.view.KeyEvent)"
          },
          "hide": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/SearchDialog.html#hide()"
          },
          "unregisterForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#unregisterForContextMenu(android.view.View)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "onPreparePanel": {
            "!type": "fn(featureId: number, view: +android.view.View, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onPreparePanel(int, android.view.View, android.view.Menu)"
          },
          "setOnKeyListener": {
            "!type": "fn(onKeyListener: +android.content.DialogInterface.OnKeyListener) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setOnKeyListener(android.content.DialogInterface.OnKeyListener)"
          },
          "getActionBar": {
            "!type": "fn() -> +android.app.ActionBar",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getActionBar()"
          },
          "registerForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#registerForContextMenu(android.view.View)"
          },
          "onActionModeFinished": {
            "!type": "fn(mode: +android.view.ActionMode) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onActionModeFinished(android.view.ActionMode)"
          },
          "onContentChanged": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onContentChanged()"
          },
          "onMenuItemSelected": {
            "!type": "fn(featureId: number, item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onMenuItemSelected(int, android.view.MenuItem)"
          },
          "takeKeyEvents": {
            "!type": "fn(get: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#takeKeyEvents(boolean)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "dispatchPopulateAccessibilityEvent": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
          },
          "isShowing": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#isShowing()"
          },
          "setCancelable": {
            "!type": "fn(flag: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setCancelable(boolean)"
          },
          "openOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#openOptionsMenu()"
          },
          "setOnDismissListener": {
            "!type": "fn(listener: +android.content.DialogInterface.OnDismissListener) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setOnDismissListener(android.content.DialogInterface.OnDismissListener)"
          },
          "onBackPressed": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/SearchDialog.html#onBackPressed()"
          },
          "setCanceledOnTouchOutside": {
            "!type": "fn(cancel: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setCanceledOnTouchOutside(boolean)"
          },
          "onWindowAttributesChanged": {
            "!type": "fn(params: +android.view.WindowManager.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onWindowAttributesChanged(android.view.WindowManager.LayoutParams)"
          },
          "onWindowFocusChanged": {
            "!type": "fn(hasFocus: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onWindowFocusChanged(boolean)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getLayoutInflater": {
            "!type": "fn() -> +android.view.LayoutInflater",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getLayoutInflater()"
          },
          "invalidateOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#invalidateOptionsMenu()"
          },
          "onWindowStartingActionMode": {
            "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onWindowStartingActionMode(android.view.ActionMode.Callback)"
          },
          "openContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#openContextMenu(android.view.View)"
          },
          "cancel": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#cancel()"
          },
          "onMenuOpened": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onMenuOpened(int, android.view.Menu)"
          },
          "setTitle": {
            "!type": "fn(title: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setTitle(java.lang.CharSequence)"
          },
          "onActionModeStarted": {
            "!type": "fn(mode: +android.view.ActionMode) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onActionModeStarted(android.view.ActionMode)"
          }
        }
      },
      "Instrumentation": {
        "!url": "http://developer.android.com/reference/android/app/Instrumentation.html",
        "!type": "fn()",
        "ActivityMonitor": {
          "!url": "http://developer.android.com/reference/android/app/Instrumentation.ActivityMonitor.html",
          "!type": "fn(which: +android.content.IntentFilter, result: +android.app.Instrumentation.ActivityResult, block: bool)",
          "prototype": {
            "waitForActivity": {
              "!type": "fn() -> +android.app.Activity",
              "!url": "http://developer.android.com/reference/android/app/Instrumentation.ActivityMonitor.html#waitForActivity()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "getLastActivity": {
              "!type": "fn() -> +android.app.Activity",
              "!url": "http://developer.android.com/reference/android/app/Instrumentation.ActivityMonitor.html#getLastActivity()"
            },
            "isBlocking": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/app/Instrumentation.ActivityMonitor.html#isBlocking()"
            },
            "getHits": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/app/Instrumentation.ActivityMonitor.html#getHits()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "waitForActivityWithTimeout": {
              "!type": "fn(timeOut: +java.lang.Long) -> +android.app.Activity",
              "!url": "http://developer.android.com/reference/android/app/Instrumentation.ActivityMonitor.html#waitForActivityWithTimeout(long)"
            },
            "getResult": {
              "!type": "fn() -> +android.app.Instrumentation.ActivityResult",
              "!url": "http://developer.android.com/reference/android/app/Instrumentation.ActivityMonitor.html#getResult()"
            },
            "getFilter": {
              "!type": "fn() -> +android.content.IntentFilter",
              "!url": "http://developer.android.com/reference/android/app/Instrumentation.ActivityMonitor.html#getFilter()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "ActivityResult": {
          "!url": "http://developer.android.com/reference/android/app/Instrumentation.ActivityResult.html",
          "!type": "fn(resultCode: number, resultData: +android.content.Intent)",
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "getResultCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/app/Instrumentation.ActivityResult.html#getResultCode()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "getResultData": {
              "!type": "fn() -> +android.content.Intent",
              "!url": "http://developer.android.com/reference/android/app/Instrumentation.ActivityResult.html#getResultData()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "REPORT_KEY_STREAMRESULT": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#REPORT_KEY_STREAMRESULT"
        },
        "REPORT_KEY_IDENTIFIER": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#REPORT_KEY_IDENTIFIER"
        },
        "newApplication": {
          "!type": "fn(clazz: +java.lang.Class, context: +android.content.Context) -> +android.app.Application",
          "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#newApplication(java.lang.Class, android.content.Context)"
        },
        "checkStartActivityResult": {
          "!type": "fn(res: number, intent: +java.lang.Object) -> void",
          "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#checkStartActivityResult(int, java.lang.Object)"
        },
        "prototype": {
          "callActivityOnPostCreate": {
            "!type": "fn(activity: +android.app.Activity, icicle: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#callActivityOnPostCreate(android.app.Activity, android.os.Bundle)"
          },
          "callActivityOnNewIntent": {
            "!type": "fn(activity: +android.app.Activity, intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#callActivityOnNewIntent(android.app.Activity, android.content.Intent)"
          },
          "sendKeyDownUpSync": {
            "!type": "fn(key: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#sendKeyDownUpSync(int)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "setAutomaticPerformanceSnapshots": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#setAutomaticPerformanceSnapshots()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getUiAutomation": {
            "!type": "fn() -> +android.app.UiAutomation",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#getUiAutomation()"
          },
          "isProfiling": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#isProfiling()"
          },
          "stopAllocCounting": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#stopAllocCounting()"
          },
          "sendStringSync": {
            "!type": "fn(text: string) -> void",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#sendStringSync(java.lang.String)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "invokeMenuActionSync": {
            "!type": "fn(targetActivity: +android.app.Activity, id: number, flag: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#invokeMenuActionSync(android.app.Activity, int, int)"
          },
          "addMonitor": {
            "!type": "fn(monitor: +android.app.Instrumentation.ActivityMonitor) -> void",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#addMonitor(android.app.Instrumentation.ActivityMonitor)"
          },
          "sendKeySync": {
            "!type": "fn(event: +android.view.KeyEvent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#sendKeySync(android.view.KeyEvent)"
          },
          "stopProfiling": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#stopProfiling()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "waitForIdle": {
            "!type": "fn(recipient: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#waitForIdle(java.lang.Runnable)"
          },
          "finish": {
            "!type": "fn(resultCode: number, results: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#finish(int, android.os.Bundle)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "startPerformanceSnapshot": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#startPerformanceSnapshot()"
          },
          "onStart": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#onStart()"
          },
          "waitForMonitorWithTimeout": {
            "!type": "fn(monitor: +android.app.Instrumentation.ActivityMonitor, timeOut: +java.lang.Long) -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#waitForMonitorWithTimeout(android.app.Instrumentation.ActivityMonitor, long)"
          },
          "callActivityOnDestroy": {
            "!type": "fn(activity: +android.app.Activity) -> void",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#callActivityOnDestroy(android.app.Activity)"
          },
          "newActivity": {
            "!type": "fn(clazz: +java.lang.Class, context: +android.content.Context, token: +android.os.IBinder, application: +android.app.Application, intent: +android.content.Intent, info: +android.content.pm.ActivityInfo, title: +java.lang.CharSequence, parent: +android.app.Activity, id: string, lastNonConfigurationInstance: +java.lang.Object) -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#newActivity(java.lang.Class, android.content.Context, android.os.IBinder, android.app.Application, android.content.Intent, android.content.pm.ActivityInfo, java.lang.CharSequence, android.app.Activity, java.lang.String, java.lang.Object)"
          },
          "getComponentName": {
            "!type": "fn() -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#getComponentName()"
          },
          "callActivityOnStop": {
            "!type": "fn(activity: +android.app.Activity) -> void",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#callActivityOnStop(android.app.Activity)"
          },
          "callActivityOnPause": {
            "!type": "fn(activity: +android.app.Activity) -> void",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#callActivityOnPause(android.app.Activity)"
          },
          "execStartActivitiesAsUser": {
            "!type": "fn(who: +android.content.Context, contextThread: +android.os.IBinder, token: +android.os.IBinder, target: +android.app.Activity, intents: +java.newArray, options: +android.os.Bundle, userId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#execStartActivitiesAsUser(android.content.Context, android.os.IBinder, android.os.IBinder, android.app.Activity, android.content.Intent[], android.os.Bundle, int)"
          },
          "setInTouchMode": {
            "!type": "fn(inTouch: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#setInTouchMode(boolean)"
          },
          "sendCharacterSync": {
            "!type": "fn(keyCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#sendCharacterSync(int)"
          },
          "callActivityOnRestart": {
            "!type": "fn(activity: +android.app.Activity) -> void",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#callActivityOnRestart(android.app.Activity)"
          },
          "startActivitySync": {
            "!type": "fn(intent: +android.content.Intent) -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#startActivitySync(android.content.Intent)"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#getContext()"
          },
          "callActivityOnRestoreInstanceState": {
            "!type": "fn(activity: +android.app.Activity, savedInstanceState: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#callActivityOnRestoreInstanceState(android.app.Activity, android.os.Bundle)"
          },
          "waitForMonitor": {
            "!type": "fn(monitor: +android.app.Instrumentation.ActivityMonitor) -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#waitForMonitor(android.app.Instrumentation.ActivityMonitor)"
          },
          "getBinderCounts": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#getBinderCounts()"
          },
          "invokeContextMenuAction": {
            "!type": "fn(targetActivity: +android.app.Activity, id: number, flag: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#invokeContextMenuAction(android.app.Activity, int, int)"
          },
          "endPerformanceSnapshot": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#endPerformanceSnapshot()"
          },
          "start": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#start()"
          },
          "execStartActivities": {
            "!type": "fn(who: +android.content.Context, contextThread: +android.os.IBinder, token: +android.os.IBinder, target: +android.app.Activity, intents: +java.newArray, options: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#execStartActivities(android.content.Context, android.os.IBinder, android.os.IBinder, android.app.Activity, android.content.Intent[], android.os.Bundle)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "sendTrackballEventSync": {
            "!type": "fn(event: +android.view.MotionEvent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#sendTrackballEventSync(android.view.MotionEvent)"
          },
          "execStartActivityAsCaller": {
            "!type": "fn(who: +android.content.Context, contextThread: +android.os.IBinder, token: +android.os.IBinder, target: +android.app.Activity, intent: +android.content.Intent, requestCode: number, options: +android.os.Bundle, ignoreTargetSecurity: bool, userId: number) -> +android.app.Instrumentation.ActivityResult",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#execStartActivityAsCaller(android.content.Context, android.os.IBinder, android.os.IBinder, android.app.Activity, android.content.Intent, int, android.os.Bundle, boolean, int)"
          },
          "getAllocCounts": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#getAllocCounts()"
          },
          "onCreate": {
            "!type": "fn(arguments: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#onCreate(android.os.Bundle)"
          },
          "onDestroy": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#onDestroy()"
          },
          "getTargetContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#getTargetContext()"
          },
          "execStartActivity": {
            "!type": "fn(who: +android.content.Context, contextThread: +android.os.IBinder, token: +android.os.IBinder, target: +android.app.Activity, intent: +android.content.Intent, requestCode: number, options: +android.os.Bundle) -> +android.app.Instrumentation.ActivityResult",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#execStartActivity(android.content.Context, android.os.IBinder, android.os.IBinder, android.app.Activity, android.content.Intent, int, android.os.Bundle)"
          },
          "sendPointerSync": {
            "!type": "fn(event: +android.view.MotionEvent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#sendPointerSync(android.view.MotionEvent)"
          },
          "callActivityOnUserLeaving": {
            "!type": "fn(activity: +android.app.Activity) -> void",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#callActivityOnUserLeaving(android.app.Activity)"
          },
          "callActivityOnSaveInstanceState": {
            "!type": "fn(activity: +android.app.Activity, outState: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#callActivityOnSaveInstanceState(android.app.Activity, android.os.Bundle)"
          },
          "startProfiling": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#startProfiling()"
          },
          "runOnMainSync": {
            "!type": "fn(runner: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#runOnMainSync(java.lang.Runnable)"
          },
          "execStartActivityFromAppTask": {
            "!type": "fn(who: +android.content.Context, contextThread: +android.os.IBinder, appTask: IAppTask, intent: +android.content.Intent, options: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#execStartActivityFromAppTask(android.content.Context, android.os.IBinder, IAppTask, android.content.Intent, android.os.Bundle)"
          },
          "startAllocCounting": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#startAllocCounting()"
          },
          "removeMonitor": {
            "!type": "fn(monitor: +android.app.Instrumentation.ActivityMonitor) -> void",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#removeMonitor(android.app.Instrumentation.ActivityMonitor)"
          },
          "callActivityOnStart": {
            "!type": "fn(activity: +android.app.Activity) -> void",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#callActivityOnStart(android.app.Activity)"
          },
          "callActivityOnCreate": {
            "!type": "fn(activity: +android.app.Activity, icicle: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#callActivityOnCreate(android.app.Activity, android.os.Bundle)"
          },
          "newApplication": {
            "!type": "fn(cl: +java.lang.ClassLoader, className: string, context: +android.content.Context) -> +android.app.Application",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#newApplication(java.lang.ClassLoader, java.lang.String, android.content.Context)"
          },
          "callActivityOnResume": {
            "!type": "fn(activity: +android.app.Activity) -> void",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#callActivityOnResume(android.app.Activity)"
          },
          "sendStatus": {
            "!type": "fn(resultCode: number, results: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#sendStatus(int, android.os.Bundle)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "checkMonitorHit": {
            "!type": "fn(monitor: +android.app.Instrumentation.ActivityMonitor, minHits: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#checkMonitorHit(android.app.Instrumentation.ActivityMonitor, int)"
          },
          "onException": {
            "!type": "fn(obj: +java.lang.Object, e: +java.lang.Throwable) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#onException(java.lang.Object, java.lang.Throwable)"
          },
          "callApplicationOnCreate": {
            "!type": "fn(app: +android.app.Application) -> void",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#callApplicationOnCreate(android.app.Application)"
          },
          "waitForIdleSync": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Instrumentation.html#waitForIdleSync()"
          }
        }
      },
      "NativeActivity": {
        "!url": "http://developer.android.com/reference/android/app/NativeActivity.html",
        "!type": "fn()",
        "BIND_WAIVE_PRIORITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_WAIVE_PRIORITY"
        },
        "RESULT_FIRST_USER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_FIRST_USER"
        },
        "DEFAULT_KEYS_SHORTCUT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SHORTCUT"
        },
        "MEDIA_PROJECTION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_PROJECTION_SERVICE"
        },
        "ETHERNET_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ETHERNET_SERVICE"
        },
        "WIFI_RTT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_RTT_SERVICE"
        },
        "SENSOR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SENSOR_SERVICE"
        },
        "TELEPHONY_SUBSCRIPTION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SUBSCRIPTION_SERVICE"
        },
        "CAPTIONING_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CAPTIONING_SERVICE"
        },
        "CAMERA_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CAMERA_SERVICE"
        },
        "BIND_DEBUG_UNBIND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_DEBUG_UNBIND"
        },
        "STATUS_BAR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#STATUS_BAR_SERVICE"
        },
        "META_DATA_LIB_NAME": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/NativeActivity.html#META_DATA_LIB_NAME"
        },
        "DEVICE_POLICY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_POLICY_SERVICE"
        },
        "BIND_IMPORTANT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_IMPORTANT"
        },
        "NSD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NSD_SERVICE"
        },
        "DOWNLOAD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DOWNLOAD_SERVICE"
        },
        "BIND_NOT_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_VISIBLE"
        },
        "CONTEXT_IGNORE_SECURITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_IGNORE_SECURITY"
        },
        "USAGE_STATS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USAGE_STATS_SERVICE"
        },
        "MODE_WORLD_READABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_READABLE"
        },
        "KEYGUARD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#KEYGUARD_SERVICE"
        },
        "BIND_ADJUST_WITH_ACTIVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ADJUST_WITH_ACTIVITY"
        },
        "UI_MODE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#UI_MODE_SERVICE"
        },
        "MODE_PRIVATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_PRIVATE"
        },
        "CONTEXT_INCLUDE_CODE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_INCLUDE_CODE"
        },
        "DEFAULT_KEYS_DISABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_DISABLE"
        },
        "ACCESSIBILITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACCESSIBILITY_SERVICE"
        },
        "HDMI_CONTROL_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#HDMI_CONTROL_SERVICE"
        },
        "BIND_SHOWING_UI": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_SHOWING_UI"
        },
        "MODE_APPEND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_APPEND"
        },
        "AUDIO_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#AUDIO_SERVICE"
        },
        "NETWORK_SCORE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_SCORE_SERVICE"
        },
        "UPDATE_LOCK_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#UPDATE_LOCK_SERVICE"
        },
        "META_DATA_FUNC_NAME": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/NativeActivity.html#META_DATA_FUNC_NAME"
        },
        "MEDIA_ROUTER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_ROUTER_SERVICE"
        },
        "JOB_SCHEDULER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#JOB_SCHEDULER_SERVICE"
        },
        "DEVICE_IDLE_CONTROLLER": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_IDLE_CONTROLLER"
        },
        "INPUT_METHOD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_METHOD_SERVICE"
        },
        "RESULT_CANCELED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_CANCELED"
        },
        "BIND_ABOVE_CLIENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ABOVE_CLIENT"
        },
        "INPUT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_SERVICE"
        },
        "MODE_WORLD_WRITEABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_WRITEABLE"
        },
        "NETWORKMANAGEMENT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORKMANAGEMENT_SERVICE"
        },
        "WINDOW_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WINDOW_SERVICE"
        },
        "MEDIA_SESSION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_SESSION_SERVICE"
        },
        "WIFI_P2P_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_P2P_SERVICE"
        },
        "DEFAULT_KEYS_SEARCH_GLOBAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SEARCH_GLOBAL"
        },
        "MODE_ENABLE_WRITE_AHEAD_LOGGING": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_ENABLE_WRITE_AHEAD_LOGGING"
        },
        "WIFI_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SERVICE"
        },
        "PERSISTENT_DATA_BLOCK_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#PERSISTENT_DATA_BLOCK_SERVICE"
        },
        "TV_INPUT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TV_INPUT_SERVICE"
        },
        "SIP_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SIP_SERVICE"
        },
        "FINGERPRINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#FINGERPRINT_SERVICE"
        },
        "LOCATION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LOCATION_SERVICE"
        },
        "LAUNCHER_APPS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LAUNCHER_APPS_SERVICE"
        },
        "NETWORK_STATS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_STATS_SERVICE"
        },
        "VOICE_INTERACTION_MANAGER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#VOICE_INTERACTION_MANAGER_SERVICE"
        },
        "TELECOM_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELECOM_SERVICE"
        },
        "SEARCH_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SEARCH_SERVICE"
        },
        "RADIO_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#RADIO_SERVICE"
        },
        "BIND_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_VISIBLE"
        },
        "BIND_NOT_FOREGROUND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_FOREGROUND"
        },
        "CONTEXT_RESTRICTED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_RESTRICTED"
        },
        "USER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USER_SERVICE"
        },
        "DROPBOX_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DROPBOX_SERVICE"
        },
        "BIND_TREAT_LIKE_ACTIVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_TREAT_LIKE_ACTIVITY"
        },
        "DEFAULT_KEYS_SEARCH_LOCAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SEARCH_LOCAL"
        },
        "BIND_FOREGROUND_SERVICE_WHILE_AWAKE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE_WHILE_AWAKE"
        },
        "CLIPBOARD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CLIPBOARD_SERVICE"
        },
        "LAYOUT_INFLATER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LAYOUT_INFLATER_SERVICE"
        },
        "WIFI_SCANNING_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SCANNING_SERVICE"
        },
        "PRINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#PRINT_SERVICE"
        },
        "WALLPAPER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WALLPAPER_SERVICE"
        },
        "ALARM_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ALARM_SERVICE"
        },
        "ACCOUNT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACCOUNT_SERVICE"
        },
        "TRUST_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TRUST_SERVICE"
        },
        "VIBRATOR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#VIBRATOR_SERVICE"
        },
        "RESULT_OK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_OK"
        },
        "NFC_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NFC_SERVICE"
        },
        "NOTIFICATION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NOTIFICATION_SERVICE"
        },
        "BLUETOOTH_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BLUETOOTH_SERVICE"
        },
        "POWER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#POWER_SERVICE"
        },
        "BIND_ALLOW_OOM_MANAGEMENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ALLOW_OOM_MANAGEMENT"
        },
        "DEFAULT_KEYS_DIALER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_DIALER"
        },
        "BACKUP_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BACKUP_SERVICE"
        },
        "COUNTRY_DETECTOR": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#COUNTRY_DETECTOR"
        },
        "SERIAL_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SERIAL_SERVICE"
        },
        "WIFI_PASSPOINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_PASSPOINT_SERVICE"
        },
        "CONSUMER_IR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONSUMER_IR_SERVICE"
        },
        "APP_OPS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#APP_OPS_SERVICE"
        },
        "ACTIVITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACTIVITY_SERVICE"
        },
        "STORAGE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#STORAGE_SERVICE"
        },
        "BIND_FOREGROUND_SERVICE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE"
        },
        "RESTRICTIONS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#RESTRICTIONS_SERVICE"
        },
        "CONNECTIVITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONNECTIVITY_SERVICE"
        },
        "TEXT_SERVICES_MANAGER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TEXT_SERVICES_MANAGER_SERVICE"
        },
        "USB_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USB_SERVICE"
        },
        "APPWIDGET_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#APPWIDGET_SERVICE"
        },
        "CONTEXT_REGISTER_PACKAGE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_REGISTER_PACKAGE"
        },
        "CARRIER_CONFIG_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CARRIER_CONFIG_SERVICE"
        },
        "NETWORK_POLICY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_POLICY_SERVICE"
        },
        "MIDI_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MIDI_SERVICE"
        },
        "BATTERY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BATTERY_SERVICE"
        },
        "MODE_MULTI_PROCESS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_MULTI_PROCESS"
        },
        "BIND_AUTO_CREATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_AUTO_CREATE"
        },
        "DISPLAY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DISPLAY_SERVICE"
        },
        "TELEPHONY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SERVICE"
        },
        "prototype": {
          "isBackgroundVisibleBehind": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isBackgroundVisibleBehind()"
          },
          "setProgressBarVisibility": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarVisibility(boolean)"
          },
          "setFeatureDrawableResource": {
            "!type": "fn(featureId: number, resId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableResource(int, int)"
          },
          "dispatchEnterAnimationComplete": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchEnterAnimationComplete()"
          },
          "finishActivityFromChild": {
            "!type": "fn(child: +android.app.Activity, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishActivityFromChild(android.app.Activity, int)"
          },
          "surfaceChanged": {
            "!type": "fn(holder: +android.view.SurfaceHolder, format: number, width: number, height: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/NativeActivity.html#surfaceChanged(android.view.SurfaceHolder, int, int, int)"
          },
          "startPostponedEnterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startPostponedEnterTransition()"
          },
          "onProvideAssistContent": {
            "!type": "fn(outContent: +android.app.assist.AssistContent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideAssistContent(android.app.assist.AssistContent)"
          },
          "sendBroadcastMultiplePermissions": {
            "!type": "fn(intent: +android.content.Intent, receiverPermissions: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastMultiplePermissions(android.content.Intent, java.lang.String[])"
          },
          "getString": {
            "!type": "fn(resId: number) -> string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getString(int)"
          },
          "onKeyDown": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyDown(int, android.view.KeyEvent)"
          },
          "getResources": {
            "!type": "fn() -> +android.content.res.Resources",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getResources()"
          },
          "sendStickyBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcast(android.content.Intent)"
          },
          "startActivityFromFragment": {
            "!type": "fn(fragment: +android.app.Fragment, intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityFromFragment(android.app.Fragment, android.content.Intent, int)"
          },
          "onCreateThumbnail": {
            "!type": "fn(outBitmap: +android.graphics.Bitmap, canvas: +android.graphics.Canvas) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateThumbnail(android.graphics.Bitmap, android.graphics.Canvas)"
          },
          "getOpPackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getOpPackageName()"
          },
          "getCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCacheDir()"
          },
          "onWindowDismissed": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowDismissed()"
          },
          "getBaseContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBaseContext()"
          },
          "checkCallingOrSelfPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfPermission(java.lang.String)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "isVoiceInteractionRoot": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isVoiceInteractionRoot()"
          },
          "onDetachedFromWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onDetachedFromWindow()"
          },
          "setResult": {
            "!type": "fn(resultCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setResult(int)"
          },
          "onOptionsItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onOptionsItemSelected(android.view.MenuItem)"
          },
          "isChangingConfigurations": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isChangingConfigurations()"
          },
          "getCodeCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCodeCacheDir()"
          },
          "createPendingResult": {
            "!type": "fn(requestCode: number, data: +android.content.Intent, flags: number) -> +android.app.PendingIntent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#createPendingResult(int, android.content.Intent, int)"
          },
          "getPackageResourcePath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageResourcePath()"
          },
          "getCurrentFocus": {
            "!type": "fn() -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCurrentFocus()"
          },
          "triggerSearch": {
            "!type": "fn(query: string, appSearchData: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#triggerSearch(java.lang.String, android.os.Bundle)"
          },
          "convertToTranslucent": {
            "!type": "fn(callback: +android.app.Activity.TranslucentConversionListener, options: +android.app.ActivityOptions) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#convertToTranslucent(android.app.Activity.TranslucentConversionListener, android.app.ActivityOptions)"
          },
          "startActivityForResult": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityForResult(android.content.Intent, int)"
          },
          "getLayoutInflater": {
            "!type": "fn() -> +android.view.LayoutInflater",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLayoutInflater()"
          },
          "createPackageContext": {
            "!type": "fn(packageName: string, flags: number) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContext(java.lang.String, int)"
          },
          "enforcePermission": {
            "!type": "fn(permission: string, pid: number, uid: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforcePermission(java.lang.String, int, int, java.lang.String)"
          },
          "onWindowStartingActionMode": {
            "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowStartingActionMode(android.view.ActionMode.Callback)"
          },
          "registerForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#registerForContextMenu(android.view.View)"
          },
          "setSecondaryProgress": {
            "!type": "fn(secondaryProgress: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setSecondaryProgress(int)"
          },
          "onContentChanged": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onContentChanged()"
          },
          "finishAndRemoveTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAndRemoveTask()"
          },
          "setFinishOnTouchOutside": {
            "!type": "fn(finish: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFinishOnTouchOutside(boolean)"
          },
          "requestWindowFeature": {
            "!type": "fn(featureId: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestWindowFeature(int)"
          },
          "createConfigurationContext": {
            "!type": "fn(overrideConfiguration: +android.content.res.Configuration) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createConfigurationContext(android.content.res.Configuration)"
          },
          "showDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showDialog(int)"
          },
          "onSearchRequested": {
            "!type": "fn(searchEvent: +android.view.SearchEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onSearchRequested(android.view.SearchEvent)"
          },
          "onContextItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onContextItemSelected(android.view.MenuItem)"
          },
          "onTrackballEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTrackballEvent(android.view.MotionEvent)"
          },
          "requestPermissions": {
            "!type": "fn(permissions: +java.newArray, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestPermissions(java.lang.String[], int)"
          },
          "getVoiceInteractor": {
            "!type": "fn() -> +android.app.VoiceInteractor",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getVoiceInteractor()"
          },
          "peekWallpaper": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#peekWallpaper()"
          },
          "onPrepareOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPrepareOptionsMenu(android.view.Menu)"
          },
          "onSaveInstanceState": {
            "!type": "fn(outState: +android.os.Bundle, outPersistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onSaveInstanceState(android.os.Bundle, android.os.PersistableBundle)"
          },
          "registerReceiver": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver, filter: +android.content.IntentFilter) -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter)"
          },
          "setActionBar": {
            "!type": "fn(toolbar: +android.widget.Toolbar) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setActionBar(android.widget.Toolbar)"
          },
          "getIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getIntent()"
          },
          "getObbDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDirs()"
          },
          "onGlobalLayout": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/NativeActivity.html#onGlobalLayout()"
          },
          "getPackageManager": {
            "!type": "fn() -> +android.content.pm.PackageManager",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageManager()"
          },
          "getSystemServiceName": {
            "!type": "fn(serviceClass: +java.lang.Class) -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSystemServiceName(java.lang.Class)"
          },
          "obtainStyledAttributes": {
            "!type": "fn(attrs: +java.newArray) -> +android.content.res.TypedArray",
            "!url": "http://developer.android.com/reference/android/content/Context.html#obtainStyledAttributes(int[])"
          },
          "getApplicationInfo": {
            "!type": "fn() -> +android.content.pm.ApplicationInfo",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationInfo()"
          },
          "setDefaultKeyMode": {
            "!type": "fn(mode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setDefaultKeyMode(int)"
          },
          "setProgressBarIndeterminate": {
            "!type": "fn(indeterminate: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarIndeterminate(boolean)"
          },
          "isRestricted": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#isRestricted()"
          },
          "hasWindowFocus": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#hasWindowFocus()"
          },
          "onConfigurationChanged": {
            "!type": "fn(newConfig: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/app/NativeActivity.html#onConfigurationChanged(android.content.res.Configuration)"
          },
          "getVolumeControlStream": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getVolumeControlStream()"
          },
          "databaseList": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#databaseList()"
          },
          "setTheme": {
            "!type": "fn(resid: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#setTheme(int)"
          },
          "isChild": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isChild()"
          },
          "isResumed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isResumed()"
          },
          "setRequestedOrientation": {
            "!type": "fn(requestedOrientation: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setRequestedOrientation(int)"
          },
          "onNewActivityOptions": {
            "!type": "fn(options: +android.app.ActivityOptions) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNewActivityOptions(android.app.ActivityOptions)"
          },
          "startActivity": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivity(android.content.Intent)"
          },
          "onGenericMotionEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onGenericMotionEvent(android.view.MotionEvent)"
          },
          "onWindowAttributesChanged": {
            "!type": "fn(params: +android.view.WindowManager.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowAttributesChanged(android.view.WindowManager.LayoutParams)"
          },
          "onPostCreate": {
            "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPostCreate(android.os.Bundle, android.os.PersistableBundle)"
          },
          "onKeyUp": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyUp(int, android.view.KeyEvent)"
          },
          "enforceCallingOrSelfUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfUriPermission(android.net.Uri, int, java.lang.String)"
          },
          "grantUriPermission": {
            "!type": "fn(toPackage: string, uri: +android.net.Uri, modeFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#grantUriPermission(java.lang.String, android.net.Uri, int)"
          },
          "startActivityAsCaller": {
            "!type": "fn(intent: +android.content.Intent, options: +android.os.Bundle, ignoreTargetSecurity: bool, userId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityAsCaller(android.content.Intent, android.os.Bundle, boolean, int)"
          },
          "onActivityReenter": {
            "!type": "fn(resultCode: number, data: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActivityReenter(int, android.content.Intent)"
          },
          "dispatchKeyShortcutEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchKeyShortcutEvent(android.view.KeyEvent)"
          },
          "onNavigateUpFromChild": {
            "!type": "fn(child: +android.app.Activity) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNavigateUpFromChild(android.app.Activity)"
          },
          "onEnterAnimationComplete": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onEnterAnimationComplete()"
          },
          "setContentView": {
            "!type": "fn(layoutResID: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setContentView(int)"
          },
          "getPackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageName()"
          },
          "getActionBar": {
            "!type": "fn() -> +android.app.ActionBar",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getActionBar()"
          },
          "surfaceDestroyed": {
            "!type": "fn(holder: +android.view.SurfaceHolder) -> void",
            "!url": "http://developer.android.com/reference/android/app/NativeActivity.html#surfaceDestroyed(android.view.SurfaceHolder)"
          },
          "isDestroyed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isDestroyed()"
          },
          "sendBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "runOnUiThread": {
            "!type": "fn(action: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#runOnUiThread(java.lang.Runnable)"
          },
          "stopLockTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#stopLockTask()"
          },
          "createApplicationContext": {
            "!type": "fn(application: +android.content.pm.ApplicationInfo, flags: number) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createApplicationContext(android.content.pm.ApplicationInfo, int)"
          },
          "finishAffinity": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAffinity()"
          },
          "openContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#openContextMenu(android.view.View)"
          },
          "setTaskDescription": {
            "!type": "fn(taskDescription: +android.app.ActivityManager.TaskDescription) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setTaskDescription(android.app.ActivityManager.TaskDescription)"
          },
          "setTitleColor": {
            "!type": "fn(textColor: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setTitleColor(int)"
          },
          "showAssist": {
            "!type": "fn(args: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showAssist(android.os.Bundle)"
          },
          "onVisibleBehindCanceled": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onVisibleBehindCanceled()"
          },
          "finishAfterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAfterTransition()"
          },
          "startServiceAsUser": {
            "!type": "fn(service: +android.content.Intent, user: +android.os.UserHandle) -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startServiceAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "onNavigateUp": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNavigateUp()"
          },
          "getActivityToken": {
            "!type": "fn() -> +android.os.IBinder",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getActivityToken()"
          },
          "onAttachFragment": {
            "!type": "fn(fragment: +android.app.Fragment) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onAttachFragment(android.app.Fragment)"
          },
          "getApplication": {
            "!type": "fn() -> +android.app.Application",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getApplication()"
          },
          "applyOverrideConfiguration": {
            "!type": "fn(overrideConfiguration: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#applyOverrideConfiguration(android.content.res.Configuration)"
          },
          "fileList": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#fileList()"
          },
          "getTaskId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTaskId()"
          },
          "openOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#openOptionsMenu()"
          },
          "onBackgroundVisibleBehindChanged": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onBackgroundVisibleBehindChanged(boolean)"
          },
          "startNextMatchingActivity": {
            "!type": "fn(intent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startNextMatchingActivity(android.content.Intent)"
          },
          "onPrepareNavigateUpTaskStack": {
            "!type": "fn(builder: +android.app.TaskStackBuilder) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPrepareNavigateUpTaskStack(android.app.TaskStackBuilder)"
          },
          "onActionModeFinished": {
            "!type": "fn(mode: +android.view.ActionMode) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActionModeFinished(android.view.ActionMode)"
          },
          "getLocalClassName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLocalClassName()"
          },
          "managedQuery": {
            "!type": "fn(uri: +android.net.Uri, projection: +java.newArray, selection: string, sortOrder: string) -> +android.database.Cursor",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#managedQuery(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String)"
          },
          "checkPermission": {
            "!type": "fn(permission: string, pid: number, uid: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkPermission(java.lang.String, int, int)"
          },
          "getWallpaperDesiredMinimumHeight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumHeight()"
          },
          "startManagingCursor": {
            "!type": "fn(c: +android.database.Cursor) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startManagingCursor(android.database.Cursor)"
          },
          "onRequestPermissionsResult": {
            "!type": "fn(requestCode: number, permissions: +java.newArray, grantResults: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRequestPermissionsResult(int, java.lang.String[], int[])"
          },
          "revokeUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#revokeUriPermission(android.net.Uri, int)"
          },
          "startActivityIfNeeded": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityIfNeeded(android.content.Intent, int)"
          },
          "moveTaskToBack": {
            "!type": "fn(nonRoot: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#moveTaskToBack(boolean)"
          },
          "unregisterForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#unregisterForContextMenu(android.view.View)"
          },
          "setPersistent": {
            "!type": "fn(isPersistent: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setPersistent(boolean)"
          },
          "onUserInteraction": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onUserInteraction()"
          },
          "setFeatureDrawableUri": {
            "!type": "fn(featureId: number, uri: +android.net.Uri) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableUri(int, android.net.Uri)"
          },
          "onStateNotSaved": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onStateNotSaved()"
          },
          "sendStickyOrderedBroadcast": {
            "!type": "fn(intent: +android.content.Intent, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcast(android.content.Intent, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "sendStickyOrderedBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "setContentTransitionManager": {
            "!type": "fn(tm: +android.transition.TransitionManager) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setContentTransitionManager(android.transition.TransitionManager)"
          },
          "getLoaderManager": {
            "!type": "fn() -> +android.app.LoaderManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLoaderManager()"
          },
          "onRetainNonConfigurationInstance": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRetainNonConfigurationInstance()"
          },
          "getExternalFilesDir": {
            "!type": "fn(type: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDir(java.lang.String)"
          },
          "bindService": {
            "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindService(android.content.Intent, android.content.ServiceConnection, int)"
          },
          "startActivitiesAsUser": {
            "!type": "fn(intents: +java.newArray, options: +android.os.Bundle, userHandle: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivitiesAsUser(android.content.Intent[], android.os.Bundle, android.os.UserHandle)"
          },
          "onRestoreInstanceState": {
            "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRestoreInstanceState(android.os.Bundle, android.os.PersistableBundle)"
          },
          "recreate": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#recreate()"
          },
          "getDatabasePath": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDatabasePath(java.lang.String)"
          },
          "setEnterSharedElementCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setEnterSharedElementCallback(android.app.SharedElementCallback)"
          },
          "onCreateContextMenu": {
            "!type": "fn(menu: +android.view.ContextMenu, v: +android.view.View, menuInfo: +android.view.ContextMenu.ContextMenuInfo) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenu.ContextMenuInfo)"
          },
          "onProvideAssistData": {
            "!type": "fn(data: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideAssistData(android.os.Bundle)"
          },
          "checkSelfPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkSelfPermission(java.lang.String)"
          },
          "onPanelClosed": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPanelClosed(int, android.view.Menu)"
          },
          "onCreate": {
            "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreate(android.os.Bundle, android.os.PersistableBundle)"
          },
          "enforceCallingOrSelfPermission": {
            "!type": "fn(permission: string, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfPermission(java.lang.String, java.lang.String)"
          },
          "onTouchEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTouchEvent(android.view.MotionEvent)"
          },
          "getTheme": {
            "!type": "fn() -> +android.content.res.Resources.Theme",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getTheme()"
          },
          "onKeyLongPress": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyLongPress(int, android.view.KeyEvent)"
          },
          "setMediaController": {
            "!type": "fn(controller: +android.media.session.MediaController) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setMediaController(android.media.session.MediaController)"
          },
          "getChangingConfigurations": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getChangingConfigurations()"
          },
          "finishActivity": {
            "!type": "fn(requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishActivity(int)"
          },
          "onCreatePanelView": {
            "!type": "fn(featureId: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreatePanelView(int)"
          },
          "getSearchEvent": {
            "!type": "fn() -> +android.view.SearchEvent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getSearchEvent()"
          },
          "setVisible": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setVisible(boolean)"
          },
          "startIntentSender": {
            "!type": "fn(intent: +android.content.IntentSender, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSender(android.content.IntentSender, android.content.Intent, int, int, int)"
          },
          "getExternalFilesDirs": {
            "!type": "fn(type: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDirs(java.lang.String)"
          },
          "stopServiceAsUser": {
            "!type": "fn(name: +android.content.Intent, user: +android.os.UserHandle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopServiceAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "unbindService": {
            "!type": "fn(conn: +android.content.ServiceConnection) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unbindService(android.content.ServiceConnection)"
          },
          "startActivityAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "onKeyShortcut": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyShortcut(int, android.view.KeyEvent)"
          },
          "getSharedPrefsFile": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPrefsFile(java.lang.String)"
          },
          "getDir": {
            "!type": "fn(name: string, mode: number) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDir(java.lang.String, int)"
          },
          "releaseInstance": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#releaseInstance()"
          },
          "onKeyMultiple": {
            "!type": "fn(keyCode: number, repeatCount: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyMultiple(int, int, android.view.KeyEvent)"
          },
          "onPreparePanel": {
            "!type": "fn(featureId: number, view: +android.view.View, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPreparePanel(int, android.view.View, android.view.Menu)"
          },
          "bindServiceAsUser": {
            "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number, user: +android.os.UserHandle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindServiceAsUser(android.content.Intent, android.content.ServiceConnection, int, android.os.UserHandle)"
          },
          "closeContextMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#closeContextMenu()"
          },
          "startSearch": {
            "!type": "fn(initialQuery: string, selectInitialQuery: bool, appSearchData: +android.os.Bundle, globalSearch: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startSearch(java.lang.String, boolean, android.os.Bundle, boolean)"
          },
          "getComponentName": {
            "!type": "fn() -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getComponentName()"
          },
          "showLockTaskEscapeMessage": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showLockTaskEscapeMessage()"
          },
          "getContentTransitionManager": {
            "!type": "fn() -> +android.transition.TransitionManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getContentTransitionManager()"
          },
          "onBackPressed": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onBackPressed()"
          },
          "getExternalCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDir()"
          },
          "getDrawable": {
            "!type": "fn(id: number) -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getDrawable(int)"
          },
          "setImmersive": {
            "!type": "fn(i: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setImmersive(boolean)"
          },
          "openFileOutput": {
            "!type": "fn(name: string, mode: number) -> +java.io.FileOutputStream",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileOutput(java.lang.String, int)"
          },
          "getAssets": {
            "!type": "fn() -> +android.content.res.AssetManager",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getAssets()"
          },
          "onLowMemory": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/NativeActivity.html#onLowMemory()"
          },
          "getParentActivityIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getParentActivityIntent()"
          },
          "convertFromTranslucent": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#convertFromTranslucent()"
          },
          "dispatchTouchEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchTouchEvent(android.view.MotionEvent)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getContentScene": {
            "!type": "fn() -> +android.transition.Scene",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getContentScene()"
          },
          "getCallingPackage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCallingPackage()"
          },
          "deleteDatabase": {
            "!type": "fn(name: string) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteDatabase(java.lang.String)"
          },
          "checkCallingPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingPermission(java.lang.String)"
          },
          "dispatchGenericMotionEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchGenericMotionEvent(android.view.MotionEvent)"
          },
          "getExternalMediaDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalMediaDirs()"
          },
          "getCallingActivity": {
            "!type": "fn() -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCallingActivity()"
          },
          "onAttachedToWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onAttachedToWindow()"
          },
          "clearWallpaper": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#clearWallpaper()"
          },
          "setTitle": {
            "!type": "fn(title: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setTitle(java.lang.CharSequence)"
          },
          "enforceCallingUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingUriPermission(android.net.Uri, int, java.lang.String)"
          },
          "getThemeResId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getThemeResId()"
          },
          "onWindowFocusChanged": {
            "!type": "fn(hasFocus: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/NativeActivity.html#onWindowFocusChanged(boolean)"
          },
          "registerComponentCallbacks": {
            "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
            "!url": "http://developer.android.com/reference/android/content/Context.html#registerComponentCallbacks(android.content.ComponentCallbacks)"
          },
          "getText": {
            "!type": "fn(resId: number) -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getText(int)"
          },
          "enforceUriPermission": {
            "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceUriPermission(android.net.Uri, int, int, int, java.lang.String)"
          },
          "onProvideReferrer": {
            "!type": "fn() -> +android.net.Uri",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideReferrer()"
          },
          "onInputQueueCreated": {
            "!type": "fn(queue: +android.view.InputQueue) -> void",
            "!url": "http://developer.android.com/reference/android/app/NativeActivity.html#onInputQueueCreated(android.view.InputQueue)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "unregisterComponentCallbacks": {
            "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
            "!url": "http://developer.android.com/reference/android/content/Context.html#unregisterComponentCallbacks(android.content.ComponentCallbacks)"
          },
          "finish": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finish()"
          },
          "surfaceRedrawNeeded": {
            "!type": "fn(holder: +android.view.SurfaceHolder) -> void",
            "!url": "http://developer.android.com/reference/android/app/NativeActivity.html#surfaceRedrawNeeded(android.view.SurfaceHolder)"
          },
          "getWallpaperDesiredMinimumWidth": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumWidth()"
          },
          "onMenuItemSelected": {
            "!type": "fn(featureId: number, item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onMenuItemSelected(int, android.view.MenuItem)"
          },
          "getWallpaper": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaper()"
          },
          "isVoiceInteraction": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isVoiceInteraction()"
          },
          "navigateUpTo": {
            "!type": "fn(upIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#navigateUpTo(android.content.Intent)"
          },
          "onCreatePanelMenu": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreatePanelMenu(int, android.view.Menu)"
          },
          "openOrCreateDatabase": {
            "!type": "fn(name: string, mode: number, factory: +android.database.sqlite.SQLiteDatabase.CursorFactory) -> +android.database.sqlite.SQLiteDatabase",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openOrCreateDatabase(java.lang.String, int, android.database.sqlite.SQLiteDatabase.CursorFactory)"
          },
          "openFileInput": {
            "!type": "fn(name: string) -> +java.io.FileInputStream",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileInput(java.lang.String)"
          },
          "dump": {
            "!type": "fn(prefix: string, fd: +java.io.FileDescriptor, writer: +java.io.PrintWriter, args: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])"
          },
          "onCreateDescription": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateDescription()"
          },
          "invalidateOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#invalidateOptionsMenu()"
          },
          "sendOrderedBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, receiverPermission: string, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, java.lang.String, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "canStartActivityForResult": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#canStartActivityForResult()"
          },
          "setProgress": {
            "!type": "fn(progress: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgress(int)"
          },
          "navigateUpToFromChild": {
            "!type": "fn(child: +android.app.Activity, upIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#navigateUpToFromChild(android.app.Activity, android.content.Intent)"
          },
          "getContentResolver": {
            "!type": "fn() -> +android.content.ContentResolver",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getContentResolver()"
          },
          "isFinishing": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isFinishing()"
          },
          "getFragmentManager": {
            "!type": "fn() -> +android.app.FragmentManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getFragmentManager()"
          },
          "getParent": {
            "!type": "fn() -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getParent()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "checkCallingUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingUriPermission(android.net.Uri, int)"
          },
          "setExitSharedElementCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setExitSharedElementCallback(android.app.SharedElementCallback)"
          },
          "checkUriPermission": {
            "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkUriPermission(android.net.Uri, int, int, int)"
          },
          "setFeatureDrawableAlpha": {
            "!type": "fn(featureId: number, alpha: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableAlpha(int, int)"
          },
          "registerReceiverAsUser": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver, user: +android.os.UserHandle, filter: +android.content.IntentFilter, broadcastPermission: string, scheduler: +android.os.Handler) -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiverAsUser(android.content.BroadcastReceiver, android.os.UserHandle, android.content.IntentFilter, java.lang.String, android.os.Handler)"
          },
          "getPackageCodePath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageCodePath()"
          },
          "getWindow": {
            "!type": "fn() -> +android.view.Window",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getWindow()"
          },
          "startIntentSenderFromChild": {
            "!type": "fn(child: +android.app.Activity, intent: +android.content.IntentSender, requestCode: number, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSenderFromChild(android.app.Activity, android.content.IntentSender, int, android.content.Intent, int, int, int)"
          },
          "postponeEnterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#postponeEnterTransition()"
          },
          "shouldUpRecreateTask": {
            "!type": "fn(targetIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#shouldUpRecreateTask(android.content.Intent)"
          },
          "removeStickyBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "deleteFile": {
            "!type": "fn(name: string) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteFile(java.lang.String)"
          },
          "onContextMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onContextMenuClosed(android.view.Menu)"
          },
          "onCreateOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateOptionsMenu(android.view.Menu)"
          },
          "getClassLoader": {
            "!type": "fn() -> +java.lang.ClassLoader",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getClassLoader()"
          },
          "dispatchPopulateAccessibilityEvent": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
          },
          "setIntent": {
            "!type": "fn(newIntent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setIntent(android.content.Intent)"
          },
          "setVolumeControlStream": {
            "!type": "fn(streamType: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setVolumeControlStream(int)"
          },
          "getObbDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDir()"
          },
          "startInstrumentation": {
            "!type": "fn(className: +android.content.ComponentName, profileFile: string, arguments: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startInstrumentation(android.content.ComponentName, java.lang.String, android.os.Bundle)"
          },
          "reportFullyDrawn": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#reportFullyDrawn()"
          },
          "setProgressBarIndeterminateVisibility": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarIndeterminateVisibility(boolean)"
          },
          "onInputQueueDestroyed": {
            "!type": "fn(queue: +android.view.InputQueue) -> void",
            "!url": "http://developer.android.com/reference/android/app/NativeActivity.html#onInputQueueDestroyed(android.view.InputQueue)"
          },
          "finishFromChild": {
            "!type": "fn(child: +android.app.Activity) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishFromChild(android.app.Activity)"
          },
          "getColorStateList": {
            "!type": "fn(id: number) -> +android.content.res.ColorStateList",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getColorStateList(int)"
          },
          "getTitleColor": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTitleColor()"
          },
          "getMediaController": {
            "!type": "fn() -> +android.media.session.MediaController",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getMediaController()"
          },
          "sendBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcast(android.content.Intent)"
          },
          "overridePendingTransition": {
            "!type": "fn(enterAnim: number, exitAnim: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#overridePendingTransition(int, int)"
          },
          "dispatchTrackballEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchTrackballEvent(android.view.MotionEvent)"
          },
          "getNoBackupFilesDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getNoBackupFilesDir()"
          },
          "startActionMode": {
            "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActionMode(android.view.ActionMode.Callback)"
          },
          "getApplicationContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationContext()"
          },
          "onCreateNavigateUpTaskStack": {
            "!type": "fn(builder: +android.app.TaskStackBuilder) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateNavigateUpTaskStack(android.app.TaskStackBuilder)"
          },
          "createDisplayContext": {
            "!type": "fn(display: +android.view.Display) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createDisplayContext(android.view.Display)"
          },
          "onActionModeStarted": {
            "!type": "fn(mode: +android.view.ActionMode) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActionModeStarted(android.view.ActionMode)"
          },
          "dispatchKeyEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchKeyEvent(android.view.KeyEvent)"
          },
          "enforceCallingPermission": {
            "!type": "fn(permission: string, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingPermission(java.lang.String, java.lang.String)"
          },
          "createPackageContextAsUser": {
            "!type": "fn(packageName: string, flags: number, user: +android.os.UserHandle) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContextAsUser(java.lang.String, int, android.os.UserHandle)"
          },
          "setFeatureDrawable": {
            "!type": "fn(featureId: number, drawable: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawable(int, android.graphics.drawable.Drawable)"
          },
          "dismissDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dismissDialog(int)"
          },
          "onMenuOpened": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onMenuOpened(int, android.view.Menu)"
          },
          "getSystemService": {
            "!type": "fn(name: string) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getSystemService(java.lang.String)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "startActivities": {
            "!type": "fn(intents: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivities(android.content.Intent[])"
          },
          "startService": {
            "!type": "fn(service: +android.content.Intent) -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startService(android.content.Intent)"
          },
          "getFileStreamPath": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFileStreamPath(java.lang.String)"
          },
          "addContentView": {
            "!type": "fn(view: +android.view.View, params: +android.view.ViewGroup.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#addContentView(android.view.View, android.view.ViewGroup.LayoutParams)"
          },
          "closeOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#closeOptionsMenu()"
          },
          "sendStickyBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "takeKeyEvents": {
            "!type": "fn(get: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#takeKeyEvents(boolean)"
          },
          "getTitle": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTitle()"
          },
          "getWindowManager": {
            "!type": "fn() -> +android.view.WindowManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getWindowManager()"
          },
          "checkCallingOrSelfUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfUriPermission(android.net.Uri, int)"
          },
          "getBasePackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBasePackageName()"
          },
          "stopManagingCursor": {
            "!type": "fn(c: +android.database.Cursor) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#stopManagingCursor(android.database.Cursor)"
          },
          "setWallpaper": {
            "!type": "fn(bitmap: +android.graphics.Bitmap) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#setWallpaper(android.graphics.Bitmap)"
          },
          "sendOrderedBroadcast": {
            "!type": "fn(intent: +android.content.Intent, receiverPermission: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcast(android.content.Intent, java.lang.String)"
          },
          "unregisterReceiver": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unregisterReceiver(android.content.BroadcastReceiver)"
          },
          "getColor": {
            "!type": "fn(id: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getColor(int)"
          },
          "getMenuInflater": {
            "!type": "fn() -> +android.view.MenuInflater",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getMenuInflater()"
          },
          "stopService": {
            "!type": "fn(name: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopService(android.content.Intent)"
          },
          "getMainLooper": {
            "!type": "fn() -> +android.os.Looper",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getMainLooper()"
          },
          "startActivityFromChild": {
            "!type": "fn(child: +android.app.Activity, intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityFromChild(android.app.Activity, android.content.Intent, int)"
          },
          "startLockTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startLockTask()"
          },
          "removeStickyBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcast(android.content.Intent)"
          },
          "getExternalCacheDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDirs()"
          },
          "getReferrer": {
            "!type": "fn() -> +android.net.Uri",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getReferrer()"
          },
          "isImmersive": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isImmersive()"
          },
          "shouldShowRequestPermissionRationale": {
            "!type": "fn(permission: string) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#shouldShowRequestPermissionRationale(java.lang.String)"
          },
          "getPreferences": {
            "!type": "fn(mode: number) -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getPreferences(int)"
          },
          "getFilesDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFilesDir()"
          },
          "findViewById": {
            "!type": "fn(id: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#findViewById(int)"
          },
          "getSharedPreferences": {
            "!type": "fn(name: string, mode: number) -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPreferences(java.lang.String, int)"
          },
          "isTaskRoot": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isTaskRoot()"
          },
          "surfaceCreated": {
            "!type": "fn(holder: +android.view.SurfaceHolder) -> void",
            "!url": "http://developer.android.com/reference/android/app/NativeActivity.html#surfaceCreated(android.view.SurfaceHolder)"
          },
          "getLastNonConfigurationInstance": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLastNonConfigurationInstance()"
          },
          "getDisplayAdjustments": {
            "!type": "fn(displayId: number) -> +android.view.DisplayAdjustments",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDisplayAdjustments(int)"
          },
          "getRequestedOrientation": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getRequestedOrientation()"
          },
          "onTrimMemory": {
            "!type": "fn(level: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTrimMemory(int)"
          },
          "removeDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#removeDialog(int)"
          },
          "getUserId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getUserId()"
          },
          "requestVisibleBehind": {
            "!type": "fn(visible: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestVisibleBehind(boolean)"
          },
          "onOptionsMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onOptionsMenuClosed(android.view.Menu)"
          },
          "onCreateView": {
            "!type": "fn(name: string, context: +android.content.Context, attrs: +android.util.AttributeSet) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateView(java.lang.String, android.content.Context, android.util.AttributeSet)"
          },
          "startActivityForResultAsUser": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityForResultAsUser(android.content.Intent, int, android.os.UserHandle)"
          },
          "startIntentSenderForResult": {
            "!type": "fn(intent: +android.content.IntentSender, requestCode: number, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSenderForResult(android.content.IntentSender, int, android.content.Intent, int, int, int)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          }
        }
      },
      "QueuedWork": {
        "!url": "http://developer.android.com/reference/android/app/QueuedWork.html",
        "!type": "fn()",
        "remove": {
          "!type": "fn(finisher: +java.lang.Runnable) -> void",
          "!url": "http://developer.android.com/reference/android/app/QueuedWork.html#remove(java.lang.Runnable)"
        },
        "waitToFinish": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/app/QueuedWork.html#waitToFinish()"
        },
        "hasPendingWork": {
          "!type": "fn() -> bool",
          "!url": "http://developer.android.com/reference/android/app/QueuedWork.html#hasPendingWork()"
        },
        "singleThreadExecutor": {
          "!type": "fn() -> +java.util.concurrent.ExecutorService",
          "!url": "http://developer.android.com/reference/android/app/QueuedWork.html#singleThreadExecutor()"
        },
        "add": {
          "!type": "fn(finisher: +java.lang.Runnable) -> void",
          "!url": "http://developer.android.com/reference/android/app/QueuedWork.html#add(java.lang.Runnable)"
        },
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "DownloadManagerStressTest": {
        "!url": "http://developer.android.com/reference/android/app/DownloadManagerStressTest.html",
        "!type": "fn()",
        "prototype": {
          "testDownloadLargeFile": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/DownloadManagerStressTest.html#testDownloadLargeFile()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "runTestOnUiThread": {
            "!type": "fn(r: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#runTestOnUiThread(java.lang.Runnable)"
          },
          "tearDown": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/DownloadManagerStressTest.html#tearDown()"
          },
          "launchActivity": {
            "!type": "fn(pkg: string, activityCls: +java.lang.Class, extras: +android.os.Bundle) -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#launchActivity(java.lang.String, java.lang.Class, android.os.Bundle)"
          },
          "injectInstrumentation": {
            "!type": "fn(instrumentation: +android.app.Instrumentation) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#injectInstrumentation(android.app.Instrumentation)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "testDownloadToCacheWithAlmostFullCache": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/DownloadManagerStressTest.html#testDownloadToCacheWithAlmostFullCache()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "testMultipleDownloads": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/DownloadManagerStressTest.html#testMultipleDownloads()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "setUp": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/DownloadManagerStressTest.html#setUp()"
          },
          "launchActivityWithIntent": {
            "!type": "fn(pkg: string, activityCls: +java.lang.Class, intent: +android.content.Intent) -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#launchActivityWithIntent(java.lang.String, java.lang.Class, android.content.Intent)"
          },
          "getInstrumentation": {
            "!type": "fn() -> +android.app.Instrumentation",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#getInstrumentation()"
          },
          "injectInsrumentation": {
            "!type": "fn(instrumentation: +android.app.Instrumentation) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#injectInsrumentation(android.app.Instrumentation)"
          },
          "sendRepeatedKeys": {
            "!type": "fn(keys: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#sendRepeatedKeys(int[])"
          },
          "sendKeys": {
            "!type": "fn(keysSequence: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#sendKeys(java.lang.String)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "KeyguardManager": {
        "!url": "http://developer.android.com/reference/android/app/KeyguardManager.html",
        "KeyguardLock": {
          "!url": "http://developer.android.com/reference/android/app/KeyguardManager.KeyguardLock.html",
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "disableKeyguard": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/KeyguardManager.KeyguardLock.html#disableKeyguard()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "reenableKeyguard": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/KeyguardManager.KeyguardLock.html#reenableKeyguard()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "ACTION_CONFIRM_DEVICE_CREDENTIAL": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/KeyguardManager.html#ACTION_CONFIRM_DEVICE_CREDENTIAL"
        },
        "EXTRA_TITLE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/KeyguardManager.html#EXTRA_TITLE"
        },
        "EXTRA_DESCRIPTION": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/KeyguardManager.html#EXTRA_DESCRIPTION"
        },
        "prototype": {
          "inKeyguardRestrictedInputMode": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/KeyguardManager.html#inKeyguardRestrictedInputMode()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "newKeyguardLock": {
            "!type": "fn(tag: string) -> +android.app.KeyguardManager.KeyguardLock",
            "!url": "http://developer.android.com/reference/android/app/KeyguardManager.html#newKeyguardLock(java.lang.String)"
          },
          "isKeyguardSecure": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/KeyguardManager.html#isKeyguardSecure()"
          },
          "exitKeyguardSecurely": {
            "!type": "fn(callback: +android.app.KeyguardManager.OnKeyguardExitResult) -> void",
            "!url": "http://developer.android.com/reference/android/app/KeyguardManager.html#exitKeyguardSecurely(android.app.KeyguardManager.OnKeyguardExitResult)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "isKeyguardLocked": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/KeyguardManager.html#isKeyguardLocked()"
          },
          "isDeviceSecure": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/KeyguardManager.html#isDeviceSecure()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "createConfirmDeviceCredentialIntent": {
            "!type": "fn(title: +java.lang.CharSequence, description: +java.lang.CharSequence) -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/app/KeyguardManager.html#createConfirmDeviceCredentialIntent(java.lang.CharSequence, java.lang.CharSequence)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "isDeviceLocked": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/KeyguardManager.html#isDeviceLocked()"
          }
        }
      },
      "AliasActivity": {
        "!url": "http://developer.android.com/reference/android/app/AliasActivity.html",
        "!type": "fn()",
        "BIND_WAIVE_PRIORITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_WAIVE_PRIORITY"
        },
        "RESULT_FIRST_USER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_FIRST_USER"
        },
        "DEFAULT_KEYS_SHORTCUT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SHORTCUT"
        },
        "MEDIA_PROJECTION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_PROJECTION_SERVICE"
        },
        "ETHERNET_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ETHERNET_SERVICE"
        },
        "WIFI_RTT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_RTT_SERVICE"
        },
        "SENSOR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SENSOR_SERVICE"
        },
        "TELEPHONY_SUBSCRIPTION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SUBSCRIPTION_SERVICE"
        },
        "CAPTIONING_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CAPTIONING_SERVICE"
        },
        "CAMERA_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CAMERA_SERVICE"
        },
        "BIND_DEBUG_UNBIND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_DEBUG_UNBIND"
        },
        "STATUS_BAR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#STATUS_BAR_SERVICE"
        },
        "DEVICE_POLICY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_POLICY_SERVICE"
        },
        "BIND_IMPORTANT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_IMPORTANT"
        },
        "NSD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NSD_SERVICE"
        },
        "DOWNLOAD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DOWNLOAD_SERVICE"
        },
        "BIND_NOT_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_VISIBLE"
        },
        "CONTEXT_IGNORE_SECURITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_IGNORE_SECURITY"
        },
        "USAGE_STATS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USAGE_STATS_SERVICE"
        },
        "MODE_WORLD_READABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_READABLE"
        },
        "KEYGUARD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#KEYGUARD_SERVICE"
        },
        "BIND_ADJUST_WITH_ACTIVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ADJUST_WITH_ACTIVITY"
        },
        "UI_MODE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#UI_MODE_SERVICE"
        },
        "MODE_PRIVATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_PRIVATE"
        },
        "CONTEXT_INCLUDE_CODE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_INCLUDE_CODE"
        },
        "DEFAULT_KEYS_DISABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_DISABLE"
        },
        "ACCESSIBILITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACCESSIBILITY_SERVICE"
        },
        "HDMI_CONTROL_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#HDMI_CONTROL_SERVICE"
        },
        "BIND_SHOWING_UI": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_SHOWING_UI"
        },
        "MODE_APPEND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_APPEND"
        },
        "AUDIO_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#AUDIO_SERVICE"
        },
        "NETWORK_SCORE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_SCORE_SERVICE"
        },
        "UPDATE_LOCK_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#UPDATE_LOCK_SERVICE"
        },
        "MEDIA_ROUTER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_ROUTER_SERVICE"
        },
        "JOB_SCHEDULER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#JOB_SCHEDULER_SERVICE"
        },
        "DEVICE_IDLE_CONTROLLER": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_IDLE_CONTROLLER"
        },
        "INPUT_METHOD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_METHOD_SERVICE"
        },
        "RESULT_CANCELED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_CANCELED"
        },
        "BIND_ABOVE_CLIENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ABOVE_CLIENT"
        },
        "INPUT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_SERVICE"
        },
        "MODE_WORLD_WRITEABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_WRITEABLE"
        },
        "NETWORKMANAGEMENT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORKMANAGEMENT_SERVICE"
        },
        "WINDOW_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WINDOW_SERVICE"
        },
        "MEDIA_SESSION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_SESSION_SERVICE"
        },
        "WIFI_P2P_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_P2P_SERVICE"
        },
        "DEFAULT_KEYS_SEARCH_GLOBAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SEARCH_GLOBAL"
        },
        "MODE_ENABLE_WRITE_AHEAD_LOGGING": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_ENABLE_WRITE_AHEAD_LOGGING"
        },
        "WIFI_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SERVICE"
        },
        "PERSISTENT_DATA_BLOCK_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#PERSISTENT_DATA_BLOCK_SERVICE"
        },
        "TV_INPUT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TV_INPUT_SERVICE"
        },
        "SIP_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SIP_SERVICE"
        },
        "FINGERPRINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#FINGERPRINT_SERVICE"
        },
        "LOCATION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LOCATION_SERVICE"
        },
        "LAUNCHER_APPS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LAUNCHER_APPS_SERVICE"
        },
        "NETWORK_STATS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_STATS_SERVICE"
        },
        "VOICE_INTERACTION_MANAGER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#VOICE_INTERACTION_MANAGER_SERVICE"
        },
        "TELECOM_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELECOM_SERVICE"
        },
        "SEARCH_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SEARCH_SERVICE"
        },
        "RADIO_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#RADIO_SERVICE"
        },
        "BIND_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_VISIBLE"
        },
        "BIND_NOT_FOREGROUND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_FOREGROUND"
        },
        "CONTEXT_RESTRICTED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_RESTRICTED"
        },
        "USER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USER_SERVICE"
        },
        "DROPBOX_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DROPBOX_SERVICE"
        },
        "BIND_TREAT_LIKE_ACTIVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_TREAT_LIKE_ACTIVITY"
        },
        "DEFAULT_KEYS_SEARCH_LOCAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SEARCH_LOCAL"
        },
        "BIND_FOREGROUND_SERVICE_WHILE_AWAKE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE_WHILE_AWAKE"
        },
        "CLIPBOARD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CLIPBOARD_SERVICE"
        },
        "LAYOUT_INFLATER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LAYOUT_INFLATER_SERVICE"
        },
        "WIFI_SCANNING_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SCANNING_SERVICE"
        },
        "PRINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#PRINT_SERVICE"
        },
        "WALLPAPER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WALLPAPER_SERVICE"
        },
        "ALARM_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ALARM_SERVICE"
        },
        "ACCOUNT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACCOUNT_SERVICE"
        },
        "TRUST_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TRUST_SERVICE"
        },
        "VIBRATOR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#VIBRATOR_SERVICE"
        },
        "RESULT_OK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_OK"
        },
        "NFC_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NFC_SERVICE"
        },
        "NOTIFICATION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NOTIFICATION_SERVICE"
        },
        "BLUETOOTH_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BLUETOOTH_SERVICE"
        },
        "POWER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#POWER_SERVICE"
        },
        "BIND_ALLOW_OOM_MANAGEMENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ALLOW_OOM_MANAGEMENT"
        },
        "DEFAULT_KEYS_DIALER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_DIALER"
        },
        "BACKUP_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BACKUP_SERVICE"
        },
        "COUNTRY_DETECTOR": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#COUNTRY_DETECTOR"
        },
        "SERIAL_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SERIAL_SERVICE"
        },
        "WIFI_PASSPOINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_PASSPOINT_SERVICE"
        },
        "CONSUMER_IR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONSUMER_IR_SERVICE"
        },
        "APP_OPS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#APP_OPS_SERVICE"
        },
        "ACTIVITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACTIVITY_SERVICE"
        },
        "STORAGE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#STORAGE_SERVICE"
        },
        "BIND_FOREGROUND_SERVICE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE"
        },
        "RESTRICTIONS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#RESTRICTIONS_SERVICE"
        },
        "CONNECTIVITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONNECTIVITY_SERVICE"
        },
        "TEXT_SERVICES_MANAGER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TEXT_SERVICES_MANAGER_SERVICE"
        },
        "USB_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USB_SERVICE"
        },
        "APPWIDGET_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#APPWIDGET_SERVICE"
        },
        "CONTEXT_REGISTER_PACKAGE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_REGISTER_PACKAGE"
        },
        "CARRIER_CONFIG_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CARRIER_CONFIG_SERVICE"
        },
        "NETWORK_POLICY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_POLICY_SERVICE"
        },
        "MIDI_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MIDI_SERVICE"
        },
        "BATTERY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BATTERY_SERVICE"
        },
        "MODE_MULTI_PROCESS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_MULTI_PROCESS"
        },
        "BIND_AUTO_CREATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_AUTO_CREATE"
        },
        "DISPLAY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DISPLAY_SERVICE"
        },
        "TELEPHONY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SERVICE"
        },
        "prototype": {
          "isBackgroundVisibleBehind": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isBackgroundVisibleBehind()"
          },
          "setProgressBarVisibility": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarVisibility(boolean)"
          },
          "setFeatureDrawableResource": {
            "!type": "fn(featureId: number, resId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableResource(int, int)"
          },
          "dispatchEnterAnimationComplete": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchEnterAnimationComplete()"
          },
          "finishActivityFromChild": {
            "!type": "fn(child: +android.app.Activity, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishActivityFromChild(android.app.Activity, int)"
          },
          "startPostponedEnterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startPostponedEnterTransition()"
          },
          "onProvideAssistContent": {
            "!type": "fn(outContent: +android.app.assist.AssistContent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideAssistContent(android.app.assist.AssistContent)"
          },
          "sendBroadcastMultiplePermissions": {
            "!type": "fn(intent: +android.content.Intent, receiverPermissions: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastMultiplePermissions(android.content.Intent, java.lang.String[])"
          },
          "getString": {
            "!type": "fn(resId: number) -> string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getString(int)"
          },
          "onKeyDown": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyDown(int, android.view.KeyEvent)"
          },
          "getResources": {
            "!type": "fn() -> +android.content.res.Resources",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getResources()"
          },
          "sendStickyBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcast(android.content.Intent)"
          },
          "startActivityFromFragment": {
            "!type": "fn(fragment: +android.app.Fragment, intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityFromFragment(android.app.Fragment, android.content.Intent, int)"
          },
          "onCreateThumbnail": {
            "!type": "fn(outBitmap: +android.graphics.Bitmap, canvas: +android.graphics.Canvas) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateThumbnail(android.graphics.Bitmap, android.graphics.Canvas)"
          },
          "getOpPackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getOpPackageName()"
          },
          "getCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCacheDir()"
          },
          "onWindowDismissed": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowDismissed()"
          },
          "getBaseContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBaseContext()"
          },
          "checkCallingOrSelfPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfPermission(java.lang.String)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "isVoiceInteractionRoot": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isVoiceInteractionRoot()"
          },
          "onDetachedFromWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onDetachedFromWindow()"
          },
          "setResult": {
            "!type": "fn(resultCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setResult(int)"
          },
          "onOptionsItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onOptionsItemSelected(android.view.MenuItem)"
          },
          "isChangingConfigurations": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isChangingConfigurations()"
          },
          "getCodeCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCodeCacheDir()"
          },
          "createPendingResult": {
            "!type": "fn(requestCode: number, data: +android.content.Intent, flags: number) -> +android.app.PendingIntent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#createPendingResult(int, android.content.Intent, int)"
          },
          "getPackageResourcePath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageResourcePath()"
          },
          "getCurrentFocus": {
            "!type": "fn() -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCurrentFocus()"
          },
          "triggerSearch": {
            "!type": "fn(query: string, appSearchData: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#triggerSearch(java.lang.String, android.os.Bundle)"
          },
          "convertToTranslucent": {
            "!type": "fn(callback: +android.app.Activity.TranslucentConversionListener, options: +android.app.ActivityOptions) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#convertToTranslucent(android.app.Activity.TranslucentConversionListener, android.app.ActivityOptions)"
          },
          "startActivityForResult": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityForResult(android.content.Intent, int)"
          },
          "getLayoutInflater": {
            "!type": "fn() -> +android.view.LayoutInflater",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLayoutInflater()"
          },
          "enforcePermission": {
            "!type": "fn(permission: string, pid: number, uid: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforcePermission(java.lang.String, int, int, java.lang.String)"
          },
          "createPackageContext": {
            "!type": "fn(packageName: string, flags: number) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContext(java.lang.String, int)"
          },
          "onWindowStartingActionMode": {
            "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowStartingActionMode(android.view.ActionMode.Callback)"
          },
          "registerForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#registerForContextMenu(android.view.View)"
          },
          "setSecondaryProgress": {
            "!type": "fn(secondaryProgress: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setSecondaryProgress(int)"
          },
          "onContentChanged": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onContentChanged()"
          },
          "finishAndRemoveTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAndRemoveTask()"
          },
          "setFinishOnTouchOutside": {
            "!type": "fn(finish: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFinishOnTouchOutside(boolean)"
          },
          "requestWindowFeature": {
            "!type": "fn(featureId: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestWindowFeature(int)"
          },
          "createConfigurationContext": {
            "!type": "fn(overrideConfiguration: +android.content.res.Configuration) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createConfigurationContext(android.content.res.Configuration)"
          },
          "showDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showDialog(int)"
          },
          "onSearchRequested": {
            "!type": "fn(searchEvent: +android.view.SearchEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onSearchRequested(android.view.SearchEvent)"
          },
          "onContextItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onContextItemSelected(android.view.MenuItem)"
          },
          "onTrackballEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTrackballEvent(android.view.MotionEvent)"
          },
          "requestPermissions": {
            "!type": "fn(permissions: +java.newArray, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestPermissions(java.lang.String[], int)"
          },
          "getVoiceInteractor": {
            "!type": "fn() -> +android.app.VoiceInteractor",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getVoiceInteractor()"
          },
          "peekWallpaper": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#peekWallpaper()"
          },
          "onPrepareOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPrepareOptionsMenu(android.view.Menu)"
          },
          "onSaveInstanceState": {
            "!type": "fn(outState: +android.os.Bundle, outPersistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onSaveInstanceState(android.os.Bundle, android.os.PersistableBundle)"
          },
          "registerReceiver": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver, filter: +android.content.IntentFilter) -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter)"
          },
          "setActionBar": {
            "!type": "fn(toolbar: +android.widget.Toolbar) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setActionBar(android.widget.Toolbar)"
          },
          "getIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getIntent()"
          },
          "getObbDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDirs()"
          },
          "getPackageManager": {
            "!type": "fn() -> +android.content.pm.PackageManager",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageManager()"
          },
          "getSystemServiceName": {
            "!type": "fn(serviceClass: +java.lang.Class) -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSystemServiceName(java.lang.Class)"
          },
          "obtainStyledAttributes": {
            "!type": "fn(attrs: +java.newArray) -> +android.content.res.TypedArray",
            "!url": "http://developer.android.com/reference/android/content/Context.html#obtainStyledAttributes(int[])"
          },
          "getApplicationInfo": {
            "!type": "fn() -> +android.content.pm.ApplicationInfo",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationInfo()"
          },
          "setDefaultKeyMode": {
            "!type": "fn(mode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setDefaultKeyMode(int)"
          },
          "setProgressBarIndeterminate": {
            "!type": "fn(indeterminate: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarIndeterminate(boolean)"
          },
          "isRestricted": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#isRestricted()"
          },
          "hasWindowFocus": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#hasWindowFocus()"
          },
          "onConfigurationChanged": {
            "!type": "fn(newConfig: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onConfigurationChanged(android.content.res.Configuration)"
          },
          "getVolumeControlStream": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getVolumeControlStream()"
          },
          "databaseList": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#databaseList()"
          },
          "setTheme": {
            "!type": "fn(resid: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#setTheme(int)"
          },
          "isChild": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isChild()"
          },
          "isResumed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isResumed()"
          },
          "setRequestedOrientation": {
            "!type": "fn(requestedOrientation: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setRequestedOrientation(int)"
          },
          "onNewActivityOptions": {
            "!type": "fn(options: +android.app.ActivityOptions) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNewActivityOptions(android.app.ActivityOptions)"
          },
          "startActivity": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivity(android.content.Intent)"
          },
          "onGenericMotionEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onGenericMotionEvent(android.view.MotionEvent)"
          },
          "onWindowAttributesChanged": {
            "!type": "fn(params: +android.view.WindowManager.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowAttributesChanged(android.view.WindowManager.LayoutParams)"
          },
          "onPostCreate": {
            "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPostCreate(android.os.Bundle, android.os.PersistableBundle)"
          },
          "onKeyUp": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyUp(int, android.view.KeyEvent)"
          },
          "enforceCallingOrSelfUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfUriPermission(android.net.Uri, int, java.lang.String)"
          },
          "grantUriPermission": {
            "!type": "fn(toPackage: string, uri: +android.net.Uri, modeFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#grantUriPermission(java.lang.String, android.net.Uri, int)"
          },
          "startActivityAsCaller": {
            "!type": "fn(intent: +android.content.Intent, options: +android.os.Bundle, ignoreTargetSecurity: bool, userId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityAsCaller(android.content.Intent, android.os.Bundle, boolean, int)"
          },
          "onActivityReenter": {
            "!type": "fn(resultCode: number, data: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActivityReenter(int, android.content.Intent)"
          },
          "dispatchKeyShortcutEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchKeyShortcutEvent(android.view.KeyEvent)"
          },
          "onNavigateUpFromChild": {
            "!type": "fn(child: +android.app.Activity) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNavigateUpFromChild(android.app.Activity)"
          },
          "onEnterAnimationComplete": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onEnterAnimationComplete()"
          },
          "setContentView": {
            "!type": "fn(layoutResID: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setContentView(int)"
          },
          "getPackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageName()"
          },
          "getActionBar": {
            "!type": "fn() -> +android.app.ActionBar",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getActionBar()"
          },
          "isDestroyed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isDestroyed()"
          },
          "sendBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "runOnUiThread": {
            "!type": "fn(action: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#runOnUiThread(java.lang.Runnable)"
          },
          "stopLockTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#stopLockTask()"
          },
          "createApplicationContext": {
            "!type": "fn(application: +android.content.pm.ApplicationInfo, flags: number) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createApplicationContext(android.content.pm.ApplicationInfo, int)"
          },
          "finishAffinity": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAffinity()"
          },
          "openContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#openContextMenu(android.view.View)"
          },
          "setTaskDescription": {
            "!type": "fn(taskDescription: +android.app.ActivityManager.TaskDescription) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setTaskDescription(android.app.ActivityManager.TaskDescription)"
          },
          "setTitleColor": {
            "!type": "fn(textColor: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setTitleColor(int)"
          },
          "showAssist": {
            "!type": "fn(args: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showAssist(android.os.Bundle)"
          },
          "onVisibleBehindCanceled": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onVisibleBehindCanceled()"
          },
          "finishAfterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAfterTransition()"
          },
          "startServiceAsUser": {
            "!type": "fn(service: +android.content.Intent, user: +android.os.UserHandle) -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startServiceAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "onNavigateUp": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNavigateUp()"
          },
          "getActivityToken": {
            "!type": "fn() -> +android.os.IBinder",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getActivityToken()"
          },
          "onAttachFragment": {
            "!type": "fn(fragment: +android.app.Fragment) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onAttachFragment(android.app.Fragment)"
          },
          "getApplication": {
            "!type": "fn() -> +android.app.Application",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getApplication()"
          },
          "applyOverrideConfiguration": {
            "!type": "fn(overrideConfiguration: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#applyOverrideConfiguration(android.content.res.Configuration)"
          },
          "fileList": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#fileList()"
          },
          "getTaskId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTaskId()"
          },
          "openOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#openOptionsMenu()"
          },
          "onBackgroundVisibleBehindChanged": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onBackgroundVisibleBehindChanged(boolean)"
          },
          "startNextMatchingActivity": {
            "!type": "fn(intent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startNextMatchingActivity(android.content.Intent)"
          },
          "onPrepareNavigateUpTaskStack": {
            "!type": "fn(builder: +android.app.TaskStackBuilder) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPrepareNavigateUpTaskStack(android.app.TaskStackBuilder)"
          },
          "onActionModeFinished": {
            "!type": "fn(mode: +android.view.ActionMode) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActionModeFinished(android.view.ActionMode)"
          },
          "getLocalClassName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLocalClassName()"
          },
          "managedQuery": {
            "!type": "fn(uri: +android.net.Uri, projection: +java.newArray, selection: string, sortOrder: string) -> +android.database.Cursor",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#managedQuery(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String)"
          },
          "checkPermission": {
            "!type": "fn(permission: string, pid: number, uid: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkPermission(java.lang.String, int, int)"
          },
          "getWallpaperDesiredMinimumHeight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumHeight()"
          },
          "startManagingCursor": {
            "!type": "fn(c: +android.database.Cursor) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startManagingCursor(android.database.Cursor)"
          },
          "onRequestPermissionsResult": {
            "!type": "fn(requestCode: number, permissions: +java.newArray, grantResults: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRequestPermissionsResult(int, java.lang.String[], int[])"
          },
          "revokeUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#revokeUriPermission(android.net.Uri, int)"
          },
          "startActivityIfNeeded": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityIfNeeded(android.content.Intent, int)"
          },
          "moveTaskToBack": {
            "!type": "fn(nonRoot: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#moveTaskToBack(boolean)"
          },
          "unregisterForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#unregisterForContextMenu(android.view.View)"
          },
          "setPersistent": {
            "!type": "fn(isPersistent: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setPersistent(boolean)"
          },
          "onUserInteraction": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onUserInteraction()"
          },
          "setFeatureDrawableUri": {
            "!type": "fn(featureId: number, uri: +android.net.Uri) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableUri(int, android.net.Uri)"
          },
          "onStateNotSaved": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onStateNotSaved()"
          },
          "sendStickyOrderedBroadcast": {
            "!type": "fn(intent: +android.content.Intent, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcast(android.content.Intent, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "sendStickyOrderedBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "setContentTransitionManager": {
            "!type": "fn(tm: +android.transition.TransitionManager) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setContentTransitionManager(android.transition.TransitionManager)"
          },
          "getLoaderManager": {
            "!type": "fn() -> +android.app.LoaderManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLoaderManager()"
          },
          "onRetainNonConfigurationInstance": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRetainNonConfigurationInstance()"
          },
          "getExternalFilesDir": {
            "!type": "fn(type: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDir(java.lang.String)"
          },
          "bindService": {
            "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindService(android.content.Intent, android.content.ServiceConnection, int)"
          },
          "startActivitiesAsUser": {
            "!type": "fn(intents: +java.newArray, options: +android.os.Bundle, userHandle: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivitiesAsUser(android.content.Intent[], android.os.Bundle, android.os.UserHandle)"
          },
          "onRestoreInstanceState": {
            "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRestoreInstanceState(android.os.Bundle, android.os.PersistableBundle)"
          },
          "recreate": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#recreate()"
          },
          "getDatabasePath": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDatabasePath(java.lang.String)"
          },
          "setEnterSharedElementCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setEnterSharedElementCallback(android.app.SharedElementCallback)"
          },
          "onCreateContextMenu": {
            "!type": "fn(menu: +android.view.ContextMenu, v: +android.view.View, menuInfo: +android.view.ContextMenu.ContextMenuInfo) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenu.ContextMenuInfo)"
          },
          "onProvideAssistData": {
            "!type": "fn(data: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideAssistData(android.os.Bundle)"
          },
          "checkSelfPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkSelfPermission(java.lang.String)"
          },
          "onPanelClosed": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPanelClosed(int, android.view.Menu)"
          },
          "onCreate": {
            "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreate(android.os.Bundle, android.os.PersistableBundle)"
          },
          "enforceCallingOrSelfPermission": {
            "!type": "fn(permission: string, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfPermission(java.lang.String, java.lang.String)"
          },
          "onTouchEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTouchEvent(android.view.MotionEvent)"
          },
          "getTheme": {
            "!type": "fn() -> +android.content.res.Resources.Theme",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getTheme()"
          },
          "onKeyLongPress": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyLongPress(int, android.view.KeyEvent)"
          },
          "setMediaController": {
            "!type": "fn(controller: +android.media.session.MediaController) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setMediaController(android.media.session.MediaController)"
          },
          "getChangingConfigurations": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getChangingConfigurations()"
          },
          "finishActivity": {
            "!type": "fn(requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishActivity(int)"
          },
          "onCreatePanelView": {
            "!type": "fn(featureId: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreatePanelView(int)"
          },
          "getSearchEvent": {
            "!type": "fn() -> +android.view.SearchEvent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getSearchEvent()"
          },
          "setVisible": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setVisible(boolean)"
          },
          "startIntentSender": {
            "!type": "fn(intent: +android.content.IntentSender, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSender(android.content.IntentSender, android.content.Intent, int, int, int)"
          },
          "getExternalFilesDirs": {
            "!type": "fn(type: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDirs(java.lang.String)"
          },
          "stopServiceAsUser": {
            "!type": "fn(name: +android.content.Intent, user: +android.os.UserHandle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopServiceAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "unbindService": {
            "!type": "fn(conn: +android.content.ServiceConnection) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unbindService(android.content.ServiceConnection)"
          },
          "startActivityAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "onKeyShortcut": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyShortcut(int, android.view.KeyEvent)"
          },
          "getSharedPrefsFile": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPrefsFile(java.lang.String)"
          },
          "getDir": {
            "!type": "fn(name: string, mode: number) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDir(java.lang.String, int)"
          },
          "releaseInstance": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#releaseInstance()"
          },
          "onKeyMultiple": {
            "!type": "fn(keyCode: number, repeatCount: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyMultiple(int, int, android.view.KeyEvent)"
          },
          "onPreparePanel": {
            "!type": "fn(featureId: number, view: +android.view.View, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPreparePanel(int, android.view.View, android.view.Menu)"
          },
          "bindServiceAsUser": {
            "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number, user: +android.os.UserHandle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindServiceAsUser(android.content.Intent, android.content.ServiceConnection, int, android.os.UserHandle)"
          },
          "closeContextMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#closeContextMenu()"
          },
          "startSearch": {
            "!type": "fn(initialQuery: string, selectInitialQuery: bool, appSearchData: +android.os.Bundle, globalSearch: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startSearch(java.lang.String, boolean, android.os.Bundle, boolean)"
          },
          "getComponentName": {
            "!type": "fn() -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getComponentName()"
          },
          "showLockTaskEscapeMessage": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showLockTaskEscapeMessage()"
          },
          "getContentTransitionManager": {
            "!type": "fn() -> +android.transition.TransitionManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getContentTransitionManager()"
          },
          "onBackPressed": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onBackPressed()"
          },
          "getExternalCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDir()"
          },
          "getDrawable": {
            "!type": "fn(id: number) -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getDrawable(int)"
          },
          "setImmersive": {
            "!type": "fn(i: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setImmersive(boolean)"
          },
          "openFileOutput": {
            "!type": "fn(name: string, mode: number) -> +java.io.FileOutputStream",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileOutput(java.lang.String, int)"
          },
          "getAssets": {
            "!type": "fn() -> +android.content.res.AssetManager",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getAssets()"
          },
          "onLowMemory": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onLowMemory()"
          },
          "getParentActivityIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getParentActivityIntent()"
          },
          "convertFromTranslucent": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#convertFromTranslucent()"
          },
          "dispatchTouchEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchTouchEvent(android.view.MotionEvent)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getContentScene": {
            "!type": "fn() -> +android.transition.Scene",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getContentScene()"
          },
          "getCallingPackage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCallingPackage()"
          },
          "deleteDatabase": {
            "!type": "fn(name: string) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteDatabase(java.lang.String)"
          },
          "checkCallingPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingPermission(java.lang.String)"
          },
          "dispatchGenericMotionEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchGenericMotionEvent(android.view.MotionEvent)"
          },
          "getExternalMediaDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalMediaDirs()"
          },
          "getCallingActivity": {
            "!type": "fn() -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCallingActivity()"
          },
          "onAttachedToWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onAttachedToWindow()"
          },
          "clearWallpaper": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#clearWallpaper()"
          },
          "setTitle": {
            "!type": "fn(title: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setTitle(java.lang.CharSequence)"
          },
          "enforceCallingUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingUriPermission(android.net.Uri, int, java.lang.String)"
          },
          "getThemeResId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getThemeResId()"
          },
          "onWindowFocusChanged": {
            "!type": "fn(hasFocus: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowFocusChanged(boolean)"
          },
          "registerComponentCallbacks": {
            "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
            "!url": "http://developer.android.com/reference/android/content/Context.html#registerComponentCallbacks(android.content.ComponentCallbacks)"
          },
          "getText": {
            "!type": "fn(resId: number) -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getText(int)"
          },
          "enforceUriPermission": {
            "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceUriPermission(android.net.Uri, int, int, int, java.lang.String)"
          },
          "onProvideReferrer": {
            "!type": "fn() -> +android.net.Uri",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideReferrer()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "unregisterComponentCallbacks": {
            "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
            "!url": "http://developer.android.com/reference/android/content/Context.html#unregisterComponentCallbacks(android.content.ComponentCallbacks)"
          },
          "finish": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finish()"
          },
          "getWallpaperDesiredMinimumWidth": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumWidth()"
          },
          "onMenuItemSelected": {
            "!type": "fn(featureId: number, item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onMenuItemSelected(int, android.view.MenuItem)"
          },
          "getWallpaper": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaper()"
          },
          "isVoiceInteraction": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isVoiceInteraction()"
          },
          "navigateUpTo": {
            "!type": "fn(upIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#navigateUpTo(android.content.Intent)"
          },
          "onCreatePanelMenu": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreatePanelMenu(int, android.view.Menu)"
          },
          "openOrCreateDatabase": {
            "!type": "fn(name: string, mode: number, factory: +android.database.sqlite.SQLiteDatabase.CursorFactory) -> +android.database.sqlite.SQLiteDatabase",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openOrCreateDatabase(java.lang.String, int, android.database.sqlite.SQLiteDatabase.CursorFactory)"
          },
          "openFileInput": {
            "!type": "fn(name: string) -> +java.io.FileInputStream",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileInput(java.lang.String)"
          },
          "dump": {
            "!type": "fn(prefix: string, fd: +java.io.FileDescriptor, writer: +java.io.PrintWriter, args: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])"
          },
          "onCreateDescription": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateDescription()"
          },
          "invalidateOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#invalidateOptionsMenu()"
          },
          "sendOrderedBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, receiverPermission: string, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, java.lang.String, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "canStartActivityForResult": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#canStartActivityForResult()"
          },
          "setProgress": {
            "!type": "fn(progress: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgress(int)"
          },
          "navigateUpToFromChild": {
            "!type": "fn(child: +android.app.Activity, upIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#navigateUpToFromChild(android.app.Activity, android.content.Intent)"
          },
          "getContentResolver": {
            "!type": "fn() -> +android.content.ContentResolver",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getContentResolver()"
          },
          "isFinishing": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isFinishing()"
          },
          "getFragmentManager": {
            "!type": "fn() -> +android.app.FragmentManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getFragmentManager()"
          },
          "getParent": {
            "!type": "fn() -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getParent()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "checkCallingUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingUriPermission(android.net.Uri, int)"
          },
          "setExitSharedElementCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setExitSharedElementCallback(android.app.SharedElementCallback)"
          },
          "checkUriPermission": {
            "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkUriPermission(android.net.Uri, int, int, int)"
          },
          "setFeatureDrawableAlpha": {
            "!type": "fn(featureId: number, alpha: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableAlpha(int, int)"
          },
          "registerReceiverAsUser": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver, user: +android.os.UserHandle, filter: +android.content.IntentFilter, broadcastPermission: string, scheduler: +android.os.Handler) -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiverAsUser(android.content.BroadcastReceiver, android.os.UserHandle, android.content.IntentFilter, java.lang.String, android.os.Handler)"
          },
          "getPackageCodePath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageCodePath()"
          },
          "getWindow": {
            "!type": "fn() -> +android.view.Window",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getWindow()"
          },
          "startIntentSenderFromChild": {
            "!type": "fn(child: +android.app.Activity, intent: +android.content.IntentSender, requestCode: number, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSenderFromChild(android.app.Activity, android.content.IntentSender, int, android.content.Intent, int, int, int)"
          },
          "postponeEnterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#postponeEnterTransition()"
          },
          "shouldUpRecreateTask": {
            "!type": "fn(targetIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#shouldUpRecreateTask(android.content.Intent)"
          },
          "removeStickyBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "deleteFile": {
            "!type": "fn(name: string) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteFile(java.lang.String)"
          },
          "onContextMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onContextMenuClosed(android.view.Menu)"
          },
          "onCreateOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateOptionsMenu(android.view.Menu)"
          },
          "getClassLoader": {
            "!type": "fn() -> +java.lang.ClassLoader",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getClassLoader()"
          },
          "dispatchPopulateAccessibilityEvent": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
          },
          "setIntent": {
            "!type": "fn(newIntent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setIntent(android.content.Intent)"
          },
          "setVolumeControlStream": {
            "!type": "fn(streamType: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setVolumeControlStream(int)"
          },
          "getObbDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDir()"
          },
          "startInstrumentation": {
            "!type": "fn(className: +android.content.ComponentName, profileFile: string, arguments: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startInstrumentation(android.content.ComponentName, java.lang.String, android.os.Bundle)"
          },
          "reportFullyDrawn": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#reportFullyDrawn()"
          },
          "setProgressBarIndeterminateVisibility": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarIndeterminateVisibility(boolean)"
          },
          "finishFromChild": {
            "!type": "fn(child: +android.app.Activity) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishFromChild(android.app.Activity)"
          },
          "getColorStateList": {
            "!type": "fn(id: number) -> +android.content.res.ColorStateList",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getColorStateList(int)"
          },
          "getTitleColor": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTitleColor()"
          },
          "getMediaController": {
            "!type": "fn() -> +android.media.session.MediaController",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getMediaController()"
          },
          "sendBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcast(android.content.Intent)"
          },
          "overridePendingTransition": {
            "!type": "fn(enterAnim: number, exitAnim: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#overridePendingTransition(int, int)"
          },
          "dispatchTrackballEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchTrackballEvent(android.view.MotionEvent)"
          },
          "getNoBackupFilesDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getNoBackupFilesDir()"
          },
          "startActionMode": {
            "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActionMode(android.view.ActionMode.Callback)"
          },
          "getApplicationContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationContext()"
          },
          "onCreateNavigateUpTaskStack": {
            "!type": "fn(builder: +android.app.TaskStackBuilder) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateNavigateUpTaskStack(android.app.TaskStackBuilder)"
          },
          "createDisplayContext": {
            "!type": "fn(display: +android.view.Display) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createDisplayContext(android.view.Display)"
          },
          "onActionModeStarted": {
            "!type": "fn(mode: +android.view.ActionMode) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActionModeStarted(android.view.ActionMode)"
          },
          "dispatchKeyEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchKeyEvent(android.view.KeyEvent)"
          },
          "enforceCallingPermission": {
            "!type": "fn(permission: string, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingPermission(java.lang.String, java.lang.String)"
          },
          "setFeatureDrawable": {
            "!type": "fn(featureId: number, drawable: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawable(int, android.graphics.drawable.Drawable)"
          },
          "dismissDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dismissDialog(int)"
          },
          "createPackageContextAsUser": {
            "!type": "fn(packageName: string, flags: number, user: +android.os.UserHandle) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContextAsUser(java.lang.String, int, android.os.UserHandle)"
          },
          "onMenuOpened": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onMenuOpened(int, android.view.Menu)"
          },
          "getSystemService": {
            "!type": "fn(name: string) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getSystemService(java.lang.String)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "startActivities": {
            "!type": "fn(intents: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivities(android.content.Intent[])"
          },
          "startService": {
            "!type": "fn(service: +android.content.Intent) -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startService(android.content.Intent)"
          },
          "getFileStreamPath": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFileStreamPath(java.lang.String)"
          },
          "addContentView": {
            "!type": "fn(view: +android.view.View, params: +android.view.ViewGroup.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#addContentView(android.view.View, android.view.ViewGroup.LayoutParams)"
          },
          "closeOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#closeOptionsMenu()"
          },
          "sendStickyBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "takeKeyEvents": {
            "!type": "fn(get: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#takeKeyEvents(boolean)"
          },
          "getTitle": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTitle()"
          },
          "getWindowManager": {
            "!type": "fn() -> +android.view.WindowManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getWindowManager()"
          },
          "getBasePackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBasePackageName()"
          },
          "stopManagingCursor": {
            "!type": "fn(c: +android.database.Cursor) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#stopManagingCursor(android.database.Cursor)"
          },
          "checkCallingOrSelfUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfUriPermission(android.net.Uri, int)"
          },
          "setWallpaper": {
            "!type": "fn(bitmap: +android.graphics.Bitmap) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#setWallpaper(android.graphics.Bitmap)"
          },
          "sendOrderedBroadcast": {
            "!type": "fn(intent: +android.content.Intent, receiverPermission: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcast(android.content.Intent, java.lang.String)"
          },
          "unregisterReceiver": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unregisterReceiver(android.content.BroadcastReceiver)"
          },
          "getColor": {
            "!type": "fn(id: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getColor(int)"
          },
          "getMenuInflater": {
            "!type": "fn() -> +android.view.MenuInflater",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getMenuInflater()"
          },
          "stopService": {
            "!type": "fn(name: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopService(android.content.Intent)"
          },
          "getMainLooper": {
            "!type": "fn() -> +android.os.Looper",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getMainLooper()"
          },
          "startActivityFromChild": {
            "!type": "fn(child: +android.app.Activity, intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityFromChild(android.app.Activity, android.content.Intent, int)"
          },
          "startLockTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startLockTask()"
          },
          "removeStickyBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcast(android.content.Intent)"
          },
          "getExternalCacheDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDirs()"
          },
          "getReferrer": {
            "!type": "fn() -> +android.net.Uri",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getReferrer()"
          },
          "isImmersive": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isImmersive()"
          },
          "shouldShowRequestPermissionRationale": {
            "!type": "fn(permission: string) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#shouldShowRequestPermissionRationale(java.lang.String)"
          },
          "getPreferences": {
            "!type": "fn(mode: number) -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getPreferences(int)"
          },
          "getFilesDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFilesDir()"
          },
          "findViewById": {
            "!type": "fn(id: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#findViewById(int)"
          },
          "getSharedPreferences": {
            "!type": "fn(name: string, mode: number) -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPreferences(java.lang.String, int)"
          },
          "isTaskRoot": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isTaskRoot()"
          },
          "getLastNonConfigurationInstance": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLastNonConfigurationInstance()"
          },
          "getDisplayAdjustments": {
            "!type": "fn(displayId: number) -> +android.view.DisplayAdjustments",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDisplayAdjustments(int)"
          },
          "getRequestedOrientation": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getRequestedOrientation()"
          },
          "onTrimMemory": {
            "!type": "fn(level: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTrimMemory(int)"
          },
          "removeDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#removeDialog(int)"
          },
          "getUserId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getUserId()"
          },
          "requestVisibleBehind": {
            "!type": "fn(visible: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestVisibleBehind(boolean)"
          },
          "onOptionsMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onOptionsMenuClosed(android.view.Menu)"
          },
          "onCreateView": {
            "!type": "fn(name: string, context: +android.content.Context, attrs: +android.util.AttributeSet) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateView(java.lang.String, android.content.Context, android.util.AttributeSet)"
          },
          "startActivityForResultAsUser": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityForResultAsUser(android.content.Intent, int, android.os.UserHandle)"
          },
          "startIntentSenderForResult": {
            "!type": "fn(intent: +android.content.IntentSender, requestCode: number, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSenderForResult(android.content.IntentSender, int, android.content.Intent, int, int, int)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          }
        }
      },
      "ActivityManager": {
        "!url": "http://developer.android.com/reference/android/app/ActivityManager.html",
        "TaskDescription": {
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.TaskDescription.html",
          "!type": "fn(label: string, icon: +android.graphics.Bitmap, colorPrimary: number)",
          "CREATOR": {
            "!type": "+android.os.Parcelable.Creator",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.TaskDescription.html#CREATOR"
          },
          "ATTR_TASKDESCRIPTION_PREFIX": {
            "!type": "string",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.TaskDescription.html#ATTR_TASKDESCRIPTION_PREFIX"
          },
          "loadTaskDescriptionIcon": {
            "!type": "fn(iconFilename: string) -> +android.graphics.Bitmap",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.TaskDescription.html#loadTaskDescriptionIcon(java.lang.String)"
          },
          "prototype": {
            "writeToParcel": {
              "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
              "!url": "http://developer.android.com/reference/android/app/ActivityManager.TaskDescription.html#writeToParcel(android.os.Parcel, int)"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "setIcon": {
              "!type": "fn(icon: +android.graphics.Bitmap) -> void",
              "!url": "http://developer.android.com/reference/android/app/ActivityManager.TaskDescription.html#setIcon(android.graphics.Bitmap)"
            },
            "setIconFilename": {
              "!type": "fn(iconFilename: string) -> void",
              "!url": "http://developer.android.com/reference/android/app/ActivityManager.TaskDescription.html#setIconFilename(java.lang.String)"
            },
            "readFromParcel": {
              "!type": "fn(source: +android.os.Parcel) -> void",
              "!url": "http://developer.android.com/reference/android/app/ActivityManager.TaskDescription.html#readFromParcel(android.os.Parcel)"
            },
            "getIcon": {
              "!type": "fn() -> +android.graphics.Bitmap",
              "!url": "http://developer.android.com/reference/android/app/ActivityManager.TaskDescription.html#getIcon()"
            },
            "restoreFromXml": {
              "!type": "fn(attrName: string, attrValue: string) -> void",
              "!url": "http://developer.android.com/reference/android/app/ActivityManager.TaskDescription.html#restoreFromXml(java.lang.String, java.lang.String)"
            },
            "describeContents": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/app/ActivityManager.TaskDescription.html#describeContents()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "setPrimaryColor": {
              "!type": "fn(primaryColor: number) -> void",
              "!url": "http://developer.android.com/reference/android/app/ActivityManager.TaskDescription.html#setPrimaryColor(int)"
            },
            "getIconFilename": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/app/ActivityManager.TaskDescription.html#getIconFilename()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "getInMemoryIcon": {
              "!type": "fn() -> +android.graphics.Bitmap",
              "!url": "http://developer.android.com/reference/android/app/ActivityManager.TaskDescription.html#getInMemoryIcon()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/app/ActivityManager.TaskDescription.html#toString()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getPrimaryColor": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/app/ActivityManager.TaskDescription.html#getPrimaryColor()"
            },
            "saveToXml": {
              "!type": "fn(out: +org.xmlpull.v1.XmlSerializer) -> void",
              "!url": "http://developer.android.com/reference/android/app/ActivityManager.TaskDescription.html#saveToXml(org.xmlpull.v1.XmlSerializer)"
            },
            "setLabel": {
              "!type": "fn(label: string) -> void",
              "!url": "http://developer.android.com/reference/android/app/ActivityManager.TaskDescription.html#setLabel(java.lang.String)"
            },
            "getLabel": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/app/ActivityManager.TaskDescription.html#getLabel()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            }
          }
        },
        "RecentTaskInfo": {
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.RecentTaskInfo.html",
          "!type": "fn()",
          "CREATOR": {
            "!type": "+android.os.Parcelable.Creator",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.RecentTaskInfo.html#CREATOR"
          },
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "describeContents": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/app/ActivityManager.RecentTaskInfo.html#describeContents()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "writeToParcel": {
              "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
              "!url": "http://developer.android.com/reference/android/app/ActivityManager.RecentTaskInfo.html#writeToParcel(android.os.Parcel, int)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "readFromParcel": {
              "!type": "fn(source: +android.os.Parcel) -> void",
              "!url": "http://developer.android.com/reference/android/app/ActivityManager.RecentTaskInfo.html#readFromParcel(android.os.Parcel)"
            }
          }
        },
        "RunningTaskInfo": {
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.RunningTaskInfo.html",
          "!type": "fn()",
          "CREATOR": {
            "!type": "+android.os.Parcelable.Creator",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.RunningTaskInfo.html#CREATOR"
          },
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "describeContents": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/app/ActivityManager.RunningTaskInfo.html#describeContents()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "writeToParcel": {
              "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
              "!url": "http://developer.android.com/reference/android/app/ActivityManager.RunningTaskInfo.html#writeToParcel(android.os.Parcel, int)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "readFromParcel": {
              "!type": "fn(source: +android.os.Parcel) -> void",
              "!url": "http://developer.android.com/reference/android/app/ActivityManager.RunningTaskInfo.html#readFromParcel(android.os.Parcel)"
            }
          }
        },
        "TaskThumbnail": {
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.TaskThumbnail.html",
          "!type": "fn()",
          "CREATOR": {
            "!type": "+android.os.Parcelable.Creator",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.TaskThumbnail.html#CREATOR"
          },
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "describeContents": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/app/ActivityManager.TaskThumbnail.html#describeContents()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "writeToParcel": {
              "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
              "!url": "http://developer.android.com/reference/android/app/ActivityManager.TaskThumbnail.html#writeToParcel(android.os.Parcel, int)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "readFromParcel": {
              "!type": "fn(source: +android.os.Parcel) -> void",
              "!url": "http://developer.android.com/reference/android/app/ActivityManager.TaskThumbnail.html#readFromParcel(android.os.Parcel)"
            }
          }
        },
        "RunningServiceInfo": {
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.RunningServiceInfo.html",
          "!type": "fn()",
          "CREATOR": {
            "!type": "+android.os.Parcelable.Creator",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.RunningServiceInfo.html#CREATOR"
          },
          "FLAG_FOREGROUND": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.RunningServiceInfo.html#FLAG_FOREGROUND"
          },
          "FLAG_STARTED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.RunningServiceInfo.html#FLAG_STARTED"
          },
          "FLAG_SYSTEM_PROCESS": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.RunningServiceInfo.html#FLAG_SYSTEM_PROCESS"
          },
          "FLAG_PERSISTENT_PROCESS": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.RunningServiceInfo.html#FLAG_PERSISTENT_PROCESS"
          },
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "describeContents": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/app/ActivityManager.RunningServiceInfo.html#describeContents()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "writeToParcel": {
              "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
              "!url": "http://developer.android.com/reference/android/app/ActivityManager.RunningServiceInfo.html#writeToParcel(android.os.Parcel, int)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "readFromParcel": {
              "!type": "fn(source: +android.os.Parcel) -> void",
              "!url": "http://developer.android.com/reference/android/app/ActivityManager.RunningServiceInfo.html#readFromParcel(android.os.Parcel)"
            }
          }
        },
        "MemoryInfo": {
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.MemoryInfo.html",
          "!type": "fn()",
          "CREATOR": {
            "!type": "+android.os.Parcelable.Creator",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.MemoryInfo.html#CREATOR"
          },
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "describeContents": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/app/ActivityManager.MemoryInfo.html#describeContents()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "writeToParcel": {
              "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
              "!url": "http://developer.android.com/reference/android/app/ActivityManager.MemoryInfo.html#writeToParcel(android.os.Parcel, int)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "readFromParcel": {
              "!type": "fn(source: +android.os.Parcel) -> void",
              "!url": "http://developer.android.com/reference/android/app/ActivityManager.MemoryInfo.html#readFromParcel(android.os.Parcel)"
            }
          }
        },
        "StackInfo": {
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.StackInfo.html",
          "!type": "fn()",
          "CREATOR": {
            "!type": "+android.os.Parcelable.Creator",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.StackInfo.html#CREATOR"
          },
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn(prefix: string) -> string",
              "!url": "http://developer.android.com/reference/android/app/ActivityManager.StackInfo.html#toString(java.lang.String)"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "describeContents": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/app/ActivityManager.StackInfo.html#describeContents()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "writeToParcel": {
              "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
              "!url": "http://developer.android.com/reference/android/app/ActivityManager.StackInfo.html#writeToParcel(android.os.Parcel, int)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "readFromParcel": {
              "!type": "fn(source: +android.os.Parcel) -> void",
              "!url": "http://developer.android.com/reference/android/app/ActivityManager.StackInfo.html#readFromParcel(android.os.Parcel)"
            }
          }
        },
        "ProcessErrorStateInfo": {
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.ProcessErrorStateInfo.html",
          "!type": "fn()",
          "CREATOR": {
            "!type": "+android.os.Parcelable.Creator",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.ProcessErrorStateInfo.html#CREATOR"
          },
          "NO_ERROR": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.ProcessErrorStateInfo.html#NO_ERROR"
          },
          "NOT_RESPONDING": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.ProcessErrorStateInfo.html#NOT_RESPONDING"
          },
          "CRASHED": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.ProcessErrorStateInfo.html#CRASHED"
          },
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "describeContents": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/app/ActivityManager.ProcessErrorStateInfo.html#describeContents()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "writeToParcel": {
              "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
              "!url": "http://developer.android.com/reference/android/app/ActivityManager.ProcessErrorStateInfo.html#writeToParcel(android.os.Parcel, int)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "readFromParcel": {
              "!type": "fn(source: +android.os.Parcel) -> void",
              "!url": "http://developer.android.com/reference/android/app/ActivityManager.ProcessErrorStateInfo.html#readFromParcel(android.os.Parcel)"
            }
          }
        },
        "RunningAppProcessInfo": {
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html",
          "!type": "fn()",
          "IMPORTANCE_VISIBLE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#IMPORTANCE_VISIBLE"
          },
          "IMPORTANCE_CANT_SAVE_STATE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#IMPORTANCE_CANT_SAVE_STATE"
          },
          "IMPORTANCE_PERCEPTIBLE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#IMPORTANCE_PERCEPTIBLE"
          },
          "REASON_UNKNOWN": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#REASON_UNKNOWN"
          },
          "IMPORTANCE_FOREGROUND": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#IMPORTANCE_FOREGROUND"
          },
          "FLAG_HAS_ACTIVITIES": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#FLAG_HAS_ACTIVITIES"
          },
          "IMPORTANCE_FOREGROUND_SERVICE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#IMPORTANCE_FOREGROUND_SERVICE"
          },
          "REASON_PROVIDER_IN_USE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#REASON_PROVIDER_IN_USE"
          },
          "IMPORTANCE_BACKGROUND": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#IMPORTANCE_BACKGROUND"
          },
          "CREATOR": {
            "!type": "+android.os.Parcelable.Creator",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#CREATOR"
          },
          "IMPORTANCE_SERVICE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#IMPORTANCE_SERVICE"
          },
          "IMPORTANCE_TOP_SLEEPING": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#IMPORTANCE_TOP_SLEEPING"
          },
          "IMPORTANCE_GONE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#IMPORTANCE_GONE"
          },
          "FLAG_CANT_SAVE_STATE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#FLAG_CANT_SAVE_STATE"
          },
          "REASON_SERVICE_IN_USE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#REASON_SERVICE_IN_USE"
          },
          "IMPORTANCE_EMPTY": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#IMPORTANCE_EMPTY"
          },
          "FLAG_PERSISTENT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#FLAG_PERSISTENT"
          },
          "procStateToImportance": {
            "!type": "fn(procState: number) -> number",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#procStateToImportance(int)"
          },
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "describeContents": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#describeContents()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "writeToParcel": {
              "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
              "!url": "http://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#writeToParcel(android.os.Parcel, int)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "readFromParcel": {
              "!type": "fn(source: +android.os.Parcel) -> void",
              "!url": "http://developer.android.com/reference/android/app/ActivityManager.RunningAppProcessInfo.html#readFromParcel(android.os.Parcel)"
            }
          }
        },
        "AppTask": {
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.AppTask.html",
          "!type": "fn(task: IAppTask)",
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "startActivity": {
              "!type": "fn(context: +android.content.Context, intent: +android.content.Intent, options: +android.os.Bundle) -> void",
              "!url": "http://developer.android.com/reference/android/app/ActivityManager.AppTask.html#startActivity(android.content.Context, android.content.Intent, android.os.Bundle)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "moveToFront": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/ActivityManager.AppTask.html#moveToFront()"
            },
            "setExcludeFromRecents": {
              "!type": "fn(exclude: bool) -> void",
              "!url": "http://developer.android.com/reference/android/app/ActivityManager.AppTask.html#setExcludeFromRecents(boolean)"
            },
            "finishAndRemoveTask": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/ActivityManager.AppTask.html#finishAndRemoveTask()"
            },
            "getTaskInfo": {
              "!type": "fn() -> +android.app.ActivityManager.RecentTaskInfo",
              "!url": "http://developer.android.com/reference/android/app/ActivityManager.AppTask.html#getTaskInfo()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "ASSIST_CONTEXT_BASIC": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#ASSIST_CONTEXT_BASIC"
        },
        "META_HOME_ALTERNATE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#META_HOME_ALTERNATE"
        },
        "START_RETURN_INTENT_TO_CALLER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#START_RETURN_INTENT_TO_CALLER"
        },
        "LOCK_TASK_MODE_LOCKED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#LOCK_TASK_MODE_LOCKED"
        },
        "USER_OP_UNKNOWN_USER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#USER_OP_UNKNOWN_USER"
        },
        "COMPAT_MODE_ENABLED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#COMPAT_MODE_ENABLED"
        },
        "BROADCAST_STICKY_CANT_HAVE_PERMISSION": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#BROADCAST_STICKY_CANT_HAVE_PERMISSION"
        },
        "PROCESS_STATE_NONEXISTENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#PROCESS_STATE_NONEXISTENT"
        },
        "RECENT_INCLUDE_PROFILES": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#RECENT_INCLUDE_PROFILES"
        },
        "PROCESS_STATE_PERSISTENT_UI": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#PROCESS_STATE_PERSISTENT_UI"
        },
        "MOVE_TASK_NO_USER_ACTION": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#MOVE_TASK_NO_USER_ACTION"
        },
        "PROCESS_STATE_PERSISTENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#PROCESS_STATE_PERSISTENT"
        },
        "USER_OP_IS_CURRENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#USER_OP_IS_CURRENT"
        },
        "RECENT_IGNORE_HOME_STACK_TASKS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#RECENT_IGNORE_HOME_STACK_TASKS"
        },
        "COMPAT_MODE_NEVER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#COMPAT_MODE_NEVER"
        },
        "PROCESS_STATE_TOP_SLEEPING": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#PROCESS_STATE_TOP_SLEEPING"
        },
        "PROCESS_STATE_TOP": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#PROCESS_STATE_TOP"
        },
        "START_PERMISSION_DENIED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#START_PERMISSION_DENIED"
        },
        "START_SUCCESS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#START_SUCCESS"
        },
        "START_DELIVERED_TO_TOP": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#START_DELIVERED_TO_TOP"
        },
        "START_RETURN_LOCK_TASK_MODE_VIOLATION": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#START_RETURN_LOCK_TASK_MODE_VIOLATION"
        },
        "START_TASK_TO_FRONT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#START_TASK_TO_FRONT"
        },
        "PROCESS_STATE_CACHED_ACTIVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#PROCESS_STATE_CACHED_ACTIVITY"
        },
        "PROCESS_STATE_LAST_ACTIVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#PROCESS_STATE_LAST_ACTIVITY"
        },
        "BROADCAST_SUCCESS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#BROADCAST_SUCCESS"
        },
        "PROCESS_STATE_FOREGROUND_SERVICE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#PROCESS_STATE_FOREGROUND_SERVICE"
        },
        "INTENT_SENDER_SERVICE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#INTENT_SENDER_SERVICE"
        },
        "BROADCAST_FAILED_USER_STOPPED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#BROADCAST_FAILED_USER_STOPPED"
        },
        "PROCESS_STATE_HEAVY_WEIGHT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#PROCESS_STATE_HEAVY_WEIGHT"
        },
        "PROCESS_STATE_RECEIVER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#PROCESS_STATE_RECEIVER"
        },
        "START_FLAG_DEBUG": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#START_FLAG_DEBUG"
        },
        "ACTION_REPORT_HEAP_LIMIT": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#ACTION_REPORT_HEAP_LIMIT"
        },
        "START_NOT_ACTIVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#START_NOT_ACTIVITY"
        },
        "START_FLAG_ONLY_IF_NEEDED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#START_FLAG_ONLY_IF_NEEDED"
        },
        "INTENT_SENDER_ACTIVITY_RESULT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#INTENT_SENDER_ACTIVITY_RESULT"
        },
        "PROCESS_STATE_CACHED_EMPTY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#PROCESS_STATE_CACHED_EMPTY"
        },
        "RECENT_WITH_EXCLUDED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#RECENT_WITH_EXCLUDED"
        },
        "START_FORWARD_AND_REQUEST_CONFLICT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#START_FORWARD_AND_REQUEST_CONFLICT"
        },
        "COMPAT_MODE_ALWAYS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#COMPAT_MODE_ALWAYS"
        },
        "COMPAT_MODE_DISABLED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#COMPAT_MODE_DISABLED"
        },
        "PROCESS_STATE_IMPORTANT_FOREGROUND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#PROCESS_STATE_IMPORTANT_FOREGROUND"
        },
        "PROCESS_STATE_HOME": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#PROCESS_STATE_HOME"
        },
        "PROCESS_STATE_IMPORTANT_BACKGROUND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#PROCESS_STATE_IMPORTANT_BACKGROUND"
        },
        "START_INTENT_NOT_RESOLVED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#START_INTENT_NOT_RESOLVED"
        },
        "COMPAT_MODE_TOGGLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#COMPAT_MODE_TOGGLE"
        },
        "START_CANCELED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#START_CANCELED"
        },
        "PROCESS_STATE_SERVICE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#PROCESS_STATE_SERVICE"
        },
        "INTENT_SENDER_BROADCAST": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#INTENT_SENDER_BROADCAST"
        },
        "USER_OP_SUCCESS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#USER_OP_SUCCESS"
        },
        "RECENT_IGNORE_UNAVAILABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#RECENT_IGNORE_UNAVAILABLE"
        },
        "START_CLASS_NOT_FOUND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#START_CLASS_NOT_FOUND"
        },
        "PROCESS_STATE_BACKUP": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#PROCESS_STATE_BACKUP"
        },
        "ASSIST_CONTEXT_FULL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#ASSIST_CONTEXT_FULL"
        },
        "PROCESS_STATE_BOUND_FOREGROUND_SERVICE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#PROCESS_STATE_BOUND_FOREGROUND_SERVICE"
        },
        "LOCK_TASK_MODE_PINNED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#LOCK_TASK_MODE_PINNED"
        },
        "LOCK_TASK_MODE_NONE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#LOCK_TASK_MODE_NONE"
        },
        "START_FLAG_OPENGL_TRACES": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#START_FLAG_OPENGL_TRACES"
        },
        "PROCESS_STATE_CACHED_ACTIVITY_CLIENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#PROCESS_STATE_CACHED_ACTIVITY_CLIENT"
        },
        "START_NOT_VOICE_COMPATIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#START_NOT_VOICE_COMPATIBLE"
        },
        "START_NOT_CURRENT_USER_ACTIVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#START_NOT_CURRENT_USER_ACTIVITY"
        },
        "MOVE_TASK_WITH_HOME": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#MOVE_TASK_WITH_HOME"
        },
        "COMPAT_MODE_UNKNOWN": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#COMPAT_MODE_UNKNOWN"
        },
        "INTENT_SENDER_ACTIVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#INTENT_SENDER_ACTIVITY"
        },
        "START_SWITCHES_CANCELED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#START_SWITCHES_CANCELED"
        },
        "dumpPackageStateStatic": {
          "!type": "fn(fd: +java.io.FileDescriptor, packageName: string) -> void",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#dumpPackageStateStatic(java.io.FileDescriptor, java.lang.String)"
        },
        "getCurrentUser": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#getCurrentUser()"
        },
        "checkUidPermission": {
          "!type": "fn(permission: string, uid: number) -> number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#checkUidPermission(java.lang.String, int)"
        },
        "getMyMemoryState": {
          "!type": "fn(outState: +android.app.ActivityManager.RunningAppProcessInfo) -> void",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#getMyMemoryState(android.app.ActivityManager.RunningAppProcessInfo)"
        },
        "getMaxAppRecentsLimitStatic": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#getMaxAppRecentsLimitStatic()"
        },
        "checkComponentPermission": {
          "!type": "fn(permission: string, uid: number, owningUid: number, exported: bool) -> number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#checkComponentPermission(java.lang.String, int, int, boolean)"
        },
        "getDefaultAppRecentsLimitStatic": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#getDefaultAppRecentsLimitStatic()"
        },
        "handleIncomingUser": {
          "!type": "fn(callingPid: number, callingUid: number, userId: number, allowAll: bool, requireFull: bool, name: string, callerPackage: string) -> number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#handleIncomingUser(int, int, int, boolean, boolean, java.lang.String, java.lang.String)"
        },
        "staticGetLargeMemoryClass": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#staticGetLargeMemoryClass()"
        },
        "isUserAMonkey": {
          "!type": "fn() -> bool",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#isUserAMonkey()"
        },
        "getMaxRecentTasksStatic": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#getMaxRecentTasksStatic()"
        },
        "isHighEndGfx": {
          "!type": "fn() -> bool",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#isHighEndGfx()"
        },
        "staticGetMemoryClass": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#staticGetMemoryClass()"
        },
        "isLowRamDeviceStatic": {
          "!type": "fn() -> bool",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#isLowRamDeviceStatic()"
        },
        "isRunningInTestHarness": {
          "!type": "fn() -> bool",
          "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#isRunningInTestHarness()"
        },
        "prototype": {
          "getRunningTasks": {
            "!type": "fn(maxNum: number) -> +java.util.List",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#getRunningTasks(int)"
          },
          "getDeviceConfigurationInfo": {
            "!type": "fn() -> +android.content.pm.ConfigurationInfo",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#getDeviceConfigurationInfo()"
          },
          "killUid": {
            "!type": "fn(uid: number, reason: string) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#killUid(int, java.lang.String)"
          },
          "isInLockTaskMode": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#isInLockTaskMode()"
          },
          "getTaskThumbnail": {
            "!type": "fn(id: number) -> +android.app.ActivityManager.TaskThumbnail",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#getTaskThumbnail(int)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "switchUser": {
            "!type": "fn(userid: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#switchUser(int)"
          },
          "moveTaskToFront": {
            "!type": "fn(taskId: number, flags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#moveTaskToFront(int, int)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getRecentTasksForUser": {
            "!type": "fn(maxNum: number, flags: number, userId: number) -> +java.util.List",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#getRecentTasksForUser(int, int, int)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "setWatchHeapLimit": {
            "!type": "fn(pssSize: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#setWatchHeapLimit(long)"
          },
          "getLauncherLargeIconDensity": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#getLauncherLargeIconDensity()"
          },
          "isInHomeStack": {
            "!type": "fn(taskId: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#isInHomeStack(int)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "removeTask": {
            "!type": "fn(taskId: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#removeTask(int)"
          },
          "getAppTaskThumbnailSize": {
            "!type": "fn() -> +android.util.Size",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#getAppTaskThumbnailSize()"
          },
          "getRunningServices": {
            "!type": "fn(maxNum: number) -> +java.util.List",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#getRunningServices(int)"
          },
          "getFrontActivityScreenCompatMode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#getFrontActivityScreenCompatMode()"
          },
          "startLockTaskMode": {
            "!type": "fn(taskId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#startLockTaskMode(int)"
          },
          "stopLockTaskMode": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#stopLockTaskMode()"
          },
          "forceStopPackage": {
            "!type": "fn(packageName: string) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#forceStopPackage(java.lang.String)"
          },
          "setPackageAskScreenCompat": {
            "!type": "fn(packageName: string, ask: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#setPackageAskScreenCompat(java.lang.String, boolean)"
          },
          "addAppTask": {
            "!type": "fn(activity: +android.app.Activity, intent: +android.content.Intent, description: +android.app.ActivityManager.TaskDescription, thumbnail: +android.graphics.Bitmap) -> number",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#addAppTask(android.app.Activity, android.content.Intent, android.app.ActivityManager.TaskDescription, android.graphics.Bitmap)"
          },
          "getRunningExternalApplications": {
            "!type": "fn() -> +java.util.List",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#getRunningExternalApplications()"
          },
          "isLowRamDevice": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#isLowRamDevice()"
          },
          "restartPackage": {
            "!type": "fn(packageName: string) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#restartPackage(java.lang.String)"
          },
          "getRunningServiceControlPanel": {
            "!type": "fn(service: +android.content.ComponentName) -> +android.app.PendingIntent",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#getRunningServiceControlPanel(android.content.ComponentName)"
          },
          "getPackageImportance": {
            "!type": "fn(packageName: string) -> number",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#getPackageImportance(java.lang.String)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "clearWatchHeapLimit": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#clearWatchHeapLimit()"
          },
          "getMemoryInfo": {
            "!type": "fn(outInfo: +android.app.ActivityManager.MemoryInfo) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#getMemoryInfo(android.app.ActivityManager.MemoryInfo)"
          },
          "setPackageScreenCompatMode": {
            "!type": "fn(packageName: string, mode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#setPackageScreenCompatMode(java.lang.String, int)"
          },
          "getRunningAppProcesses": {
            "!type": "fn() -> +java.util.List",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#getRunningAppProcesses()"
          },
          "getProcessMemoryInfo": {
            "!type": "fn(pids: +java.newArray) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#getProcessMemoryInfo(int[])"
          },
          "setFrontActivityScreenCompatMode": {
            "!type": "fn(mode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#setFrontActivityScreenCompatMode(int)"
          },
          "getLauncherLargeIconSize": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#getLauncherLargeIconSize()"
          },
          "getProcessesInErrorState": {
            "!type": "fn() -> +java.util.List",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#getProcessesInErrorState()"
          },
          "killBackgroundProcesses": {
            "!type": "fn(packageName: string) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#killBackgroundProcesses(java.lang.String)"
          },
          "getLargeMemoryClass": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#getLargeMemoryClass()"
          },
          "getPackageAskScreenCompat": {
            "!type": "fn(packageName: string) -> bool",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#getPackageAskScreenCompat(java.lang.String)"
          },
          "forceStopPackageAsUser": {
            "!type": "fn(packageName: string, userId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#forceStopPackageAsUser(java.lang.String, int)"
          },
          "getRecentTasks": {
            "!type": "fn(maxNum: number, flags: number) -> +java.util.List",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#getRecentTasks(int, int)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getMemoryClass": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#getMemoryClass()"
          },
          "getAppTasks": {
            "!type": "fn() -> +java.util.List",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#getAppTasks()"
          },
          "clearApplicationUserData": {
            "!type": "fn(packageName: string, observer: IPackageDataObserver) -> bool",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#clearApplicationUserData(java.lang.String, IPackageDataObserver)"
          },
          "setProcessMemoryTrimLevel": {
            "!type": "fn(process: string, userId: number, level: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#setProcessMemoryTrimLevel(java.lang.String, int, int)"
          },
          "getLockTaskModeState": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#getLockTaskModeState()"
          },
          "dumpPackageState": {
            "!type": "fn(fd: +java.io.FileDescriptor, packageName: string) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#dumpPackageState(java.io.FileDescriptor, java.lang.String)"
          },
          "isUserRunning": {
            "!type": "fn(userid: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#isUserRunning(int)"
          },
          "getPackageScreenCompatMode": {
            "!type": "fn(packageName: string) -> number",
            "!url": "http://developer.android.com/reference/android/app/ActivityManager.html#getPackageScreenCompatMode(java.lang.String)"
          }
        }
      },
      "Service": {
        "!url": "http://developer.android.com/reference/android/app/Service.html",
        "!type": "fn()",
        "BIND_WAIVE_PRIORITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_WAIVE_PRIORITY"
        },
        "MEDIA_PROJECTION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_PROJECTION_SERVICE"
        },
        "ETHERNET_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ETHERNET_SERVICE"
        },
        "WIFI_RTT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_RTT_SERVICE"
        },
        "SENSOR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SENSOR_SERVICE"
        },
        "TELEPHONY_SUBSCRIPTION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SUBSCRIPTION_SERVICE"
        },
        "CAPTIONING_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CAPTIONING_SERVICE"
        },
        "START_CONTINUATION_MASK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Service.html#START_CONTINUATION_MASK"
        },
        "CAMERA_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CAMERA_SERVICE"
        },
        "BIND_DEBUG_UNBIND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_DEBUG_UNBIND"
        },
        "STATUS_BAR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#STATUS_BAR_SERVICE"
        },
        "DEVICE_POLICY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_POLICY_SERVICE"
        },
        "BIND_IMPORTANT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_IMPORTANT"
        },
        "NSD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NSD_SERVICE"
        },
        "DOWNLOAD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DOWNLOAD_SERVICE"
        },
        "BIND_NOT_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_VISIBLE"
        },
        "CONTEXT_IGNORE_SECURITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_IGNORE_SECURITY"
        },
        "USAGE_STATS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USAGE_STATS_SERVICE"
        },
        "START_FLAG_RETRY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Service.html#START_FLAG_RETRY"
        },
        "MODE_WORLD_READABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_READABLE"
        },
        "KEYGUARD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#KEYGUARD_SERVICE"
        },
        "BIND_ADJUST_WITH_ACTIVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ADJUST_WITH_ACTIVITY"
        },
        "UI_MODE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#UI_MODE_SERVICE"
        },
        "MODE_PRIVATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_PRIVATE"
        },
        "CONTEXT_INCLUDE_CODE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_INCLUDE_CODE"
        },
        "ACCESSIBILITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACCESSIBILITY_SERVICE"
        },
        "HDMI_CONTROL_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#HDMI_CONTROL_SERVICE"
        },
        "BIND_SHOWING_UI": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_SHOWING_UI"
        },
        "MODE_APPEND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_APPEND"
        },
        "AUDIO_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#AUDIO_SERVICE"
        },
        "NETWORK_SCORE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_SCORE_SERVICE"
        },
        "UPDATE_LOCK_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#UPDATE_LOCK_SERVICE"
        },
        "MEDIA_ROUTER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_ROUTER_SERVICE"
        },
        "JOB_SCHEDULER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#JOB_SCHEDULER_SERVICE"
        },
        "DEVICE_IDLE_CONTROLLER": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_IDLE_CONTROLLER"
        },
        "INPUT_METHOD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_METHOD_SERVICE"
        },
        "BIND_ABOVE_CLIENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ABOVE_CLIENT"
        },
        "START_STICKY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Service.html#START_STICKY"
        },
        "INPUT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_SERVICE"
        },
        "MODE_WORLD_WRITEABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_WRITEABLE"
        },
        "NETWORKMANAGEMENT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORKMANAGEMENT_SERVICE"
        },
        "WINDOW_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WINDOW_SERVICE"
        },
        "MEDIA_SESSION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_SESSION_SERVICE"
        },
        "WIFI_P2P_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_P2P_SERVICE"
        },
        "MODE_ENABLE_WRITE_AHEAD_LOGGING": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_ENABLE_WRITE_AHEAD_LOGGING"
        },
        "WIFI_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SERVICE"
        },
        "PERSISTENT_DATA_BLOCK_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#PERSISTENT_DATA_BLOCK_SERVICE"
        },
        "TV_INPUT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TV_INPUT_SERVICE"
        },
        "SIP_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SIP_SERVICE"
        },
        "FINGERPRINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#FINGERPRINT_SERVICE"
        },
        "LOCATION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LOCATION_SERVICE"
        },
        "LAUNCHER_APPS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LAUNCHER_APPS_SERVICE"
        },
        "NETWORK_STATS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_STATS_SERVICE"
        },
        "VOICE_INTERACTION_MANAGER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#VOICE_INTERACTION_MANAGER_SERVICE"
        },
        "TELECOM_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELECOM_SERVICE"
        },
        "SEARCH_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SEARCH_SERVICE"
        },
        "RADIO_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#RADIO_SERVICE"
        },
        "BIND_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_VISIBLE"
        },
        "BIND_NOT_FOREGROUND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_FOREGROUND"
        },
        "CONTEXT_RESTRICTED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_RESTRICTED"
        },
        "USER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USER_SERVICE"
        },
        "DROPBOX_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DROPBOX_SERVICE"
        },
        "BIND_TREAT_LIKE_ACTIVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_TREAT_LIKE_ACTIVITY"
        },
        "BIND_FOREGROUND_SERVICE_WHILE_AWAKE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE_WHILE_AWAKE"
        },
        "CLIPBOARD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CLIPBOARD_SERVICE"
        },
        "START_TASK_REMOVED_COMPLETE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Service.html#START_TASK_REMOVED_COMPLETE"
        },
        "LAYOUT_INFLATER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LAYOUT_INFLATER_SERVICE"
        },
        "WIFI_SCANNING_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SCANNING_SERVICE"
        },
        "PRINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#PRINT_SERVICE"
        },
        "WALLPAPER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WALLPAPER_SERVICE"
        },
        "ALARM_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ALARM_SERVICE"
        },
        "ACCOUNT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACCOUNT_SERVICE"
        },
        "TRUST_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TRUST_SERVICE"
        },
        "VIBRATOR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#VIBRATOR_SERVICE"
        },
        "START_REDELIVER_INTENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Service.html#START_REDELIVER_INTENT"
        },
        "NFC_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NFC_SERVICE"
        },
        "NOTIFICATION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NOTIFICATION_SERVICE"
        },
        "BLUETOOTH_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BLUETOOTH_SERVICE"
        },
        "POWER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#POWER_SERVICE"
        },
        "BIND_ALLOW_OOM_MANAGEMENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ALLOW_OOM_MANAGEMENT"
        },
        "START_FLAG_REDELIVERY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Service.html#START_FLAG_REDELIVERY"
        },
        "BACKUP_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BACKUP_SERVICE"
        },
        "COUNTRY_DETECTOR": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#COUNTRY_DETECTOR"
        },
        "SERIAL_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SERIAL_SERVICE"
        },
        "WIFI_PASSPOINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_PASSPOINT_SERVICE"
        },
        "CONSUMER_IR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONSUMER_IR_SERVICE"
        },
        "APP_OPS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#APP_OPS_SERVICE"
        },
        "ACTIVITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACTIVITY_SERVICE"
        },
        "STORAGE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#STORAGE_SERVICE"
        },
        "BIND_FOREGROUND_SERVICE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE"
        },
        "RESTRICTIONS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#RESTRICTIONS_SERVICE"
        },
        "CONNECTIVITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONNECTIVITY_SERVICE"
        },
        "START_NOT_STICKY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Service.html#START_NOT_STICKY"
        },
        "TEXT_SERVICES_MANAGER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TEXT_SERVICES_MANAGER_SERVICE"
        },
        "USB_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USB_SERVICE"
        },
        "START_STICKY_COMPATIBILITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Service.html#START_STICKY_COMPATIBILITY"
        },
        "APPWIDGET_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#APPWIDGET_SERVICE"
        },
        "CONTEXT_REGISTER_PACKAGE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_REGISTER_PACKAGE"
        },
        "CARRIER_CONFIG_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CARRIER_CONFIG_SERVICE"
        },
        "NETWORK_POLICY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_POLICY_SERVICE"
        },
        "MIDI_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MIDI_SERVICE"
        },
        "BATTERY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BATTERY_SERVICE"
        },
        "MODE_MULTI_PROCESS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_MULTI_PROCESS"
        },
        "BIND_AUTO_CREATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_AUTO_CREATE"
        },
        "DISPLAY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DISPLAY_SERVICE"
        },
        "TELEPHONY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SERVICE"
        },
        "prototype": {
          "getExternalCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDir()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "openFileInput": {
            "!type": "fn(name: string) -> +java.io.FileInputStream",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileInput(java.lang.String)"
          },
          "getBaseContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBaseContext()"
          },
          "checkPermission": {
            "!type": "fn(permission: string, pid: number, uid: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkPermission(java.lang.String, int, int)"
          },
          "openFileOutput": {
            "!type": "fn(name: string, mode: number) -> +java.io.FileOutputStream",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileOutput(java.lang.String, int)"
          },
          "deleteDatabase": {
            "!type": "fn(name: string) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteDatabase(java.lang.String)"
          },
          "startActivityAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivityAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "getOpPackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getOpPackageName()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "getObbDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDirs()"
          },
          "startForeground": {
            "!type": "fn(id: number, notification: +android.app.Notification) -> void",
            "!url": "http://developer.android.com/reference/android/app/Service.html#startForeground(int, android.app.Notification)"
          },
          "getString": {
            "!type": "fn(resId: number) -> string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getString(int)"
          },
          "getDatabasePath": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDatabasePath(java.lang.String)"
          },
          "sendOrderedBroadcast": {
            "!type": "fn(intent: +android.content.Intent, receiverPermission: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcast(android.content.Intent, java.lang.String)"
          },
          "stopForeground": {
            "!type": "fn(removeNotification: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Service.html#stopForeground(boolean)"
          },
          "onDestroy": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Service.html#onDestroy()"
          },
          "bindServiceAsUser": {
            "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number, user: +android.os.UserHandle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindServiceAsUser(android.content.Intent, android.content.ServiceConnection, int, android.os.UserHandle)"
          },
          "getNoBackupFilesDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getNoBackupFilesDir()"
          },
          "fileList": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#fileList()"
          },
          "bindService": {
            "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindService(android.content.Intent, android.content.ServiceConnection, int)"
          },
          "checkSelfPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkSelfPermission(java.lang.String)"
          },
          "removeStickyBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcast(android.content.Intent)"
          },
          "sendStickyBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "setForeground": {
            "!type": "fn(isForeground: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Service.html#setForeground(boolean)"
          },
          "stopSelf": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Service.html#stopSelf()"
          },
          "enforceCallingPermission": {
            "!type": "fn(permission: string, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingPermission(java.lang.String, java.lang.String)"
          },
          "getCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCacheDir()"
          },
          "getSharedPrefsFile": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPrefsFile(java.lang.String)"
          },
          "deleteFile": {
            "!type": "fn(name: string) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteFile(java.lang.String)"
          },
          "createApplicationContext": {
            "!type": "fn(application: +android.content.pm.ApplicationInfo, flags: number) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createApplicationContext(android.content.pm.ApplicationInfo, int)"
          },
          "getExternalFilesDirs": {
            "!type": "fn(type: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDirs(java.lang.String)"
          },
          "isRestricted": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#isRestricted()"
          },
          "startInstrumentation": {
            "!type": "fn(className: +android.content.ComponentName, profileFile: string, arguments: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startInstrumentation(android.content.ComponentName, java.lang.String, android.os.Bundle)"
          },
          "createPackageContext": {
            "!type": "fn(packageName: string, flags: number) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContext(java.lang.String, int)"
          },
          "obtainStyledAttributes": {
            "!type": "fn(attrs: +java.newArray) -> +android.content.res.TypedArray",
            "!url": "http://developer.android.com/reference/android/content/Context.html#obtainStyledAttributes(int[])"
          },
          "setWallpaper": {
            "!type": "fn(bitmap: +android.graphics.Bitmap) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#setWallpaper(android.graphics.Bitmap)"
          },
          "setTheme": {
            "!type": "fn(resid: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#setTheme(int)"
          },
          "sendStickyOrderedBroadcast": {
            "!type": "fn(intent: +android.content.Intent, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcast(android.content.Intent, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "enforcePermission": {
            "!type": "fn(permission: string, pid: number, uid: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforcePermission(java.lang.String, int, int, java.lang.String)"
          },
          "getDir": {
            "!type": "fn(name: string, mode: number) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDir(java.lang.String, int)"
          },
          "checkCallingOrSelfUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfUriPermission(android.net.Uri, int)"
          },
          "sendBroadcastMultiplePermissions": {
            "!type": "fn(intent: +android.content.Intent, receiverPermissions: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastMultiplePermissions(android.content.Intent, java.lang.String[])"
          },
          "getExternalFilesDir": {
            "!type": "fn(type: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDir(java.lang.String)"
          },
          "openOrCreateDatabase": {
            "!type": "fn(name: string, mode: number, factory: +android.database.sqlite.SQLiteDatabase.CursorFactory) -> +android.database.sqlite.SQLiteDatabase",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openOrCreateDatabase(java.lang.String, int, android.database.sqlite.SQLiteDatabase.CursorFactory)"
          },
          "getContentResolver": {
            "!type": "fn() -> +android.content.ContentResolver",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getContentResolver()"
          },
          "getThemeResId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getThemeResId()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getObbDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDir()"
          },
          "getDisplayAdjustments": {
            "!type": "fn(displayId: number) -> +android.view.DisplayAdjustments",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDisplayAdjustments(int)"
          },
          "checkCallingOrSelfPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfPermission(java.lang.String)"
          },
          "unregisterReceiver": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unregisterReceiver(android.content.BroadcastReceiver)"
          },
          "clearWallpaper": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#clearWallpaper()"
          },
          "createPackageContextAsUser": {
            "!type": "fn(packageName: string, flags: number, user: +android.os.UserHandle) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContextAsUser(java.lang.String, int, android.os.UserHandle)"
          },
          "onTaskRemoved": {
            "!type": "fn(rootIntent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Service.html#onTaskRemoved(android.content.Intent)"
          },
          "onCreate": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Service.html#onCreate()"
          },
          "onLowMemory": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Service.html#onLowMemory()"
          },
          "startServiceAsUser": {
            "!type": "fn(service: +android.content.Intent, user: +android.os.UserHandle) -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startServiceAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getWallpaper": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaper()"
          },
          "peekWallpaper": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#peekWallpaper()"
          },
          "getApplicationContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationContext()"
          },
          "getFilesDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFilesDir()"
          },
          "getCodeCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCodeCacheDir()"
          },
          "sendOrderedBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, receiverPermission: string, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, java.lang.String, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "getColor": {
            "!type": "fn(id: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getColor(int)"
          },
          "registerReceiverAsUser": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver, user: +android.os.UserHandle, filter: +android.content.IntentFilter, broadcastPermission: string, scheduler: +android.os.Handler) -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiverAsUser(android.content.BroadcastReceiver, android.os.UserHandle, android.content.IntentFilter, java.lang.String, android.os.Handler)"
          },
          "getText": {
            "!type": "fn(resId: number) -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getText(int)"
          },
          "getMainLooper": {
            "!type": "fn() -> +android.os.Looper",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getMainLooper()"
          },
          "startActivity": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivity(android.content.Intent)"
          },
          "getColorStateList": {
            "!type": "fn(id: number) -> +android.content.res.ColorStateList",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getColorStateList(int)"
          },
          "enforceCallingOrSelfUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfUriPermission(android.net.Uri, int, java.lang.String)"
          },
          "getAssets": {
            "!type": "fn() -> +android.content.res.AssetManager",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getAssets()"
          },
          "onConfigurationChanged": {
            "!type": "fn(newConfig: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/app/Service.html#onConfigurationChanged(android.content.res.Configuration)"
          },
          "onStart": {
            "!type": "fn(intent: +android.content.Intent, startId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Service.html#onStart(android.content.Intent, int)"
          },
          "onTrimMemory": {
            "!type": "fn(level: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Service.html#onTrimMemory(int)"
          },
          "onStartCommand": {
            "!type": "fn(intent: +android.content.Intent, flags: number, startId: number) -> number",
            "!url": "http://developer.android.com/reference/android/app/Service.html#onStartCommand(android.content.Intent, int, int)"
          },
          "grantUriPermission": {
            "!type": "fn(toPackage: string, uri: +android.net.Uri, modeFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#grantUriPermission(java.lang.String, android.net.Uri, int)"
          },
          "canStartActivityForResult": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#canStartActivityForResult()"
          },
          "getBasePackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBasePackageName()"
          },
          "onUnbind": {
            "!type": "fn(intent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Service.html#onUnbind(android.content.Intent)"
          },
          "attach": {
            "!type": "fn(context: +android.content.Context, thread: +android.app.ActivityThread, className: string, token: +android.os.IBinder, application: +android.app.Application, activityManager: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/android/app/Service.html#attach(android.content.Context, android.app.ActivityThread, java.lang.String, android.os.IBinder, android.app.Application, java.lang.Object)"
          },
          "onBind": {
            "!type": "fn(intent: +android.content.Intent) -> +android.os.IBinder",
            "!url": "http://developer.android.com/reference/android/app/Service.html#onBind(android.content.Intent)"
          },
          "getApplication": {
            "!type": "fn() -> +android.app.Application",
            "!url": "http://developer.android.com/reference/android/app/Service.html#getApplication()"
          },
          "registerReceiver": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver, filter: +android.content.IntentFilter) -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "stopService": {
            "!type": "fn(name: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopService(android.content.Intent)"
          },
          "getWallpaperDesiredMinimumHeight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumHeight()"
          },
          "getExternalCacheDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDirs()"
          },
          "getTheme": {
            "!type": "fn() -> +android.content.res.Resources.Theme",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getTheme()"
          },
          "getPackageCodePath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageCodePath()"
          },
          "registerComponentCallbacks": {
            "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
            "!url": "http://developer.android.com/reference/android/content/Context.html#registerComponentCallbacks(android.content.ComponentCallbacks)"
          },
          "enforceUriPermission": {
            "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceUriPermission(android.net.Uri, int, int, int, java.lang.String)"
          },
          "getSystemServiceName": {
            "!type": "fn(serviceClass: +java.lang.Class) -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSystemServiceName(java.lang.Class)"
          },
          "getApplicationInfo": {
            "!type": "fn() -> +android.content.pm.ApplicationInfo",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationInfo()"
          },
          "createDisplayContext": {
            "!type": "fn(display: +android.view.Display) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createDisplayContext(android.view.Display)"
          },
          "getSharedPreferences": {
            "!type": "fn(name: string, mode: number) -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPreferences(java.lang.String, int)"
          },
          "enforceCallingUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingUriPermission(android.net.Uri, int, java.lang.String)"
          },
          "stopSelfResult": {
            "!type": "fn(startId: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Service.html#stopSelfResult(int)"
          },
          "getSystemService": {
            "!type": "fn(name: string) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSystemService(java.lang.String)"
          },
          "unbindService": {
            "!type": "fn(conn: +android.content.ServiceConnection) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unbindService(android.content.ServiceConnection)"
          },
          "sendStickyOrderedBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getClassLoader": {
            "!type": "fn() -> +java.lang.ClassLoader",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getClassLoader()"
          },
          "databaseList": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#databaseList()"
          },
          "checkCallingUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingUriPermission(android.net.Uri, int)"
          },
          "enforceCallingOrSelfPermission": {
            "!type": "fn(permission: string, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfPermission(java.lang.String, java.lang.String)"
          },
          "createConfigurationContext": {
            "!type": "fn(overrideConfiguration: +android.content.res.Configuration) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createConfigurationContext(android.content.res.Configuration)"
          },
          "removeStickyBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "getFileStreamPath": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFileStreamPath(java.lang.String)"
          },
          "checkUriPermission": {
            "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkUriPermission(android.net.Uri, int, int, int)"
          },
          "onRebind": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Service.html#onRebind(android.content.Intent)"
          },
          "startService": {
            "!type": "fn(service: +android.content.Intent) -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startService(android.content.Intent)"
          },
          "checkCallingPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingPermission(java.lang.String)"
          },
          "getPackageManager": {
            "!type": "fn() -> +android.content.pm.PackageManager",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageManager()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "startActivitiesAsUser": {
            "!type": "fn(intents: +java.newArray, options: +android.os.Bundle, userHandle: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivitiesAsUser(android.content.Intent[], android.os.Bundle, android.os.UserHandle)"
          },
          "sendBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "sendBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcast(android.content.Intent)"
          },
          "getPackageResourcePath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageResourcePath()"
          },
          "startIntentSender": {
            "!type": "fn(intent: +android.content.IntentSender, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startIntentSender(android.content.IntentSender, android.content.Intent, int, int, int)"
          },
          "startActivityForResult": {
            "!type": "fn(who: string, intent: +android.content.Intent, requestCode: number, options: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivityForResult(java.lang.String, android.content.Intent, int, android.os.Bundle)"
          },
          "startActivities": {
            "!type": "fn(intents: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivities(android.content.Intent[])"
          },
          "getDrawable": {
            "!type": "fn(id: number) -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getDrawable(int)"
          },
          "getPackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageName()"
          },
          "revokeUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#revokeUriPermission(android.net.Uri, int)"
          },
          "getUserId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getUserId()"
          },
          "unregisterComponentCallbacks": {
            "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
            "!url": "http://developer.android.com/reference/android/content/Context.html#unregisterComponentCallbacks(android.content.ComponentCallbacks)"
          },
          "getResources": {
            "!type": "fn() -> +android.content.res.Resources",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getResources()"
          },
          "stopServiceAsUser": {
            "!type": "fn(name: +android.content.Intent, user: +android.os.UserHandle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopServiceAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "sendStickyBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcast(android.content.Intent)"
          },
          "getExternalMediaDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalMediaDirs()"
          },
          "getWallpaperDesiredMinimumWidth": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumWidth()"
          }
        }
      },
      "NotificationStressTest": {
        "!url": "http://developer.android.com/reference/android/app/NotificationStressTest.html",
        "!type": "fn()",
        "prototype": {
          "launchActivity": {
            "!type": "fn(pkg: string, activityCls: +java.lang.Class, extras: +android.os.Bundle) -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#launchActivity(java.lang.String, java.lang.Class, android.os.Bundle)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "injectInstrumentation": {
            "!type": "fn(instrumentation: +android.app.Instrumentation) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#injectInstrumentation(android.app.Instrumentation)"
          },
          "launchActivityWithIntent": {
            "!type": "fn(pkg: string, activityCls: +java.lang.Class, intent: +android.content.Intent) -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#launchActivityWithIntent(java.lang.String, java.lang.Class, android.content.Intent)"
          },
          "testNotificationStress": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/NotificationStressTest.html#testNotificationStress()"
          },
          "runTestOnUiThread": {
            "!type": "fn(r: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#runTestOnUiThread(java.lang.Runnable)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "sendKeys": {
            "!type": "fn(keysSequence: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#sendKeys(java.lang.String)"
          },
          "sendRepeatedKeys": {
            "!type": "fn(keys: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#sendRepeatedKeys(int[])"
          },
          "getInstrumentation": {
            "!type": "fn() -> +android.app.Instrumentation",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#getInstrumentation()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "injectInsrumentation": {
            "!type": "fn(instrumentation: +android.app.Instrumentation) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#injectInsrumentation(android.app.Instrumentation)"
          }
        }
      },
      "DownloadManagerBaseTest": {
        "!url": "http://developer.android.com/reference/android/app/DownloadManagerBaseTest.html",
        "!type": "fn()",
        "LoggingRng": {
          "!url": "http://developer.android.com/reference/android/app/DownloadManagerBaseTest.LoggingRng.html",
          "!type": "fn()",
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "nextFloat": {
              "!type": "fn() -> +java.lang.Float",
              "!url": "http://developer.android.com/reference/java/util/Random.html#nextFloat()"
            },
            "nextBoolean": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/java/util/Random.html#nextBoolean()"
            },
            "nextLong": {
              "!type": "fn() -> +java.lang.Long",
              "!url": "http://developer.android.com/reference/java/util/Random.html#nextLong()"
            },
            "nextDouble": {
              "!type": "fn() -> +java.lang.Double",
              "!url": "http://developer.android.com/reference/java/util/Random.html#nextDouble()"
            },
            "nextInt": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/util/Random.html#nextInt()"
            },
            "nextGaussian": {
              "!type": "fn() -> +java.lang.Double",
              "!url": "http://developer.android.com/reference/java/util/Random.html#nextGaussian()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "nextBytes": {
              "!type": "fn(buf: +java.newArray) -> void",
              "!url": "http://developer.android.com/reference/java/util/Random.html#nextBytes(byte[])"
            },
            "setSeed": {
              "!type": "fn(seed: +java.lang.Long) -> void",
              "!url": "http://developer.android.com/reference/java/util/Random.html#setSeed(long)"
            }
          }
        },
        "MultipleDownloadsCompletedReceiver": {
          "!url": "http://developer.android.com/reference/android/app/DownloadManagerBaseTest.MultipleDownloadsCompletedReceiver.html",
          "!type": "fn()",
          "prototype": {
            "onReceive": {
              "!type": "fn(context: +android.content.Context, intent: +android.content.Intent) -> void",
              "!url": "http://developer.android.com/reference/android/app/DownloadManagerBaseTest.MultipleDownloadsCompletedReceiver.html#onReceive(android.content.Context, android.content.Intent)"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "getAbortBroadcast": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/content/BroadcastReceiver.html#getAbortBroadcast()"
            },
            "setOrderedHint": {
              "!type": "fn(isOrdered: bool) -> void",
              "!url": "http://developer.android.com/reference/android/content/BroadcastReceiver.html#setOrderedHint(boolean)"
            },
            "setResult": {
              "!type": "fn(code: number, data: string, extras: +android.os.Bundle) -> void",
              "!url": "http://developer.android.com/reference/android/content/BroadcastReceiver.html#setResult(int, java.lang.String, android.os.Bundle)"
            },
            "clearAbortBroadcast": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/content/BroadcastReceiver.html#clearAbortBroadcast()"
            },
            "getPendingResult": {
              "!type": "fn() -> +android.content.BroadcastReceiver.PendingResult",
              "!url": "http://developer.android.com/reference/android/content/BroadcastReceiver.html#getPendingResult()"
            },
            "getResultData": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/content/BroadcastReceiver.html#getResultData()"
            },
            "getDebugUnregister": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/content/BroadcastReceiver.html#getDebugUnregister()"
            },
            "getResultCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/content/BroadcastReceiver.html#getResultCode()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "getResultExtras": {
              "!type": "fn(makeMap: bool) -> +android.os.Bundle",
              "!url": "http://developer.android.com/reference/android/content/BroadcastReceiver.html#getResultExtras(boolean)"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "setResultData": {
              "!type": "fn(data: string) -> void",
              "!url": "http://developer.android.com/reference/android/content/BroadcastReceiver.html#setResultData(java.lang.String)"
            },
            "abortBroadcast": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/content/BroadcastReceiver.html#abortBroadcast()"
            },
            "getSendingUserId": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/content/BroadcastReceiver.html#getSendingUserId()"
            },
            "setResultCode": {
              "!type": "fn(code: number) -> void",
              "!url": "http://developer.android.com/reference/android/content/BroadcastReceiver.html#setResultCode(int)"
            },
            "setPendingResult": {
              "!type": "fn(result: +android.content.BroadcastReceiver.PendingResult) -> void",
              "!url": "http://developer.android.com/reference/android/content/BroadcastReceiver.html#setPendingResult(android.content.BroadcastReceiver.PendingResult)"
            },
            "setResultExtras": {
              "!type": "fn(extras: +android.os.Bundle) -> void",
              "!url": "http://developer.android.com/reference/android/content/BroadcastReceiver.html#setResultExtras(android.os.Bundle)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "isOrderedBroadcast": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/content/BroadcastReceiver.html#isOrderedBroadcast()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "numDownloadsCompleted": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/app/DownloadManagerBaseTest.MultipleDownloadsCompletedReceiver.html#numDownloadsCompleted()"
            },
            "setDebugUnregister": {
              "!type": "fn(debug: bool) -> void",
              "!url": "http://developer.android.com/reference/android/content/BroadcastReceiver.html#setDebugUnregister(boolean)"
            },
            "peekService": {
              "!type": "fn(myContext: +android.content.Context, service: +android.content.Intent) -> +android.os.IBinder",
              "!url": "http://developer.android.com/reference/android/content/BroadcastReceiver.html#peekService(android.content.Context, android.content.Intent)"
            },
            "isInitialStickyBroadcast": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/content/BroadcastReceiver.html#isInitialStickyBroadcast()"
            },
            "getDownloadIds": {
              "!type": "fn() -> +java.util.Set",
              "!url": "http://developer.android.com/reference/android/app/DownloadManagerBaseTest.MultipleDownloadsCompletedReceiver.html#getDownloadIds()"
            },
            "goAsync": {
              "!type": "fn() -> +android.content.BroadcastReceiver.PendingResult",
              "!url": "http://developer.android.com/reference/android/content/BroadcastReceiver.html#goAsync()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            }
          }
        },
        "WiFiChangedReceiver": {
          "!url": "http://developer.android.com/reference/android/app/DownloadManagerBaseTest.WiFiChangedReceiver.html",
          "!type": "fn(context: +android.content.Context)",
          "prototype": {
            "onReceive": {
              "!type": "fn(context: +android.content.Context, intent: +android.content.Intent) -> void",
              "!url": "http://developer.android.com/reference/android/app/DownloadManagerBaseTest.WiFiChangedReceiver.html#onReceive(android.content.Context, android.content.Intent)"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "getAbortBroadcast": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/content/BroadcastReceiver.html#getAbortBroadcast()"
            },
            "setOrderedHint": {
              "!type": "fn(isOrdered: bool) -> void",
              "!url": "http://developer.android.com/reference/android/content/BroadcastReceiver.html#setOrderedHint(boolean)"
            },
            "setResult": {
              "!type": "fn(code: number, data: string, extras: +android.os.Bundle) -> void",
              "!url": "http://developer.android.com/reference/android/content/BroadcastReceiver.html#setResult(int, java.lang.String, android.os.Bundle)"
            },
            "clearAbortBroadcast": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/content/BroadcastReceiver.html#clearAbortBroadcast()"
            },
            "getPendingResult": {
              "!type": "fn() -> +android.content.BroadcastReceiver.PendingResult",
              "!url": "http://developer.android.com/reference/android/content/BroadcastReceiver.html#getPendingResult()"
            },
            "getResultData": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/content/BroadcastReceiver.html#getResultData()"
            },
            "getDebugUnregister": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/content/BroadcastReceiver.html#getDebugUnregister()"
            },
            "getResultCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/content/BroadcastReceiver.html#getResultCode()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "getResultExtras": {
              "!type": "fn(makeMap: bool) -> +android.os.Bundle",
              "!url": "http://developer.android.com/reference/android/content/BroadcastReceiver.html#getResultExtras(boolean)"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "setResultData": {
              "!type": "fn(data: string) -> void",
              "!url": "http://developer.android.com/reference/android/content/BroadcastReceiver.html#setResultData(java.lang.String)"
            },
            "abortBroadcast": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/content/BroadcastReceiver.html#abortBroadcast()"
            },
            "getSendingUserId": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/content/BroadcastReceiver.html#getSendingUserId()"
            },
            "setResultCode": {
              "!type": "fn(code: number) -> void",
              "!url": "http://developer.android.com/reference/android/content/BroadcastReceiver.html#setResultCode(int)"
            },
            "setPendingResult": {
              "!type": "fn(result: +android.content.BroadcastReceiver.PendingResult) -> void",
              "!url": "http://developer.android.com/reference/android/content/BroadcastReceiver.html#setPendingResult(android.content.BroadcastReceiver.PendingResult)"
            },
            "setResultExtras": {
              "!type": "fn(extras: +android.os.Bundle) -> void",
              "!url": "http://developer.android.com/reference/android/content/BroadcastReceiver.html#setResultExtras(android.os.Bundle)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "isOrderedBroadcast": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/content/BroadcastReceiver.html#isOrderedBroadcast()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "setDebugUnregister": {
              "!type": "fn(debug: bool) -> void",
              "!url": "http://developer.android.com/reference/android/content/BroadcastReceiver.html#setDebugUnregister(boolean)"
            },
            "peekService": {
              "!type": "fn(myContext: +android.content.Context, service: +android.content.Intent) -> +android.os.IBinder",
              "!url": "http://developer.android.com/reference/android/content/BroadcastReceiver.html#peekService(android.content.Context, android.content.Intent)"
            },
            "isInitialStickyBroadcast": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/content/BroadcastReceiver.html#isInitialStickyBroadcast()"
            },
            "getWiFiIsOn": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/app/DownloadManagerBaseTest.WiFiChangedReceiver.html#getWiFiIsOn()"
            },
            "goAsync": {
              "!type": "fn() -> +android.content.BroadcastReceiver.PendingResult",
              "!url": "http://developer.android.com/reference/android/content/BroadcastReceiver.html#goAsync()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            }
          }
        },
        "prototype": {
          "launchActivity": {
            "!type": "fn(pkg: string, activityCls: +java.lang.Class, extras: +android.os.Bundle) -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#launchActivity(java.lang.String, java.lang.Class, android.os.Bundle)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "injectInstrumentation": {
            "!type": "fn(instrumentation: +android.app.Instrumentation) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#injectInstrumentation(android.app.Instrumentation)"
          },
          "launchActivityWithIntent": {
            "!type": "fn(pkg: string, activityCls: +java.lang.Class, intent: +android.content.Intent) -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#launchActivityWithIntent(java.lang.String, java.lang.Class, android.content.Intent)"
          },
          "runTestOnUiThread": {
            "!type": "fn(r: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#runTestOnUiThread(java.lang.Runnable)"
          },
          "setUp": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/DownloadManagerBaseTest.html#setUp()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "sendKeys": {
            "!type": "fn(keysSequence: string) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#sendKeys(java.lang.String)"
          },
          "sendRepeatedKeys": {
            "!type": "fn(keys: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#sendRepeatedKeys(int[])"
          },
          "getInstrumentation": {
            "!type": "fn() -> +android.app.Instrumentation",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#getInstrumentation()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "injectInsrumentation": {
            "!type": "fn(instrumentation: +android.app.Instrumentation) -> void",
            "!url": "http://developer.android.com/reference/android/test/InstrumentationTestCase.html#injectInsrumentation(android.app.Instrumentation)"
          }
        }
      },
      "SuggestionProvider": {
        "!url": "http://developer.android.com/reference/android/app/SuggestionProvider.html",
        "!type": "fn()",
        "uriHasUserId": {
          "!type": "fn(uri: +android.net.Uri) -> bool",
          "!url": "http://developer.android.com/reference/android/content/ContentProvider.html#uriHasUserId(android.net.Uri)"
        },
        "coerceToLocalContentProvider": {
          "!type": "fn(abstractInterface: +android.content.IContentProvider) -> +android.content.ContentProvider",
          "!url": "http://developer.android.com/reference/android/content/ContentProvider.html#coerceToLocalContentProvider(android.content.IContentProvider)"
        },
        "getUserIdFromUri": {
          "!type": "fn(uri: +android.net.Uri, defaultUserId: number) -> number",
          "!url": "http://developer.android.com/reference/android/content/ContentProvider.html#getUserIdFromUri(android.net.Uri, int)"
        },
        "getAuthorityWithoutUserId": {
          "!type": "fn(auth: string) -> string",
          "!url": "http://developer.android.com/reference/android/content/ContentProvider.html#getAuthorityWithoutUserId(java.lang.String)"
        },
        "getUserIdFromAuthority": {
          "!type": "fn(auth: string, defaultUserId: number) -> number",
          "!url": "http://developer.android.com/reference/android/content/ContentProvider.html#getUserIdFromAuthority(java.lang.String, int)"
        },
        "maybeAddUserId": {
          "!type": "fn(uri: +android.net.Uri, userId: number) -> +android.net.Uri",
          "!url": "http://developer.android.com/reference/android/content/ContentProvider.html#maybeAddUserId(android.net.Uri, int)"
        },
        "getUriWithoutUserId": {
          "!type": "fn(uri: +android.net.Uri) -> +android.net.Uri",
          "!url": "http://developer.android.com/reference/android/content/ContentProvider.html#getUriWithoutUserId(android.net.Uri)"
        },
        "prototype": {
          "openPipeHelper": {
            "!type": "fn(uri: +android.net.Uri, mimeType: string, opts: +android.os.Bundle, args: +java.lang.Object, func: +android.content.ContentProvider.PipeDataWriter) -> +android.os.ParcelFileDescriptor",
            "!url": "http://developer.android.com/reference/android/content/ContentProvider.html#openPipeHelper(android.net.Uri, java.lang.String, android.os.Bundle, T, android.content.ContentProvider.PipeDataWriter)"
          },
          "call": {
            "!type": "fn(method: string, arg: string, extras: +android.os.Bundle) -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/content/ContentProvider.html#call(java.lang.String, java.lang.String, android.os.Bundle)"
          },
          "attachInfoForTesting": {
            "!type": "fn(context: +android.content.Context, info: +android.content.pm.ProviderInfo) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContentProvider.html#attachInfoForTesting(android.content.Context, android.content.pm.ProviderInfo)"
          },
          "getIContentProvider": {
            "!type": "fn() -> +android.content.IContentProvider",
            "!url": "http://developer.android.com/reference/android/content/ContentProvider.html#getIContentProvider()"
          },
          "shutdown": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/content/ContentProvider.html#shutdown()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "setAppOps": {
            "!type": "fn(readOp: number, writeOp: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContentProvider.html#setAppOps(int, int)"
          },
          "openTypedAssetFile": {
            "!type": "fn(uri: +android.net.Uri, mimeTypeFilter: string, opts: +android.os.Bundle) -> +android.content.res.AssetFileDescriptor",
            "!url": "http://developer.android.com/reference/android/content/ContentProvider.html#openTypedAssetFile(android.net.Uri, java.lang.String, android.os.Bundle)"
          },
          "insert": {
            "!type": "fn(url: +android.net.Uri, initialValues: +android.content.ContentValues) -> +android.net.Uri",
            "!url": "http://developer.android.com/reference/android/app/SuggestionProvider.html#insert(android.net.Uri, android.content.ContentValues)"
          },
          "getAppOpsManager": {
            "!type": "fn() -> +android.app.AppOpsManager",
            "!url": "http://developer.android.com/reference/android/content/ContentProvider.html#getAppOpsManager()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "onConfigurationChanged": {
            "!type": "fn(newConfig: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContentProvider.html#onConfigurationChanged(android.content.res.Configuration)"
          },
          "onLowMemory": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/content/ContentProvider.html#onLowMemory()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "rejectInsert": {
            "!type": "fn(uri: +android.net.Uri, values: +android.content.ContentValues) -> +android.net.Uri",
            "!url": "http://developer.android.com/reference/android/content/ContentProvider.html#rejectInsert(android.net.Uri, android.content.ContentValues)"
          },
          "openFile": {
            "!type": "fn(uri: +android.net.Uri, mode: string) -> +android.os.ParcelFileDescriptor",
            "!url": "http://developer.android.com/reference/android/content/ContentProvider.html#openFile(android.net.Uri, java.lang.String)"
          },
          "getStreamTypes": {
            "!type": "fn(uri: +android.net.Uri, mimeTypeFilter: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContentProvider.html#getStreamTypes(android.net.Uri, java.lang.String)"
          },
          "applyBatch": {
            "!type": "fn(operations: +java.util.ArrayList) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContentProvider.html#applyBatch(java.util.ArrayList)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "attachInfo": {
            "!type": "fn(context: +android.content.Context, info: +android.content.pm.ProviderInfo) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContentProvider.html#attachInfo(android.content.Context, android.content.pm.ProviderInfo)"
          },
          "getCallingPackage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContentProvider.html#getCallingPackage()"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContentProvider.html#getContext()"
          },
          "getType": {
            "!type": "fn(url: +android.net.Uri) -> string",
            "!url": "http://developer.android.com/reference/android/app/SuggestionProvider.html#getType(android.net.Uri)"
          },
          "getPathPermissions": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContentProvider.html#getPathPermissions()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "canonicalize": {
            "!type": "fn(url: +android.net.Uri) -> +android.net.Uri",
            "!url": "http://developer.android.com/reference/android/content/ContentProvider.html#canonicalize(android.net.Uri)"
          },
          "bulkInsert": {
            "!type": "fn(uri: +android.net.Uri, values: +java.newArray) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContentProvider.html#bulkInsert(android.net.Uri, android.content.ContentValues[])"
          },
          "update": {
            "!type": "fn(url: +android.net.Uri, values: +android.content.ContentValues, where: string, whereArgs: +java.newArray) -> number",
            "!url": "http://developer.android.com/reference/android/app/SuggestionProvider.html#update(android.net.Uri, android.content.ContentValues, java.lang.String, java.lang.String[])"
          },
          "onCreate": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/SuggestionProvider.html#onCreate()"
          },
          "delete": {
            "!type": "fn(url: +android.net.Uri, where: string, whereArgs: +java.newArray) -> number",
            "!url": "http://developer.android.com/reference/android/app/SuggestionProvider.html#delete(android.net.Uri, java.lang.String, java.lang.String[])"
          },
          "openAssetFile": {
            "!type": "fn(uri: +android.net.Uri, mode: string) -> +android.content.res.AssetFileDescriptor",
            "!url": "http://developer.android.com/reference/android/content/ContentProvider.html#openAssetFile(android.net.Uri, java.lang.String)"
          },
          "dump": {
            "!type": "fn(fd: +java.io.FileDescriptor, writer: +java.io.PrintWriter, args: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContentProvider.html#dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])"
          },
          "onTrimMemory": {
            "!type": "fn(level: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContentProvider.html#onTrimMemory(int)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "query": {
            "!type": "fn(url: +android.net.Uri, projectionIn: +java.newArray, selection: string, selectionArgs: +java.newArray, sort: string) -> +android.database.Cursor",
            "!url": "http://developer.android.com/reference/android/app/SuggestionProvider.html#query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String)"
          },
          "getReadPermission": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContentProvider.html#getReadPermission()"
          },
          "uncanonicalize": {
            "!type": "fn(url: +android.net.Uri) -> +android.net.Uri",
            "!url": "http://developer.android.com/reference/android/content/ContentProvider.html#uncanonicalize(android.net.Uri)"
          },
          "getWritePermission": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContentProvider.html#getWritePermission()"
          }
        }
      },
      "LoaderManager": {
        "!url": "http://developer.android.com/reference/android/app/LoaderManager.html",
        "!type": "fn()",
        "enableDebugLogging": {
          "!type": "fn(enabled: bool) -> void",
          "!url": "http://developer.android.com/reference/android/app/LoaderManager.html#enableDebugLogging(boolean)"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "destroyLoader": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/LoaderManager.html#destroyLoader(int)"
          },
          "getLoader": {
            "!type": "fn(id: number) -> +android.content.Loader",
            "!url": "http://developer.android.com/reference/android/app/LoaderManager.html#getLoader(int)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "dump": {
            "!type": "fn(prefix: string, fd: +java.io.FileDescriptor, writer: +java.io.PrintWriter, args: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/LoaderManager.html#dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "restartLoader": {
            "!type": "fn(id: number, args: +android.os.Bundle, callback: +android.app.LoaderManager.LoaderCallbacks) -> +android.content.Loader",
            "!url": "http://developer.android.com/reference/android/app/LoaderManager.html#restartLoader(int, android.os.Bundle, android.app.LoaderManager.LoaderCallbacks)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "initLoader": {
            "!type": "fn(id: number, args: +android.os.Bundle, callback: +android.app.LoaderManager.LoaderCallbacks) -> +android.content.Loader",
            "!url": "http://developer.android.com/reference/android/app/LoaderManager.html#initLoader(int, android.os.Bundle, android.app.LoaderManager.LoaderCallbacks)"
          }
        }
      },
      "TabActivity": {
        "!url": "http://developer.android.com/reference/android/app/TabActivity.html",
        "!type": "fn()",
        "BIND_WAIVE_PRIORITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_WAIVE_PRIORITY"
        },
        "RESULT_FIRST_USER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_FIRST_USER"
        },
        "DEFAULT_KEYS_SHORTCUT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SHORTCUT"
        },
        "MEDIA_PROJECTION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_PROJECTION_SERVICE"
        },
        "ETHERNET_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ETHERNET_SERVICE"
        },
        "WIFI_RTT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_RTT_SERVICE"
        },
        "SENSOR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SENSOR_SERVICE"
        },
        "TELEPHONY_SUBSCRIPTION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SUBSCRIPTION_SERVICE"
        },
        "CAPTIONING_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CAPTIONING_SERVICE"
        },
        "CAMERA_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CAMERA_SERVICE"
        },
        "BIND_DEBUG_UNBIND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_DEBUG_UNBIND"
        },
        "STATUS_BAR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#STATUS_BAR_SERVICE"
        },
        "DEVICE_POLICY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_POLICY_SERVICE"
        },
        "BIND_IMPORTANT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_IMPORTANT"
        },
        "NSD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NSD_SERVICE"
        },
        "DOWNLOAD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DOWNLOAD_SERVICE"
        },
        "BIND_NOT_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_VISIBLE"
        },
        "CONTEXT_IGNORE_SECURITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_IGNORE_SECURITY"
        },
        "USAGE_STATS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USAGE_STATS_SERVICE"
        },
        "MODE_WORLD_READABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_READABLE"
        },
        "KEYGUARD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#KEYGUARD_SERVICE"
        },
        "BIND_ADJUST_WITH_ACTIVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ADJUST_WITH_ACTIVITY"
        },
        "UI_MODE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#UI_MODE_SERVICE"
        },
        "MODE_PRIVATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_PRIVATE"
        },
        "CONTEXT_INCLUDE_CODE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_INCLUDE_CODE"
        },
        "DEFAULT_KEYS_DISABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_DISABLE"
        },
        "ACCESSIBILITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACCESSIBILITY_SERVICE"
        },
        "HDMI_CONTROL_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#HDMI_CONTROL_SERVICE"
        },
        "BIND_SHOWING_UI": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_SHOWING_UI"
        },
        "MODE_APPEND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_APPEND"
        },
        "AUDIO_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#AUDIO_SERVICE"
        },
        "NETWORK_SCORE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_SCORE_SERVICE"
        },
        "UPDATE_LOCK_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#UPDATE_LOCK_SERVICE"
        },
        "MEDIA_ROUTER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_ROUTER_SERVICE"
        },
        "JOB_SCHEDULER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#JOB_SCHEDULER_SERVICE"
        },
        "DEVICE_IDLE_CONTROLLER": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_IDLE_CONTROLLER"
        },
        "INPUT_METHOD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_METHOD_SERVICE"
        },
        "RESULT_CANCELED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_CANCELED"
        },
        "BIND_ABOVE_CLIENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ABOVE_CLIENT"
        },
        "INPUT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_SERVICE"
        },
        "MODE_WORLD_WRITEABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_WRITEABLE"
        },
        "NETWORKMANAGEMENT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORKMANAGEMENT_SERVICE"
        },
        "WINDOW_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WINDOW_SERVICE"
        },
        "MEDIA_SESSION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_SESSION_SERVICE"
        },
        "WIFI_P2P_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_P2P_SERVICE"
        },
        "DEFAULT_KEYS_SEARCH_GLOBAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SEARCH_GLOBAL"
        },
        "MODE_ENABLE_WRITE_AHEAD_LOGGING": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_ENABLE_WRITE_AHEAD_LOGGING"
        },
        "WIFI_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SERVICE"
        },
        "PERSISTENT_DATA_BLOCK_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#PERSISTENT_DATA_BLOCK_SERVICE"
        },
        "TV_INPUT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TV_INPUT_SERVICE"
        },
        "SIP_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SIP_SERVICE"
        },
        "FINGERPRINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#FINGERPRINT_SERVICE"
        },
        "LOCATION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LOCATION_SERVICE"
        },
        "LAUNCHER_APPS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LAUNCHER_APPS_SERVICE"
        },
        "NETWORK_STATS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_STATS_SERVICE"
        },
        "VOICE_INTERACTION_MANAGER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#VOICE_INTERACTION_MANAGER_SERVICE"
        },
        "TELECOM_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELECOM_SERVICE"
        },
        "SEARCH_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SEARCH_SERVICE"
        },
        "RADIO_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#RADIO_SERVICE"
        },
        "BIND_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_VISIBLE"
        },
        "BIND_NOT_FOREGROUND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_FOREGROUND"
        },
        "CONTEXT_RESTRICTED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_RESTRICTED"
        },
        "USER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USER_SERVICE"
        },
        "DROPBOX_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DROPBOX_SERVICE"
        },
        "BIND_TREAT_LIKE_ACTIVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_TREAT_LIKE_ACTIVITY"
        },
        "DEFAULT_KEYS_SEARCH_LOCAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SEARCH_LOCAL"
        },
        "BIND_FOREGROUND_SERVICE_WHILE_AWAKE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE_WHILE_AWAKE"
        },
        "CLIPBOARD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CLIPBOARD_SERVICE"
        },
        "LAYOUT_INFLATER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LAYOUT_INFLATER_SERVICE"
        },
        "WIFI_SCANNING_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SCANNING_SERVICE"
        },
        "PRINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#PRINT_SERVICE"
        },
        "WALLPAPER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WALLPAPER_SERVICE"
        },
        "ALARM_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ALARM_SERVICE"
        },
        "ACCOUNT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACCOUNT_SERVICE"
        },
        "TRUST_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TRUST_SERVICE"
        },
        "VIBRATOR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#VIBRATOR_SERVICE"
        },
        "RESULT_OK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_OK"
        },
        "NFC_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NFC_SERVICE"
        },
        "NOTIFICATION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NOTIFICATION_SERVICE"
        },
        "BLUETOOTH_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BLUETOOTH_SERVICE"
        },
        "POWER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#POWER_SERVICE"
        },
        "BIND_ALLOW_OOM_MANAGEMENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ALLOW_OOM_MANAGEMENT"
        },
        "DEFAULT_KEYS_DIALER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_DIALER"
        },
        "BACKUP_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BACKUP_SERVICE"
        },
        "COUNTRY_DETECTOR": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#COUNTRY_DETECTOR"
        },
        "SERIAL_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SERIAL_SERVICE"
        },
        "WIFI_PASSPOINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_PASSPOINT_SERVICE"
        },
        "CONSUMER_IR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONSUMER_IR_SERVICE"
        },
        "APP_OPS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#APP_OPS_SERVICE"
        },
        "ACTIVITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACTIVITY_SERVICE"
        },
        "STORAGE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#STORAGE_SERVICE"
        },
        "BIND_FOREGROUND_SERVICE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE"
        },
        "RESTRICTIONS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#RESTRICTIONS_SERVICE"
        },
        "CONNECTIVITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONNECTIVITY_SERVICE"
        },
        "TEXT_SERVICES_MANAGER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TEXT_SERVICES_MANAGER_SERVICE"
        },
        "USB_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USB_SERVICE"
        },
        "APPWIDGET_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#APPWIDGET_SERVICE"
        },
        "CONTEXT_REGISTER_PACKAGE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_REGISTER_PACKAGE"
        },
        "CARRIER_CONFIG_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CARRIER_CONFIG_SERVICE"
        },
        "NETWORK_POLICY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_POLICY_SERVICE"
        },
        "MIDI_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MIDI_SERVICE"
        },
        "BATTERY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BATTERY_SERVICE"
        },
        "MODE_MULTI_PROCESS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_MULTI_PROCESS"
        },
        "BIND_AUTO_CREATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_AUTO_CREATE"
        },
        "DISPLAY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DISPLAY_SERVICE"
        },
        "TELEPHONY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SERVICE"
        },
        "prototype": {
          "isBackgroundVisibleBehind": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isBackgroundVisibleBehind()"
          },
          "getTabHost": {
            "!type": "fn() -> +android.widget.TabHost",
            "!url": "http://developer.android.com/reference/android/app/TabActivity.html#getTabHost()"
          },
          "setProgressBarVisibility": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarVisibility(boolean)"
          },
          "setFeatureDrawableResource": {
            "!type": "fn(featureId: number, resId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableResource(int, int)"
          },
          "dispatchEnterAnimationComplete": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchEnterAnimationComplete()"
          },
          "finishActivityFromChild": {
            "!type": "fn(child: +android.app.Activity, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishActivityFromChild(android.app.Activity, int)"
          },
          "startPostponedEnterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startPostponedEnterTransition()"
          },
          "onProvideAssistContent": {
            "!type": "fn(outContent: +android.app.assist.AssistContent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideAssistContent(android.app.assist.AssistContent)"
          },
          "sendBroadcastMultiplePermissions": {
            "!type": "fn(intent: +android.content.Intent, receiverPermissions: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastMultiplePermissions(android.content.Intent, java.lang.String[])"
          },
          "getString": {
            "!type": "fn(resId: number) -> string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getString(int)"
          },
          "onKeyDown": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyDown(int, android.view.KeyEvent)"
          },
          "getResources": {
            "!type": "fn() -> +android.content.res.Resources",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getResources()"
          },
          "sendStickyBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcast(android.content.Intent)"
          },
          "startActivityFromFragment": {
            "!type": "fn(fragment: +android.app.Fragment, intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityFromFragment(android.app.Fragment, android.content.Intent, int)"
          },
          "onCreateThumbnail": {
            "!type": "fn(outBitmap: +android.graphics.Bitmap, canvas: +android.graphics.Canvas) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateThumbnail(android.graphics.Bitmap, android.graphics.Canvas)"
          },
          "getOpPackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getOpPackageName()"
          },
          "getCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCacheDir()"
          },
          "onWindowDismissed": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowDismissed()"
          },
          "getBaseContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBaseContext()"
          },
          "checkCallingOrSelfPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfPermission(java.lang.String)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "isVoiceInteractionRoot": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isVoiceInteractionRoot()"
          },
          "onDetachedFromWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onDetachedFromWindow()"
          },
          "setResult": {
            "!type": "fn(resultCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setResult(int)"
          },
          "onOptionsItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onOptionsItemSelected(android.view.MenuItem)"
          },
          "isChangingConfigurations": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isChangingConfigurations()"
          },
          "getLocalActivityManager": {
            "!type": "fn() -> +android.app.LocalActivityManager",
            "!url": "http://developer.android.com/reference/android/app/ActivityGroup.html#getLocalActivityManager()"
          },
          "getCodeCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCodeCacheDir()"
          },
          "createPendingResult": {
            "!type": "fn(requestCode: number, data: +android.content.Intent, flags: number) -> +android.app.PendingIntent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#createPendingResult(int, android.content.Intent, int)"
          },
          "getPackageResourcePath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageResourcePath()"
          },
          "getCurrentFocus": {
            "!type": "fn() -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCurrentFocus()"
          },
          "triggerSearch": {
            "!type": "fn(query: string, appSearchData: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#triggerSearch(java.lang.String, android.os.Bundle)"
          },
          "convertToTranslucent": {
            "!type": "fn(callback: +android.app.Activity.TranslucentConversionListener, options: +android.app.ActivityOptions) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#convertToTranslucent(android.app.Activity.TranslucentConversionListener, android.app.ActivityOptions)"
          },
          "startActivityForResult": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityForResult(android.content.Intent, int)"
          },
          "getLayoutInflater": {
            "!type": "fn() -> +android.view.LayoutInflater",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLayoutInflater()"
          },
          "createPackageContext": {
            "!type": "fn(packageName: string, flags: number) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContext(java.lang.String, int)"
          },
          "enforcePermission": {
            "!type": "fn(permission: string, pid: number, uid: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforcePermission(java.lang.String, int, int, java.lang.String)"
          },
          "onWindowStartingActionMode": {
            "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowStartingActionMode(android.view.ActionMode.Callback)"
          },
          "registerForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#registerForContextMenu(android.view.View)"
          },
          "setSecondaryProgress": {
            "!type": "fn(secondaryProgress: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setSecondaryProgress(int)"
          },
          "onContentChanged": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/TabActivity.html#onContentChanged()"
          },
          "finishAndRemoveTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAndRemoveTask()"
          },
          "setFinishOnTouchOutside": {
            "!type": "fn(finish: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFinishOnTouchOutside(boolean)"
          },
          "requestWindowFeature": {
            "!type": "fn(featureId: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestWindowFeature(int)"
          },
          "createConfigurationContext": {
            "!type": "fn(overrideConfiguration: +android.content.res.Configuration) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createConfigurationContext(android.content.res.Configuration)"
          },
          "showDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showDialog(int)"
          },
          "onSearchRequested": {
            "!type": "fn(searchEvent: +android.view.SearchEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onSearchRequested(android.view.SearchEvent)"
          },
          "onContextItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onContextItemSelected(android.view.MenuItem)"
          },
          "onTrackballEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTrackballEvent(android.view.MotionEvent)"
          },
          "requestPermissions": {
            "!type": "fn(permissions: +java.newArray, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestPermissions(java.lang.String[], int)"
          },
          "getVoiceInteractor": {
            "!type": "fn() -> +android.app.VoiceInteractor",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getVoiceInteractor()"
          },
          "peekWallpaper": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#peekWallpaper()"
          },
          "onPrepareOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPrepareOptionsMenu(android.view.Menu)"
          },
          "onSaveInstanceState": {
            "!type": "fn(outState: +android.os.Bundle, outPersistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onSaveInstanceState(android.os.Bundle, android.os.PersistableBundle)"
          },
          "registerReceiver": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver, filter: +android.content.IntentFilter) -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter)"
          },
          "setActionBar": {
            "!type": "fn(toolbar: +android.widget.Toolbar) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setActionBar(android.widget.Toolbar)"
          },
          "getIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getIntent()"
          },
          "getObbDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDirs()"
          },
          "getPackageManager": {
            "!type": "fn() -> +android.content.pm.PackageManager",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageManager()"
          },
          "getSystemServiceName": {
            "!type": "fn(serviceClass: +java.lang.Class) -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSystemServiceName(java.lang.Class)"
          },
          "obtainStyledAttributes": {
            "!type": "fn(attrs: +java.newArray) -> +android.content.res.TypedArray",
            "!url": "http://developer.android.com/reference/android/content/Context.html#obtainStyledAttributes(int[])"
          },
          "getTabWidget": {
            "!type": "fn() -> +android.widget.TabWidget",
            "!url": "http://developer.android.com/reference/android/app/TabActivity.html#getTabWidget()"
          },
          "getApplicationInfo": {
            "!type": "fn() -> +android.content.pm.ApplicationInfo",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationInfo()"
          },
          "setDefaultKeyMode": {
            "!type": "fn(mode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setDefaultKeyMode(int)"
          },
          "setProgressBarIndeterminate": {
            "!type": "fn(indeterminate: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarIndeterminate(boolean)"
          },
          "isRestricted": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#isRestricted()"
          },
          "hasWindowFocus": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#hasWindowFocus()"
          },
          "onConfigurationChanged": {
            "!type": "fn(newConfig: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onConfigurationChanged(android.content.res.Configuration)"
          },
          "getVolumeControlStream": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getVolumeControlStream()"
          },
          "databaseList": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#databaseList()"
          },
          "setTheme": {
            "!type": "fn(resid: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#setTheme(int)"
          },
          "isChild": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isChild()"
          },
          "isResumed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isResumed()"
          },
          "setRequestedOrientation": {
            "!type": "fn(requestedOrientation: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setRequestedOrientation(int)"
          },
          "onNewActivityOptions": {
            "!type": "fn(options: +android.app.ActivityOptions) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNewActivityOptions(android.app.ActivityOptions)"
          },
          "startActivity": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivity(android.content.Intent)"
          },
          "onGenericMotionEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onGenericMotionEvent(android.view.MotionEvent)"
          },
          "onWindowAttributesChanged": {
            "!type": "fn(params: +android.view.WindowManager.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowAttributesChanged(android.view.WindowManager.LayoutParams)"
          },
          "onPostCreate": {
            "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPostCreate(android.os.Bundle, android.os.PersistableBundle)"
          },
          "onKeyUp": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyUp(int, android.view.KeyEvent)"
          },
          "enforceCallingOrSelfUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfUriPermission(android.net.Uri, int, java.lang.String)"
          },
          "grantUriPermission": {
            "!type": "fn(toPackage: string, uri: +android.net.Uri, modeFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#grantUriPermission(java.lang.String, android.net.Uri, int)"
          },
          "startActivityAsCaller": {
            "!type": "fn(intent: +android.content.Intent, options: +android.os.Bundle, ignoreTargetSecurity: bool, userId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityAsCaller(android.content.Intent, android.os.Bundle, boolean, int)"
          },
          "onActivityReenter": {
            "!type": "fn(resultCode: number, data: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActivityReenter(int, android.content.Intent)"
          },
          "dispatchKeyShortcutEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchKeyShortcutEvent(android.view.KeyEvent)"
          },
          "onNavigateUpFromChild": {
            "!type": "fn(child: +android.app.Activity) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNavigateUpFromChild(android.app.Activity)"
          },
          "onEnterAnimationComplete": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onEnterAnimationComplete()"
          },
          "setContentView": {
            "!type": "fn(layoutResID: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setContentView(int)"
          },
          "getPackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageName()"
          },
          "getActionBar": {
            "!type": "fn() -> +android.app.ActionBar",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getActionBar()"
          },
          "isDestroyed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isDestroyed()"
          },
          "sendBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "runOnUiThread": {
            "!type": "fn(action: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#runOnUiThread(java.lang.Runnable)"
          },
          "stopLockTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#stopLockTask()"
          },
          "createApplicationContext": {
            "!type": "fn(application: +android.content.pm.ApplicationInfo, flags: number) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createApplicationContext(android.content.pm.ApplicationInfo, int)"
          },
          "finishAffinity": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAffinity()"
          },
          "openContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#openContextMenu(android.view.View)"
          },
          "setTaskDescription": {
            "!type": "fn(taskDescription: +android.app.ActivityManager.TaskDescription) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setTaskDescription(android.app.ActivityManager.TaskDescription)"
          },
          "setTitleColor": {
            "!type": "fn(textColor: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setTitleColor(int)"
          },
          "showAssist": {
            "!type": "fn(args: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showAssist(android.os.Bundle)"
          },
          "onVisibleBehindCanceled": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onVisibleBehindCanceled()"
          },
          "finishAfterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAfterTransition()"
          },
          "startServiceAsUser": {
            "!type": "fn(service: +android.content.Intent, user: +android.os.UserHandle) -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startServiceAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "onNavigateUp": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNavigateUp()"
          },
          "getActivityToken": {
            "!type": "fn() -> +android.os.IBinder",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getActivityToken()"
          },
          "onAttachFragment": {
            "!type": "fn(fragment: +android.app.Fragment) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onAttachFragment(android.app.Fragment)"
          },
          "getApplication": {
            "!type": "fn() -> +android.app.Application",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getApplication()"
          },
          "applyOverrideConfiguration": {
            "!type": "fn(overrideConfiguration: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#applyOverrideConfiguration(android.content.res.Configuration)"
          },
          "fileList": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#fileList()"
          },
          "onRetainNonConfigurationChildInstances": {
            "!type": "fn() -> +java.util.HashMap",
            "!url": "http://developer.android.com/reference/android/app/ActivityGroup.html#onRetainNonConfigurationChildInstances()"
          },
          "getTaskId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTaskId()"
          },
          "openOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#openOptionsMenu()"
          },
          "onBackgroundVisibleBehindChanged": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onBackgroundVisibleBehindChanged(boolean)"
          },
          "startNextMatchingActivity": {
            "!type": "fn(intent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startNextMatchingActivity(android.content.Intent)"
          },
          "onPrepareNavigateUpTaskStack": {
            "!type": "fn(builder: +android.app.TaskStackBuilder) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPrepareNavigateUpTaskStack(android.app.TaskStackBuilder)"
          },
          "onActionModeFinished": {
            "!type": "fn(mode: +android.view.ActionMode) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActionModeFinished(android.view.ActionMode)"
          },
          "getLocalClassName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLocalClassName()"
          },
          "managedQuery": {
            "!type": "fn(uri: +android.net.Uri, projection: +java.newArray, selection: string, sortOrder: string) -> +android.database.Cursor",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#managedQuery(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String)"
          },
          "checkPermission": {
            "!type": "fn(permission: string, pid: number, uid: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkPermission(java.lang.String, int, int)"
          },
          "getWallpaperDesiredMinimumHeight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumHeight()"
          },
          "startManagingCursor": {
            "!type": "fn(c: +android.database.Cursor) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startManagingCursor(android.database.Cursor)"
          },
          "onRequestPermissionsResult": {
            "!type": "fn(requestCode: number, permissions: +java.newArray, grantResults: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRequestPermissionsResult(int, java.lang.String[], int[])"
          },
          "revokeUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#revokeUriPermission(android.net.Uri, int)"
          },
          "startActivityIfNeeded": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityIfNeeded(android.content.Intent, int)"
          },
          "moveTaskToBack": {
            "!type": "fn(nonRoot: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#moveTaskToBack(boolean)"
          },
          "unregisterForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#unregisterForContextMenu(android.view.View)"
          },
          "setPersistent": {
            "!type": "fn(isPersistent: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setPersistent(boolean)"
          },
          "onUserInteraction": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onUserInteraction()"
          },
          "setFeatureDrawableUri": {
            "!type": "fn(featureId: number, uri: +android.net.Uri) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableUri(int, android.net.Uri)"
          },
          "onStateNotSaved": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onStateNotSaved()"
          },
          "sendStickyOrderedBroadcast": {
            "!type": "fn(intent: +android.content.Intent, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcast(android.content.Intent, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "sendStickyOrderedBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "setContentTransitionManager": {
            "!type": "fn(tm: +android.transition.TransitionManager) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setContentTransitionManager(android.transition.TransitionManager)"
          },
          "getLoaderManager": {
            "!type": "fn() -> +android.app.LoaderManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLoaderManager()"
          },
          "onRetainNonConfigurationInstance": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRetainNonConfigurationInstance()"
          },
          "getExternalFilesDir": {
            "!type": "fn(type: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDir(java.lang.String)"
          },
          "bindService": {
            "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindService(android.content.Intent, android.content.ServiceConnection, int)"
          },
          "startActivitiesAsUser": {
            "!type": "fn(intents: +java.newArray, options: +android.os.Bundle, userHandle: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivitiesAsUser(android.content.Intent[], android.os.Bundle, android.os.UserHandle)"
          },
          "onRestoreInstanceState": {
            "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRestoreInstanceState(android.os.Bundle, android.os.PersistableBundle)"
          },
          "recreate": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#recreate()"
          },
          "getDatabasePath": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDatabasePath(java.lang.String)"
          },
          "setEnterSharedElementCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setEnterSharedElementCallback(android.app.SharedElementCallback)"
          },
          "onCreateContextMenu": {
            "!type": "fn(menu: +android.view.ContextMenu, v: +android.view.View, menuInfo: +android.view.ContextMenu.ContextMenuInfo) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenu.ContextMenuInfo)"
          },
          "onProvideAssistData": {
            "!type": "fn(data: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideAssistData(android.os.Bundle)"
          },
          "checkSelfPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkSelfPermission(java.lang.String)"
          },
          "onPanelClosed": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPanelClosed(int, android.view.Menu)"
          },
          "onCreate": {
            "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreate(android.os.Bundle, android.os.PersistableBundle)"
          },
          "enforceCallingOrSelfPermission": {
            "!type": "fn(permission: string, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfPermission(java.lang.String, java.lang.String)"
          },
          "onTouchEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTouchEvent(android.view.MotionEvent)"
          },
          "getTheme": {
            "!type": "fn() -> +android.content.res.Resources.Theme",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getTheme()"
          },
          "onKeyLongPress": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyLongPress(int, android.view.KeyEvent)"
          },
          "setMediaController": {
            "!type": "fn(controller: +android.media.session.MediaController) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setMediaController(android.media.session.MediaController)"
          },
          "getChangingConfigurations": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getChangingConfigurations()"
          },
          "finishActivity": {
            "!type": "fn(requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishActivity(int)"
          },
          "onCreatePanelView": {
            "!type": "fn(featureId: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreatePanelView(int)"
          },
          "getSearchEvent": {
            "!type": "fn() -> +android.view.SearchEvent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getSearchEvent()"
          },
          "setVisible": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setVisible(boolean)"
          },
          "startIntentSender": {
            "!type": "fn(intent: +android.content.IntentSender, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSender(android.content.IntentSender, android.content.Intent, int, int, int)"
          },
          "getExternalFilesDirs": {
            "!type": "fn(type: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDirs(java.lang.String)"
          },
          "stopServiceAsUser": {
            "!type": "fn(name: +android.content.Intent, user: +android.os.UserHandle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopServiceAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "unbindService": {
            "!type": "fn(conn: +android.content.ServiceConnection) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unbindService(android.content.ServiceConnection)"
          },
          "startActivityAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "onKeyShortcut": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyShortcut(int, android.view.KeyEvent)"
          },
          "getSharedPrefsFile": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPrefsFile(java.lang.String)"
          },
          "getDir": {
            "!type": "fn(name: string, mode: number) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDir(java.lang.String, int)"
          },
          "releaseInstance": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#releaseInstance()"
          },
          "onKeyMultiple": {
            "!type": "fn(keyCode: number, repeatCount: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyMultiple(int, int, android.view.KeyEvent)"
          },
          "onPreparePanel": {
            "!type": "fn(featureId: number, view: +android.view.View, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPreparePanel(int, android.view.View, android.view.Menu)"
          },
          "bindServiceAsUser": {
            "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number, user: +android.os.UserHandle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindServiceAsUser(android.content.Intent, android.content.ServiceConnection, int, android.os.UserHandle)"
          },
          "closeContextMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#closeContextMenu()"
          },
          "startSearch": {
            "!type": "fn(initialQuery: string, selectInitialQuery: bool, appSearchData: +android.os.Bundle, globalSearch: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startSearch(java.lang.String, boolean, android.os.Bundle, boolean)"
          },
          "getComponentName": {
            "!type": "fn() -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getComponentName()"
          },
          "showLockTaskEscapeMessage": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showLockTaskEscapeMessage()"
          },
          "getContentTransitionManager": {
            "!type": "fn() -> +android.transition.TransitionManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getContentTransitionManager()"
          },
          "onBackPressed": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onBackPressed()"
          },
          "getExternalCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDir()"
          },
          "getDrawable": {
            "!type": "fn(id: number) -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getDrawable(int)"
          },
          "setImmersive": {
            "!type": "fn(i: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setImmersive(boolean)"
          },
          "openFileOutput": {
            "!type": "fn(name: string, mode: number) -> +java.io.FileOutputStream",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileOutput(java.lang.String, int)"
          },
          "getAssets": {
            "!type": "fn() -> +android.content.res.AssetManager",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getAssets()"
          },
          "onLowMemory": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onLowMemory()"
          },
          "getParentActivityIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getParentActivityIntent()"
          },
          "convertFromTranslucent": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#convertFromTranslucent()"
          },
          "dispatchTouchEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchTouchEvent(android.view.MotionEvent)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getContentScene": {
            "!type": "fn() -> +android.transition.Scene",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getContentScene()"
          },
          "getCallingPackage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCallingPackage()"
          },
          "deleteDatabase": {
            "!type": "fn(name: string) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteDatabase(java.lang.String)"
          },
          "checkCallingPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingPermission(java.lang.String)"
          },
          "dispatchGenericMotionEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchGenericMotionEvent(android.view.MotionEvent)"
          },
          "getExternalMediaDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalMediaDirs()"
          },
          "getCallingActivity": {
            "!type": "fn() -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCallingActivity()"
          },
          "onAttachedToWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onAttachedToWindow()"
          },
          "clearWallpaper": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#clearWallpaper()"
          },
          "setTitle": {
            "!type": "fn(title: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setTitle(java.lang.CharSequence)"
          },
          "enforceCallingUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingUriPermission(android.net.Uri, int, java.lang.String)"
          },
          "getThemeResId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getThemeResId()"
          },
          "onWindowFocusChanged": {
            "!type": "fn(hasFocus: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowFocusChanged(boolean)"
          },
          "registerComponentCallbacks": {
            "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
            "!url": "http://developer.android.com/reference/android/content/Context.html#registerComponentCallbacks(android.content.ComponentCallbacks)"
          },
          "getText": {
            "!type": "fn(resId: number) -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getText(int)"
          },
          "enforceUriPermission": {
            "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceUriPermission(android.net.Uri, int, int, int, java.lang.String)"
          },
          "onProvideReferrer": {
            "!type": "fn() -> +android.net.Uri",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideReferrer()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "unregisterComponentCallbacks": {
            "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
            "!url": "http://developer.android.com/reference/android/content/Context.html#unregisterComponentCallbacks(android.content.ComponentCallbacks)"
          },
          "finish": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finish()"
          },
          "getWallpaperDesiredMinimumWidth": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumWidth()"
          },
          "onMenuItemSelected": {
            "!type": "fn(featureId: number, item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onMenuItemSelected(int, android.view.MenuItem)"
          },
          "getWallpaper": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaper()"
          },
          "isVoiceInteraction": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isVoiceInteraction()"
          },
          "navigateUpTo": {
            "!type": "fn(upIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#navigateUpTo(android.content.Intent)"
          },
          "getCurrentActivity": {
            "!type": "fn() -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/app/ActivityGroup.html#getCurrentActivity()"
          },
          "onCreatePanelMenu": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreatePanelMenu(int, android.view.Menu)"
          },
          "openOrCreateDatabase": {
            "!type": "fn(name: string, mode: number, factory: +android.database.sqlite.SQLiteDatabase.CursorFactory) -> +android.database.sqlite.SQLiteDatabase",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openOrCreateDatabase(java.lang.String, int, android.database.sqlite.SQLiteDatabase.CursorFactory)"
          },
          "openFileInput": {
            "!type": "fn(name: string) -> +java.io.FileInputStream",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileInput(java.lang.String)"
          },
          "dump": {
            "!type": "fn(prefix: string, fd: +java.io.FileDescriptor, writer: +java.io.PrintWriter, args: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])"
          },
          "onCreateDescription": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateDescription()"
          },
          "invalidateOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#invalidateOptionsMenu()"
          },
          "sendOrderedBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, receiverPermission: string, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, java.lang.String, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "canStartActivityForResult": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#canStartActivityForResult()"
          },
          "setProgress": {
            "!type": "fn(progress: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgress(int)"
          },
          "navigateUpToFromChild": {
            "!type": "fn(child: +android.app.Activity, upIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#navigateUpToFromChild(android.app.Activity, android.content.Intent)"
          },
          "getContentResolver": {
            "!type": "fn() -> +android.content.ContentResolver",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getContentResolver()"
          },
          "isFinishing": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isFinishing()"
          },
          "getFragmentManager": {
            "!type": "fn() -> +android.app.FragmentManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getFragmentManager()"
          },
          "getParent": {
            "!type": "fn() -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getParent()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "checkCallingUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingUriPermission(android.net.Uri, int)"
          },
          "setExitSharedElementCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setExitSharedElementCallback(android.app.SharedElementCallback)"
          },
          "checkUriPermission": {
            "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkUriPermission(android.net.Uri, int, int, int)"
          },
          "setFeatureDrawableAlpha": {
            "!type": "fn(featureId: number, alpha: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableAlpha(int, int)"
          },
          "registerReceiverAsUser": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver, user: +android.os.UserHandle, filter: +android.content.IntentFilter, broadcastPermission: string, scheduler: +android.os.Handler) -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiverAsUser(android.content.BroadcastReceiver, android.os.UserHandle, android.content.IntentFilter, java.lang.String, android.os.Handler)"
          },
          "getPackageCodePath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageCodePath()"
          },
          "getWindow": {
            "!type": "fn() -> +android.view.Window",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getWindow()"
          },
          "startIntentSenderFromChild": {
            "!type": "fn(child: +android.app.Activity, intent: +android.content.IntentSender, requestCode: number, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSenderFromChild(android.app.Activity, android.content.IntentSender, int, android.content.Intent, int, int, int)"
          },
          "postponeEnterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#postponeEnterTransition()"
          },
          "shouldUpRecreateTask": {
            "!type": "fn(targetIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#shouldUpRecreateTask(android.content.Intent)"
          },
          "removeStickyBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "deleteFile": {
            "!type": "fn(name: string) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteFile(java.lang.String)"
          },
          "onContextMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onContextMenuClosed(android.view.Menu)"
          },
          "onCreateOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateOptionsMenu(android.view.Menu)"
          },
          "getClassLoader": {
            "!type": "fn() -> +java.lang.ClassLoader",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getClassLoader()"
          },
          "dispatchPopulateAccessibilityEvent": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
          },
          "setIntent": {
            "!type": "fn(newIntent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setIntent(android.content.Intent)"
          },
          "setVolumeControlStream": {
            "!type": "fn(streamType: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setVolumeControlStream(int)"
          },
          "getObbDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDir()"
          },
          "startInstrumentation": {
            "!type": "fn(className: +android.content.ComponentName, profileFile: string, arguments: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startInstrumentation(android.content.ComponentName, java.lang.String, android.os.Bundle)"
          },
          "reportFullyDrawn": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#reportFullyDrawn()"
          },
          "setProgressBarIndeterminateVisibility": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarIndeterminateVisibility(boolean)"
          },
          "finishFromChild": {
            "!type": "fn(child: +android.app.Activity) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishFromChild(android.app.Activity)"
          },
          "getColorStateList": {
            "!type": "fn(id: number) -> +android.content.res.ColorStateList",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getColorStateList(int)"
          },
          "getTitleColor": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTitleColor()"
          },
          "getMediaController": {
            "!type": "fn() -> +android.media.session.MediaController",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getMediaController()"
          },
          "sendBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcast(android.content.Intent)"
          },
          "overridePendingTransition": {
            "!type": "fn(enterAnim: number, exitAnim: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#overridePendingTransition(int, int)"
          },
          "dispatchTrackballEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchTrackballEvent(android.view.MotionEvent)"
          },
          "getNoBackupFilesDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getNoBackupFilesDir()"
          },
          "startActionMode": {
            "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActionMode(android.view.ActionMode.Callback)"
          },
          "getApplicationContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationContext()"
          },
          "onCreateNavigateUpTaskStack": {
            "!type": "fn(builder: +android.app.TaskStackBuilder) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateNavigateUpTaskStack(android.app.TaskStackBuilder)"
          },
          "createDisplayContext": {
            "!type": "fn(display: +android.view.Display) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createDisplayContext(android.view.Display)"
          },
          "onActionModeStarted": {
            "!type": "fn(mode: +android.view.ActionMode) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActionModeStarted(android.view.ActionMode)"
          },
          "dispatchKeyEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchKeyEvent(android.view.KeyEvent)"
          },
          "enforceCallingPermission": {
            "!type": "fn(permission: string, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingPermission(java.lang.String, java.lang.String)"
          },
          "createPackageContextAsUser": {
            "!type": "fn(packageName: string, flags: number, user: +android.os.UserHandle) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContextAsUser(java.lang.String, int, android.os.UserHandle)"
          },
          "setFeatureDrawable": {
            "!type": "fn(featureId: number, drawable: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawable(int, android.graphics.drawable.Drawable)"
          },
          "dismissDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dismissDialog(int)"
          },
          "onMenuOpened": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onMenuOpened(int, android.view.Menu)"
          },
          "getSystemService": {
            "!type": "fn(name: string) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getSystemService(java.lang.String)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "startActivities": {
            "!type": "fn(intents: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivities(android.content.Intent[])"
          },
          "startService": {
            "!type": "fn(service: +android.content.Intent) -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startService(android.content.Intent)"
          },
          "getFileStreamPath": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFileStreamPath(java.lang.String)"
          },
          "addContentView": {
            "!type": "fn(view: +android.view.View, params: +android.view.ViewGroup.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#addContentView(android.view.View, android.view.ViewGroup.LayoutParams)"
          },
          "closeOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#closeOptionsMenu()"
          },
          "sendStickyBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "takeKeyEvents": {
            "!type": "fn(get: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#takeKeyEvents(boolean)"
          },
          "getTitle": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTitle()"
          },
          "getWindowManager": {
            "!type": "fn() -> +android.view.WindowManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getWindowManager()"
          },
          "checkCallingOrSelfUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfUriPermission(android.net.Uri, int)"
          },
          "getBasePackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBasePackageName()"
          },
          "stopManagingCursor": {
            "!type": "fn(c: +android.database.Cursor) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#stopManagingCursor(android.database.Cursor)"
          },
          "setWallpaper": {
            "!type": "fn(bitmap: +android.graphics.Bitmap) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#setWallpaper(android.graphics.Bitmap)"
          },
          "sendOrderedBroadcast": {
            "!type": "fn(intent: +android.content.Intent, receiverPermission: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcast(android.content.Intent, java.lang.String)"
          },
          "unregisterReceiver": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unregisterReceiver(android.content.BroadcastReceiver)"
          },
          "getColor": {
            "!type": "fn(id: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getColor(int)"
          },
          "getMenuInflater": {
            "!type": "fn() -> +android.view.MenuInflater",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getMenuInflater()"
          },
          "stopService": {
            "!type": "fn(name: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopService(android.content.Intent)"
          },
          "getMainLooper": {
            "!type": "fn() -> +android.os.Looper",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getMainLooper()"
          },
          "startActivityFromChild": {
            "!type": "fn(child: +android.app.Activity, intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityFromChild(android.app.Activity, android.content.Intent, int)"
          },
          "startLockTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startLockTask()"
          },
          "removeStickyBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcast(android.content.Intent)"
          },
          "getExternalCacheDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDirs()"
          },
          "getReferrer": {
            "!type": "fn() -> +android.net.Uri",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getReferrer()"
          },
          "isImmersive": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isImmersive()"
          },
          "shouldShowRequestPermissionRationale": {
            "!type": "fn(permission: string) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#shouldShowRequestPermissionRationale(java.lang.String)"
          },
          "getPreferences": {
            "!type": "fn(mode: number) -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getPreferences(int)"
          },
          "getFilesDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFilesDir()"
          },
          "findViewById": {
            "!type": "fn(id: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#findViewById(int)"
          },
          "getSharedPreferences": {
            "!type": "fn(name: string, mode: number) -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPreferences(java.lang.String, int)"
          },
          "isTaskRoot": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isTaskRoot()"
          },
          "getLastNonConfigurationInstance": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLastNonConfigurationInstance()"
          },
          "getDisplayAdjustments": {
            "!type": "fn(displayId: number) -> +android.view.DisplayAdjustments",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDisplayAdjustments(int)"
          },
          "getRequestedOrientation": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getRequestedOrientation()"
          },
          "onTrimMemory": {
            "!type": "fn(level: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTrimMemory(int)"
          },
          "removeDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#removeDialog(int)"
          },
          "getUserId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getUserId()"
          },
          "requestVisibleBehind": {
            "!type": "fn(visible: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestVisibleBehind(boolean)"
          },
          "onOptionsMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onOptionsMenuClosed(android.view.Menu)"
          },
          "onCreateView": {
            "!type": "fn(name: string, context: +android.content.Context, attrs: +android.util.AttributeSet) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateView(java.lang.String, android.content.Context, android.util.AttributeSet)"
          },
          "startActivityForResultAsUser": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityForResultAsUser(android.content.Intent, int, android.os.UserHandle)"
          },
          "startIntentSenderForResult": {
            "!type": "fn(intent: +android.content.IntentSender, requestCode: number, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSenderForResult(android.content.IntentSender, int, android.content.Intent, int, int, int)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "setDefaultTab": {
            "!type": "fn(tag: string) -> void",
            "!url": "http://developer.android.com/reference/android/app/TabActivity.html#setDefaultTab(java.lang.String)"
          }
        }
      },
      "JobSchedulerImpl": {
        "!url": "http://developer.android.com/reference/android/app/JobSchedulerImpl.html",
        "RESULT_SUCCESS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/job/JobScheduler.html#RESULT_SUCCESS"
        },
        "RESULT_FAILURE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/job/JobScheduler.html#RESULT_FAILURE"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "cancelAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/JobSchedulerImpl.html#cancelAll()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "schedule": {
            "!type": "fn(job: +android.app.job.JobInfo) -> number",
            "!url": "http://developer.android.com/reference/android/app/JobSchedulerImpl.html#schedule(android.app.job.JobInfo)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getAllPendingJobs": {
            "!type": "fn() -> +java.util.List",
            "!url": "http://developer.android.com/reference/android/app/JobSchedulerImpl.html#getAllPendingJobs()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "cancel": {
            "!type": "fn(jobId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/JobSchedulerImpl.html#cancel(int)"
          }
        }
      },
      "ActivityManagerNative": {
        "!url": "http://developer.android.com/reference/android/app/ActivityManagerNative.html",
        "!type": "fn()",
        "clearCallingIdentity": {
          "!type": "fn() -> +java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#clearCallingIdentity()"
        },
        "getCallingUid": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#getCallingUid()"
        },
        "noteWakeupAlarm": {
          "!type": "fn(ps: +android.app.PendingIntent, sourceUid: number, sourcePkg: string, tag: string) -> void",
          "!url": "http://developer.android.com/reference/android/app/ActivityManagerNative.html#noteWakeupAlarm(android.app.PendingIntent, int, java.lang.String, java.lang.String)"
        },
        "blockUntilThreadAvailable": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#blockUntilThreadAvailable()"
        },
        "flushPendingCommands": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#flushPendingCommands()"
        },
        "joinThreadPool": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#joinThreadPool()"
        },
        "noteAlarmStart": {
          "!type": "fn(ps: +android.app.PendingIntent, sourceUid: number, tag: string) -> void",
          "!url": "http://developer.android.com/reference/android/app/ActivityManagerNative.html#noteAlarmStart(android.app.PendingIntent, int, java.lang.String)"
        },
        "restoreCallingIdentity": {
          "!type": "fn(token: +java.lang.Long) -> void",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#restoreCallingIdentity(long)"
        },
        "getCallingPid": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#getCallingPid()"
        },
        "getThreadStrictModePolicy": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#getThreadStrictModePolicy()"
        },
        "asInterface": {
          "!type": "fn(obj: +android.os.IBinder) -> +android.app.IActivityManager",
          "!url": "http://developer.android.com/reference/android/app/ActivityManagerNative.html#asInterface(android.os.IBinder)"
        },
        "getDefault": {
          "!type": "fn() -> +android.app.IActivityManager",
          "!url": "http://developer.android.com/reference/android/app/ActivityManagerNative.html#getDefault()"
        },
        "getCallingUserHandle": {
          "!type": "fn() -> +android.os.UserHandle",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#getCallingUserHandle()"
        },
        "setThreadStrictModePolicy": {
          "!type": "fn(policyMask: number) -> void",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#setThreadStrictModePolicy(int)"
        },
        "noteAlarmFinish": {
          "!type": "fn(ps: +android.app.PendingIntent, sourceUid: number, tag: string) -> void",
          "!url": "http://developer.android.com/reference/android/app/ActivityManagerNative.html#noteAlarmFinish(android.app.PendingIntent, int, java.lang.String)"
        },
        "isSystemReady": {
          "!type": "fn() -> bool",
          "!url": "http://developer.android.com/reference/android/app/ActivityManagerNative.html#isSystemReady()"
        },
        "isProxy": {
          "!type": "fn(iface: +android.os.IInterface) -> bool",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#isProxy(android.os.IInterface)"
        },
        "setDumpDisabled": {
          "!type": "fn(msg: string) -> void",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#setDumpDisabled(java.lang.String)"
        },
        "broadcastStickyIntent": {
          "!type": "fn(intent: +android.content.Intent, permission: string, userId: number) -> void",
          "!url": "http://developer.android.com/reference/android/app/ActivityManagerNative.html#broadcastStickyIntent(android.content.Intent, java.lang.String, int)"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "linkToDeath": {
            "!type": "fn(recipient: +android.os.IBinder.DeathRecipient, flags: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#linkToDeath(android.os.IBinder.DeathRecipient, int)"
          },
          "dumpAsync": {
            "!type": "fn(fd: +java.io.FileDescriptor, args: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#dumpAsync(java.io.FileDescriptor, java.lang.String[])"
          },
          "dump": {
            "!type": "fn(fd: +java.io.FileDescriptor, args: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#dump(java.io.FileDescriptor, java.lang.String[])"
          },
          "attachInterface": {
            "!type": "fn(owner: +android.os.IInterface, descriptor: string) -> void",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#attachInterface(android.os.IInterface, java.lang.String)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "isBinderAlive": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#isBinderAlive()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "onTransact": {
            "!type": "fn(code: number, data: +android.os.Parcel, reply: +android.os.Parcel, flags: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/ActivityManagerNative.html#onTransact(int, android.os.Parcel, android.os.Parcel, int)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "unlinkToDeath": {
            "!type": "fn(recipient: +android.os.IBinder.DeathRecipient, flags: number) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#unlinkToDeath(android.os.IBinder.DeathRecipient, int)"
          },
          "transact": {
            "!type": "fn(code: number, data: +android.os.Parcel, reply: +android.os.Parcel, flags: number) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#transact(int, android.os.Parcel, android.os.Parcel, int)"
          },
          "asBinder": {
            "!type": "fn() -> +android.os.IBinder",
            "!url": "http://developer.android.com/reference/android/app/ActivityManagerNative.html#asBinder()"
          },
          "getInterfaceDescriptor": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#getInterfaceDescriptor()"
          },
          "pingBinder": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#pingBinder()"
          },
          "queryLocalInterface": {
            "!type": "fn(descriptor: string) -> +android.os.IInterface",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#queryLocalInterface(java.lang.String)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "AlarmManager": {
        "!url": "http://developer.android.com/reference/android/app/AlarmManager.html",
        "AlarmClockInfo": {
          "!url": "http://developer.android.com/reference/android/app/AlarmManager.AlarmClockInfo.html",
          "!type": "fn(triggerTime: +java.lang.Long, showIntent: +android.app.PendingIntent)",
          "CREATOR": {
            "!type": "+android.os.Parcelable.Creator",
            "!url": "http://developer.android.com/reference/android/app/AlarmManager.AlarmClockInfo.html#CREATOR"
          },
          "prototype": {
            "getTriggerTime": {
              "!type": "fn() -> +java.lang.Long",
              "!url": "http://developer.android.com/reference/android/app/AlarmManager.AlarmClockInfo.html#getTriggerTime()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "describeContents": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/app/AlarmManager.AlarmClockInfo.html#describeContents()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "getShowIntent": {
              "!type": "fn() -> +android.app.PendingIntent",
              "!url": "http://developer.android.com/reference/android/app/AlarmManager.AlarmClockInfo.html#getShowIntent()"
            },
            "writeToParcel": {
              "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
              "!url": "http://developer.android.com/reference/android/app/AlarmManager.AlarmClockInfo.html#writeToParcel(android.os.Parcel, int)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "INTERVAL_HOUR": {
          "!type": "+java.lang.Long",
          "!url": "http://developer.android.com/reference/android/app/AlarmManager.html#INTERVAL_HOUR"
        },
        "ELAPSED_REALTIME_WAKEUP": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AlarmManager.html#ELAPSED_REALTIME_WAKEUP"
        },
        "INTERVAL_DAY": {
          "!type": "+java.lang.Long",
          "!url": "http://developer.android.com/reference/android/app/AlarmManager.html#INTERVAL_DAY"
        },
        "INTERVAL_HALF_HOUR": {
          "!type": "+java.lang.Long",
          "!url": "http://developer.android.com/reference/android/app/AlarmManager.html#INTERVAL_HALF_HOUR"
        },
        "FLAG_ALLOW_WHILE_IDLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AlarmManager.html#FLAG_ALLOW_WHILE_IDLE"
        },
        "WINDOW_HEURISTIC": {
          "!type": "+java.lang.Long",
          "!url": "http://developer.android.com/reference/android/app/AlarmManager.html#WINDOW_HEURISTIC"
        },
        "INTERVAL_FIFTEEN_MINUTES": {
          "!type": "+java.lang.Long",
          "!url": "http://developer.android.com/reference/android/app/AlarmManager.html#INTERVAL_FIFTEEN_MINUTES"
        },
        "ACTION_NEXT_ALARM_CLOCK_CHANGED": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/AlarmManager.html#ACTION_NEXT_ALARM_CLOCK_CHANGED"
        },
        "FLAG_IDLE_UNTIL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AlarmManager.html#FLAG_IDLE_UNTIL"
        },
        "FLAG_WAKE_FROM_IDLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AlarmManager.html#FLAG_WAKE_FROM_IDLE"
        },
        "ELAPSED_REALTIME": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AlarmManager.html#ELAPSED_REALTIME"
        },
        "RTC": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AlarmManager.html#RTC"
        },
        "INTERVAL_HALF_DAY": {
          "!type": "+java.lang.Long",
          "!url": "http://developer.android.com/reference/android/app/AlarmManager.html#INTERVAL_HALF_DAY"
        },
        "WINDOW_EXACT": {
          "!type": "+java.lang.Long",
          "!url": "http://developer.android.com/reference/android/app/AlarmManager.html#WINDOW_EXACT"
        },
        "FLAG_ALLOW_WHILE_IDLE_UNRESTRICTED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AlarmManager.html#FLAG_ALLOW_WHILE_IDLE_UNRESTRICTED"
        },
        "RTC_WAKEUP": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AlarmManager.html#RTC_WAKEUP"
        },
        "FLAG_STANDALONE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AlarmManager.html#FLAG_STANDALONE"
        },
        "prototype": {
          "setWindow": {
            "!type": "fn(type: number, windowStartMillis: +java.lang.Long, windowLengthMillis: +java.lang.Long, operation: +android.app.PendingIntent) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlarmManager.html#setWindow(int, long, long, android.app.PendingIntent)"
          },
          "setRepeating": {
            "!type": "fn(type: number, triggerAtMillis: +java.lang.Long, intervalMillis: +java.lang.Long, operation: +android.app.PendingIntent) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlarmManager.html#setRepeating(int, long, long, android.app.PendingIntent)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "cancel": {
            "!type": "fn(operation: +android.app.PendingIntent) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlarmManager.html#cancel(android.app.PendingIntent)"
          },
          "getNextAlarmClock": {
            "!type": "fn() -> +android.app.AlarmManager.AlarmClockInfo",
            "!url": "http://developer.android.com/reference/android/app/AlarmManager.html#getNextAlarmClock()"
          },
          "setAlarmClock": {
            "!type": "fn(info: +android.app.AlarmManager.AlarmClockInfo, operation: +android.app.PendingIntent) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlarmManager.html#setAlarmClock(android.app.AlarmManager.AlarmClockInfo, android.app.PendingIntent)"
          },
          "setAndAllowWhileIdle": {
            "!type": "fn(type: number, triggerAtMillis: +java.lang.Long, operation: +android.app.PendingIntent) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlarmManager.html#setAndAllowWhileIdle(int, long, android.app.PendingIntent)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "setInexactRepeating": {
            "!type": "fn(type: number, triggerAtMillis: +java.lang.Long, intervalMillis: +java.lang.Long, operation: +android.app.PendingIntent) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlarmManager.html#setInexactRepeating(int, long, long, android.app.PendingIntent)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "setExact": {
            "!type": "fn(type: number, triggerAtMillis: +java.lang.Long, operation: +android.app.PendingIntent) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlarmManager.html#setExact(int, long, android.app.PendingIntent)"
          },
          "set": {
            "!type": "fn(type: number, triggerAtMillis: +java.lang.Long, operation: +android.app.PendingIntent) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlarmManager.html#set(int, long, android.app.PendingIntent)"
          },
          "setTime": {
            "!type": "fn(millis: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlarmManager.html#setTime(long)"
          },
          "setTimeZone": {
            "!type": "fn(timeZone: string) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlarmManager.html#setTimeZone(java.lang.String)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getNextWakeFromIdleTime": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/app/AlarmManager.html#getNextWakeFromIdleTime()"
          },
          "setExactAndAllowWhileIdle": {
            "!type": "fn(type: number, triggerAtMillis: +java.lang.Long, operation: +android.app.PendingIntent) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlarmManager.html#setExactAndAllowWhileIdle(int, long, android.app.PendingIntent)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "setIdleUntil": {
            "!type": "fn(type: number, triggerAtMillis: +java.lang.Long, operation: +android.app.PendingIntent) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlarmManager.html#setIdleUntil(int, long, android.app.PendingIntent)"
          }
        }
      },
      "MediaRouteButton": {
        "!url": "http://developer.android.com/reference/android/app/MediaRouteButton.html",
        "!type": "fn(context: +android.content.Context)",
        "OVER_SCROLL_ALWAYS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#OVER_SCROLL_ALWAYS"
        },
        "ACCESSIBILITY_LIVE_REGION_ASSERTIVE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#ACCESSIBILITY_LIVE_REGION_ASSERTIVE"
        },
        "LAYOUT_DIRECTION_INHERIT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#LAYOUT_DIRECTION_INHERIT"
        },
        "ACCESSIBILITY_LIVE_REGION_POLITE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#ACCESSIBILITY_LIVE_REGION_POLITE"
        },
        "SCROLL_INDICATOR_TOP": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_INDICATOR_TOP"
        },
        "TEXT_DIRECTION_RTL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_RTL"
        },
        "PUBLIC_STATUS_BAR_VISIBILITY_MASK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#PUBLIC_STATUS_BAR_VISIBILITY_MASK"
        },
        "ROTATION_Y": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#ROTATION_Y"
        },
        "ROTATION_X": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#ROTATION_X"
        },
        "STATUS_BAR_HIDDEN": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_HIDDEN"
        },
        "SCROLL_AXIS_NONE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_AXIS_NONE"
        },
        "TEXT_ALIGNMENT_VIEW_START": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_ALIGNMENT_VIEW_START"
        },
        "TRANSLATION_Z": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#TRANSLATION_Z"
        },
        "IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS"
        },
        "TRANSLATION_Y": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#TRANSLATION_Y"
        },
        "INVISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#INVISIBLE"
        },
        "TRANSLATION_X": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#TRANSLATION_X"
        },
        "SCROLL_INDICATOR_LEFT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_INDICATOR_LEFT"
        },
        "NO_ID": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#NO_ID"
        },
        "LAYOUT_DIRECTION_RTL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#LAYOUT_DIRECTION_RTL"
        },
        "SOUND_EFFECTS_ENABLED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SOUND_EFFECTS_ENABLED"
        },
        "TEXT_DIRECTION_LTR": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_LTR"
        },
        "ALPHA": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#ALPHA"
        },
        "LAYER_TYPE_HARDWARE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#LAYER_TYPE_HARDWARE"
        },
        "TEXT_DIRECTION_LOCALE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_LOCALE"
        },
        "SYSTEM_UI_FLAG_LAYOUT_STABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_LAYOUT_STABLE"
        },
        "DRAWING_CACHE_QUALITY_HIGH": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#DRAWING_CACHE_QUALITY_HIGH"
        },
        "FOCUS_LEFT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FOCUS_LEFT"
        },
        "SYSTEM_UI_FLAG_LIGHT_STATUS_BAR": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_LIGHT_STATUS_BAR"
        },
        "SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN"
        },
        "LAYER_TYPE_NONE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#LAYER_TYPE_NONE"
        },
        "TEXT_ALIGNMENT_INHERIT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_ALIGNMENT_INHERIT"
        },
        "STATUS_BAR_DISABLE_BACK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_BACK"
        },
        "FOCUSABLES_ALL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FOCUSABLES_ALL"
        },
        "SCROLL_AXIS_VERTICAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_AXIS_VERTICAL"
        },
        "STATUS_BAR_TRANSLUCENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_TRANSLUCENT"
        },
        "FIND_VIEWS_WITH_CONTENT_DESCRIPTION": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FIND_VIEWS_WITH_CONTENT_DESCRIPTION"
        },
        "SCALE_Y": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCALE_Y"
        },
        "SCALE_X": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCALE_X"
        },
        "SCROLLBAR_POSITION_LEFT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLLBAR_POSITION_LEFT"
        },
        "STATUS_BAR_UNHIDE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_UNHIDE"
        },
        "LAYOUT_DIRECTION_LTR": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#LAYOUT_DIRECTION_LTR"
        },
        "NAVIGATION_BAR_TRANSIENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#NAVIGATION_BAR_TRANSIENT"
        },
        "GONE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#GONE"
        },
        "SCROLLBARS_INSIDE_INSET": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLLBARS_INSIDE_INSET"
        },
        "FOCUS_BACKWARD": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FOCUS_BACKWARD"
        },
        "STATUS_BAR_DISABLE_SEARCH": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_SEARCH"
        },
        "STATUS_BAR_DISABLE_HOME": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_HOME"
        },
        "FOCUSABLES_TOUCH_MODE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FOCUSABLES_TOUCH_MODE"
        },
        "SYSTEM_UI_LAYOUT_FLAGS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_LAYOUT_FLAGS"
        },
        "STATUS_BAR_DISABLE_NOTIFICATION_ALERTS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_NOTIFICATION_ALERTS"
        },
        "HAPTIC_FEEDBACK_ENABLED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#HAPTIC_FEEDBACK_ENABLED"
        },
        "STATUS_BAR_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_VISIBLE"
        },
        "FOCUS_FORWARD": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FOCUS_FORWARD"
        },
        "DRAG_FLAG_GLOBAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#DRAG_FLAG_GLOBAL"
        },
        "SYSTEM_UI_FLAG_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_VISIBLE"
        },
        "ACCESSIBILITY_CURSOR_POSITION_UNDEFINED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#ACCESSIBILITY_CURSOR_POSITION_UNDEFINED"
        },
        "SYSTEM_UI_FLAG_IMMERSIVE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_IMMERSIVE"
        },
        "STATUS_BAR_TRANSIENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_TRANSIENT"
        },
        "MEASURED_STATE_MASK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#MEASURED_STATE_MASK"
        },
        "ACCESSIBILITY_LIVE_REGION_NONE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#ACCESSIBILITY_LIVE_REGION_NONE"
        },
        "SCROLLBARS_OUTSIDE_OVERLAY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLLBARS_OUTSIDE_OVERLAY"
        },
        "TEXT_ALIGNMENT_GRAVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_ALIGNMENT_GRAVITY"
        },
        "DRAWING_CACHE_QUALITY_AUTO": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#DRAWING_CACHE_QUALITY_AUTO"
        },
        "TEXT_ALIGNMENT_VIEW_END": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_ALIGNMENT_VIEW_END"
        },
        "Z": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#Z"
        },
        "Y": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#Y"
        },
        "X": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#X"
        },
        "SCROLL_INDICATOR_START": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_INDICATOR_START"
        },
        "VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#VISIBLE"
        },
        "TEXT_ALIGNMENT_TEXT_START": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_ALIGNMENT_TEXT_START"
        },
        "SCROLL_AXIS_HORIZONTAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_AXIS_HORIZONTAL"
        },
        "IMPORTANT_FOR_ACCESSIBILITY_NO": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#IMPORTANT_FOR_ACCESSIBILITY_NO"
        },
        "STATUS_BAR_DISABLE_NOTIFICATION_TICKER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_NOTIFICATION_TICKER"
        },
        "OVER_SCROLL_IF_CONTENT_SCROLLS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#OVER_SCROLL_IF_CONTENT_SCROLLS"
        },
        "FOCUS_RIGHT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FOCUS_RIGHT"
        },
        "OVER_SCROLL_NEVER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#OVER_SCROLL_NEVER"
        },
        "TEXT_DIRECTION_FIRST_STRONG_RTL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_FIRST_STRONG_RTL"
        },
        "SCROLL_INDICATOR_BOTTOM": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_INDICATOR_BOTTOM"
        },
        "NAVIGATION_BAR_TRANSLUCENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#NAVIGATION_BAR_TRANSLUCENT"
        },
        "SYSTEM_UI_TRANSPARENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_TRANSPARENT"
        },
        "SCREEN_STATE_ON": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCREEN_STATE_ON"
        },
        "TEXT_DIRECTION_INHERIT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_INHERIT"
        },
        "IMPORTANT_FOR_ACCESSIBILITY_YES": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#IMPORTANT_FOR_ACCESSIBILITY_YES"
        },
        "SCROLLBARS_INSIDE_OVERLAY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLLBARS_INSIDE_OVERLAY"
        },
        "ROTATION": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#ROTATION"
        },
        "FIND_VIEWS_WITH_ACCESSIBILITY_NODE_PROVIDERS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FIND_VIEWS_WITH_ACCESSIBILITY_NODE_PROVIDERS"
        },
        "SCROLL_INDICATOR_END": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_INDICATOR_END"
        },
        "NAVIGATION_BAR_UNHIDE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#NAVIGATION_BAR_UNHIDE"
        },
        "MEASURED_HEIGHT_STATE_SHIFT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#MEASURED_HEIGHT_STATE_SHIFT"
        },
        "TEXT_DIRECTION_FIRST_STRONG_LTR": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_FIRST_STRONG_LTR"
        },
        "KEEP_SCREEN_ON": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#KEEP_SCREEN_ON"
        },
        "TEXT_DIRECTION_FIRST_STRONG": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_FIRST_STRONG"
        },
        "STATUS_BAR_DISABLE_CLOCK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_CLOCK"
        },
        "STATUS_BAR_DISABLE_EXPAND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_EXPAND"
        },
        "SYSTEM_UI_FLAG_HIDE_NAVIGATION": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_HIDE_NAVIGATION"
        },
        "SCREEN_STATE_OFF": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCREEN_STATE_OFF"
        },
        "TEXT_ALIGNMENT_TEXT_END": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_ALIGNMENT_TEXT_END"
        },
        "SYSTEM_UI_FLAG_FULLSCREEN": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_FULLSCREEN"
        },
        "FIND_VIEWS_WITH_TEXT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FIND_VIEWS_WITH_TEXT"
        },
        "STATUS_BAR_DISABLE_NOTIFICATION_ICONS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_NOTIFICATION_ICONS"
        },
        "STATUS_BAR_DISABLE_RECENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_RECENT"
        },
        "STATUS_BAR_DISABLE_SYSTEM_INFO": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_SYSTEM_INFO"
        },
        "DRAWING_CACHE_QUALITY_LOW": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#DRAWING_CACHE_QUALITY_LOW"
        },
        "SCROLL_INDICATOR_RIGHT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_INDICATOR_RIGHT"
        },
        "MEASURED_STATE_TOO_SMALL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#MEASURED_STATE_TOO_SMALL"
        },
        "TEXT_ALIGNMENT_CENTER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_ALIGNMENT_CENTER"
        },
        "SCROLLBARS_OUTSIDE_INSET": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLLBARS_OUTSIDE_INSET"
        },
        "TEXT_DIRECTION_ANY_RTL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_ANY_RTL"
        },
        "LAYER_TYPE_SOFTWARE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#LAYER_TYPE_SOFTWARE"
        },
        "IMPORTANT_FOR_ACCESSIBILITY_AUTO": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#IMPORTANT_FOR_ACCESSIBILITY_AUTO"
        },
        "MEASURED_SIZE_MASK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#MEASURED_SIZE_MASK"
        },
        "mDebugViewAttributes": {
          "!type": "bool",
          "!url": "http://developer.android.com/reference/android/view/View.html#mDebugViewAttributes"
        },
        "SCROLLBAR_POSITION_RIGHT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLLBAR_POSITION_RIGHT"
        },
        "LAYOUT_DIRECTION_LOCALE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#LAYOUT_DIRECTION_LOCALE"
        },
        "LAYOUT_DIRECTION_UNDEFINED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#LAYOUT_DIRECTION_UNDEFINED"
        },
        "SCROLLBAR_POSITION_DEFAULT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLLBAR_POSITION_DEFAULT"
        },
        "RECENT_APPS_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#RECENT_APPS_VISIBLE"
        },
        "DEBUG_LAYOUT_PROPERTY": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/view/View.html#DEBUG_LAYOUT_PROPERTY"
        },
        "SYSTEM_UI_CLEARABLE_FLAGS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_CLEARABLE_FLAGS"
        },
        "FOCUS_UP": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FOCUS_UP"
        },
        "SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION"
        },
        "SYSTEM_UI_FLAG_LOW_PROFILE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_LOW_PROFILE"
        },
        "SYSTEM_UI_FLAG_IMMERSIVE_STICKY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_IMMERSIVE_STICKY"
        },
        "FOCUS_DOWN": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FOCUS_DOWN"
        },
        "getDefaultSize": {
          "!type": "fn(size: number, measureSpec: number) -> number",
          "!url": "http://developer.android.com/reference/android/view/View.html#getDefaultSize(int, int)"
        },
        "combineMeasuredStates": {
          "!type": "fn(curState: number, newState: number) -> number",
          "!url": "http://developer.android.com/reference/android/view/View.html#combineMeasuredStates(int, int)"
        },
        "resolveSizeAndState": {
          "!type": "fn(size: number, measureSpec: number, childMeasuredState: number) -> number",
          "!url": "http://developer.android.com/reference/android/view/View.html#resolveSizeAndState(int, int, int)"
        },
        "resolveSize": {
          "!type": "fn(size: number, measureSpec: number) -> number",
          "!url": "http://developer.android.com/reference/android/view/View.html#resolveSize(int, int)"
        },
        "generateViewId": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/view/View.html#generateViewId()"
        },
        "isLayoutModeOptical": {
          "!type": "fn(o: +java.lang.Object) -> bool",
          "!url": "http://developer.android.com/reference/android/view/View.html#isLayoutModeOptical(java.lang.Object)"
        },
        "inflate": {
          "!type": "fn(context: +android.content.Context, resource: number, root: +android.view.ViewGroup) -> +android.view.View",
          "!url": "http://developer.android.com/reference/android/view/View.html#inflate(android.content.Context, int, android.view.ViewGroup)"
        },
        "prototype": {
          "isSaveFromParentEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isSaveFromParentEnabled()"
          },
          "dispatchKeyEventPreIme": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchKeyEventPreIme(android.view.KeyEvent)"
          },
          "addTouchables": {
            "!type": "fn(views: +java.util.ArrayList) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#addTouchables(java.util.ArrayList)"
          },
          "getKeepScreenOn": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#getKeepScreenOn()"
          },
          "getLocationOnScreen": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/view/View.html#getLocationOnScreen()"
          },
          "setLayerType": {
            "!type": "fn(layerType: number, paint: +android.graphics.Paint) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setLayerType(int, android.graphics.Paint)"
          },
          "setDuplicateParentStateEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setDuplicateParentStateEnabled(boolean)"
          },
          "getAccessibilityTraversalAfter": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilityTraversalAfter()"
          },
          "getNextFocusRightId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getNextFocusRightId()"
          },
          "playSoundEffect": {
            "!type": "fn(soundConstant: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#playSoundEffect(int)"
          },
          "setTranslationZ": {
            "!type": "fn(translationZ: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTranslationZ(float)"
          },
          "setTranslationY": {
            "!type": "fn(translationY: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTranslationY(float)"
          },
          "isTextAlignmentResolved": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isTextAlignmentResolved()"
          },
          "setTranslationX": {
            "!type": "fn(translationX: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTranslationX(float)"
          },
          "setClipToOutline": {
            "!type": "fn(clipToOutline: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setClipToOutline(boolean)"
          },
          "onStartTemporaryDetach": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onStartTemporaryDetach()"
          },
          "setSaveEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setSaveEnabled(boolean)"
          },
          "setTransitionVisibility": {
            "!type": "fn(visibility: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTransitionVisibility(int)"
          },
          "getIterableTextForAccessibility": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/view/View.html#getIterableTextForAccessibility()"
          },
          "setLongClickable": {
            "!type": "fn(longClickable: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setLongClickable(boolean)"
          },
          "getWindowSystemUiVisibility": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getWindowSystemUiVisibility()"
          },
          "isInLayout": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isInLayout()"
          },
          "invalidateDrawable": {
            "!type": "fn(drawable: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#invalidateDrawable(android.graphics.drawable.Drawable)"
          },
          "onDrawForeground": {
            "!type": "fn(canvas: +android.graphics.Canvas) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onDrawForeground(android.graphics.Canvas)"
          },
          "getZ": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getZ()"
          },
          "getY": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getY()"
          },
          "getX": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getX()"
          },
          "isTextDirectionResolved": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isTextDirectionResolved()"
          },
          "scrollTo": {
            "!type": "fn(x: number, y: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#scrollTo(int, int)"
          },
          "getForegroundTintMode": {
            "!type": "fn() -> +android.graphics.PorterDuff.Mode",
            "!url": "http://developer.android.com/reference/android/view/View.html#getForegroundTintMode()"
          },
          "isPressed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isPressed()"
          },
          "dispatchWindowFocusChanged": {
            "!type": "fn(hasFocus: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchWindowFocusChanged(boolean)"
          },
          "getResources": {
            "!type": "fn() -> +android.content.res.Resources",
            "!url": "http://developer.android.com/reference/android/view/View.html#getResources()"
          },
          "onKeyDown": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onKeyDown(int, android.view.KeyEvent)"
          },
          "findViewWithTag": {
            "!type": "fn(tag: +java.lang.Object) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/View.html#findViewWithTag(java.lang.Object)"
          },
          "callOnClick": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#callOnClick()"
          },
          "setScrollBarDefaultDelayBeforeFade": {
            "!type": "fn(scrollBarDefaultDelayBeforeFade: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScrollBarDefaultDelayBeforeFade(int)"
          },
          "getNextFocusForwardId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getNextFocusForwardId()"
          },
          "setOnHoverListener": {
            "!type": "fn(l: +android.view.View.OnHoverListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnHoverListener(android.view.View.OnHoverListener)"
          },
          "drawableHotspotChanged": {
            "!type": "fn(x: +java.lang.Float, y: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#drawableHotspotChanged(float, float)"
          },
          "canResolveTextAlignment": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#canResolveTextAlignment()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "setStateListAnimator": {
            "!type": "fn(stateListAnimator: +android.animation.StateListAnimator) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setStateListAnimator(android.animation.StateListAnimator)"
          },
          "getDrawingCache": {
            "!type": "fn() -> +android.graphics.Bitmap",
            "!url": "http://developer.android.com/reference/android/view/View.html#getDrawingCache()"
          },
          "onDetachedFromWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/MediaRouteButton.html#onDetachedFromWindow()"
          },
          "dispatchFinishTemporaryDetach": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchFinishTemporaryDetach()"
          },
          "resetPaddingToInitialValues": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#resetPaddingToInitialValues()"
          },
          "setTextDirection": {
            "!type": "fn(textDirection: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTextDirection(int)"
          },
          "getDrawingRect": {
            "!type": "fn(outRect: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#getDrawingRect(android.graphics.Rect)"
          },
          "getMeasuredWidth": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getMeasuredWidth()"
          },
          "getTextDirection": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTextDirection()"
          },
          "captureTransitioningViews": {
            "!type": "fn(transitioningViews: +java.util.List) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#captureTransitioningViews(java.util.List)"
          },
          "setHasTransientState": {
            "!type": "fn(hasTransientState: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setHasTransientState(boolean)"
          },
          "isImportantForAccessibility": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isImportantForAccessibility()"
          },
          "setHorizontalFadingEdgeEnabled": {
            "!type": "fn(horizontalFadingEdgeEnabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setHorizontalFadingEdgeEnabled(boolean)"
          },
          "setContextClickable": {
            "!type": "fn(contextClickable: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setContextClickable(boolean)"
          },
          "setBackgroundDrawable": {
            "!type": "fn(background: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setBackgroundDrawable(android.graphics.drawable.Drawable)"
          },
          "isHorizontalScrollBarEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isHorizontalScrollBarEnabled()"
          },
          "setVerticalScrollbarPosition": {
            "!type": "fn(position: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setVerticalScrollbarPosition(int)"
          },
          "setNextFocusDownId": {
            "!type": "fn(nextFocusDownId: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setNextFocusDownId(int)"
          },
          "setOnClickListener": {
            "!type": "fn(l: +android.view.View.OnClickListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnClickListener(android.view.View.OnClickListener)"
          },
          "cancelLongPress": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#cancelLongPress()"
          },
          "findFocus": {
            "!type": "fn() -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/View.html#findFocus()"
          },
          "getLayerType": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getLayerType()"
          },
          "startActivityForResult": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#startActivityForResult(android.content.Intent, int)"
          },
          "dispatchWindowVisibilityChanged": {
            "!type": "fn(visibility: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchWindowVisibilityChanged(int)"
          },
          "getVisibility": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getVisibility()"
          },
          "setRotationY": {
            "!type": "fn(rotationY: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setRotationY(float)"
          },
          "postDelayed": {
            "!type": "fn(action: +java.lang.Runnable, delayMillis: +java.lang.Long) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#postDelayed(java.lang.Runnable, long)"
          },
          "setRotationX": {
            "!type": "fn(rotationX: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setRotationX(float)"
          },
          "getPivotY": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getPivotY()"
          },
          "getPivotX": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getPivotX()"
          },
          "setTag": {
            "!type": "fn(tag: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTag(java.lang.Object)"
          },
          "sendAccessibilityEventUncheckedInternal": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#sendAccessibilityEventUncheckedInternal(android.view.accessibility.AccessibilityEvent)"
          },
          "pointInView": {
            "!type": "fn(localX: +java.lang.Float, localY: +java.lang.Float, slop: +java.lang.Float) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#pointInView(float, float, float)"
          },
          "isAccessibilityFocused": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isAccessibilityFocused()"
          },
          "setAccessibilityTraversalBefore": {
            "!type": "fn(beforeId: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setAccessibilityTraversalBefore(int)"
          },
          "getScaleY": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getScaleY()"
          },
          "getScaleX": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getScaleX()"
          },
          "transformMatrixToGlobal": {
            "!type": "fn(m: +android.graphics.Matrix) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#transformMatrixToGlobal(android.graphics.Matrix)"
          },
          "getLeft": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getLeft()"
          },
          "onScreenStateChanged": {
            "!type": "fn(screenState: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onScreenStateChanged(int)"
          },
          "getDrawableState": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/view/View.html#getDrawableState()"
          },
          "isInTouchMode": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isInTouchMode()"
          },
          "removeCallbacks": {
            "!type": "fn(action: +java.lang.Runnable) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#removeCallbacks(java.lang.Runnable)"
          },
          "getTransitionName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTransitionName()"
          },
          "setBackground": {
            "!type": "fn(background: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setBackground(android.graphics.drawable.Drawable)"
          },
          "showDialog": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/MediaRouteButton.html#showDialog()"
          },
          "isNestedScrollingEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isNestedScrollingEnabled()"
          },
          "getViewTreeObserver": {
            "!type": "fn() -> +android.view.ViewTreeObserver",
            "!url": "http://developer.android.com/reference/android/view/View.html#getViewTreeObserver()"
          },
          "includeForAccessibility": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#includeForAccessibility()"
          },
          "fitsSystemWindows": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#fitsSystemWindows()"
          },
          "animate": {
            "!type": "fn() -> +android.view.ViewPropertyAnimator",
            "!url": "http://developer.android.com/reference/android/view/View.html#animate()"
          },
          "isShown": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isShown()"
          },
          "setDrawingCacheQuality": {
            "!type": "fn(quality: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setDrawingCacheQuality(int)"
          },
          "setAnimationMatrix": {
            "!type": "fn(matrix: +android.graphics.Matrix) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setAnimationMatrix(android.graphics.Matrix)"
          },
          "isAccessibilitySelectionExtendable": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isAccessibilitySelectionExtendable()"
          },
          "onTrackballEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onTrackballEvent(android.view.MotionEvent)"
          },
          "offsetLeftAndRight": {
            "!type": "fn(offset: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#offsetLeftAndRight(int)"
          },
          "dispatchUnhandledMove": {
            "!type": "fn(focused: +android.view.View, direction: number) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchUnhandledMove(android.view.View, int)"
          },
          "getAccessibilityWindowId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilityWindowId()"
          },
          "getPaddingEnd": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getPaddingEnd()"
          },
          "clearAnimation": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#clearAnimation()"
          },
          "makeOptionalFitsSystemWindows": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#makeOptionalFitsSystemWindows()"
          },
          "getAccessibilityViewId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilityViewId()"
          },
          "setOnKeyListener": {
            "!type": "fn(l: +android.view.View.OnKeyListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnKeyListener(android.view.View.OnKeyListener)"
          },
          "dispatchActivityResult": {
            "!type": "fn(who: string, requestCode: number, resultCode: number, data: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchActivityResult(java.lang.String, int, int, android.content.Intent)"
          },
          "setForegroundGravity": {
            "!type": "fn(gravity: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setForegroundGravity(int)"
          },
          "postOnAnimation": {
            "!type": "fn(action: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#postOnAnimation(java.lang.Runnable)"
          },
          "refreshDrawableState": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#refreshDrawableState()"
          },
          "setOnTouchListener": {
            "!type": "fn(l: +android.view.View.OnTouchListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnTouchListener(android.view.View.OnTouchListener)"
          },
          "dispatchConfigurationChanged": {
            "!type": "fn(newConfig: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchConfigurationChanged(android.content.res.Configuration)"
          },
          "setKeepScreenOn": {
            "!type": "fn(keepScreenOn: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setKeepScreenOn(boolean)"
          },
          "getScrollIndicators": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getScrollIndicators()"
          },
          "getBackgroundTintMode": {
            "!type": "fn() -> +android.graphics.PorterDuff.Mode",
            "!url": "http://developer.android.com/reference/android/view/View.html#getBackgroundTintMode()"
          },
          "resolveRtlPropertiesIfNeeded": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#resolveRtlPropertiesIfNeeded()"
          },
          "setMinimumHeight": {
            "!type": "fn(minHeight: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setMinimumHeight(int)"
          },
          "onFilterTouchEventForSecurity": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onFilterTouchEventForSecurity(android.view.MotionEvent)"
          },
          "getDisplay": {
            "!type": "fn() -> +android.view.Display",
            "!url": "http://developer.android.com/reference/android/view/View.html#getDisplay()"
          },
          "performHapticFeedback": {
            "!type": "fn(feedbackConstant: number) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#performHapticFeedback(int)"
          },
          "getMinimumHeight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getMinimumHeight()"
          },
          "dispatchNestedPreFling": {
            "!type": "fn(velocityX: +java.lang.Float, velocityY: +java.lang.Float) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchNestedPreFling(float, float)"
          },
          "getBoundsOnScreen": {
            "!type": "fn(outRect: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#getBoundsOnScreen(android.graphics.Rect)"
          },
          "setScrollContainer": {
            "!type": "fn(isScrollContainer: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScrollContainer(boolean)"
          },
          "getClipBounds": {
            "!type": "fn() -> +android.graphics.Rect",
            "!url": "http://developer.android.com/reference/android/view/View.html#getClipBounds()"
          },
          "resetResolvedPadding": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#resetResolvedPadding()"
          },
          "setRight": {
            "!type": "fn(right: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setRight(int)"
          },
          "unscheduleDrawable": {
            "!type": "fn(who: +android.graphics.drawable.Drawable, what: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#unscheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable)"
          },
          "sendAccessibilityEventInternal": {
            "!type": "fn(eventType: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#sendAccessibilityEventInternal(int)"
          },
          "isActivated": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isActivated()"
          },
          "findViewsWithText": {
            "!type": "fn(outViews: +java.util.ArrayList, searched: +java.lang.CharSequence, flags: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#findViewsWithText(java.util.ArrayList, java.lang.CharSequence, int)"
          },
          "hasWindowFocus": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#hasWindowFocus()"
          },
          "onPopulateAccessibilityEvent": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
          },
          "requestLayout": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#requestLayout()"
          },
          "isPaddingRelative": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isPaddingRelative()"
          },
          "getPaddingLeft": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getPaddingLeft()"
          },
          "isDrawingCacheEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isDrawingCacheEnabled()"
          },
          "getRawLayoutDirection": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getRawLayoutDirection()"
          },
          "setSoundEffectsEnabled": {
            "!type": "fn(soundEffectsEnabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setSoundEffectsEnabled(boolean)"
          },
          "isLaidOut": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isLaidOut()"
          },
          "getMeasuredWidthAndState": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getMeasuredWidthAndState()"
          },
          "getTop": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTop()"
          },
          "dispatchSystemUiVisibilityChanged": {
            "!type": "fn(visibility: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchSystemUiVisibilityChanged(int)"
          },
          "isAssistBlocked": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isAssistBlocked()"
          },
          "onGenericMotionEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onGenericMotionEvent(android.view.MotionEvent)"
          },
          "onInitializeAccessibilityEventInternal": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onInitializeAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)"
          },
          "onKeyUp": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onKeyUp(int, android.view.KeyEvent)"
          },
          "isInEditMode": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isInEditMode()"
          },
          "setLayoutDirection": {
            "!type": "fn(layoutDirection: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setLayoutDirection(int)"
          },
          "setForeground": {
            "!type": "fn(foreground: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setForeground(android.graphics.drawable.Drawable)"
          },
          "dispatchKeyShortcutEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchKeyShortcutEvent(android.view.KeyEvent)"
          },
          "setSelected": {
            "!type": "fn(selected: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setSelected(boolean)"
          },
          "dispatchNestedPrePerformAccessibilityAction": {
            "!type": "fn(action: number, arguments: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchNestedPrePerformAccessibilityAction(int, android.os.Bundle)"
          },
          "setRotation": {
            "!type": "fn(rotation: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setRotation(float)"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/view/View.html#getContext()"
          },
          "setOutlineProvider": {
            "!type": "fn(provider: +android.view.ViewOutlineProvider) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOutlineProvider(android.view.ViewOutlineProvider)"
          },
          "getBottom": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getBottom()"
          },
          "setNextFocusUpId": {
            "!type": "fn(nextFocusUpId: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setNextFocusUpId(int)"
          },
          "getOnFocusChangeListener": {
            "!type": "fn() -> +android.view.View.OnFocusChangeListener",
            "!url": "http://developer.android.com/reference/android/view/View.html#getOnFocusChangeListener()"
          },
          "onInitializeAccessibilityNodeInfo": {
            "!type": "fn(info: +android.view.accessibility.AccessibilityNodeInfo) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)"
          },
          "getScrollY": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getScrollY()"
          },
          "onResolveDrawables": {
            "!type": "fn(layoutDirection: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onResolveDrawables(int)"
          },
          "getScrollX": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getScrollX()"
          },
          "getNextFocusUpId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getNextFocusUpId()"
          },
          "dispatchApplyWindowInsets": {
            "!type": "fn(insets: +android.view.WindowInsets) -> +android.view.WindowInsets",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchApplyWindowInsets(android.view.WindowInsets)"
          },
          "setExtendedSettingsClickListener": {
            "!type": "fn(listener: +android.view.View.OnClickListener) -> void",
            "!url": "http://developer.android.com/reference/android/app/MediaRouteButton.html#setExtendedSettingsClickListener(android.view.View.OnClickListener)"
          },
          "addFocusables": {
            "!type": "fn(views: +java.util.ArrayList, direction: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#addFocusables(java.util.ArrayList, int)"
          },
          "getHandler": {
            "!type": "fn() -> +android.os.Handler",
            "!url": "http://developer.android.com/reference/android/view/View.html#getHandler()"
          },
          "dispatchDisplayHint": {
            "!type": "fn(hint: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchDisplayHint(int)"
          },
          "createAccessibilityNodeInfo": {
            "!type": "fn() -> +android.view.accessibility.AccessibilityNodeInfo",
            "!url": "http://developer.android.com/reference/android/view/View.html#createAccessibilityNodeInfo()"
          },
          "setOpticalInsets": {
            "!type": "fn(insets: +android.graphics.Insets) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOpticalInsets(android.graphics.Insets)"
          },
          "hasOverlappingRendering": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#hasOverlappingRendering()"
          },
          "resolvePadding": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#resolvePadding()"
          },
          "isHapticFeedbackEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isHapticFeedbackEnabled()"
          },
          "getOpticalInsets": {
            "!type": "fn() -> +android.graphics.Insets",
            "!url": "http://developer.android.com/reference/android/view/View.html#getOpticalInsets()"
          },
          "resolveLayoutDirection": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#resolveLayoutDirection()"
          },
          "dispatchWindowSystemUiVisiblityChanged": {
            "!type": "fn(visible: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchWindowSystemUiVisiblityChanged(int)"
          },
          "willNotCacheDrawing": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#willNotCacheDrawing()"
          },
          "resetResolvedTextAlignment": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#resetResolvedTextAlignment()"
          },
          "getPaddingTop": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getPaddingTop()"
          },
          "createAccessibilityNodeInfoInternal": {
            "!type": "fn() -> +android.view.accessibility.AccessibilityNodeInfo",
            "!url": "http://developer.android.com/reference/android/view/View.html#createAccessibilityNodeInfoInternal()"
          },
          "setDrawingCacheBackgroundColor": {
            "!type": "fn(color: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setDrawingCacheBackgroundColor(int)"
          },
          "getLayoutDirection": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getLayoutDirection()"
          },
          "getTouchables": {
            "!type": "fn() -> +java.util.ArrayList",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTouchables()"
          },
          "setOnGenericMotionListener": {
            "!type": "fn(l: +android.view.View.OnGenericMotionListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnGenericMotionListener(android.view.View.OnGenericMotionListener)"
          },
          "destroyDrawingCache": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#destroyDrawingCache()"
          },
          "getDrawingCacheBackgroundColor": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getDrawingCacheBackgroundColor()"
          },
          "isActionableForAccessibility": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isActionableForAccessibility()"
          },
          "startDrag": {
            "!type": "fn(data: +android.content.ClipData, shadowBuilder: +android.view.View.DragShadowBuilder, myLocalState: +java.lang.Object, flags: number) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#startDrag(android.content.ClipData, android.view.View.DragShadowBuilder, java.lang.Object, int)"
          },
          "setScrollBarFadeDuration": {
            "!type": "fn(scrollBarFadeDuration: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScrollBarFadeDuration(int)"
          },
          "setVerticalScrollBarEnabled": {
            "!type": "fn(verticalScrollBarEnabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setVerticalScrollBarEnabled(boolean)"
          },
          "getLocationInWindow": {
            "!type": "fn(location: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#getLocationInWindow(int[])"
          },
          "sendAccessibilityEventUnchecked": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)"
          },
          "showContextMenu": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#showContextMenu()"
          },
          "addOnLayoutChangeListener": {
            "!type": "fn(listener: +android.view.View.OnLayoutChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#addOnLayoutChangeListener(android.view.View.OnLayoutChangeListener)"
          },
          "focusSearch": {
            "!type": "fn(direction: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/View.html#focusSearch(int)"
          },
          "invalidateOutline": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#invalidateOutline()"
          },
          "hasTransientState": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#hasTransientState()"
          },
          "findViewByPredicate": {
            "!type": "fn(predicate: +com.android.internal.util.Predicate) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/View.html#findViewByPredicate(com.android.internal.util.Predicate)"
          },
          "canScrollVertically": {
            "!type": "fn(direction: number) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#canScrollVertically(int)"
          },
          "getWindowVisibility": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getWindowVisibility()"
          },
          "getOverlay": {
            "!type": "fn() -> +android.view.ViewOverlay",
            "!url": "http://developer.android.com/reference/android/view/View.html#getOverlay()"
          },
          "setDisabledSystemUiVisibility": {
            "!type": "fn(flags: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setDisabledSystemUiVisibility(int)"
          },
          "getRouteTypes": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/MediaRouteButton.html#getRouteTypes()"
          },
          "restoreHierarchyState": {
            "!type": "fn(container: +android.util.SparseArray) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#restoreHierarchyState(android.util.SparseArray)"
          },
          "getLayoutParams": {
            "!type": "fn() -> +android.view.ViewGroup.LayoutParams",
            "!url": "http://developer.android.com/reference/android/view/View.html#getLayoutParams()"
          },
          "dispatchProvideStructure": {
            "!type": "fn(structure: +android.view.ViewStructure) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchProvideStructure(android.view.ViewStructure)"
          },
          "onFinishTemporaryDetach": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onFinishTemporaryDetach()"
          },
          "getScrollBarStyle": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getScrollBarStyle()"
          },
          "performAccessibilityAction": {
            "!type": "fn(action: number, arguments: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#performAccessibilityAction(int, android.os.Bundle)"
          },
          "getWidth": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getWidth()"
          },
          "invalidate": {
            "!type": "fn(dirty: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#invalidate(android.graphics.Rect)"
          },
          "setOnCreateContextMenuListener": {
            "!type": "fn(l: +android.view.View.OnCreateContextMenuListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnCreateContextMenuListener(android.view.View.OnCreateContextMenuListener)"
          },
          "setFadingEdgeLength": {
            "!type": "fn(length: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setFadingEdgeLength(int)"
          },
          "setNextFocusLeftId": {
            "!type": "fn(nextFocusLeftId: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setNextFocusLeftId(int)"
          },
          "setLabelFor": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setLabelFor(int)"
          },
          "setImportantForAccessibility": {
            "!type": "fn(mode: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setImportantForAccessibility(int)"
          },
          "getMatrix": {
            "!type": "fn() -> +android.graphics.Matrix",
            "!url": "http://developer.android.com/reference/android/view/View.html#getMatrix()"
          },
          "onHoverEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onHoverEvent(android.view.MotionEvent)"
          },
          "hasNestedScrollingParent": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#hasNestedScrollingParent()"
          },
          "getMinimumWidth": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getMinimumWidth()"
          },
          "getOverScrollMode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getOverScrollMode()"
          },
          "getNextFocusDownId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getNextFocusDownId()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getInverseMatrix": {
            "!type": "fn() -> +android.graphics.Matrix",
            "!url": "http://developer.android.com/reference/android/view/View.html#getInverseMatrix()"
          },
          "getGlobalVisibleRect": {
            "!type": "fn(r: +android.graphics.Rect, globalOffset: +android.graphics.Point) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#getGlobalVisibleRect(android.graphics.Rect, android.graphics.Point)"
          },
          "performContextClick": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#performContextClick()"
          },
          "getRootWindowInsets": {
            "!type": "fn() -> +android.view.WindowInsets",
            "!url": "http://developer.android.com/reference/android/view/View.html#getRootWindowInsets()"
          },
          "getRawTextAlignment": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getRawTextAlignment()"
          },
          "isLayoutDirectionResolved": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isLayoutDirectionResolved()"
          },
          "resetRtlProperties": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#resetRtlProperties()"
          },
          "setEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setEnabled(boolean)"
          },
          "onActivityResult": {
            "!type": "fn(requestCode: number, resultCode: number, data: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onActivityResult(int, int, android.content.Intent)"
          },
          "getRight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getRight()"
          },
          "resetResolvedTextDirection": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#resetResolvedTextDirection()"
          },
          "setClickable": {
            "!type": "fn(clickable: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setClickable(boolean)"
          },
          "getPaddingBottom": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getPaddingBottom()"
          },
          "isInScrollingContainer": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isInScrollingContainer()"
          },
          "setPaddingRelative": {
            "!type": "fn(start: number, top: number, end: number, bottom: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setPaddingRelative(int, int, int, int)"
          },
          "notifyViewAccessibilityStateChangedIfNeeded": {
            "!type": "fn(changeType: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#notifyViewAccessibilityStateChangedIfNeeded(int)"
          },
          "isVerticalFadingEdgeEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isVerticalFadingEdgeEnabled()"
          },
          "hasFocusable": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#hasFocusable()"
          },
          "performLongClick": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/MediaRouteButton.html#performLongClick()"
          },
          "scheduleDrawable": {
            "!type": "fn(who: +android.graphics.drawable.Drawable, what: +java.lang.Runnable, when: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#scheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable, long)"
          },
          "getVerticalScrollbarPosition": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getVerticalScrollbarPosition()"
          },
          "setTransitionName": {
            "!type": "fn(transitionName: string) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTransitionName(java.lang.String)"
          },
          "debug": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#debug()"
          },
          "onTouchEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onTouchEvent(android.view.MotionEvent)"
          },
          "setOverScrollMode": {
            "!type": "fn(overScrollMode: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOverScrollMode(int)"
          },
          "setSystemUiVisibility": {
            "!type": "fn(visibility: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setSystemUiVisibility(int)"
          },
          "getBaseline": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getBaseline()"
          },
          "notifySubtreeAccessibilityStateChangedIfNeeded": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#notifySubtreeAccessibilityStateChangedIfNeeded()"
          },
          "onKeyLongPress": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onKeyLongPress(int, android.view.KeyEvent)"
          },
          "setContentDescription": {
            "!type": "fn(contentDescription: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setContentDescription(java.lang.CharSequence)"
          },
          "setForegroundTintList": {
            "!type": "fn(tint: +android.content.res.ColorStateList) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setForegroundTintList(android.content.res.ColorStateList)"
          },
          "getForeground": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/view/View.html#getForeground()"
          },
          "updateDisplayListIfDirty": {
            "!type": "fn() -> +android.view.RenderNode",
            "!url": "http://developer.android.com/reference/android/view/View.html#updateDisplayListIfDirty()"
          },
          "getId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getId()"
          },
          "resolveTextAlignment": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#resolveTextAlignment()"
          },
          "setAccessibilityDelegate": {
            "!type": "fn(delegate: +android.view.View.AccessibilityDelegate) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setAccessibilityDelegate(android.view.View.AccessibilityDelegate)"
          },
          "dispatchPopulateAccessibilityEventInternal": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)"
          },
          "onApplyWindowInsets": {
            "!type": "fn(insets: +android.view.WindowInsets) -> +android.view.WindowInsets",
            "!url": "http://developer.android.com/reference/android/view/View.html#onApplyWindowInsets(android.view.WindowInsets)"
          },
          "requestUnbufferedDispatch": {
            "!type": "fn(event: +android.view.MotionEvent) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#requestUnbufferedDispatch(android.view.MotionEvent)"
          },
          "layout": {
            "!type": "fn(l: number, t: number, r: number, b: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#layout(int, int, int, int)"
          },
          "onKeyShortcut": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onKeyShortcut(int, android.view.KeyEvent)"
          },
          "onDragEvent": {
            "!type": "fn(event: +android.view.DragEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onDragEvent(android.view.DragEvent)"
          },
          "setOnFocusChangeListener": {
            "!type": "fn(l: +android.view.View.OnFocusChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnFocusChangeListener(android.view.View.OnFocusChangeListener)"
          },
          "onKeyMultiple": {
            "!type": "fn(keyCode: number, repeatCount: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onKeyMultiple(int, int, android.view.KeyEvent)"
          },
          "onCancelPendingInputEvents": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onCancelPendingInputEvents()"
          },
          "isLayoutRtl": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isLayoutRtl()"
          },
          "getHorizontalFadingEdgeLength": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getHorizontalFadingEdgeLength()"
          },
          "dispatchDrawableHotspotChanged": {
            "!type": "fn(x: +java.lang.Float, y: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchDrawableHotspotChanged(float, float)"
          },
          "buildDrawingCache": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#buildDrawingCache()"
          },
          "setFocusable": {
            "!type": "fn(focusable: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setFocusable(boolean)"
          },
          "getAnimation": {
            "!type": "fn() -> +android.view.animation.Animation",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAnimation()"
          },
          "dispatchPointerEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchPointerEvent(android.view.MotionEvent)"
          },
          "getElevation": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getElevation()"
          },
          "setTop": {
            "!type": "fn(top: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTop(int)"
          },
          "postInvalidate": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#postInvalidate()"
          },
          "getFitsSystemWindows": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#getFitsSystemWindows()"
          },
          "onInitializeAccessibilityEvent": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
          },
          "setFitsSystemWindows": {
            "!type": "fn(fitSystemWindows: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setFitsSystemWindows(boolean)"
          },
          "setOnScrollChangeListener": {
            "!type": "fn(l: +android.view.View.OnScrollChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnScrollChangeListener(android.view.View.OnScrollChangeListener)"
          },
          "setAccessibilityLiveRegion": {
            "!type": "fn(mode: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setAccessibilityLiveRegion(int)"
          },
          "setFocusableInTouchMode": {
            "!type": "fn(focusableInTouchMode: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setFocusableInTouchMode(boolean)"
          },
          "getHardwareRenderer": {
            "!type": "fn() -> +android.view.HardwareRenderer",
            "!url": "http://developer.android.com/reference/android/view/View.html#getHardwareRenderer()"
          },
          "hasFocus": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#hasFocus()"
          },
          "requestFitSystemWindows": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#requestFitSystemWindows()"
          },
          "getSolidColor": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getSolidColor()"
          },
          "getLocalVisibleRect": {
            "!type": "fn(r: +android.graphics.Rect) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#getLocalVisibleRect(android.graphics.Rect)"
          },
          "getRotation": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getRotation()"
          },
          "getCameraDistance": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getCameraDistance()"
          },
          "onRtlPropertiesChanged": {
            "!type": "fn(layoutDirection: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onRtlPropertiesChanged(int)"
          },
          "isScrollbarFadingEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isScrollbarFadingEnabled()"
          },
          "dispatchTouchEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchTouchEvent(android.view.MotionEvent)"
          },
          "getRootView": {
            "!type": "fn() -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/View.html#getRootView()"
          },
          "getScrollBarDefaultDelayBeforeFade": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getScrollBarDefaultDelayBeforeFade()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "dispatchNestedFling": {
            "!type": "fn(velocityX: +java.lang.Float, velocityY: +java.lang.Float, consumed: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchNestedFling(float, float, boolean)"
          },
          "jumpDrawablesToCurrentState": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/MediaRouteButton.html#jumpDrawablesToCurrentState()"
          },
          "announceForAccessibility": {
            "!type": "fn(text: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#announceForAccessibility(java.lang.CharSequence)"
          },
          "setPressed": {
            "!type": "fn(pressed: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setPressed(boolean)"
          },
          "measure": {
            "!type": "fn(widthMeasureSpec: number, heightMeasureSpec: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#measure(int, int)"
          },
          "getWindowToken": {
            "!type": "fn() -> +android.os.IBinder",
            "!url": "http://developer.android.com/reference/android/view/View.html#getWindowToken()"
          },
          "getVerticalFadingEdgeLength": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getVerticalFadingEdgeLength()"
          },
          "setWillNotDraw": {
            "!type": "fn(willNotDraw: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setWillNotDraw(boolean)"
          },
          "getHotspotBounds": {
            "!type": "fn(outRect: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#getHotspotBounds(android.graphics.Rect)"
          },
          "setAssistBlocked": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setAssistBlocked(boolean)"
          },
          "setAlpha": {
            "!type": "fn(alpha: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setAlpha(float)"
          },
          "isAttachedToWindow": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isAttachedToWindow()"
          },
          "hackTurnOffWindowResizeAnim": {
            "!type": "fn(off: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#hackTurnOffWindowResizeAnim(boolean)"
          },
          "getRawTextDirection": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getRawTextDirection()"
          },
          "isSaveEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isSaveEnabled()"
          },
          "findViewByPredicateInsideOut": {
            "!type": "fn(start: +android.view.View, predicate: +com.android.internal.util.Predicate) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/View.html#findViewByPredicateInsideOut(android.view.View, com.android.internal.util.Predicate)"
          },
          "setBackgroundColor": {
            "!type": "fn(color: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setBackgroundColor(int)"
          },
          "getFocusables": {
            "!type": "fn(direction: number) -> +java.util.ArrayList",
            "!url": "http://developer.android.com/reference/android/view/View.html#getFocusables(int)"
          },
          "dispatchGenericMotionEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchGenericMotionEvent(android.view.MotionEvent)"
          },
          "isRootNamespace": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isRootNamespace()"
          },
          "hasOnClickListeners": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#hasOnClickListeners()"
          },
          "setWillNotCacheDrawing": {
            "!type": "fn(willNotCacheDrawing: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setWillNotCacheDrawing(boolean)"
          },
          "setCameraDistance": {
            "!type": "fn(distance: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setCameraDistance(float)"
          },
          "onAttachedToWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/MediaRouteButton.html#onAttachedToWindow()"
          },
          "bringToFront": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#bringToFront()"
          },
          "setMinimumWidth": {
            "!type": "fn(minWidth: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setMinimumWidth(int)"
          },
          "getOutlineProvider": {
            "!type": "fn() -> +android.view.ViewOutlineProvider",
            "!url": "http://developer.android.com/reference/android/view/View.html#getOutlineProvider()"
          },
          "isHovered": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isHovered()"
          },
          "isLongClickable": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isLongClickable()"
          },
          "onProvideVirtualStructure": {
            "!type": "fn(structure: +android.view.ViewStructure) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onProvideVirtualStructure(android.view.ViewStructure)"
          },
          "clearAccessibilityFocus": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#clearAccessibilityFocus()"
          },
          "setSaveFromParentEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setSaveFromParentEnabled(boolean)"
          },
          "getApplicationWindowToken": {
            "!type": "fn() -> +android.os.IBinder",
            "!url": "http://developer.android.com/reference/android/view/View.html#getApplicationWindowToken()"
          },
          "canResolveLayoutDirection": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#canResolveLayoutDirection()"
          },
          "setBackgroundTintList": {
            "!type": "fn(tint: +android.content.res.ColorStateList) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setBackgroundTintList(android.content.res.ColorStateList)"
          },
          "getOutsets": {
            "!type": "fn(outOutsetRect: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#getOutsets(android.graphics.Rect)"
          },
          "getMeasuredHeight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getMeasuredHeight()"
          },
          "onWindowFocusChanged": {
            "!type": "fn(hasWindowFocus: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onWindowFocusChanged(boolean)"
          },
          "clearFocus": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#clearFocus()"
          },
          "setClipBounds": {
            "!type": "fn(clipBounds: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setClipBounds(android.graphics.Rect)"
          },
          "getMeasuredHeightAndState": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getMeasuredHeightAndState()"
          },
          "setOnApplyWindowInsetsListener": {
            "!type": "fn(listener: +android.view.View.OnApplyWindowInsetsListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)"
          },
          "onCreateInputConnection": {
            "!type": "fn(outAttrs: +android.view.inputmethod.EditorInfo) -> +android.view.inputmethod.InputConnection",
            "!url": "http://developer.android.com/reference/android/view/View.html#onCreateInputConnection(android.view.inputmethod.EditorInfo)"
          },
          "resolveTextDirection": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#resolveTextDirection()"
          },
          "setLayerPaint": {
            "!type": "fn(paint: +android.graphics.Paint) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setLayerPaint(android.graphics.Paint)"
          },
          "isSoundEffectsEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isSoundEffectsEnabled()"
          },
          "getBackground": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/view/View.html#getBackground()"
          },
          "setAccessibilitySelection": {
            "!type": "fn(start: number, end: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setAccessibilitySelection(int, int)"
          },
          "findViewByAccessibilityIdTraversal": {
            "!type": "fn(accessibilityId: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/View.html#findViewByAccessibilityIdTraversal(int)"
          },
          "getPaddingStart": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getPaddingStart()"
          },
          "isHardwareAccelerated": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isHardwareAccelerated()"
          },
          "setId": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setId(int)"
          },
          "performClick": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/MediaRouteButton.html#performClick()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "isForegroundInsidePadding": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isForegroundInsidePadding()"
          },
          "saveHierarchyState": {
            "!type": "fn(container: +android.util.SparseArray) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#saveHierarchyState(android.util.SparseArray)"
          },
          "getWindowVisibleDisplayFrame": {
            "!type": "fn(outRect: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#getWindowVisibleDisplayFrame(android.graphics.Rect)"
          },
          "getFilterTouchesWhenObscured": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#getFilterTouchesWhenObscured()"
          },
          "setNextFocusRightId": {
            "!type": "fn(nextFocusRightId: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setNextFocusRightId(int)"
          },
          "performAccessibilityActionInternal": {
            "!type": "fn(action: number, arguments: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#performAccessibilityActionInternal(int, android.os.Bundle)"
          },
          "offsetTopAndBottom": {
            "!type": "fn(offset: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#offsetTopAndBottom(int)"
          },
          "setTagInternal": {
            "!type": "fn(key: number, tag: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTagInternal(int, java.lang.Object)"
          },
          "getAccessibilityNodeProvider": {
            "!type": "fn() -> +android.view.accessibility.AccessibilityNodeProvider",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilityNodeProvider()"
          },
          "isDirty": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isDirty()"
          },
          "requestApplyInsets": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#requestApplyInsets()"
          },
          "getClipToOutline": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#getClipToOutline()"
          },
          "toGlobalMotionEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#toGlobalMotionEvent(android.view.MotionEvent)"
          },
          "dispatchNestedScroll": {
            "!type": "fn(dxConsumed: number, dyConsumed: number, dxUnconsumed: number, dyUnconsumed: number, offsetInWindow: +java.newArray) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchNestedScroll(int, int, int, int, int[])"
          },
          "addOnAttachStateChangeListener": {
            "!type": "fn(listener: +android.view.View.OnAttachStateChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#addOnAttachStateChangeListener(android.view.View.OnAttachStateChangeListener)"
          },
          "setScrollbarFadingEnabled": {
            "!type": "fn(fadeScrollbars: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScrollbarFadingEnabled(boolean)"
          },
          "stopNestedScroll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#stopNestedScroll()"
          },
          "onProvideStructure": {
            "!type": "fn(structure: +android.view.ViewStructure) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onProvideStructure(android.view.ViewStructure)"
          },
          "getLabelFor": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getLabelFor()"
          },
          "getAccessibilitySelectionEnd": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilitySelectionEnd()"
          },
          "removeOnLayoutChangeListener": {
            "!type": "fn(listener: +android.view.View.OnLayoutChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#removeOnLayoutChangeListener(android.view.View.OnLayoutChangeListener)"
          },
          "checkInputConnectionProxy": {
            "!type": "fn(view: +android.view.View) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#checkInputConnectionProxy(android.view.View)"
          },
          "sendAccessibilityEvent": {
            "!type": "fn(eventType: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#sendAccessibilityEvent(int)"
          },
          "onPopulateAccessibilityEventInternal": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)"
          },
          "getHitRect": {
            "!type": "fn(outRect: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#getHitRect(android.graphics.Rect)"
          },
          "resolveLayoutParams": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#resolveLayoutParams()"
          },
          "getIteratorForGranularity": {
            "!type": "fn(granularity: number) -> +android.view.AccessibilityIterators.TextSegmentIterator",
            "!url": "http://developer.android.com/reference/android/view/View.html#getIteratorForGranularity(int)"
          },
          "onWindowSystemUiVisibilityChanged": {
            "!type": "fn(visible: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onWindowSystemUiVisibilityChanged(int)"
          },
          "transformMatrixToLocal": {
            "!type": "fn(m: +android.graphics.Matrix) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#transformMatrixToLocal(android.graphics.Matrix)"
          },
          "hasShadow": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#hasShadow()"
          },
          "setAnimation": {
            "!type": "fn(animation: +android.view.animation.Animation) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setAnimation(android.view.animation.Animation)"
          },
          "setElevation": {
            "!type": "fn(elevation: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setElevation(float)"
          },
          "cancelPendingInputEvents": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#cancelPendingInputEvents()"
          },
          "scrollBy": {
            "!type": "fn(x: number, y: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#scrollBy(int, int)"
          },
          "isTextDirectionInherited": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isTextDirectionInherited()"
          },
          "postInvalidateOnAnimation": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#postInvalidateOnAnimation()"
          },
          "getStateListAnimator": {
            "!type": "fn() -> +android.animation.StateListAnimator",
            "!url": "http://developer.android.com/reference/android/view/View.html#getStateListAnimator()"
          },
          "setScrollBarStyle": {
            "!type": "fn(style: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScrollBarStyle(int)"
          },
          "getSystemUiVisibility": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getSystemUiVisibility()"
          },
          "setOnContextClickListener": {
            "!type": "fn(l: +android.view.View.OnContextClickListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnContextClickListener(android.view.View.OnContextClickListener)"
          },
          "isFocused": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isFocused()"
          },
          "getContentDescription": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/view/View.html#getContentDescription()"
          },
          "getForegroundTintList": {
            "!type": "fn() -> +android.content.res.ColorStateList",
            "!url": "http://developer.android.com/reference/android/view/View.html#getForegroundTintList()"
          },
          "setForegroundTintMode": {
            "!type": "fn(tintMode: +android.graphics.PorterDuff.Mode) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setForegroundTintMode(android.graphics.PorterDuff.Mode)"
          },
          "getParent": {
            "!type": "fn() -> +android.view.ViewParent",
            "!url": "http://developer.android.com/reference/android/view/View.html#getParent()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/view/View.html#toString()"
          },
          "onCloseSystemDialogs": {
            "!type": "fn(reason: string) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onCloseSystemDialogs(java.lang.String)"
          },
          "getWindowId": {
            "!type": "fn() -> +android.view.WindowId",
            "!url": "http://developer.android.com/reference/android/view/View.html#getWindowId()"
          },
          "getFocusedRect": {
            "!type": "fn(r: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#getFocusedRect(android.graphics.Rect)"
          },
          "setPivotY": {
            "!type": "fn(pivotY: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setPivotY(float)"
          },
          "setPivotX": {
            "!type": "fn(pivotX: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setPivotX(float)"
          },
          "setNextFocusForwardId": {
            "!type": "fn(nextFocusForwardId: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setNextFocusForwardId(int)"
          },
          "dispatchDragEvent": {
            "!type": "fn(event: +android.view.DragEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchDragEvent(android.view.DragEvent)"
          },
          "setLeft": {
            "!type": "fn(left: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setLeft(int)"
          },
          "getNextFocusLeftId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getNextFocusLeftId()"
          },
          "applyDrawableToTransparentRegion": {
            "!type": "fn(dr: +android.graphics.drawable.Drawable, region: +android.graphics.Region) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#applyDrawableToTransparentRegion(android.graphics.drawable.Drawable, android.graphics.Region)"
          },
          "getScrollBarFadeDuration": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getScrollBarFadeDuration()"
          },
          "setScaleY": {
            "!type": "fn(scaleY: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScaleY(float)"
          },
          "setScaleX": {
            "!type": "fn(scaleX: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScaleX(float)"
          },
          "setScrollY": {
            "!type": "fn(value: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScrollY(int)"
          },
          "requestFocus": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#requestFocus()"
          },
          "setDrawingCacheEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setDrawingCacheEnabled(boolean)"
          },
          "setScrollX": {
            "!type": "fn(value: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScrollX(int)"
          },
          "getAccessibilitySelectionStart": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilitySelectionStart()"
          },
          "getKeyDispatcherState": {
            "!type": "fn() -> +android.view.KeyEvent.DispatcherState",
            "!url": "http://developer.android.com/reference/android/view/View.html#getKeyDispatcherState()"
          },
          "setBackgroundResource": {
            "!type": "fn(resid: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setBackgroundResource(int)"
          },
          "dispatchNestedPreScroll": {
            "!type": "fn(dx: number, dy: number, consumed: +java.newArray, offsetInWindow: +java.newArray) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchNestedPreScroll(int, int, int[], int[])"
          },
          "getTranslationZ": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTranslationZ()"
          },
          "isFocusableInTouchMode": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isFocusableInTouchMode()"
          },
          "getTranslationY": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTranslationY()"
          },
          "canHaveDisplayList": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#canHaveDisplayList()"
          },
          "isDuplicateParentStateEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isDuplicateParentStateEnabled()"
          },
          "getTranslationX": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTranslationX()"
          },
          "getAccessibilityClassName": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilityClassName()"
          },
          "setTransitionAlpha": {
            "!type": "fn(alpha: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTransitionAlpha(float)"
          },
          "removeOnAttachStateChangeListener": {
            "!type": "fn(listener: +android.view.View.OnAttachStateChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#removeOnAttachStateChangeListener(android.view.View.OnAttachStateChangeListener)"
          },
          "setScrollBarSize": {
            "!type": "fn(scrollBarSize: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScrollBarSize(int)"
          },
          "buildLayer": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#buildLayer()"
          },
          "getImportantForAccessibility": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getImportantForAccessibility()"
          },
          "getTag": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTag()"
          },
          "computeSystemWindowInsets": {
            "!type": "fn(in: +android.view.WindowInsets, outLocalInsets: +android.graphics.Rect) -> +android.view.WindowInsets",
            "!url": "http://developer.android.com/reference/android/view/View.html#computeSystemWindowInsets(android.view.WindowInsets, android.graphics.Rect)"
          },
          "getScrollBarSize": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getScrollBarSize()"
          },
          "setVerticalFadingEdgeEnabled": {
            "!type": "fn(verticalFadingEdgeEnabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setVerticalFadingEdgeEnabled(boolean)"
          },
          "setOnSystemUiVisibilityChangeListener": {
            "!type": "fn(l: +android.view.View.OnSystemUiVisibilityChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnSystemUiVisibilityChangeListener(android.view.View.OnSystemUiVisibilityChangeListener)"
          },
          "encode": {
            "!type": "fn(stream: +android.view.ViewHierarchyEncoder) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#encode(android.view.ViewHierarchyEncoder)"
          },
          "setRevealClip": {
            "!type": "fn(shouldClip: bool, x: +java.lang.Float, y: +java.lang.Float, radius: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setRevealClip(boolean, float, float, float)"
          },
          "setOnLongClickListener": {
            "!type": "fn(l: +android.view.View.OnLongClickListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnLongClickListener(android.view.View.OnLongClickListener)"
          },
          "setActivated": {
            "!type": "fn(activated: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setActivated(boolean)"
          },
          "createContextMenu": {
            "!type": "fn(menu: +android.view.ContextMenu) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#createContextMenu(android.view.ContextMenu)"
          },
          "dispatchPopulateAccessibilityEvent": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
          },
          "isLayoutRequested": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isLayoutRequested()"
          },
          "canScrollHorizontally": {
            "!type": "fn(direction: number) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#canScrollHorizontally(int)"
          },
          "setRouteTypes": {
            "!type": "fn(types: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/MediaRouteButton.html#setRouteTypes(int)"
          },
          "getDrawingCacheQuality": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getDrawingCacheQuality()"
          },
          "isSelected": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isSelected()"
          },
          "isClickable": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isClickable()"
          },
          "getMeasuredState": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getMeasuredState()"
          },
          "setTouchDelegate": {
            "!type": "fn(delegate: +android.view.TouchDelegate) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTouchDelegate(android.view.TouchDelegate)"
          },
          "onInitializeAccessibilityNodeInfoInternal": {
            "!type": "fn(info: +android.view.accessibility.AccessibilityNodeInfo) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo)"
          },
          "toLocalMotionEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#toLocalMotionEvent(android.view.MotionEvent)"
          },
          "onHoverChanged": {
            "!type": "fn(hovered: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onHoverChanged(boolean)"
          },
          "requestAccessibilityFocus": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#requestAccessibilityFocus()"
          },
          "getTouchDelegate": {
            "!type": "fn() -> +android.view.TouchDelegate",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTouchDelegate()"
          },
          "setPadding": {
            "!type": "fn(left: number, top: number, right: number, bottom: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setPadding(int, int, int, int)"
          },
          "getTransitionAlpha": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTransitionAlpha()"
          },
          "getAlpha": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAlpha()"
          },
          "setLeftTopRightBottom": {
            "!type": "fn(left: number, top: number, right: number, bottom: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setLeftTopRightBottom(int, int, int, int)"
          },
          "onKeyPreIme": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onKeyPreIme(int, android.view.KeyEvent)"
          },
          "dispatchTrackballEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchTrackballEvent(android.view.MotionEvent)"
          },
          "postInvalidateDelayed": {
            "!type": "fn(delayMilliseconds: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#postInvalidateDelayed(long)"
          },
          "getViewRootImpl": {
            "!type": "fn() -> +android.view.ViewRootImpl",
            "!url": "http://developer.android.com/reference/android/view/View.html#getViewRootImpl()"
          },
          "startActionMode": {
            "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/view/View.html#startActionMode(android.view.ActionMode.Callback)"
          },
          "getForegroundGravity": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getForegroundGravity()"
          },
          "setVisibility": {
            "!type": "fn(visibility: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/MediaRouteButton.html#setVisibility(int)"
          },
          "dispatchKeyEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchKeyEvent(android.view.KeyEvent)"
          },
          "requestFocusFromTouch": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#requestFocusFromTouch()"
          },
          "gatherTransparentRegion": {
            "!type": "fn(region: +android.graphics.Region) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#gatherTransparentRegion(android.graphics.Region)"
          },
          "isHorizontalFadingEdgeEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isHorizontalFadingEdgeEnabled()"
          },
          "getAccessibilityTraversalBefore": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilityTraversalBefore()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "setScrollIndicators": {
            "!type": "fn(indicators: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScrollIndicators(int)"
          },
          "isTextAlignmentInherited": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isTextAlignmentInherited()"
          },
          "getPaddingRight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getPaddingRight()"
          },
          "setLayoutParams": {
            "!type": "fn(params: +android.view.ViewGroup.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setLayoutParams(android.view.ViewGroup.LayoutParams)"
          },
          "onCheckIsTextEditor": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onCheckIsTextEditor()"
          },
          "isEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isEnabled()"
          },
          "canResolveTextDirection": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#canResolveTextDirection()"
          },
          "postOnAnimationDelayed": {
            "!type": "fn(action: +java.lang.Runnable, delayMillis: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#postOnAnimationDelayed(java.lang.Runnable, long)"
          },
          "isOpaque": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isOpaque()"
          },
          "resetResolvedLayoutDirection": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#resetResolvedLayoutDirection()"
          },
          "setTextAlignment": {
            "!type": "fn(textAlignment: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTextAlignment(int)"
          },
          "getRotationY": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getRotationY()"
          },
          "getRotationX": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getRotationX()"
          },
          "getTextAlignment": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTextAlignment()"
          },
          "setHovered": {
            "!type": "fn(hovered: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setHovered(boolean)"
          },
          "isVerticalScrollBarEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isVerticalScrollBarEnabled()"
          },
          "isFocusable": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isFocusable()"
          },
          "getBackgroundTintList": {
            "!type": "fn() -> +android.content.res.ColorStateList",
            "!url": "http://developer.android.com/reference/android/view/View.html#getBackgroundTintList()"
          },
          "setBackgroundTintMode": {
            "!type": "fn(tintMode: +android.graphics.PorterDuff.Mode) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setBackgroundTintMode(android.graphics.PorterDuff.Mode)"
          },
          "post": {
            "!type": "fn(action: +java.lang.Runnable) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#post(java.lang.Runnable)"
          },
          "setZ": {
            "!type": "fn(z: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setZ(float)"
          },
          "setY": {
            "!type": "fn(y: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setY(float)"
          },
          "setX": {
            "!type": "fn(x: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setX(float)"
          },
          "getHeight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getHeight()"
          },
          "setIsRootNamespace": {
            "!type": "fn(isRoot: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setIsRootNamespace(boolean)"
          },
          "outputDirtyFlags": {
            "!type": "fn(indent: string, clear: bool, clearMask: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#outputDirtyFlags(java.lang.String, boolean, int)"
          },
          "forceLayout": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#forceLayout()"
          },
          "setBottom": {
            "!type": "fn(bottom: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setBottom(int)"
          },
          "setOnDragListener": {
            "!type": "fn(l: +android.view.View.OnDragListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnDragListener(android.view.View.OnDragListener)"
          },
          "findNamedViews": {
            "!type": "fn(namedElements: +java.util.Map) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#findNamedViews(java.util.Map)"
          },
          "computeScroll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#computeScroll()"
          },
          "addChildrenForAccessibility": {
            "!type": "fn(outChildren: +java.util.ArrayList) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#addChildrenForAccessibility(java.util.ArrayList)"
          },
          "dispatchStartTemporaryDetach": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchStartTemporaryDetach()"
          },
          "isScrollContainer": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isScrollContainer()"
          },
          "findViewById": {
            "!type": "fn(id: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/View.html#findViewById(int)"
          },
          "startAnimation": {
            "!type": "fn(animation: +android.view.animation.Animation) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#startAnimation(android.view.animation.Animation)"
          },
          "willNotDraw": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#willNotDraw()"
          },
          "getAccessibilityLiveRegion": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilityLiveRegion()"
          },
          "getAccessibilityDelegate": {
            "!type": "fn() -> +android.view.View.AccessibilityDelegate",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilityDelegate()"
          },
          "startNestedScroll": {
            "!type": "fn(axes: number) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#startNestedScroll(int)"
          },
          "setNestedScrollingEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setNestedScrollingEnabled(boolean)"
          },
          "isLayoutDirectionInherited": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isLayoutDirectionInherited()"
          },
          "setHapticFeedbackEnabled": {
            "!type": "fn(hapticFeedbackEnabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setHapticFeedbackEnabled(boolean)"
          },
          "getVerticalScrollbarWidth": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getVerticalScrollbarWidth()"
          },
          "setHorizontalScrollBarEnabled": {
            "!type": "fn(horizontalScrollBarEnabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setHorizontalScrollBarEnabled(boolean)"
          },
          "setAccessibilityTraversalAfter": {
            "!type": "fn(afterId: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setAccessibilityTraversalAfter(int)"
          },
          "draw": {
            "!type": "fn(canvas: +android.graphics.Canvas) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#draw(android.graphics.Canvas)"
          },
          "getParentForAccessibility": {
            "!type": "fn() -> +android.view.ViewParent",
            "!url": "http://developer.android.com/reference/android/view/View.html#getParentForAccessibility()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getDrawingTime": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/view/View.html#getDrawingTime()"
          },
          "setFilterTouchesWhenObscured": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setFilterTouchesWhenObscured(boolean)"
          },
          "isContextClickable": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isContextClickable()"
          },
          "requestRectangleOnScreen": {
            "!type": "fn(rectangle: +android.graphics.Rect) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#requestRectangleOnScreen(android.graphics.Rect)"
          }
        }
      },
      "AppOpsManager": {
        "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html",
        "PackageOps": {
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.PackageOps.html",
          "!type": "fn(packageName: string, uid: number, entries: +java.util.List)",
          "CREATOR": {
            "!type": "+android.os.Parcelable.Creator",
            "!url": "http://developer.android.com/reference/android/app/AppOpsManager.PackageOps.html#CREATOR"
          },
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "describeContents": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/app/AppOpsManager.PackageOps.html#describeContents()"
            },
            "getPackageName": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/app/AppOpsManager.PackageOps.html#getPackageName()"
            },
            "getUid": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/app/AppOpsManager.PackageOps.html#getUid()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "writeToParcel": {
              "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
              "!url": "http://developer.android.com/reference/android/app/AppOpsManager.PackageOps.html#writeToParcel(android.os.Parcel, int)"
            },
            "getOps": {
              "!type": "fn() -> +java.util.List",
              "!url": "http://developer.android.com/reference/android/app/AppOpsManager.PackageOps.html#getOps()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "OpEntry": {
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.OpEntry.html",
          "!type": "fn(op: number, mode: number, time: +java.lang.Long, rejectTime: +java.lang.Long, duration: number, proxyUid: number, proxyPackage: string)",
          "CREATOR": {
            "!type": "+android.os.Parcelable.Creator",
            "!url": "http://developer.android.com/reference/android/app/AppOpsManager.OpEntry.html#CREATOR"
          },
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "describeContents": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/app/AppOpsManager.OpEntry.html#describeContents()"
            },
            "getProxyPackageName": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/android/app/AppOpsManager.OpEntry.html#getProxyPackageName()"
            },
            "getTime": {
              "!type": "fn() -> +java.lang.Long",
              "!url": "http://developer.android.com/reference/android/app/AppOpsManager.OpEntry.html#getTime()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "getMode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/app/AppOpsManager.OpEntry.html#getMode()"
            },
            "getOp": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/app/AppOpsManager.OpEntry.html#getOp()"
            },
            "getRejectTime": {
              "!type": "fn() -> +java.lang.Long",
              "!url": "http://developer.android.com/reference/android/app/AppOpsManager.OpEntry.html#getRejectTime()"
            },
            "writeToParcel": {
              "!type": "fn(dest: +android.os.Parcel, flags: number) -> void",
              "!url": "http://developer.android.com/reference/android/app/AppOpsManager.OpEntry.html#writeToParcel(android.os.Parcel, int)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getDuration": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/app/AppOpsManager.OpEntry.html#getDuration()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "getProxyUid": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/app/AppOpsManager.OpEntry.html#getProxyUid()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "isRunning": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/app/AppOpsManager.OpEntry.html#isRunning()"
            }
          }
        },
        "OnOpChangedInternalListener": {
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.OnOpChangedInternalListener.html",
          "!type": "fn()",
          "prototype": {
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "onOpChanged": {
              "!type": "fn(op: string, packageName: string) -> void",
              "!url": "http://developer.android.com/reference/android/app/AppOpsManager.OnOpChangedInternalListener.html#onOpChanged(java.lang.String, java.lang.String)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            }
          }
        },
        "OPSTR_READ_CALENDAR": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OPSTR_READ_CALENDAR"
        },
        "OP_TAKE_AUDIO_FOCUS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_TAKE_AUDIO_FOCUS"
        },
        "OP_USE_SIP": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_USE_SIP"
        },
        "OP_PLAY_AUDIO": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_PLAY_AUDIO"
        },
        "OP_GPS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_GPS"
        },
        "OP_AUDIO_NOTIFICATION_VOLUME": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_AUDIO_NOTIFICATION_VOLUME"
        },
        "OP_NONE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_NONE"
        },
        "OP_READ_PHONE_STATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_READ_PHONE_STATE"
        },
        "OP_WRITE_CONTACTS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_WRITE_CONTACTS"
        },
        "OPSTR_ACTIVATE_VPN": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OPSTR_ACTIVATE_VPN"
        },
        "OP_NEIGHBORING_CELLS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_NEIGHBORING_CELLS"
        },
        "OP_ACTIVATE_VPN": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_ACTIVATE_VPN"
        },
        "OP_RECEIVE_EMERGECY_SMS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_RECEIVE_EMERGECY_SMS"
        },
        "OPSTR_USE_SIP": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OPSTR_USE_SIP"
        },
        "OP_WRITE_ICC_SMS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_WRITE_ICC_SMS"
        },
        "OP_WRITE_CALL_LOG": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_WRITE_CALL_LOG"
        },
        "OP_CALL_PHONE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_CALL_PHONE"
        },
        "OPSTR_WRITE_CONTACTS": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OPSTR_WRITE_CONTACTS"
        },
        "OP_WRITE_SETTINGS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_WRITE_SETTINGS"
        },
        "OP_ASSIST_STRUCTURE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_ASSIST_STRUCTURE"
        },
        "OPSTR_RECORD_AUDIO": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OPSTR_RECORD_AUDIO"
        },
        "MODE_ERRORED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#MODE_ERRORED"
        },
        "OPSTR_READ_SMS": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OPSTR_READ_SMS"
        },
        "OP_READ_SMS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_READ_SMS"
        },
        "OP_VIBRATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_VIBRATE"
        },
        "OP_RECORD_AUDIO": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_RECORD_AUDIO"
        },
        "OPSTR_WRITE_CALL_LOG": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OPSTR_WRITE_CALL_LOG"
        },
        "OP_MONITOR_LOCATION": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_MONITOR_LOCATION"
        },
        "OP_PROJECT_MEDIA": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_PROJECT_MEDIA"
        },
        "OPSTR_RECEIVE_SMS": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OPSTR_RECEIVE_SMS"
        },
        "OP_POST_NOTIFICATION": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_POST_NOTIFICATION"
        },
        "OPSTR_GET_USAGE_STATS": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OPSTR_GET_USAGE_STATS"
        },
        "OP_GET_USAGE_STATS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_GET_USAGE_STATS"
        },
        "OPSTR_WRITE_SETTINGS": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OPSTR_WRITE_SETTINGS"
        },
        "OP_WRITE_WALLPAPER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_WRITE_WALLPAPER"
        },
        "OPSTR_RECEIVE_WAP_PUSH": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OPSTR_RECEIVE_WAP_PUSH"
        },
        "OP_FINE_LOCATION": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_FINE_LOCATION"
        },
        "OP_AUDIO_VOICE_VOLUME": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_AUDIO_VOICE_VOLUME"
        },
        "OPSTR_READ_CELL_BROADCASTS": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OPSTR_READ_CELL_BROADCASTS"
        },
        "OPSTR_CAMERA": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OPSTR_CAMERA"
        },
        "OPSTR_FINE_LOCATION": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OPSTR_FINE_LOCATION"
        },
        "OP_ADD_VOICEMAIL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_ADD_VOICEMAIL"
        },
        "OPSTR_COARSE_LOCATION": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OPSTR_COARSE_LOCATION"
        },
        "OP_COARSE_LOCATION": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_COARSE_LOCATION"
        },
        "OP_READ_CONTACTS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_READ_CONTACTS"
        },
        "OP_WRITE_CALENDAR": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_WRITE_CALENDAR"
        },
        "OPSTR_READ_PHONE_STATE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OPSTR_READ_PHONE_STATE"
        },
        "OPSTR_RECEIVE_MMS": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OPSTR_RECEIVE_MMS"
        },
        "MODE_IGNORED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#MODE_IGNORED"
        },
        "OPSTR_ADD_VOICEMAIL": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OPSTR_ADD_VOICEMAIL"
        },
        "OP_MOCK_LOCATION": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_MOCK_LOCATION"
        },
        "OP_ASSIST_SCREENSHOT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_ASSIST_SCREENSHOT"
        },
        "OP_WAKE_LOCK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_WAKE_LOCK"
        },
        "OPSTR_READ_CONTACTS": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OPSTR_READ_CONTACTS"
        },
        "OP_RECEIVE_SMS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_RECEIVE_SMS"
        },
        "OP_READ_EXTERNAL_STORAGE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_READ_EXTERNAL_STORAGE"
        },
        "OP_AUDIO_MEDIA_VOLUME": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_AUDIO_MEDIA_VOLUME"
        },
        "OP_WRITE_EXTERNAL_STORAGE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_WRITE_EXTERNAL_STORAGE"
        },
        "OP_READ_CALL_LOG": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_READ_CALL_LOG"
        },
        "OP_AUDIO_MASTER_VOLUME": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_AUDIO_MASTER_VOLUME"
        },
        "OP_WIFI_SCAN": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_WIFI_SCAN"
        },
        "OPSTR_MOCK_LOCATION": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OPSTR_MOCK_LOCATION"
        },
        "OPSTR_WRITE_CALENDAR": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OPSTR_WRITE_CALENDAR"
        },
        "OP_AUDIO_BLUETOOTH_VOLUME": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_AUDIO_BLUETOOTH_VOLUME"
        },
        "OP_WRITE_CLIPBOARD": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_WRITE_CLIPBOARD"
        },
        "OP_SYSTEM_ALERT_WINDOW": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_SYSTEM_ALERT_WINDOW"
        },
        "OPSTR_BODY_SENSORS": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OPSTR_BODY_SENSORS"
        },
        "OPSTR_READ_CALL_LOG": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OPSTR_READ_CALL_LOG"
        },
        "OPSTR_READ_EXTERNAL_STORAGE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OPSTR_READ_EXTERNAL_STORAGE"
        },
        "OP_PROCESS_OUTGOING_CALLS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_PROCESS_OUTGOING_CALLS"
        },
        "OPSTR_SYSTEM_ALERT_WINDOW": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OPSTR_SYSTEM_ALERT_WINDOW"
        },
        "OP_BODY_SENSORS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_BODY_SENSORS"
        },
        "OP_READ_ICC_SMS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_READ_ICC_SMS"
        },
        "OP_AUDIO_ALARM_VOLUME": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_AUDIO_ALARM_VOLUME"
        },
        "OPSTR_MONITOR_HIGH_POWER_LOCATION": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OPSTR_MONITOR_HIGH_POWER_LOCATION"
        },
        "OP_TOAST_WINDOW": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_TOAST_WINDOW"
        },
        "OP_AUDIO_RING_VOLUME": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_AUDIO_RING_VOLUME"
        },
        "OPSTR_SEND_SMS": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OPSTR_SEND_SMS"
        },
        "OP_MONITOR_HIGH_POWER_LOCATION": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_MONITOR_HIGH_POWER_LOCATION"
        },
        "OP_SEND_SMS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_SEND_SMS"
        },
        "OP_RECEIVE_MMS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_RECEIVE_MMS"
        },
        "OP_READ_CLIPBOARD": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_READ_CLIPBOARD"
        },
        "OPSTR_CALL_PHONE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OPSTR_CALL_PHONE"
        },
        "OP_RECEIVE_WAP_PUSH": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_RECEIVE_WAP_PUSH"
        },
        "OP_WRITE_SMS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_WRITE_SMS"
        },
        "OP_CAMERA": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_CAMERA"
        },
        "OP_READ_CELL_BROADCASTS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_READ_CELL_BROADCASTS"
        },
        "OPSTR_MONITOR_LOCATION": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OPSTR_MONITOR_LOCATION"
        },
        "OPSTR_USE_FINGERPRINT": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OPSTR_USE_FINGERPRINT"
        },
        "OP_USE_FINGERPRINT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_USE_FINGERPRINT"
        },
        "OP_ACCESS_NOTIFICATIONS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_ACCESS_NOTIFICATIONS"
        },
        "OP_TURN_SCREEN_ON": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_TURN_SCREEN_ON"
        },
        "MODE_DEFAULT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#MODE_DEFAULT"
        },
        "MODE_ALLOWED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#MODE_ALLOWED"
        },
        "OP_READ_CALENDAR": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_READ_CALENDAR"
        },
        "OP_TAKE_MEDIA_BUTTONS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_TAKE_MEDIA_BUTTONS"
        },
        "OPSTR_WRITE_EXTERNAL_STORAGE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OPSTR_WRITE_EXTERNAL_STORAGE"
        },
        "_NUM_OP": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#_NUM_OP"
        },
        "OP_MUTE_MICROPHONE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#OP_MUTE_MICROPHONE"
        },
        "strOpToOp": {
          "!type": "fn(op: string) -> number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#strOpToOp(java.lang.String)"
        },
        "permissionToOpCode": {
          "!type": "fn(permission: string) -> number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#permissionToOpCode(java.lang.String)"
        },
        "opToSwitch": {
          "!type": "fn(op: number) -> number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#opToSwitch(int)"
        },
        "opToRestriction": {
          "!type": "fn(op: number) -> string",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#opToRestriction(int)"
        },
        "opToName": {
          "!type": "fn(op: number) -> string",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#opToName(int)"
        },
        "strDebugOpToOp": {
          "!type": "fn(op: string) -> number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#strDebugOpToOp(java.lang.String)"
        },
        "permissionToOp": {
          "!type": "fn(permission: string) -> string",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#permissionToOp(java.lang.String)"
        },
        "opAllowsReset": {
          "!type": "fn(op: number) -> bool",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#opAllowsReset(int)"
        },
        "opToDefaultMode": {
          "!type": "fn(op: number) -> number",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#opToDefaultMode(int)"
        },
        "opToPermission": {
          "!type": "fn(op: number) -> string",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#opToPermission(int)"
        },
        "getToken": {
          "!type": "fn(service: IAppOpsService) -> +android.os.IBinder",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#getToken(IAppOpsService)"
        },
        "opAllowSystemBypassRestriction": {
          "!type": "fn(op: number) -> bool",
          "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#opAllowSystemBypassRestriction(int)"
        },
        "prototype": {
          "getPackagesForOps": {
            "!type": "fn(ops: +java.newArray) -> +java.util.List",
            "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#getPackagesForOps(int[])"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "checkPackage": {
            "!type": "fn(uid: number, packageName: string) -> void",
            "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#checkPackage(int, java.lang.String)"
          },
          "noteOpNoThrow": {
            "!type": "fn(op: string, uid: number, packageName: string) -> number",
            "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#noteOpNoThrow(java.lang.String, int, java.lang.String)"
          },
          "startWatchingMode": {
            "!type": "fn(op: string, packageName: string, callback: +android.app.AppOpsManager.OnOpChangedListener) -> void",
            "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#startWatchingMode(java.lang.String, java.lang.String, android.app.AppOpsManager.OnOpChangedListener)"
          },
          "startOp": {
            "!type": "fn(op: string, uid: number, packageName: string) -> number",
            "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#startOp(java.lang.String, int, java.lang.String)"
          },
          "checkAudioOp": {
            "!type": "fn(op: number, stream: number, uid: number, packageName: string) -> number",
            "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#checkAudioOp(int, int, int, java.lang.String)"
          },
          "noteProxyOp": {
            "!type": "fn(op: string, proxiedPackageName: string) -> number",
            "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#noteProxyOp(java.lang.String, java.lang.String)"
          },
          "startOpNoThrow": {
            "!type": "fn(op: string, uid: number, packageName: string) -> number",
            "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#startOpNoThrow(java.lang.String, int, java.lang.String)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "checkOpNoThrow": {
            "!type": "fn(op: string, uid: number, packageName: string) -> number",
            "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#checkOpNoThrow(java.lang.String, int, java.lang.String)"
          },
          "checkOp": {
            "!type": "fn(op: string, uid: number, packageName: string) -> number",
            "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#checkOp(java.lang.String, int, java.lang.String)"
          },
          "getOpsForPackage": {
            "!type": "fn(uid: number, packageName: string, ops: +java.newArray) -> +java.util.List",
            "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#getOpsForPackage(int, java.lang.String, int[])"
          },
          "finishOp": {
            "!type": "fn(op: string, uid: number, packageName: string) -> void",
            "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#finishOp(java.lang.String, int, java.lang.String)"
          },
          "checkAudioOpNoThrow": {
            "!type": "fn(op: number, stream: number, uid: number, packageName: string) -> number",
            "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#checkAudioOpNoThrow(int, int, int, java.lang.String)"
          },
          "noteOp": {
            "!type": "fn(op: string, uid: number, packageName: string) -> number",
            "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#noteOp(java.lang.String, int, java.lang.String)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "noteProxyOpNoThrow": {
            "!type": "fn(op: string, proxiedPackageName: string) -> number",
            "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#noteProxyOpNoThrow(java.lang.String, java.lang.String)"
          },
          "resetAllModes": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#resetAllModes()"
          },
          "setMode": {
            "!type": "fn(code: number, uid: number, packageName: string, mode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#setMode(int, int, java.lang.String, int)"
          },
          "stopWatchingMode": {
            "!type": "fn(callback: +android.app.AppOpsManager.OnOpChangedListener) -> void",
            "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#stopWatchingMode(android.app.AppOpsManager.OnOpChangedListener)"
          },
          "setUidMode": {
            "!type": "fn(code: number, uid: number, mode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#setUidMode(int, int, int)"
          },
          "setRestriction": {
            "!type": "fn(code: number, usage: number, mode: number, exceptionPackages: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/AppOpsManager.html#setRestriction(int, int, int, java.lang.String[])"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "RemoteInput": {
        "!url": "http://developer.android.com/reference/android/app/RemoteInput.html",
        "Builder": {
          "!url": "http://developer.android.com/reference/android/app/RemoteInput.Builder.html",
          "!type": "fn(resultKey: string)",
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "setLabel": {
              "!type": "fn(label: +java.lang.CharSequence) -> +android.app.RemoteInput.Builder",
              "!url": "http://developer.android.com/reference/android/app/RemoteInput.Builder.html#setLabel(java.lang.CharSequence)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "setChoices": {
              "!type": "fn(choices: +java.newArray) -> +android.app.RemoteInput.Builder",
              "!url": "http://developer.android.com/reference/android/app/RemoteInput.Builder.html#setChoices(java.lang.CharSequence[])"
            },
            "addExtras": {
              "!type": "fn(extras: +android.os.Bundle) -> +android.app.RemoteInput.Builder",
              "!url": "http://developer.android.com/reference/android/app/RemoteInput.Builder.html#addExtras(android.os.Bundle)"
            },
            "setAllowFreeFormInput": {
              "!type": "fn(allowFreeFormInput: bool) -> +android.app.RemoteInput.Builder",
              "!url": "http://developer.android.com/reference/android/app/RemoteInput.Builder.html#setAllowFreeFormInput(boolean)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "build": {
              "!type": "fn() -> +android.app.RemoteInput",
              "!url": "http://developer.android.com/reference/android/app/RemoteInput.Builder.html#build()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "getExtras": {
              "!type": "fn() -> +android.os.Bundle",
              "!url": "http://developer.android.com/reference/android/app/RemoteInput.Builder.html#getExtras()"
            }
          }
        },
        "CREATOR": {
          "!type": "+android.os.Parcelable.Creator",
          "!url": "http://developer.android.com/reference/android/app/RemoteInput.html#CREATOR"
        },
        "EXTRA_RESULTS_DATA": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/RemoteInput.html#EXTRA_RESULTS_DATA"
        },
        "RESULTS_CLIP_LABEL": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/RemoteInput.html#RESULTS_CLIP_LABEL"
        },
        "getResultsFromIntent": {
          "!type": "fn(intent: +android.content.Intent) -> +android.os.Bundle",
          "!url": "http://developer.android.com/reference/android/app/RemoteInput.html#getResultsFromIntent(android.content.Intent)"
        },
        "addResultsToIntent": {
          "!type": "fn(remoteInputs: +java.newArray, intent: +android.content.Intent, results: +android.os.Bundle) -> void",
          "!url": "http://developer.android.com/reference/android/app/RemoteInput.html#addResultsToIntent(android.app.RemoteInput[], android.content.Intent, android.os.Bundle)"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "describeContents": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/RemoteInput.html#describeContents()"
          },
          "getLabel": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/app/RemoteInput.html#getLabel()"
          },
          "getResultKey": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/RemoteInput.html#getResultKey()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "writeToParcel": {
            "!type": "fn(out: +android.os.Parcel, flags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/RemoteInput.html#writeToParcel(android.os.Parcel, int)"
          },
          "getChoices": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/app/RemoteInput.html#getChoices()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getExtras": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/app/RemoteInput.html#getExtras()"
          },
          "getAllowFreeFormInput": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/RemoteInput.html#getAllowFreeFormInput()"
          }
        }
      },
      "ActivityView": {
        "!url": "http://developer.android.com/reference/android/app/ActivityView.html",
        "!type": "fn(context: +android.content.Context)",
        "ActivityViewCallback": {
          "!url": "http://developer.android.com/reference/android/app/ActivityView.ActivityViewCallback.html",
          "!type": "fn()",
          "prototype": {
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "onAllActivitiesComplete": {
              "!type": "fn(view: +android.app.ActivityView) -> void",
              "!url": "http://developer.android.com/reference/android/app/ActivityView.ActivityViewCallback.html#onAllActivitiesComplete(android.app.ActivityView)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "onSurfaceAvailable": {
              "!type": "fn(view: +android.app.ActivityView) -> void",
              "!url": "http://developer.android.com/reference/android/app/ActivityView.ActivityViewCallback.html#onSurfaceAvailable(android.app.ActivityView)"
            },
            "onSurfaceDestroyed": {
              "!type": "fn(view: +android.app.ActivityView) -> void",
              "!url": "http://developer.android.com/reference/android/app/ActivityView.ActivityViewCallback.html#onSurfaceDestroyed(android.app.ActivityView)"
            }
          }
        },
        "OVER_SCROLL_ALWAYS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#OVER_SCROLL_ALWAYS"
        },
        "ACCESSIBILITY_LIVE_REGION_ASSERTIVE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#ACCESSIBILITY_LIVE_REGION_ASSERTIVE"
        },
        "LAYOUT_DIRECTION_INHERIT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#LAYOUT_DIRECTION_INHERIT"
        },
        "ACCESSIBILITY_LIVE_REGION_POLITE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#ACCESSIBILITY_LIVE_REGION_POLITE"
        },
        "SCROLL_INDICATOR_TOP": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_INDICATOR_TOP"
        },
        "TEXT_DIRECTION_RTL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_RTL"
        },
        "PUBLIC_STATUS_BAR_VISIBILITY_MASK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#PUBLIC_STATUS_BAR_VISIBILITY_MASK"
        },
        "LAYOUT_MODE_DEFAULT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#LAYOUT_MODE_DEFAULT"
        },
        "ROTATION_Y": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#ROTATION_Y"
        },
        "ROTATION_X": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#ROTATION_X"
        },
        "STATUS_BAR_HIDDEN": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_HIDDEN"
        },
        "SCROLL_AXIS_NONE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_AXIS_NONE"
        },
        "TEXT_ALIGNMENT_VIEW_START": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_ALIGNMENT_VIEW_START"
        },
        "TRANSLATION_Z": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#TRANSLATION_Z"
        },
        "IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS"
        },
        "FOCUS_BLOCK_DESCENDANTS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#FOCUS_BLOCK_DESCENDANTS"
        },
        "TRANSLATION_Y": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#TRANSLATION_Y"
        },
        "INVISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#INVISIBLE"
        },
        "TRANSLATION_X": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#TRANSLATION_X"
        },
        "SCROLL_INDICATOR_LEFT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_INDICATOR_LEFT"
        },
        "NO_ID": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#NO_ID"
        },
        "LAYOUT_DIRECTION_RTL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#LAYOUT_DIRECTION_RTL"
        },
        "SOUND_EFFECTS_ENABLED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SOUND_EFFECTS_ENABLED"
        },
        "TEXT_DIRECTION_LTR": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_LTR"
        },
        "ALPHA": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#ALPHA"
        },
        "LAYER_TYPE_HARDWARE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#LAYER_TYPE_HARDWARE"
        },
        "TEXT_DIRECTION_LOCALE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_LOCALE"
        },
        "SYSTEM_UI_FLAG_LAYOUT_STABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_LAYOUT_STABLE"
        },
        "DRAWING_CACHE_QUALITY_HIGH": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#DRAWING_CACHE_QUALITY_HIGH"
        },
        "FOCUS_LEFT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FOCUS_LEFT"
        },
        "SYSTEM_UI_FLAG_LIGHT_STATUS_BAR": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_LIGHT_STATUS_BAR"
        },
        "SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN"
        },
        "LAYER_TYPE_NONE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#LAYER_TYPE_NONE"
        },
        "TEXT_ALIGNMENT_INHERIT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_ALIGNMENT_INHERIT"
        },
        "STATUS_BAR_DISABLE_BACK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_BACK"
        },
        "PERSISTENT_ALL_CACHES": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#PERSISTENT_ALL_CACHES"
        },
        "FOCUSABLES_ALL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FOCUSABLES_ALL"
        },
        "SCROLL_AXIS_VERTICAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_AXIS_VERTICAL"
        },
        "STATUS_BAR_TRANSLUCENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_TRANSLUCENT"
        },
        "FIND_VIEWS_WITH_CONTENT_DESCRIPTION": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FIND_VIEWS_WITH_CONTENT_DESCRIPTION"
        },
        "DEBUG_DRAW": {
          "!type": "bool",
          "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#DEBUG_DRAW"
        },
        "SCALE_Y": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCALE_Y"
        },
        "SCALE_X": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCALE_X"
        },
        "SCROLLBAR_POSITION_LEFT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLLBAR_POSITION_LEFT"
        },
        "STATUS_BAR_UNHIDE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_UNHIDE"
        },
        "LAYOUT_MODE_OPTICAL_BOUNDS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#LAYOUT_MODE_OPTICAL_BOUNDS"
        },
        "LAYOUT_DIRECTION_LTR": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#LAYOUT_DIRECTION_LTR"
        },
        "NAVIGATION_BAR_TRANSIENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#NAVIGATION_BAR_TRANSIENT"
        },
        "GONE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#GONE"
        },
        "SCROLLBARS_INSIDE_INSET": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLLBARS_INSIDE_INSET"
        },
        "FOCUS_BACKWARD": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FOCUS_BACKWARD"
        },
        "FOCUS_AFTER_DESCENDANTS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#FOCUS_AFTER_DESCENDANTS"
        },
        "STATUS_BAR_DISABLE_SEARCH": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_SEARCH"
        },
        "STATUS_BAR_DISABLE_HOME": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_HOME"
        },
        "FOCUSABLES_TOUCH_MODE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FOCUSABLES_TOUCH_MODE"
        },
        "SYSTEM_UI_LAYOUT_FLAGS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_LAYOUT_FLAGS"
        },
        "STATUS_BAR_DISABLE_NOTIFICATION_ALERTS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_NOTIFICATION_ALERTS"
        },
        "HAPTIC_FEEDBACK_ENABLED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#HAPTIC_FEEDBACK_ENABLED"
        },
        "STATUS_BAR_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_VISIBLE"
        },
        "FOCUS_FORWARD": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FOCUS_FORWARD"
        },
        "LAYOUT_MODE_CLIP_BOUNDS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#LAYOUT_MODE_CLIP_BOUNDS"
        },
        "DRAG_FLAG_GLOBAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#DRAG_FLAG_GLOBAL"
        },
        "SYSTEM_UI_FLAG_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_VISIBLE"
        },
        "ACCESSIBILITY_CURSOR_POSITION_UNDEFINED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#ACCESSIBILITY_CURSOR_POSITION_UNDEFINED"
        },
        "SYSTEM_UI_FLAG_IMMERSIVE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_IMMERSIVE"
        },
        "STATUS_BAR_TRANSIENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_TRANSIENT"
        },
        "MEASURED_STATE_MASK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#MEASURED_STATE_MASK"
        },
        "ACCESSIBILITY_LIVE_REGION_NONE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#ACCESSIBILITY_LIVE_REGION_NONE"
        },
        "SCROLLBARS_OUTSIDE_OVERLAY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLLBARS_OUTSIDE_OVERLAY"
        },
        "TEXT_ALIGNMENT_GRAVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_ALIGNMENT_GRAVITY"
        },
        "DRAWING_CACHE_QUALITY_AUTO": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#DRAWING_CACHE_QUALITY_AUTO"
        },
        "TEXT_ALIGNMENT_VIEW_END": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_ALIGNMENT_VIEW_END"
        },
        "Z": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#Z"
        },
        "Y": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#Y"
        },
        "X": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#X"
        },
        "SCROLL_INDICATOR_START": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_INDICATOR_START"
        },
        "VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#VISIBLE"
        },
        "TEXT_ALIGNMENT_TEXT_START": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_ALIGNMENT_TEXT_START"
        },
        "SCROLL_AXIS_HORIZONTAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_AXIS_HORIZONTAL"
        },
        "IMPORTANT_FOR_ACCESSIBILITY_NO": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#IMPORTANT_FOR_ACCESSIBILITY_NO"
        },
        "STATUS_BAR_DISABLE_NOTIFICATION_TICKER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_NOTIFICATION_TICKER"
        },
        "OVER_SCROLL_IF_CONTENT_SCROLLS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#OVER_SCROLL_IF_CONTENT_SCROLLS"
        },
        "FOCUS_RIGHT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FOCUS_RIGHT"
        },
        "OVER_SCROLL_NEVER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#OVER_SCROLL_NEVER"
        },
        "TEXT_DIRECTION_FIRST_STRONG_RTL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_FIRST_STRONG_RTL"
        },
        "SCROLL_INDICATOR_BOTTOM": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_INDICATOR_BOTTOM"
        },
        "NAVIGATION_BAR_TRANSLUCENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#NAVIGATION_BAR_TRANSLUCENT"
        },
        "SYSTEM_UI_TRANSPARENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_TRANSPARENT"
        },
        "SCREEN_STATE_ON": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCREEN_STATE_ON"
        },
        "PERSISTENT_ANIMATION_CACHE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#PERSISTENT_ANIMATION_CACHE"
        },
        "TEXT_DIRECTION_INHERIT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_INHERIT"
        },
        "IMPORTANT_FOR_ACCESSIBILITY_YES": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#IMPORTANT_FOR_ACCESSIBILITY_YES"
        },
        "SCROLLBARS_INSIDE_OVERLAY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLLBARS_INSIDE_OVERLAY"
        },
        "ROTATION": {
          "!type": "+android.util.Property",
          "!url": "http://developer.android.com/reference/android/view/View.html#ROTATION"
        },
        "FIND_VIEWS_WITH_ACCESSIBILITY_NODE_PROVIDERS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FIND_VIEWS_WITH_ACCESSIBILITY_NODE_PROVIDERS"
        },
        "SCROLL_INDICATOR_END": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_INDICATOR_END"
        },
        "NAVIGATION_BAR_UNHIDE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#NAVIGATION_BAR_UNHIDE"
        },
        "MEASURED_HEIGHT_STATE_SHIFT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#MEASURED_HEIGHT_STATE_SHIFT"
        },
        "TEXT_DIRECTION_FIRST_STRONG_LTR": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_FIRST_STRONG_LTR"
        },
        "KEEP_SCREEN_ON": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#KEEP_SCREEN_ON"
        },
        "TEXT_DIRECTION_FIRST_STRONG": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_FIRST_STRONG"
        },
        "STATUS_BAR_DISABLE_CLOCK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_CLOCK"
        },
        "STATUS_BAR_DISABLE_EXPAND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_EXPAND"
        },
        "FOCUS_BEFORE_DESCENDANTS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#FOCUS_BEFORE_DESCENDANTS"
        },
        "SYSTEM_UI_FLAG_HIDE_NAVIGATION": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_HIDE_NAVIGATION"
        },
        "SCREEN_STATE_OFF": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCREEN_STATE_OFF"
        },
        "TEXT_ALIGNMENT_TEXT_END": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_ALIGNMENT_TEXT_END"
        },
        "SYSTEM_UI_FLAG_FULLSCREEN": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_FULLSCREEN"
        },
        "FIND_VIEWS_WITH_TEXT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FIND_VIEWS_WITH_TEXT"
        },
        "STATUS_BAR_DISABLE_NOTIFICATION_ICONS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_NOTIFICATION_ICONS"
        },
        "PERSISTENT_NO_CACHE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#PERSISTENT_NO_CACHE"
        },
        "STATUS_BAR_DISABLE_RECENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_RECENT"
        },
        "STATUS_BAR_DISABLE_SYSTEM_INFO": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#STATUS_BAR_DISABLE_SYSTEM_INFO"
        },
        "DRAWING_CACHE_QUALITY_LOW": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#DRAWING_CACHE_QUALITY_LOW"
        },
        "PERSISTENT_SCROLLING_CACHE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#PERSISTENT_SCROLLING_CACHE"
        },
        "SCROLL_INDICATOR_RIGHT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLL_INDICATOR_RIGHT"
        },
        "MEASURED_STATE_TOO_SMALL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#MEASURED_STATE_TOO_SMALL"
        },
        "TEXT_ALIGNMENT_CENTER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_ALIGNMENT_CENTER"
        },
        "SCROLLBARS_OUTSIDE_INSET": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLLBARS_OUTSIDE_INSET"
        },
        "TEXT_DIRECTION_ANY_RTL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#TEXT_DIRECTION_ANY_RTL"
        },
        "LAYER_TYPE_SOFTWARE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#LAYER_TYPE_SOFTWARE"
        },
        "IMPORTANT_FOR_ACCESSIBILITY_AUTO": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#IMPORTANT_FOR_ACCESSIBILITY_AUTO"
        },
        "MEASURED_SIZE_MASK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#MEASURED_SIZE_MASK"
        },
        "mDebugViewAttributes": {
          "!type": "bool",
          "!url": "http://developer.android.com/reference/android/view/View.html#mDebugViewAttributes"
        },
        "SCROLLBAR_POSITION_RIGHT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLLBAR_POSITION_RIGHT"
        },
        "LAYOUT_DIRECTION_LOCALE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#LAYOUT_DIRECTION_LOCALE"
        },
        "LAYOUT_DIRECTION_UNDEFINED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#LAYOUT_DIRECTION_UNDEFINED"
        },
        "SCROLLBAR_POSITION_DEFAULT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SCROLLBAR_POSITION_DEFAULT"
        },
        "RECENT_APPS_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#RECENT_APPS_VISIBLE"
        },
        "DEBUG_LAYOUT_PROPERTY": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/view/View.html#DEBUG_LAYOUT_PROPERTY"
        },
        "SYSTEM_UI_CLEARABLE_FLAGS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_CLEARABLE_FLAGS"
        },
        "FOCUS_UP": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FOCUS_UP"
        },
        "SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION"
        },
        "SYSTEM_UI_FLAG_LOW_PROFILE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_LOW_PROFILE"
        },
        "SYSTEM_UI_FLAG_IMMERSIVE_STICKY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#SYSTEM_UI_FLAG_IMMERSIVE_STICKY"
        },
        "FOCUS_DOWN": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/view/View.html#FOCUS_DOWN"
        },
        "getDefaultSize": {
          "!type": "fn(size: number, measureSpec: number) -> number",
          "!url": "http://developer.android.com/reference/android/view/View.html#getDefaultSize(int, int)"
        },
        "combineMeasuredStates": {
          "!type": "fn(curState: number, newState: number) -> number",
          "!url": "http://developer.android.com/reference/android/view/View.html#combineMeasuredStates(int, int)"
        },
        "getChildMeasureSpec": {
          "!type": "fn(spec: number, padding: number, childDimension: number) -> number",
          "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getChildMeasureSpec(int, int, int)"
        },
        "resolveSizeAndState": {
          "!type": "fn(size: number, measureSpec: number, childMeasuredState: number) -> number",
          "!url": "http://developer.android.com/reference/android/view/View.html#resolveSizeAndState(int, int, int)"
        },
        "resolveSize": {
          "!type": "fn(size: number, measureSpec: number) -> number",
          "!url": "http://developer.android.com/reference/android/view/View.html#resolveSize(int, int)"
        },
        "generateViewId": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/view/View.html#generateViewId()"
        },
        "isLayoutModeOptical": {
          "!type": "fn(o: +java.lang.Object) -> bool",
          "!url": "http://developer.android.com/reference/android/view/View.html#isLayoutModeOptical(java.lang.Object)"
        },
        "inflate": {
          "!type": "fn(context: +android.content.Context, resource: number, root: +android.view.ViewGroup) -> +android.view.View",
          "!url": "http://developer.android.com/reference/android/view/View.html#inflate(android.content.Context, int, android.view.ViewGroup)"
        },
        "prototype": {
          "setFitsSystemWindows": {
            "!type": "fn(fitSystemWindows: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setFitsSystemWindows(boolean)"
          },
          "dispatchSystemUiVisibilityChanged": {
            "!type": "fn(visible: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchSystemUiVisibilityChanged(int)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "isScrollbarFadingEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isScrollbarFadingEnabled()"
          },
          "setPressed": {
            "!type": "fn(pressed: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setPressed(boolean)"
          },
          "startAnimation": {
            "!type": "fn(animation: +android.view.animation.Animation) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#startAnimation(android.view.animation.Animation)"
          },
          "getDrawingTime": {
            "!type": "fn() -> +java.lang.Long",
            "!url": "http://developer.android.com/reference/android/view/View.html#getDrawingTime()"
          },
          "setHorizontalScrollBarEnabled": {
            "!type": "fn(horizontalScrollBarEnabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setHorizontalScrollBarEnabled(boolean)"
          },
          "setTagInternal": {
            "!type": "fn(key: number, tag: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTagInternal(int, java.lang.Object)"
          },
          "removeCallbacks": {
            "!type": "fn(action: +java.lang.Runnable) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#removeCallbacks(java.lang.Runnable)"
          },
          "isShown": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isShown()"
          },
          "onTouchEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/ActivityView.html#onTouchEvent(android.view.MotionEvent)"
          },
          "cancelPendingInputEvents": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#cancelPendingInputEvents()"
          },
          "setTransitionVisibility": {
            "!type": "fn(visibility: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTransitionVisibility(int)"
          },
          "getClipChildren": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getClipChildren()"
          },
          "setEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setEnabled(boolean)"
          },
          "setVerticalScrollBarEnabled": {
            "!type": "fn(verticalScrollBarEnabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setVerticalScrollBarEnabled(boolean)"
          },
          "getRawLayoutDirection": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getRawLayoutDirection()"
          },
          "setRight": {
            "!type": "fn(right: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setRight(int)"
          },
          "getAccessibilityClassName": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getAccessibilityClassName()"
          },
          "getNextFocusDownId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getNextFocusDownId()"
          },
          "onRequestSendAccessibilityEventInternal": {
            "!type": "fn(child: +android.view.View, event: +android.view.accessibility.AccessibilityEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onRequestSendAccessibilityEventInternal(android.view.View, android.view.accessibility.AccessibilityEvent)"
          },
          "getTransitionName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTransitionName()"
          },
          "getTop": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTop()"
          },
          "dispatchNestedFling": {
            "!type": "fn(velocityX: +java.lang.Float, velocityY: +java.lang.Float, consumed: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchNestedFling(float, float, boolean)"
          },
          "onKeyUp": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onKeyUp(int, android.view.KeyEvent)"
          },
          "setScrollContainer": {
            "!type": "fn(isScrollContainer: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScrollContainer(boolean)"
          },
          "getVisibility": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getVisibility()"
          },
          "requestFitSystemWindows": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#requestFitSystemWindows()"
          },
          "setAccessibilitySelection": {
            "!type": "fn(start: number, end: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setAccessibilitySelection(int, int)"
          },
          "onAttachedToWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/ActivityView.html#onAttachedToWindow()"
          },
          "getLeft": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getLeft()"
          },
          "dispatchWindowFocusChanged": {
            "!type": "fn(hasFocus: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchWindowFocusChanged(boolean)"
          },
          "findViewByPredicateInsideOut": {
            "!type": "fn(start: +android.view.View, predicate: +com.android.internal.util.Predicate) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/View.html#findViewByPredicateInsideOut(android.view.View, com.android.internal.util.Predicate)"
          },
          "getForeground": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/view/View.html#getForeground()"
          },
          "requestChildRectangleOnScreen": {
            "!type": "fn(child: +android.view.View, rectangle: +android.graphics.Rect, immediate: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#requestChildRectangleOnScreen(android.view.View, android.graphics.Rect, boolean)"
          },
          "performAccessibilityActionInternal": {
            "!type": "fn(action: number, arguments: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#performAccessibilityActionInternal(int, android.os.Bundle)"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/view/View.html#getContext()"
          },
          "getClipToOutline": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#getClipToOutline()"
          },
          "isSelected": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isSelected()"
          },
          "scrollBy": {
            "!type": "fn(x: number, y: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#scrollBy(int, int)"
          },
          "hasNestedScrollingParent": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#hasNestedScrollingParent()"
          },
          "getGlobalVisibleRect": {
            "!type": "fn(r: +android.graphics.Rect, globalOffset: +android.graphics.Point) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#getGlobalVisibleRect(android.graphics.Rect, android.graphics.Point)"
          },
          "setKeepScreenOn": {
            "!type": "fn(keepScreenOn: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setKeepScreenOn(boolean)"
          },
          "setTranslationZ": {
            "!type": "fn(translationZ: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTranslationZ(float)"
          },
          "setTranslationY": {
            "!type": "fn(translationY: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTranslationY(float)"
          },
          "setTranslationX": {
            "!type": "fn(translationX: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTranslationX(float)"
          },
          "setDuplicateParentStateEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setDuplicateParentStateEnabled(boolean)"
          },
          "onFilterTouchEventForSecurity": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onFilterTouchEventForSecurity(android.view.MotionEvent)"
          },
          "setTop": {
            "!type": "fn(top: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTop(int)"
          },
          "getHardwareRenderer": {
            "!type": "fn() -> +android.view.HardwareRenderer",
            "!url": "http://developer.android.com/reference/android/view/View.html#getHardwareRenderer()"
          },
          "onInterceptHoverEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onInterceptHoverEvent(android.view.MotionEvent)"
          },
          "getLocationInWindow": {
            "!type": "fn(location: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#getLocationInWindow(int[])"
          },
          "pointInView": {
            "!type": "fn(localX: +java.lang.Float, localY: +java.lang.Float, slop: +java.lang.Float) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#pointInView(float, float, float)"
          },
          "setAlpha": {
            "!type": "fn(alpha: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setAlpha(float)"
          },
          "setAnimationMatrix": {
            "!type": "fn(matrix: +android.graphics.Matrix) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setAnimationMatrix(android.graphics.Matrix)"
          },
          "getApplicationWindowToken": {
            "!type": "fn() -> +android.os.IBinder",
            "!url": "http://developer.android.com/reference/android/view/View.html#getApplicationWindowToken()"
          },
          "resetRtlProperties": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#resetRtlProperties()"
          },
          "getMeasuredHeightAndState": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getMeasuredHeightAndState()"
          },
          "getDrawingCacheBackgroundColor": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getDrawingCacheBackgroundColor()"
          },
          "resolveRtlPropertiesIfNeeded": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resolveRtlPropertiesIfNeeded()"
          },
          "transformMatrixToGlobal": {
            "!type": "fn(m: +android.graphics.Matrix) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#transformMatrixToGlobal(android.graphics.Matrix)"
          },
          "setClickable": {
            "!type": "fn(clickable: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setClickable(boolean)"
          },
          "offsetLeftAndRight": {
            "!type": "fn(offset: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#offsetLeftAndRight(int)"
          },
          "getFilterTouchesWhenObscured": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#getFilterTouchesWhenObscured()"
          },
          "performAccessibilityAction": {
            "!type": "fn(action: number, arguments: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#performAccessibilityAction(int, android.os.Bundle)"
          },
          "isHorizontalFadingEdgeEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isHorizontalFadingEdgeEnabled()"
          },
          "setBackgroundTintMode": {
            "!type": "fn(tintMode: +android.graphics.PorterDuff.Mode) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setBackgroundTintMode(android.graphics.PorterDuff.Mode)"
          },
          "createContextMenu": {
            "!type": "fn(menu: +android.view.ContextMenu) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#createContextMenu(android.view.ContextMenu)"
          },
          "getCameraDistance": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getCameraDistance()"
          },
          "isPressed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isPressed()"
          },
          "getScrollBarStyle": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getScrollBarStyle()"
          },
          "saveHierarchyState": {
            "!type": "fn(container: +android.util.SparseArray) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#saveHierarchyState(android.util.SparseArray)"
          },
          "setSoundEffectsEnabled": {
            "!type": "fn(soundEffectsEnabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setSoundEffectsEnabled(boolean)"
          },
          "setLayoutMode": {
            "!type": "fn(layoutMode: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setLayoutMode(int)"
          },
          "performHapticFeedback": {
            "!type": "fn(feedbackConstant: number) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#performHapticFeedback(int)"
          },
          "onKeyLongPress": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onKeyLongPress(int, android.view.KeyEvent)"
          },
          "getLayoutMode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getLayoutMode()"
          },
          "getWindowSystemUiVisibility": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getWindowSystemUiVisibility()"
          },
          "getPersistentDrawingCache": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getPersistentDrawingCache()"
          },
          "animate": {
            "!type": "fn() -> +android.view.ViewPropertyAnimator",
            "!url": "http://developer.android.com/reference/android/view/View.html#animate()"
          },
          "addView": {
            "!type": "fn(child: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#addView(android.view.View)"
          },
          "getOnFocusChangeListener": {
            "!type": "fn() -> +android.view.View.OnFocusChangeListener",
            "!url": "http://developer.android.com/reference/android/view/View.html#getOnFocusChangeListener()"
          },
          "isPaddingRelative": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isPaddingRelative()"
          },
          "hasOverlappingRendering": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#hasOverlappingRendering()"
          },
          "isEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isEnabled()"
          },
          "setBottom": {
            "!type": "fn(bottom: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setBottom(int)"
          },
          "isTextAlignmentInherited": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isTextAlignmentInherited()"
          },
          "onHoverChanged": {
            "!type": "fn(hovered: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onHoverChanged(boolean)"
          },
          "sendAccessibilityEventInternal": {
            "!type": "fn(eventType: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#sendAccessibilityEventInternal(int)"
          },
          "canHaveDisplayList": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#canHaveDisplayList()"
          },
          "dispatchStartTemporaryDetach": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchStartTemporaryDetach()"
          },
          "onResolveDrawables": {
            "!type": "fn(layoutDirection: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onResolveDrawables(int)"
          },
          "setLongClickable": {
            "!type": "fn(longClickable: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setLongClickable(boolean)"
          },
          "dispatchNestedScroll": {
            "!type": "fn(dxConsumed: number, dyConsumed: number, dxUnconsumed: number, dyUnconsumed: number, offsetInWindow: +java.newArray) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchNestedScroll(int, int, int, int, int[])"
          },
          "getScrollBarFadeDuration": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getScrollBarFadeDuration()"
          },
          "removeAllViewsInLayout": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#removeAllViewsInLayout()"
          },
          "getHeight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getHeight()"
          },
          "setOnKeyListener": {
            "!type": "fn(l: +android.view.View.OnKeyListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnKeyListener(android.view.View.OnKeyListener)"
          },
          "sendAccessibilityEventUnchecked": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)"
          },
          "onCreateInputConnection": {
            "!type": "fn(outAttrs: +android.view.inputmethod.EditorInfo) -> +android.view.inputmethod.InputConnection",
            "!url": "http://developer.android.com/reference/android/view/View.html#onCreateInputConnection(android.view.inputmethod.EditorInfo)"
          },
          "performContextClick": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#performContextClick()"
          },
          "isHovered": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isHovered()"
          },
          "getScrollBarDefaultDelayBeforeFade": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getScrollBarDefaultDelayBeforeFade()"
          },
          "setVerticalScrollbarPosition": {
            "!type": "fn(position: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setVerticalScrollbarPosition(int)"
          },
          "setVerticalFadingEdgeEnabled": {
            "!type": "fn(verticalFadingEdgeEnabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setVerticalFadingEdgeEnabled(boolean)"
          },
          "setVisibility": {
            "!type": "fn(visibility: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setVisibility(int)"
          },
          "suppressLayout": {
            "!type": "fn(suppress: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#suppressLayout(boolean)"
          },
          "getTranslationZ": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTranslationZ()"
          },
          "getKeepScreenOn": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#getKeepScreenOn()"
          },
          "getTranslationY": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTranslationY()"
          },
          "getAnimation": {
            "!type": "fn() -> +android.view.animation.Animation",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAnimation()"
          },
          "getTranslationX": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTranslationX()"
          },
          "getHandler": {
            "!type": "fn() -> +android.os.Handler",
            "!url": "http://developer.android.com/reference/android/view/View.html#getHandler()"
          },
          "setForeground": {
            "!type": "fn(foreground: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setForeground(android.graphics.drawable.Drawable)"
          },
          "onKeyShortcut": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onKeyShortcut(int, android.view.KeyEvent)"
          },
          "dispatchWindowVisibilityChanged": {
            "!type": "fn(visibility: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchWindowVisibilityChanged(int)"
          },
          "setForegroundTintList": {
            "!type": "fn(tint: +android.content.res.ColorStateList) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setForegroundTintList(android.content.res.ColorStateList)"
          },
          "shouldDelayChildPressedState": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#shouldDelayChildPressedState()"
          },
          "onInitializeAccessibilityEventInternal": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onInitializeAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)"
          },
          "postOnAnimationDelayed": {
            "!type": "fn(action: +java.lang.Runnable, delayMillis: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#postOnAnimationDelayed(java.lang.Runnable, long)"
          },
          "postInvalidateOnAnimation": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#postInvalidateOnAnimation()"
          },
          "resetResolvedLayoutDirection": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resetResolvedLayoutDirection()"
          },
          "getInverseMatrix": {
            "!type": "fn() -> +android.graphics.Matrix",
            "!url": "http://developer.android.com/reference/android/view/View.html#getInverseMatrix()"
          },
          "setSystemUiVisibility": {
            "!type": "fn(visibility: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setSystemUiVisibility(int)"
          },
          "isScrollContainer": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isScrollContainer()"
          },
          "onNestedScrollAccepted": {
            "!type": "fn(child: +android.view.View, target: +android.view.View, axes: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onNestedScrollAccepted(android.view.View, android.view.View, int)"
          },
          "getLabelFor": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getLabelFor()"
          },
          "isSaveEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isSaveEnabled()"
          },
          "onNestedPreFling": {
            "!type": "fn(target: +android.view.View, velocityX: +java.lang.Float, velocityY: +java.lang.Float) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onNestedPreFling(android.view.View, float, float)"
          },
          "setRotationY": {
            "!type": "fn(rotationY: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setRotationY(float)"
          },
          "setRotationX": {
            "!type": "fn(rotationX: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setRotationX(float)"
          },
          "findViewWithTag": {
            "!type": "fn(tag: +java.lang.Object) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/View.html#findViewWithTag(java.lang.Object)"
          },
          "getOutlineProvider": {
            "!type": "fn() -> +android.view.ViewOutlineProvider",
            "!url": "http://developer.android.com/reference/android/view/View.html#getOutlineProvider()"
          },
          "setDisabledSystemUiVisibility": {
            "!type": "fn(flags: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setDisabledSystemUiVisibility(int)"
          },
          "dispatchWindowSystemUiVisiblityChanged": {
            "!type": "fn(visible: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchWindowSystemUiVisiblityChanged(int)"
          },
          "onStartTemporaryDetach": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onStartTemporaryDetach()"
          },
          "invalidate": {
            "!type": "fn(dirty: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#invalidate(android.graphics.Rect)"
          },
          "getForegroundGravity": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getForegroundGravity()"
          },
          "toGlobalMotionEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#toGlobalMotionEvent(android.view.MotionEvent)"
          },
          "dispatchTrackballEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchTrackballEvent(android.view.MotionEvent)"
          },
          "clearChildFocus": {
            "!type": "fn(child: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#clearChildFocus(android.view.View)"
          },
          "setAccessibilityDelegate": {
            "!type": "fn(delegate: +android.view.View.AccessibilityDelegate) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setAccessibilityDelegate(android.view.View.AccessibilityDelegate)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "hackTurnOffWindowResizeAnim": {
            "!type": "fn(off: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#hackTurnOffWindowResizeAnim(boolean)"
          },
          "onDrawForeground": {
            "!type": "fn(canvas: +android.graphics.Canvas) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onDrawForeground(android.graphics.Canvas)"
          },
          "setElevation": {
            "!type": "fn(elevation: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setElevation(float)"
          },
          "onNestedScroll": {
            "!type": "fn(target: +android.view.View, dxConsumed: number, dyConsumed: number, dxUnconsumed: number, dyUnconsumed: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onNestedScroll(android.view.View, int, int, int, int)"
          },
          "isMotionEventSplittingEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#isMotionEventSplittingEnabled()"
          },
          "notifyViewAccessibilityStateChangedIfNeeded": {
            "!type": "fn(changeType: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#notifyViewAccessibilityStateChangedIfNeeded(int)"
          },
          "getMeasuredWidthAndState": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getMeasuredWidthAndState()"
          },
          "setLeft": {
            "!type": "fn(left: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setLeft(int)"
          },
          "setDrawingCacheBackgroundColor": {
            "!type": "fn(color: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setDrawingCacheBackgroundColor(int)"
          },
          "resolvePadding": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resolvePadding()"
          },
          "isLaidOut": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isLaidOut()"
          },
          "outputDirtyFlags": {
            "!type": "fn(indent: string, clear: bool, clearMask: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#outputDirtyFlags(java.lang.String, boolean, int)"
          },
          "hasFocusable": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#hasFocusable()"
          },
          "getWindowVisibleDisplayFrame": {
            "!type": "fn(outRect: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#getWindowVisibleDisplayFrame(android.graphics.Rect)"
          },
          "setDrawingCacheQuality": {
            "!type": "fn(quality: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setDrawingCacheQuality(int)"
          },
          "onFinishTemporaryDetach": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onFinishTemporaryDetach()"
          },
          "isNestedScrollingEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isNestedScrollingEnabled()"
          },
          "getOpticalInsets": {
            "!type": "fn() -> +android.graphics.Insets",
            "!url": "http://developer.android.com/reference/android/view/View.html#getOpticalInsets()"
          },
          "setOnFocusChangeListener": {
            "!type": "fn(l: +android.view.View.OnFocusChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnFocusChangeListener(android.view.View.OnFocusChangeListener)"
          },
          "setOnDragListener": {
            "!type": "fn(l: +android.view.View.OnDragListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnDragListener(android.view.View.OnDragListener)"
          },
          "cancelLongPress": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#cancelLongPress()"
          },
          "getMeasuredState": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getMeasuredState()"
          },
          "setHorizontalFadingEdgeEnabled": {
            "!type": "fn(horizontalFadingEdgeEnabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setHorizontalFadingEdgeEnabled(boolean)"
          },
          "dispatchDrawableHotspotChanged": {
            "!type": "fn(x: +java.lang.Float, y: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchDrawableHotspotChanged(float, float)"
          },
          "dispatchSetSelected": {
            "!type": "fn(selected: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchSetSelected(boolean)"
          },
          "onDragEvent": {
            "!type": "fn(event: +android.view.DragEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onDragEvent(android.view.DragEvent)"
          },
          "requestApplyInsets": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#requestApplyInsets()"
          },
          "setScrollIndicators": {
            "!type": "fn(indicators: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScrollIndicators(int)"
          },
          "onStopNestedScroll": {
            "!type": "fn(child: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onStopNestedScroll(android.view.View)"
          },
          "setScaleY": {
            "!type": "fn(scaleY: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScaleY(float)"
          },
          "setScaleX": {
            "!type": "fn(scaleX: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScaleX(float)"
          },
          "startActionMode": {
            "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/view/View.html#startActionMode(android.view.ActionMode.Callback)"
          },
          "getChildCount": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getChildCount()"
          },
          "setNextFocusForwardId": {
            "!type": "fn(nextFocusForwardId: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setNextFocusForwardId(int)"
          },
          "setAccessibilityTraversalBefore": {
            "!type": "fn(beforeId: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setAccessibilityTraversalBefore(int)"
          },
          "findFocus": {
            "!type": "fn() -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#findFocus()"
          },
          "getTag": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTag()"
          },
          "setFocusable": {
            "!type": "fn(focusable: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setFocusable(boolean)"
          },
          "isVerticalScrollBarEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isVerticalScrollBarEnabled()"
          },
          "getNextFocusLeftId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getNextFocusLeftId()"
          },
          "onStartNestedScroll": {
            "!type": "fn(child: +android.view.View, target: +android.view.View, nestedScrollAxes: number) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onStartNestedScroll(android.view.View, android.view.View, int)"
          },
          "isVerticalFadingEdgeEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isVerticalFadingEdgeEnabled()"
          },
          "onKeyMultiple": {
            "!type": "fn(keyCode: number, repeatCount: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onKeyMultiple(int, int, android.view.KeyEvent)"
          },
          "generateLayoutParams": {
            "!type": "fn(attrs: +android.util.AttributeSet) -> +android.view.ViewGroup.LayoutParams",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#generateLayoutParams(android.util.AttributeSet)"
          },
          "setTransitionAlpha": {
            "!type": "fn(alpha: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTransitionAlpha(float)"
          },
          "getMeasuredWidth": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getMeasuredWidth()"
          },
          "getLocationOnScreen": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/view/View.html#getLocationOnScreen()"
          },
          "encode": {
            "!type": "fn(stream: +android.view.ViewHierarchyEncoder) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#encode(android.view.ViewHierarchyEncoder)"
          },
          "getTransientView": {
            "!type": "fn(position: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getTransientView(int)"
          },
          "addChildrenForAccessibility": {
            "!type": "fn(outChildren: +java.util.ArrayList) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#addChildrenForAccessibility(java.util.ArrayList)"
          },
          "onActivityResult": {
            "!type": "fn(requestCode: number, resultCode: number, data: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onActivityResult(int, int, android.content.Intent)"
          },
          "startActivity": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActivityView.html#startActivity(android.content.Intent)"
          },
          "isTextDirectionResolved": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isTextDirectionResolved()"
          },
          "setRotation": {
            "!type": "fn(rotation: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setRotation(float)"
          },
          "getTransientViewCount": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getTransientViewCount()"
          },
          "resolveLayoutDirection": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resolveLayoutDirection()"
          },
          "getPaddingRight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getPaddingRight()"
          },
          "getZ": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getZ()"
          },
          "getNestedScrollAxes": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getNestedScrollAxes()"
          },
          "getY": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getY()"
          },
          "getX": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getX()"
          },
          "setPadding": {
            "!type": "fn(left: number, top: number, right: number, bottom: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setPadding(int, int, int, int)"
          },
          "setLayoutAnimationListener": {
            "!type": "fn(animationListener: +android.view.animation.Animation.AnimationListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setLayoutAnimationListener(android.view.animation.Animation.AnimationListener)"
          },
          "damageChildDeferred": {
            "!type": "fn(child: +android.view.View) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#damageChildDeferred(android.view.View)"
          },
          "setForegroundTintMode": {
            "!type": "fn(tintMode: +android.graphics.PorterDuff.Mode) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setForegroundTintMode(android.graphics.PorterDuff.Mode)"
          },
          "gatherTransparentRegion": {
            "!type": "fn(region: +android.graphics.Region) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#gatherTransparentRegion(android.graphics.Region)"
          },
          "showContextMenu": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#showContextMenu()"
          },
          "isHorizontalScrollBarEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isHorizontalScrollBarEnabled()"
          },
          "onCheckIsTextEditor": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onCheckIsTextEditor()"
          },
          "setLayoutTransition": {
            "!type": "fn(transition: +android.animation.LayoutTransition) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setLayoutTransition(android.animation.LayoutTransition)"
          },
          "setOnSystemUiVisibilityChangeListener": {
            "!type": "fn(l: +android.view.View.OnSystemUiVisibilityChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnSystemUiVisibilityChangeListener(android.view.View.OnSystemUiVisibilityChangeListener)"
          },
          "setBackgroundColor": {
            "!type": "fn(color: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setBackgroundColor(int)"
          },
          "captureTransitioningViews": {
            "!type": "fn(transitioningViews: +java.util.List) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#captureTransitioningViews(java.util.List)"
          },
          "setOnHierarchyChangeListener": {
            "!type": "fn(listener: +android.view.ViewGroup.OnHierarchyChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setOnHierarchyChangeListener(android.view.ViewGroup.OnHierarchyChangeListener)"
          },
          "setNextFocusRightId": {
            "!type": "fn(nextFocusRightId: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setNextFocusRightId(int)"
          },
          "makeOptionalFitsSystemWindows": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#makeOptionalFitsSystemWindows()"
          },
          "setTag": {
            "!type": "fn(tag: +java.lang.Object) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTag(java.lang.Object)"
          },
          "onInitializeAccessibilityNodeInfo": {
            "!type": "fn(info: +android.view.accessibility.AccessibilityNodeInfo) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)"
          },
          "willNotDraw": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#willNotDraw()"
          },
          "setCameraDistance": {
            "!type": "fn(distance: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setCameraDistance(float)"
          },
          "removeViewInLayout": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#removeViewInLayout(android.view.View)"
          },
          "setTransitionGroup": {
            "!type": "fn(isTransitionGroup: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setTransitionGroup(boolean)"
          },
          "hasWindowFocus": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#hasWindowFocus()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "startActionModeForChild": {
            "!type": "fn(originalView: +android.view.View, callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#startActionModeForChild(android.view.View, android.view.ActionMode.Callback)"
          },
          "getPaddingEnd": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getPaddingEnd()"
          },
          "getRootWindowInsets": {
            "!type": "fn() -> +android.view.WindowInsets",
            "!url": "http://developer.android.com/reference/android/view/View.html#getRootWindowInsets()"
          },
          "onNestedPreScroll": {
            "!type": "fn(target: +android.view.View, dx: number, dy: number, consumed: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onNestedPreScroll(android.view.View, int, int, int[])"
          },
          "setContentDescription": {
            "!type": "fn(contentDescription: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setContentDescription(java.lang.CharSequence)"
          },
          "onWindowFocusChanged": {
            "!type": "fn(hasWindowFocus: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onWindowFocusChanged(boolean)"
          },
          "getRootView": {
            "!type": "fn() -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/View.html#getRootView()"
          },
          "addOnLayoutChangeListener": {
            "!type": "fn(listener: +android.view.View.OnLayoutChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#addOnLayoutChangeListener(android.view.View.OnLayoutChangeListener)"
          },
          "getParentForAccessibility": {
            "!type": "fn() -> +android.view.ViewParent",
            "!url": "http://developer.android.com/reference/android/view/View.html#getParentForAccessibility()"
          },
          "isDirty": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isDirty()"
          },
          "requestDisallowInterceptTouchEvent": {
            "!type": "fn(disallowIntercept: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#requestDisallowInterceptTouchEvent(boolean)"
          },
          "focusSearch": {
            "!type": "fn(focused: +android.view.View, direction: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#focusSearch(android.view.View, int)"
          },
          "findNamedViews": {
            "!type": "fn(namedElements: +java.util.Map) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#findNamedViews(java.util.Map)"
          },
          "post": {
            "!type": "fn(action: +java.lang.Runnable) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#post(java.lang.Runnable)"
          },
          "announceForAccessibility": {
            "!type": "fn(text: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#announceForAccessibility(java.lang.CharSequence)"
          },
          "getTouchscreenBlocksFocus": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getTouchscreenBlocksFocus()"
          },
          "getRawTextDirection": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getRawTextDirection()"
          },
          "canResolveTextDirection": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#canResolveTextDirection()"
          },
          "setClipToOutline": {
            "!type": "fn(clipToOutline: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setClipToOutline(boolean)"
          },
          "getFitsSystemWindows": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#getFitsSystemWindows()"
          },
          "getRawTextAlignment": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getRawTextAlignment()"
          },
          "getDescendantFocusability": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getDescendantFocusability()"
          },
          "isAlwaysDrawnWithCacheEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#isAlwaysDrawnWithCacheEnabled()"
          },
          "buildLayer": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#buildLayer()"
          },
          "getOutsets": {
            "!type": "fn(outOutsetRect: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#getOutsets(android.graphics.Rect)"
          },
          "setTransitionName": {
            "!type": "fn(transitionName: string) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTransitionName(java.lang.String)"
          },
          "getRight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getRight()"
          },
          "getNextFocusUpId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getNextFocusUpId()"
          },
          "onWindowSystemUiVisibilityChanged": {
            "!type": "fn(visible: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onWindowSystemUiVisibilityChanged(int)"
          },
          "onScreenStateChanged": {
            "!type": "fn(screenState: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onScreenStateChanged(int)"
          },
          "setZ": {
            "!type": "fn(z: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setZ(float)"
          },
          "setY": {
            "!type": "fn(y: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setY(float)"
          },
          "setX": {
            "!type": "fn(x: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setX(float)"
          },
          "setPivotY": {
            "!type": "fn(pivotY: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setPivotY(float)"
          },
          "getPaddingBottom": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getPaddingBottom()"
          },
          "setPivotX": {
            "!type": "fn(pivotX: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setPivotX(float)"
          },
          "setOnContextClickListener": {
            "!type": "fn(l: +android.view.View.OnContextClickListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnContextClickListener(android.view.View.OnContextClickListener)"
          },
          "setScrollBarFadeDuration": {
            "!type": "fn(scrollBarFadeDuration: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScrollBarFadeDuration(int)"
          },
          "setActivated": {
            "!type": "fn(activated: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setActivated(boolean)"
          },
          "getDrawingCacheQuality": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getDrawingCacheQuality()"
          },
          "getBottom": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getBottom()"
          },
          "setPersistentDrawingCache": {
            "!type": "fn(drawingCacheToKeep: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setPersistentDrawingCache(int)"
          },
          "includeForAccessibility": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#includeForAccessibility()"
          },
          "startLayoutAnimation": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#startLayoutAnimation()"
          },
          "getId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getId()"
          },
          "getLayoutAnimationListener": {
            "!type": "fn() -> +android.view.animation.Animation.AnimationListener",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getLayoutAnimationListener()"
          },
          "resolveTextDirection": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resolveTextDirection()"
          },
          "setOnApplyWindowInsetsListener": {
            "!type": "fn(listener: +android.view.View.OnApplyWindowInsetsListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)"
          },
          "setStateListAnimator": {
            "!type": "fn(stateListAnimator: +android.animation.StateListAnimator) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setStateListAnimator(android.animation.StateListAnimator)"
          },
          "canScrollVertically": {
            "!type": "fn(direction: number) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#canScrollVertically(int)"
          },
          "setContextClickable": {
            "!type": "fn(contextClickable: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setContextClickable(boolean)"
          },
          "updateDisplayListIfDirty": {
            "!type": "fn() -> +android.view.RenderNode",
            "!url": "http://developer.android.com/reference/android/view/View.html#updateDisplayListIfDirty()"
          },
          "resolveTextAlignment": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resolveTextAlignment()"
          },
          "dispatchKeyEventPreIme": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchKeyEventPreIme(android.view.KeyEvent)"
          },
          "removeTransientView": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#removeTransientView(android.view.View)"
          },
          "setScrollY": {
            "!type": "fn(value: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScrollY(int)"
          },
          "setScrollX": {
            "!type": "fn(value: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScrollX(int)"
          },
          "setWillNotCacheDrawing": {
            "!type": "fn(willNotCacheDrawing: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setWillNotCacheDrawing(boolean)"
          },
          "setHapticFeedbackEnabled": {
            "!type": "fn(hapticFeedbackEnabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setHapticFeedbackEnabled(boolean)"
          },
          "performLongClick": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#performLongClick()"
          },
          "onHoverEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onHoverEvent(android.view.MotionEvent)"
          },
          "onKeyDown": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onKeyDown(int, android.view.KeyEvent)"
          },
          "requestFocus": {
            "!type": "fn(direction: number, previouslyFocusedRect: +android.graphics.Rect) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#requestFocus(int, android.graphics.Rect)"
          },
          "getMinimumHeight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getMinimumHeight()"
          },
          "dispatchPopulateAccessibilityEvent": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
          },
          "setSelected": {
            "!type": "fn(selected: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setSelected(boolean)"
          },
          "setCallback": {
            "!type": "fn(callback: +android.app.ActivityView.ActivityViewCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActivityView.html#setCallback(android.app.ActivityView.ActivityViewCallback)"
          },
          "hasTransientState": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#hasTransientState()"
          },
          "setAddStatesFromChildren": {
            "!type": "fn(addsStates: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setAddStatesFromChildren(boolean)"
          },
          "postOnAnimation": {
            "!type": "fn(action: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#postOnAnimation(java.lang.Runnable)"
          },
          "onInitializeAccessibilityEvent": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
          },
          "setOpticalInsets": {
            "!type": "fn(insets: +android.graphics.Insets) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOpticalInsets(android.graphics.Insets)"
          },
          "isAttachedToDisplay": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/ActivityView.html#isAttachedToDisplay()"
          },
          "isClickable": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isClickable()"
          },
          "isLayoutRtl": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isLayoutRtl()"
          },
          "setLayoutDirection": {
            "!type": "fn(layoutDirection: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setLayoutDirection(int)"
          },
          "postInvalidateDelayed": {
            "!type": "fn(delayMilliseconds: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#postInvalidateDelayed(long)"
          },
          "isInScrollingContainer": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isInScrollingContainer()"
          },
          "jumpDrawablesToCurrentState": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#jumpDrawablesToCurrentState()"
          },
          "notifySubtreeAccessibilityStateChangedIfNeeded": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#notifySubtreeAccessibilityStateChangedIfNeeded()"
          },
          "setScrollBarDefaultDelayBeforeFade": {
            "!type": "fn(scrollBarDefaultDelayBeforeFade: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScrollBarDefaultDelayBeforeFade(int)"
          },
          "getDrawingRect": {
            "!type": "fn(outRect: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#getDrawingRect(android.graphics.Rect)"
          },
          "getBackgroundTintList": {
            "!type": "fn() -> +android.content.res.ColorStateList",
            "!url": "http://developer.android.com/reference/android/view/View.html#getBackgroundTintList()"
          },
          "getTouchables": {
            "!type": "fn() -> +java.util.ArrayList",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTouchables()"
          },
          "getAlpha": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAlpha()"
          },
          "onNestedPrePerformAccessibilityAction": {
            "!type": "fn(target: +android.view.View, action: number, args: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onNestedPrePerformAccessibilityAction(android.view.View, int, android.os.Bundle)"
          },
          "onKeyPreIme": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onKeyPreIme(int, android.view.KeyEvent)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "setScrollBarStyle": {
            "!type": "fn(style: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScrollBarStyle(int)"
          },
          "getLocalVisibleRect": {
            "!type": "fn(r: +android.graphics.Rect) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#getLocalVisibleRect(android.graphics.Rect)"
          },
          "getSolidColor": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getSolidColor()"
          },
          "offsetRectIntoDescendantCoords": {
            "!type": "fn(descendant: +android.view.View, rect: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#offsetRectIntoDescendantCoords(android.view.View, android.graphics.Rect)"
          },
          "toLocalMotionEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#toLocalMotionEvent(android.view.MotionEvent)"
          },
          "isInLayout": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isInLayout()"
          },
          "requestTransitionStart": {
            "!type": "fn(transition: +android.animation.LayoutTransition) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#requestTransitionStart(android.animation.LayoutTransition)"
          },
          "removeAllViews": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#removeAllViews()"
          },
          "onCloseSystemDialogs": {
            "!type": "fn(reason: string) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onCloseSystemDialogs(java.lang.String)"
          },
          "getVerticalScrollbarWidth": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getVerticalScrollbarWidth()"
          },
          "isAccessibilitySelectionExtendable": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isAccessibilitySelectionExtendable()"
          },
          "getAccessibilityTraversalAfter": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilityTraversalAfter()"
          },
          "onProvideVirtualStructure": {
            "!type": "fn(structure: +android.view.ViewStructure) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onProvideVirtualStructure(android.view.ViewStructure)"
          },
          "canResolveLayoutDirection": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#canResolveLayoutDirection()"
          },
          "scheduleLayoutAnimation": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#scheduleLayoutAnimation()"
          },
          "getScrollIndicators": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getScrollIndicators()"
          },
          "getScrollBarSize": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getScrollBarSize()"
          },
          "dispatchApplyWindowInsets": {
            "!type": "fn(insets: +android.view.WindowInsets) -> +android.view.WindowInsets",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchApplyWindowInsets(android.view.WindowInsets)"
          },
          "getAccessibilityViewId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilityViewId()"
          },
          "isTransitionGroup": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#isTransitionGroup()"
          },
          "transformPointToViewLocal": {
            "!type": "fn(point: +java.newArray, child: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#transformPointToViewLocal(float[], android.view.View)"
          },
          "onPopulateAccessibilityEventInternal": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)"
          },
          "isDrawingCacheEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isDrawingCacheEnabled()"
          },
          "getOverlay": {
            "!type": "fn() -> +android.view.ViewGroupOverlay",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getOverlay()"
          },
          "onProvideStructure": {
            "!type": "fn(structure: +android.view.ViewStructure) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onProvideStructure(android.view.ViewStructure)"
          },
          "setNextFocusDownId": {
            "!type": "fn(nextFocusDownId: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setNextFocusDownId(int)"
          },
          "getVerticalScrollbarPosition": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getVerticalScrollbarPosition()"
          },
          "childHasTransientStateChanged": {
            "!type": "fn(child: +android.view.View, childHasTransientState: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#childHasTransientStateChanged(android.view.View, boolean)"
          },
          "setFilterTouchesWhenObscured": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setFilterTouchesWhenObscured(boolean)"
          },
          "getMeasuredHeight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getMeasuredHeight()"
          },
          "getFocusables": {
            "!type": "fn(direction: number) -> +java.util.ArrayList",
            "!url": "http://developer.android.com/reference/android/view/View.html#getFocusables(int)"
          },
          "setOnTouchListener": {
            "!type": "fn(l: +android.view.View.OnTouchListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnTouchListener(android.view.View.OnTouchListener)"
          },
          "getOverScrollMode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getOverScrollMode()"
          },
          "endViewTransition": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#endViewTransition(android.view.View)"
          },
          "refreshDrawableState": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#refreshDrawableState()"
          },
          "requestSendAccessibilityEvent": {
            "!type": "fn(child: +android.view.View, event: +android.view.accessibility.AccessibilityEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#requestSendAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent)"
          },
          "isInEditMode": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isInEditMode()"
          },
          "canResolveTextAlignment": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#canResolveTextAlignment()"
          },
          "startViewTransition": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#startViewTransition(android.view.View)"
          },
          "dispatchTouchEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchTouchEvent(android.view.MotionEvent)"
          },
          "dispatchUnhandledMove": {
            "!type": "fn(focused: +android.view.View, direction: number) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchUnhandledMove(android.view.View, int)"
          },
          "setImportantForAccessibility": {
            "!type": "fn(mode: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setImportantForAccessibility(int)"
          },
          "setMotionEventSplittingEnabled": {
            "!type": "fn(split: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setMotionEventSplittingEnabled(boolean)"
          },
          "focusableViewAvailable": {
            "!type": "fn(v: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#focusableViewAvailable(android.view.View)"
          },
          "isLayoutRequested": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isLayoutRequested()"
          },
          "invalidateChild": {
            "!type": "fn(child: +android.view.View, dirty: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#invalidateChild(android.view.View, android.graphics.Rect)"
          },
          "setSaveFromParentEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setSaveFromParentEnabled(boolean)"
          },
          "dispatchGenericMotionEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchGenericMotionEvent(android.view.MotionEvent)"
          },
          "getLayerType": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getLayerType()"
          },
          "getHotspotBounds": {
            "!type": "fn(outRect: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#getHotspotBounds(android.graphics.Rect)"
          },
          "setScrollbarFadingEnabled": {
            "!type": "fn(fadeScrollbars: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScrollbarFadingEnabled(boolean)"
          },
          "getLayoutTransition": {
            "!type": "fn() -> +android.animation.LayoutTransition",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getLayoutTransition()"
          },
          "removeViewAt": {
            "!type": "fn(index: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#removeViewAt(int)"
          },
          "recomputeViewAttributes": {
            "!type": "fn(child: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#recomputeViewAttributes(android.view.View)"
          },
          "setBackground": {
            "!type": "fn(background: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setBackground(android.graphics.drawable.Drawable)"
          },
          "getRotation": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getRotation()"
          },
          "drawableHotspotChanged": {
            "!type": "fn(x: +java.lang.Float, y: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#drawableHotspotChanged(float, float)"
          },
          "getNextFocusRightId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getNextFocusRightId()"
          },
          "getFocusedChild": {
            "!type": "fn() -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getFocusedChild()"
          },
          "isHardwareAccelerated": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isHardwareAccelerated()"
          },
          "setAlwaysDrawnWithCacheEnabled": {
            "!type": "fn(always: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setAlwaysDrawnWithCacheEnabled(boolean)"
          },
          "getBackground": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/view/View.html#getBackground()"
          },
          "requestAccessibilityFocus": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#requestAccessibilityFocus()"
          },
          "removeViews": {
            "!type": "fn(start: number, count: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#removeViews(int, int)"
          },
          "setAnimation": {
            "!type": "fn(animation: +android.view.animation.Animation) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setAnimation(android.view.animation.Animation)"
          },
          "getAccessibilityNodeProvider": {
            "!type": "fn() -> +android.view.accessibility.AccessibilityNodeProvider",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilityNodeProvider()"
          },
          "resetResolvedPadding": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resetResolvedPadding()"
          },
          "getScaleY": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getScaleY()"
          },
          "forceLayout": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#forceLayout()"
          },
          "isLayoutDirectionResolved": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isLayoutDirectionResolved()"
          },
          "getScaleX": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getScaleX()"
          },
          "setFocusableInTouchMode": {
            "!type": "fn(focusableInTouchMode: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setFocusableInTouchMode(boolean)"
          },
          "updateViewLayout": {
            "!type": "fn(view: +android.view.View, params: +android.view.ViewGroup.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#updateViewLayout(android.view.View, android.view.ViewGroup.LayoutParams)"
          },
          "addStatesFromChildren": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#addStatesFromChildren()"
          },
          "setAnimationCacheEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setAnimationCacheEnabled(boolean)"
          },
          "getTransitionAlpha": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTransitionAlpha()"
          },
          "getWindowId": {
            "!type": "fn() -> +android.view.WindowId",
            "!url": "http://developer.android.com/reference/android/view/View.html#getWindowId()"
          },
          "transformMatrixToLocal": {
            "!type": "fn(m: +android.graphics.Matrix) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#transformMatrixToLocal(android.graphics.Matrix)"
          },
          "dispatchFinishTemporaryDetach": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchFinishTemporaryDetach()"
          },
          "getViewTreeObserver": {
            "!type": "fn() -> +android.view.ViewTreeObserver",
            "!url": "http://developer.android.com/reference/android/view/View.html#getViewTreeObserver()"
          },
          "onPopulateAccessibilityEvent": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
          },
          "clearAnimation": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#clearAnimation()"
          },
          "unscheduleDrawable": {
            "!type": "fn(who: +android.graphics.drawable.Drawable, what: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#unscheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable)"
          },
          "getVerticalFadingEdgeLength": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getVerticalFadingEdgeLength()"
          },
          "onViewRemoved": {
            "!type": "fn(child: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onViewRemoved(android.view.View)"
          },
          "requestLayout": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#requestLayout()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "setLayoutAnimation": {
            "!type": "fn(controller: +android.view.animation.LayoutAnimationController) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setLayoutAnimation(android.view.animation.LayoutAnimationController)"
          },
          "dispatchNestedPreFling": {
            "!type": "fn(velocityX: +java.lang.Float, velocityY: +java.lang.Float) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchNestedPreFling(float, float)"
          },
          "setOnClickListener": {
            "!type": "fn(l: +android.view.View.OnClickListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnClickListener(android.view.View.OnClickListener)"
          },
          "isTextDirectionInherited": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isTextDirectionInherited()"
          },
          "onApplyWindowInsets": {
            "!type": "fn(insets: +android.view.WindowInsets) -> +android.view.WindowInsets",
            "!url": "http://developer.android.com/reference/android/view/View.html#onApplyWindowInsets(android.view.WindowInsets)"
          },
          "setNextFocusUpId": {
            "!type": "fn(nextFocusUpId: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setNextFocusUpId(int)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getChildAt": {
            "!type": "fn(index: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getChildAt(int)"
          },
          "getBackgroundTintMode": {
            "!type": "fn() -> +android.graphics.PorterDuff.Mode",
            "!url": "http://developer.android.com/reference/android/view/View.html#getBackgroundTintMode()"
          },
          "onCancelPendingInputEvents": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onCancelPendingInputEvents()"
          },
          "getHorizontalFadingEdgeLength": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getHorizontalFadingEdgeLength()"
          },
          "sendAccessibilityEvent": {
            "!type": "fn(eventType: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#sendAccessibilityEvent(int)"
          },
          "getPaddingLeft": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getPaddingLeft()"
          },
          "setRevealClip": {
            "!type": "fn(shouldClip: bool, x: +java.lang.Float, y: +java.lang.Float, radius: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setRevealClip(boolean, float, float, float)"
          },
          "isFocused": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isFocused()"
          },
          "removeViewsInLayout": {
            "!type": "fn(start: number, count: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#removeViewsInLayout(int, int)"
          },
          "onInitializeAccessibilityNodeInfoInternal": {
            "!type": "fn(info: +android.view.accessibility.AccessibilityNodeInfo) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo)"
          },
          "isAssistBlocked": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isAssistBlocked()"
          },
          "showContextMenuForChild": {
            "!type": "fn(originalView: +android.view.View) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#showContextMenuForChild(android.view.View)"
          },
          "getWindowToken": {
            "!type": "fn() -> +android.os.IBinder",
            "!url": "http://developer.android.com/reference/android/view/View.html#getWindowToken()"
          },
          "startDrag": {
            "!type": "fn(data: +android.content.ClipData, shadowBuilder: +android.view.View.DragShadowBuilder, myLocalState: +java.lang.Object, flags: number) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#startDrag(android.content.ClipData, android.view.View.DragShadowBuilder, java.lang.Object, int)"
          },
          "scheduleDrawable": {
            "!type": "fn(who: +android.graphics.drawable.Drawable, what: +java.lang.Runnable, when: +java.lang.Long) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#scheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable, long)"
          },
          "canScrollHorizontally": {
            "!type": "fn(direction: number) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#canScrollHorizontally(int)"
          },
          "invalidateChildInParent": {
            "!type": "fn(location: +java.newArray, dirty: +android.graphics.Rect) -> +android.view.ViewParent",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#invalidateChildInParent(int[], android.graphics.Rect)"
          },
          "dispatchNestedPreScroll": {
            "!type": "fn(dx: number, dy: number, consumed: +java.newArray, offsetInWindow: +java.newArray) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchNestedPreScroll(int, int, int[], int[])"
          },
          "getLayoutParams": {
            "!type": "fn() -> +android.view.ViewGroup.LayoutParams",
            "!url": "http://developer.android.com/reference/android/view/View.html#getLayoutParams()"
          },
          "getScrollY": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getScrollY()"
          },
          "getScrollX": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getScrollX()"
          },
          "postDelayed": {
            "!type": "fn(action: +java.lang.Runnable, delayMillis: +java.lang.Long) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#postDelayed(java.lang.Runnable, long)"
          },
          "getKeyDispatcherState": {
            "!type": "fn() -> +android.view.KeyEvent.DispatcherState",
            "!url": "http://developer.android.com/reference/android/view/View.html#getKeyDispatcherState()"
          },
          "setMinimumHeight": {
            "!type": "fn(minHeight: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setMinimumHeight(int)"
          },
          "hasFocus": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#hasFocus()"
          },
          "scrollTo": {
            "!type": "fn(x: number, y: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#scrollTo(int, int)"
          },
          "setAccessibilityTraversalAfter": {
            "!type": "fn(afterId: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setAccessibilityTraversalAfter(int)"
          },
          "getClipToPadding": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getClipToPadding()"
          },
          "isHapticFeedbackEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isHapticFeedbackEnabled()"
          },
          "isFocusable": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isFocusable()"
          },
          "getTransientViewIndex": {
            "!type": "fn(position: number) -> number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getTransientViewIndex(int)"
          },
          "requestRectangleOnScreen": {
            "!type": "fn(rectangle: +android.graphics.Rect) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#requestRectangleOnScreen(android.graphics.Rect)"
          },
          "isSoundEffectsEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isSoundEffectsEnabled()"
          },
          "findViewByPredicate": {
            "!type": "fn(predicate: +com.android.internal.util.Predicate) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/View.html#findViewByPredicate(com.android.internal.util.Predicate)"
          },
          "startActivityForResult": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#startActivityForResult(android.content.Intent, int)"
          },
          "setLayerPaint": {
            "!type": "fn(paint: +android.graphics.Paint) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setLayerPaint(android.graphics.Paint)"
          },
          "setLayoutParams": {
            "!type": "fn(params: +android.view.ViewGroup.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setLayoutParams(android.view.ViewGroup.LayoutParams)"
          },
          "isContextClickable": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isContextClickable()"
          },
          "isImportantForAccessibility": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isImportantForAccessibility()"
          },
          "dispatchPointerEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchPointerEvent(android.view.MotionEvent)"
          },
          "invalidateOutline": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#invalidateOutline()"
          },
          "getTouchDelegate": {
            "!type": "fn() -> +android.view.TouchDelegate",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTouchDelegate()"
          },
          "setHasTransientState": {
            "!type": "fn(hasTransientState: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setHasTransientState(boolean)"
          },
          "getIterableTextForAccessibility": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/view/View.html#getIterableTextForAccessibility()"
          },
          "checkInputConnectionProxy": {
            "!type": "fn(view: +android.view.View) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#checkInputConnectionProxy(android.view.View)"
          },
          "getChildVisibleRect": {
            "!type": "fn(child: +android.view.View, r: +android.graphics.Rect, offset: +android.graphics.Point) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getChildVisibleRect(android.view.View, android.graphics.Rect, android.graphics.Point)"
          },
          "findViewByAccessibilityIdTraversal": {
            "!type": "fn(accessibilityId: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#findViewByAccessibilityIdTraversal(int)"
          },
          "clearFocus": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#clearFocus()"
          },
          "findViewsWithText": {
            "!type": "fn(outViews: +java.util.ArrayList, text: +java.lang.CharSequence, flags: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#findViewsWithText(java.util.ArrayList, java.lang.CharSequence, int)"
          },
          "addTransientView": {
            "!type": "fn(view: +android.view.View, index: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#addTransientView(android.view.View, int)"
          },
          "invalidateDrawable": {
            "!type": "fn(drawable: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#invalidateDrawable(android.graphics.drawable.Drawable)"
          },
          "getViewRootImpl": {
            "!type": "fn() -> +android.view.ViewRootImpl",
            "!url": "http://developer.android.com/reference/android/view/View.html#getViewRootImpl()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/view/View.html#toString()"
          },
          "setOnHoverListener": {
            "!type": "fn(l: +android.view.View.OnHoverListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnHoverListener(android.view.View.OnHoverListener)"
          },
          "getForegroundTintList": {
            "!type": "fn() -> +android.content.res.ColorStateList",
            "!url": "http://developer.android.com/reference/android/view/View.html#getForegroundTintList()"
          },
          "setNestedScrollingEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setNestedScrollingEnabled(boolean)"
          },
          "clearAccessibilityFocus": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#clearAccessibilityFocus()"
          },
          "getResources": {
            "!type": "fn() -> +android.content.res.Resources",
            "!url": "http://developer.android.com/reference/android/view/View.html#getResources()"
          },
          "buildDrawingCache": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#buildDrawingCache()"
          },
          "getTextDirection": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTextDirection()"
          },
          "release": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/ActivityView.html#release()"
          },
          "getWindowVisibility": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getWindowVisibility()"
          },
          "onInterceptTouchEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onInterceptTouchEvent(android.view.MotionEvent)"
          },
          "clearDisappearingChildren": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#clearDisappearingChildren()"
          },
          "setDescendantFocusability": {
            "!type": "fn(focusability: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setDescendantFocusability(int)"
          },
          "setId": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setId(int)"
          },
          "setAccessibilityLiveRegion": {
            "!type": "fn(mode: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setAccessibilityLiveRegion(int)"
          },
          "getTextAlignment": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getTextAlignment()"
          },
          "setMinimumWidth": {
            "!type": "fn(minWidth: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setMinimumWidth(int)"
          },
          "bringToFront": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#bringToFront()"
          },
          "isTextAlignmentResolved": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isTextAlignmentResolved()"
          },
          "hasOnClickListeners": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#hasOnClickListeners()"
          },
          "getSystemUiVisibility": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getSystemUiVisibility()"
          },
          "findViewById": {
            "!type": "fn(id: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/view/View.html#findViewById(int)"
          },
          "getPivotY": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getPivotY()"
          },
          "getPivotX": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getPivotX()"
          },
          "getStateListAnimator": {
            "!type": "fn() -> +android.animation.StateListAnimator",
            "!url": "http://developer.android.com/reference/android/view/View.html#getStateListAnimator()"
          },
          "getPaddingStart": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getPaddingStart()"
          },
          "resolveLayoutParams": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resolveLayoutParams()"
          },
          "dispatchActivityResult": {
            "!type": "fn(who: string, requestCode: number, resultCode: number, data: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchActivityResult(java.lang.String, int, int, android.content.Intent)"
          },
          "setScrollBarSize": {
            "!type": "fn(scrollBarSize: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setScrollBarSize(int)"
          },
          "dispatchDisplayHint": {
            "!type": "fn(hint: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchDisplayHint(int)"
          },
          "debug": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#debug()"
          },
          "getBoundsOnScreen": {
            "!type": "fn(outRect: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#getBoundsOnScreen(android.graphics.Rect)"
          },
          "setOutlineProvider": {
            "!type": "fn(provider: +android.view.ViewOutlineProvider) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOutlineProvider(android.view.ViewOutlineProvider)"
          },
          "measure": {
            "!type": "fn(widthMeasureSpec: number, heightMeasureSpec: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#measure(int, int)"
          },
          "dispatchKeyEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchKeyEvent(android.view.KeyEvent)"
          },
          "getMatrix": {
            "!type": "fn() -> +android.graphics.Matrix",
            "!url": "http://developer.android.com/reference/android/view/View.html#getMatrix()"
          },
          "setOnScrollChangeListener": {
            "!type": "fn(l: +android.view.View.OnScrollChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnScrollChangeListener(android.view.View.OnScrollChangeListener)"
          },
          "isActionableForAccessibility": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isActionableForAccessibility()"
          },
          "dispatchProvideStructure": {
            "!type": "fn(structure: +android.view.ViewStructure) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchProvideStructure(android.view.ViewStructure)"
          },
          "draw": {
            "!type": "fn(canvas: +android.graphics.Canvas) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#draw(android.graphics.Canvas)"
          },
          "callOnClick": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#callOnClick()"
          },
          "resetPaddingToInitialValues": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#resetPaddingToInitialValues()"
          },
          "getRotationY": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getRotationY()"
          },
          "setClipBounds": {
            "!type": "fn(clipBounds: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setClipBounds(android.graphics.Rect)"
          },
          "getRotationX": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getRotationX()"
          },
          "getHitRect": {
            "!type": "fn(outRect: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#getHitRect(android.graphics.Rect)"
          },
          "removeView": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#removeView(android.view.View)"
          },
          "getAccessibilitySelectionEnd": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilitySelectionEnd()"
          },
          "sendAccessibilityEventUncheckedInternal": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#sendAccessibilityEventUncheckedInternal(android.view.accessibility.AccessibilityEvent)"
          },
          "getClipBounds": {
            "!type": "fn() -> +android.graphics.Rect",
            "!url": "http://developer.android.com/reference/android/view/View.html#getClipBounds()"
          },
          "addTouchables": {
            "!type": "fn(views: +java.util.ArrayList) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#addTouchables(java.util.ArrayList)"
          },
          "getLayoutDirection": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getLayoutDirection()"
          },
          "dispatchConfigurationChanged": {
            "!type": "fn(newConfig: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchConfigurationChanged(android.content.res.Configuration)"
          },
          "isAttachedToWindow": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isAttachedToWindow()"
          },
          "onTrackballEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#onTrackballEvent(android.view.MotionEvent)"
          },
          "resetResolvedTextDirection": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resetResolvedTextDirection()"
          },
          "restoreHierarchyState": {
            "!type": "fn(container: +android.util.SparseArray) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#restoreHierarchyState(android.util.SparseArray)"
          },
          "hasShadow": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#hasShadow()"
          },
          "getElevation": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/view/View.html#getElevation()"
          },
          "setLeftTopRightBottom": {
            "!type": "fn(left: number, top: number, right: number, bottom: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setLeftTopRightBottom(int, int, int, int)"
          },
          "onDetachedFromWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/ActivityView.html#onDetachedFromWindow()"
          },
          "resetResolvedTextAlignment": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#resetResolvedTextAlignment()"
          },
          "isSaveFromParentEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isSaveFromParentEnabled()"
          },
          "willNotCacheDrawing": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#willNotCacheDrawing()"
          },
          "removeOnAttachStateChangeListener": {
            "!type": "fn(listener: +android.view.View.OnAttachStateChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#removeOnAttachStateChangeListener(android.view.View.OnAttachStateChangeListener)"
          },
          "offsetTopAndBottom": {
            "!type": "fn(offset: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#offsetTopAndBottom(int)"
          },
          "isRootNamespace": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isRootNamespace()"
          },
          "setOverScrollMode": {
            "!type": "fn(overScrollMode: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOverScrollMode(int)"
          },
          "getDrawableState": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/view/View.html#getDrawableState()"
          },
          "stopNestedScroll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#stopNestedScroll()"
          },
          "addOnAttachStateChangeListener": {
            "!type": "fn(listener: +android.view.View.OnAttachStateChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#addOnAttachStateChangeListener(android.view.View.OnAttachStateChangeListener)"
          },
          "onRequestSendAccessibilityEvent": {
            "!type": "fn(child: +android.view.View, event: +android.view.accessibility.AccessibilityEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onRequestSendAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent)"
          },
          "dispatchPopulateAccessibilityEventInternal": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)"
          },
          "getAccessibilitySelectionStart": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilitySelectionStart()"
          },
          "setOnGenericMotionListener": {
            "!type": "fn(l: +android.view.View.OnGenericMotionListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnGenericMotionListener(android.view.View.OnGenericMotionListener)"
          },
          "postInvalidate": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#postInvalidate()"
          },
          "dispatchNestedPrePerformAccessibilityAction": {
            "!type": "fn(action: number, arguments: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#dispatchNestedPrePerformAccessibilityAction(int, android.os.Bundle)"
          },
          "isActivated": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isActivated()"
          },
          "setWillNotDraw": {
            "!type": "fn(willNotDraw: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setWillNotDraw(boolean)"
          },
          "getNextFocusForwardId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getNextFocusForwardId()"
          },
          "isAnimationCacheEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#isAnimationCacheEnabled()"
          },
          "setNextFocusLeftId": {
            "!type": "fn(nextFocusLeftId: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setNextFocusLeftId(int)"
          },
          "requestChildFocus": {
            "!type": "fn(child: +android.view.View, focused: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#requestChildFocus(android.view.View, android.view.View)"
          },
          "isLongClickable": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isLongClickable()"
          },
          "childDrawableStateChanged": {
            "!type": "fn(child: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#childDrawableStateChanged(android.view.View)"
          },
          "applyDrawableToTransparentRegion": {
            "!type": "fn(dr: +android.graphics.drawable.Drawable, region: +android.graphics.Region) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#applyDrawableToTransparentRegion(android.graphics.drawable.Drawable, android.graphics.Region)"
          },
          "addFocusables": {
            "!type": "fn(views: +java.util.ArrayList, direction: number, focusableMode: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#addFocusables(java.util.ArrayList, int, int)"
          },
          "isAccessibilityFocused": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isAccessibilityFocused()"
          },
          "getDrawingCache": {
            "!type": "fn() -> +android.graphics.Bitmap",
            "!url": "http://developer.android.com/reference/android/view/View.html#getDrawingCache()"
          },
          "getWidth": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getWidth()"
          },
          "computeScroll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#computeScroll()"
          },
          "getAccessibilityLiveRegion": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilityLiveRegion()"
          },
          "isFocusableInTouchMode": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isFocusableInTouchMode()"
          },
          "indexOfChild": {
            "!type": "fn(child: +android.view.View) -> number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#indexOfChild(android.view.View)"
          },
          "getMinimumWidth": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getMinimumWidth()"
          },
          "dispatchSetActivated": {
            "!type": "fn(activated: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchSetActivated(boolean)"
          },
          "setLayerType": {
            "!type": "fn(layerType: number, paint: +android.graphics.Paint) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setLayerType(int, android.graphics.Paint)"
          },
          "isInTouchMode": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isInTouchMode()"
          },
          "isLayoutDirectionInherited": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isLayoutDirectionInherited()"
          },
          "isDuplicateParentStateEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isDuplicateParentStateEnabled()"
          },
          "getDisplay": {
            "!type": "fn() -> +android.view.Display",
            "!url": "http://developer.android.com/reference/android/view/View.html#getDisplay()"
          },
          "offsetChildrenTopAndBottom": {
            "!type": "fn(offset: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#offsetChildrenTopAndBottom(int)"
          },
          "setTouchscreenBlocksFocus": {
            "!type": "fn(touchscreenBlocksFocus: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setTouchscreenBlocksFocus(boolean)"
          },
          "getIteratorForGranularity": {
            "!type": "fn(granularity: number) -> +android.view.AccessibilityIterators.TextSegmentIterator",
            "!url": "http://developer.android.com/reference/android/view/View.html#getIteratorForGranularity(int)"
          },
          "getForegroundTintMode": {
            "!type": "fn() -> +android.graphics.PorterDuff.Mode",
            "!url": "http://developer.android.com/reference/android/view/View.html#getForegroundTintMode()"
          },
          "getBaseline": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getBaseline()"
          },
          "setFadingEdgeLength": {
            "!type": "fn(length: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setFadingEdgeLength(int)"
          },
          "fitsSystemWindows": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#fitsSystemWindows()"
          },
          "setSaveEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setSaveEnabled(boolean)"
          },
          "setClipChildren": {
            "!type": "fn(clipChildren: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setClipChildren(boolean)"
          },
          "createAccessibilityNodeInfo": {
            "!type": "fn() -> +android.view.accessibility.AccessibilityNodeInfo",
            "!url": "http://developer.android.com/reference/android/view/View.html#createAccessibilityNodeInfo()"
          },
          "getParent": {
            "!type": "fn() -> +android.view.ViewParent",
            "!url": "http://developer.android.com/reference/android/view/View.html#getParent()"
          },
          "bringChildToFront": {
            "!type": "fn(child: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#bringChildToFront(android.view.View)"
          },
          "setHovered": {
            "!type": "fn(hovered: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setHovered(boolean)"
          },
          "dispatchKeyShortcutEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchKeyShortcutEvent(android.view.KeyEvent)"
          },
          "getAccessibilityWindowId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilityWindowId()"
          },
          "requestUnbufferedDispatch": {
            "!type": "fn(event: +android.view.MotionEvent) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#requestUnbufferedDispatch(android.view.MotionEvent)"
          },
          "onNestedFling": {
            "!type": "fn(target: +android.view.View, velocityX: +java.lang.Float, velocityY: +java.lang.Float, consumed: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onNestedFling(android.view.View, float, float, boolean)"
          },
          "startNestedScroll": {
            "!type": "fn(axes: number) -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#startNestedScroll(int)"
          },
          "onRtlPropertiesChanged": {
            "!type": "fn(layoutDirection: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#onRtlPropertiesChanged(int)"
          },
          "playSoundEffect": {
            "!type": "fn(soundConstant: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#playSoundEffect(int)"
          },
          "requestFocusFromTouch": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#requestFocusFromTouch()"
          },
          "createAccessibilityNodeInfoInternal": {
            "!type": "fn() -> +android.view.accessibility.AccessibilityNodeInfo",
            "!url": "http://developer.android.com/reference/android/view/View.html#createAccessibilityNodeInfoInternal()"
          },
          "setClipToPadding": {
            "!type": "fn(clipToPadding: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#setClipToPadding(boolean)"
          },
          "isLayoutSuppressed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#isLayoutSuppressed()"
          },
          "setIsRootNamespace": {
            "!type": "fn(isRoot: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setIsRootNamespace(boolean)"
          },
          "destroyDrawingCache": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#destroyDrawingCache()"
          },
          "setForegroundGravity": {
            "!type": "fn(gravity: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setForegroundGravity(int)"
          },
          "getContentDescription": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/view/View.html#getContentDescription()"
          },
          "setTouchDelegate": {
            "!type": "fn(delegate: +android.view.TouchDelegate) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTouchDelegate(android.view.TouchDelegate)"
          },
          "setOnCreateContextMenuListener": {
            "!type": "fn(l: +android.view.View.OnCreateContextMenuListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnCreateContextMenuListener(android.view.View.OnCreateContextMenuListener)"
          },
          "getAccessibilityTraversalBefore": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilityTraversalBefore()"
          },
          "onGenericMotionEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/ActivityView.html#onGenericMotionEvent(android.view.MotionEvent)"
          },
          "getAccessibilityDelegate": {
            "!type": "fn() -> +android.view.View.AccessibilityDelegate",
            "!url": "http://developer.android.com/reference/android/view/View.html#getAccessibilityDelegate()"
          },
          "setLabelFor": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setLabelFor(int)"
          },
          "setOnLongClickListener": {
            "!type": "fn(l: +android.view.View.OnLongClickListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setOnLongClickListener(android.view.View.OnLongClickListener)"
          },
          "setBackgroundDrawable": {
            "!type": "fn(background: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setBackgroundDrawable(android.graphics.drawable.Drawable)"
          },
          "damageChild": {
            "!type": "fn(child: +android.view.View, dirty: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#damageChild(android.view.View, android.graphics.Rect)"
          },
          "notifySubtreeAccessibilityStateChanged": {
            "!type": "fn(child: +android.view.View, source: +android.view.View, changeType: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#notifySubtreeAccessibilityStateChanged(android.view.View, android.view.View, int)"
          },
          "computeSystemWindowInsets": {
            "!type": "fn(in: +android.view.WindowInsets, outLocalInsets: +android.graphics.Rect) -> +android.view.WindowInsets",
            "!url": "http://developer.android.com/reference/android/view/View.html#computeSystemWindowInsets(android.view.WindowInsets, android.graphics.Rect)"
          },
          "offsetDescendantRectToMyCoords": {
            "!type": "fn(descendant: +android.view.View, rect: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#offsetDescendantRectToMyCoords(android.view.View, android.graphics.Rect)"
          },
          "getLayoutAnimation": {
            "!type": "fn() -> +android.view.animation.LayoutAnimationController",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#getLayoutAnimation()"
          },
          "removeOnLayoutChangeListener": {
            "!type": "fn(listener: +android.view.View.OnLayoutChangeListener) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#removeOnLayoutChangeListener(android.view.View.OnLayoutChangeListener)"
          },
          "setPaddingRelative": {
            "!type": "fn(start: number, top: number, end: number, bottom: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setPaddingRelative(int, int, int, int)"
          },
          "isOpaque": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isOpaque()"
          },
          "performClick": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#performClick()"
          },
          "setTextDirection": {
            "!type": "fn(textDirection: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTextDirection(int)"
          },
          "getFocusedRect": {
            "!type": "fn(r: +android.graphics.Rect) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#getFocusedRect(android.graphics.Rect)"
          },
          "setBackgroundTintList": {
            "!type": "fn(tint: +android.content.res.ColorStateList) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setBackgroundTintList(android.content.res.ColorStateList)"
          },
          "setDrawingCacheEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setDrawingCacheEnabled(boolean)"
          },
          "onViewAdded": {
            "!type": "fn(child: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#onViewAdded(android.view.View)"
          },
          "setAssistBlocked": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setAssistBlocked(boolean)"
          },
          "layout": {
            "!type": "fn(l: number, t: number, r: number, b: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#layout(int, int, int, int)"
          },
          "dispatchDragEvent": {
            "!type": "fn(event: +android.view.DragEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#dispatchDragEvent(android.view.DragEvent)"
          },
          "isForegroundInsidePadding": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/view/View.html#isForegroundInsidePadding()"
          },
          "setTextAlignment": {
            "!type": "fn(textAlignment: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setTextAlignment(int)"
          },
          "setBackgroundResource": {
            "!type": "fn(resid: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/View.html#setBackgroundResource(int)"
          },
          "getImportantForAccessibility": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getImportantForAccessibility()"
          },
          "getPaddingTop": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/View.html#getPaddingTop()"
          },
          "requestTransparentRegion": {
            "!type": "fn(child: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.html#requestTransparentRegion(android.view.View)"
          }
        }
      },
      "AppGlobals": {
        "!url": "http://developer.android.com/reference/android/app/AppGlobals.html",
        "!type": "fn()",
        "getIntCoreSetting": {
          "!type": "fn(key: string, defaultValue: number) -> number",
          "!url": "http://developer.android.com/reference/android/app/AppGlobals.html#getIntCoreSetting(java.lang.String, int)"
        },
        "getPackageManager": {
          "!type": "fn() -> IPackageManager",
          "!url": "http://developer.android.com/reference/android/app/AppGlobals.html#getPackageManager()"
        },
        "getInitialApplication": {
          "!type": "fn() -> +android.app.Application",
          "!url": "http://developer.android.com/reference/android/app/AppGlobals.html#getInitialApplication()"
        },
        "getInitialPackage": {
          "!type": "fn() -> string",
          "!url": "http://developer.android.com/reference/android/app/AppGlobals.html#getInitialPackage()"
        },
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "Fragment_Delegate": {
        "!url": "http://developer.android.com/reference/android/app/Fragment_Delegate.html",
        "!type": "fn()",
        "setLayoutlibCallback": {
          "!type": "fn(layoutlibCallback: LayoutlibCallback) -> void",
          "!url": "http://developer.android.com/reference/android/app/Fragment_Delegate.html#setLayoutlibCallback(LayoutlibCallback)"
        },
        "prototype": {
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          }
        }
      },
      "PendingIntent": {
        "!url": "http://developer.android.com/reference/android/app/PendingIntent.html",
        "CanceledException": {
          "!url": "http://developer.android.com/reference/android/app/PendingIntent.CanceledException.html",
          "!type": "fn()",
          "prototype": {
            "initCause": {
              "!type": "fn(throwable: +java.lang.Throwable) -> +java.lang.Throwable",
              "!url": "http://developer.android.com/reference/java/lang/Throwable.html#initCause(java.lang.Throwable)"
            },
            "getLocalizedMessage": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getLocalizedMessage()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Throwable.html#toString()"
            },
            "getStackTrace": {
              "!type": "fn() -> +java.newArray",
              "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getStackTrace()"
            },
            "printStackTrace": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Throwable.html#printStackTrace()"
            },
            "addSuppressed": {
              "!type": "fn(throwable: +java.lang.Throwable) -> void",
              "!url": "http://developer.android.com/reference/java/lang/Throwable.html#addSuppressed(java.lang.Throwable)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "fillInStackTrace": {
              "!type": "fn() -> +java.lang.Throwable",
              "!url": "http://developer.android.com/reference/java/lang/Throwable.html#fillInStackTrace()"
            },
            "setStackTrace": {
              "!type": "fn(trace: +java.newArray) -> void",
              "!url": "http://developer.android.com/reference/java/lang/Throwable.html#setStackTrace(java.lang.StackTraceElement[])"
            },
            "getSuppressed": {
              "!type": "fn() -> +java.newArray",
              "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getSuppressed()"
            },
            "getCause": {
              "!type": "fn() -> +java.lang.Throwable",
              "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getCause()"
            },
            "getMessage": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Throwable.html#getMessage()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            }
          }
        },
        "CREATOR": {
          "!type": "+android.os.Parcelable.Creator",
          "!url": "http://developer.android.com/reference/android/app/PendingIntent.html#CREATOR"
        },
        "FLAG_ONE_SHOT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/PendingIntent.html#FLAG_ONE_SHOT"
        },
        "FLAG_UPDATE_CURRENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/PendingIntent.html#FLAG_UPDATE_CURRENT"
        },
        "FLAG_NO_CREATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/PendingIntent.html#FLAG_NO_CREATE"
        },
        "FLAG_CANCEL_CURRENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/PendingIntent.html#FLAG_CANCEL_CURRENT"
        },
        "FLAG_IMMUTABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/PendingIntent.html#FLAG_IMMUTABLE"
        },
        "getActivityAsUser": {
          "!type": "fn(context: +android.content.Context, requestCode: number, intent: +android.content.Intent, flags: number, options: +android.os.Bundle, user: +android.os.UserHandle) -> +android.app.PendingIntent",
          "!url": "http://developer.android.com/reference/android/app/PendingIntent.html#getActivityAsUser(android.content.Context, int, android.content.Intent, int, android.os.Bundle, android.os.UserHandle)"
        },
        "getBroadcast": {
          "!type": "fn(context: +android.content.Context, requestCode: number, intent: +android.content.Intent, flags: number) -> +android.app.PendingIntent",
          "!url": "http://developer.android.com/reference/android/app/PendingIntent.html#getBroadcast(android.content.Context, int, android.content.Intent, int)"
        },
        "getActivitiesAsUser": {
          "!type": "fn(context: +android.content.Context, requestCode: number, intents: +java.newArray, flags: number, options: +android.os.Bundle, user: +android.os.UserHandle) -> +android.app.PendingIntent",
          "!url": "http://developer.android.com/reference/android/app/PendingIntent.html#getActivitiesAsUser(android.content.Context, int, android.content.Intent[], int, android.os.Bundle, android.os.UserHandle)"
        },
        "readPendingIntentOrNullFromParcel": {
          "!type": "fn(in: +android.os.Parcel) -> +android.app.PendingIntent",
          "!url": "http://developer.android.com/reference/android/app/PendingIntent.html#readPendingIntentOrNullFromParcel(android.os.Parcel)"
        },
        "getBroadcastAsUser": {
          "!type": "fn(context: +android.content.Context, requestCode: number, intent: +android.content.Intent, flags: number, userHandle: +android.os.UserHandle) -> +android.app.PendingIntent",
          "!url": "http://developer.android.com/reference/android/app/PendingIntent.html#getBroadcastAsUser(android.content.Context, int, android.content.Intent, int, android.os.UserHandle)"
        },
        "getService": {
          "!type": "fn(context: +android.content.Context, requestCode: number, intent: +android.content.Intent, flags: number) -> +android.app.PendingIntent",
          "!url": "http://developer.android.com/reference/android/app/PendingIntent.html#getService(android.content.Context, int, android.content.Intent, int)"
        },
        "getActivity": {
          "!type": "fn(context: +android.content.Context, requestCode: number, intent: +android.content.Intent, flags: number) -> +android.app.PendingIntent",
          "!url": "http://developer.android.com/reference/android/app/PendingIntent.html#getActivity(android.content.Context, int, android.content.Intent, int)"
        },
        "getActivities": {
          "!type": "fn(context: +android.content.Context, requestCode: number, intents: +java.newArray, flags: number) -> +android.app.PendingIntent",
          "!url": "http://developer.android.com/reference/android/app/PendingIntent.html#getActivities(android.content.Context, int, android.content.Intent[], int)"
        },
        "writePendingIntentOrNullToParcel": {
          "!type": "fn(sender: +android.app.PendingIntent, out: +android.os.Parcel) -> void",
          "!url": "http://developer.android.com/reference/android/app/PendingIntent.html#writePendingIntentOrNullToParcel(android.app.PendingIntent, android.os.Parcel)"
        },
        "prototype": {
          "writeToParcel": {
            "!type": "fn(out: +android.os.Parcel, flags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/PendingIntent.html#writeToParcel(android.os.Parcel, int)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getIntentSender": {
            "!type": "fn() -> +android.content.IntentSender",
            "!url": "http://developer.android.com/reference/android/app/PendingIntent.html#getIntentSender()"
          },
          "getCreatorUid": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/PendingIntent.html#getCreatorUid()"
          },
          "cancel": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/PendingIntent.html#cancel()"
          },
          "isTargetedToPackage": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/PendingIntent.html#isTargetedToPackage()"
          },
          "send": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/PendingIntent.html#send()"
          },
          "describeContents": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/PendingIntent.html#describeContents()"
          },
          "getTargetPackage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/PendingIntent.html#getTargetPackage()"
          },
          "isActivity": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/PendingIntent.html#isActivity()"
          },
          "equals": {
            "!type": "fn(otherObj: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/android/app/PendingIntent.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getTag": {
            "!type": "fn(prefix: string) -> string",
            "!url": "http://developer.android.com/reference/android/app/PendingIntent.html#getTag(java.lang.String)"
          },
          "getCreatorUserHandle": {
            "!type": "fn() -> +android.os.UserHandle",
            "!url": "http://developer.android.com/reference/android/app/PendingIntent.html#getCreatorUserHandle()"
          },
          "getCreatorPackage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/PendingIntent.html#getCreatorPackage()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/PendingIntent.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/PendingIntent.html#hashCode()"
          },
          "getIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/app/PendingIntent.html#getIntent()"
          },
          "getTarget": {
            "!type": "fn() -> IIntentSender",
            "!url": "http://developer.android.com/reference/android/app/PendingIntent.html#getTarget()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "ResourcesManager": {
        "!url": "http://developer.android.com/reference/android/app/ResourcesManager.html",
        "!type": "fn()",
        "getInstance": {
          "!type": "fn() -> +android.app.ResourcesManager",
          "!url": "http://developer.android.com/reference/android/app/ResourcesManager.html#getInstance()"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getAdjustedDisplay": {
            "!type": "fn(displayId: number, displayAdjustments: +android.view.DisplayAdjustments) -> +android.view.Display",
            "!url": "http://developer.android.com/reference/android/app/ResourcesManager.html#getAdjustedDisplay(int, android.view.DisplayAdjustments)"
          },
          "applyCompatConfiguration": {
            "!type": "fn(displayDensity: number, compatConfiguration: +android.content.res.Configuration) -> bool",
            "!url": "http://developer.android.com/reference/android/app/ResourcesManager.html#applyCompatConfiguration(int, android.content.res.Configuration)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getConfiguration": {
            "!type": "fn() -> +android.content.res.Configuration",
            "!url": "http://developer.android.com/reference/android/app/ResourcesManager.html#getConfiguration()"
          }
        }
      },
      "AppImportanceMonitor": {
        "!url": "http://developer.android.com/reference/android/app/AppImportanceMonitor.html",
        "!type": "fn(context: +android.content.Context, looper: +android.os.Looper)",
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "getImportance": {
            "!type": "fn(uid: number) -> number",
            "!url": "http://developer.android.com/reference/android/app/AppImportanceMonitor.html#getImportance(int)"
          },
          "onImportanceChanged": {
            "!type": "fn(uid: number, importance: number, oldImportance: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/AppImportanceMonitor.html#onImportanceChanged(int, int, int)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "DatePickerDialog": {
        "!url": "http://developer.android.com/reference/android/app/DatePickerDialog.html",
        "!type": "fn(context: +android.content.Context, callBack: +android.app.DatePickerDialog.OnDateSetListener, year: number, monthOfYear: number, dayOfMonth: number)",
        "THEME_DEVICE_DEFAULT_DARK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#THEME_DEVICE_DEFAULT_DARK"
        },
        "THEME_TRADITIONAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#THEME_TRADITIONAL"
        },
        "THEME_HOLO_DARK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#THEME_HOLO_DARK"
        },
        "LAYOUT_HINT_SIDE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#LAYOUT_HINT_SIDE"
        },
        "LAYOUT_HINT_NONE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#LAYOUT_HINT_NONE"
        },
        "THEME_HOLO_LIGHT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#THEME_HOLO_LIGHT"
        },
        "THEME_DEVICE_DEFAULT_LIGHT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#THEME_DEVICE_DEFAULT_LIGHT"
        },
        "prototype": {
          "onKeyLongPress": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onKeyLongPress(int, android.view.KeyEvent)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "onPanelClosed": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onPanelClosed(int, android.view.Menu)"
          },
          "dispatchKeyShortcutEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#dispatchKeyShortcutEvent(android.view.KeyEvent)"
          },
          "onTrackballEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onTrackballEvent(android.view.MotionEvent)"
          },
          "onGenericMotionEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onGenericMotionEvent(android.view.MotionEvent)"
          },
          "setFeatureDrawableAlpha": {
            "!type": "fn(featureId: number, alpha: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setFeatureDrawableAlpha(int, int)"
          },
          "getVolumeControlStream": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getVolumeControlStream()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "onTouchEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onTouchEvent(android.view.MotionEvent)"
          },
          "onCreateOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onCreateOptionsMenu(android.view.Menu)"
          },
          "onCreatePanelView": {
            "!type": "fn(featureId: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onCreatePanelView(int)"
          },
          "show": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#show()"
          },
          "setInverseBackgroundForced": {
            "!type": "fn(forceInverseBackground: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#setInverseBackgroundForced(boolean)"
          },
          "addContentView": {
            "!type": "fn(view: +android.view.View, params: +android.view.ViewGroup.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#addContentView(android.view.View, android.view.ViewGroup.LayoutParams)"
          },
          "onContextItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onContextItemSelected(android.view.MenuItem)"
          },
          "getSearchEvent": {
            "!type": "fn() -> +android.view.SearchEvent",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getSearchEvent()"
          },
          "onDetachedFromWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onDetachedFromWindow()"
          },
          "onAttachedToWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onAttachedToWindow()"
          },
          "onContextMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onContextMenuClosed(android.view.Menu)"
          },
          "dismiss": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#dismiss()"
          },
          "setIconAttribute": {
            "!type": "fn(attrId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#setIconAttribute(int)"
          },
          "create": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#create()"
          },
          "findViewById": {
            "!type": "fn(id: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#findViewById(int)"
          },
          "getListView": {
            "!type": "fn() -> +android.widget.ListView",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#getListView()"
          },
          "updateDate": {
            "!type": "fn(year: number, monthOfYear: number, dayOfMonth: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/DatePickerDialog.html#updateDate(int, int, int)"
          },
          "dispatchTrackballEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#dispatchTrackballEvent(android.view.MotionEvent)"
          },
          "takeCancelAndDismissListeners": {
            "!type": "fn(msg: string, cancel: +android.content.DialogInterface.OnCancelListener, dismiss: +android.content.DialogInterface.OnDismissListener) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#takeCancelAndDismissListeners(java.lang.String, android.content.DialogInterface.OnCancelListener, android.content.DialogInterface.OnDismissListener)"
          },
          "dispatchGenericMotionEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#dispatchGenericMotionEvent(android.view.MotionEvent)"
          },
          "onKeyMultiple": {
            "!type": "fn(keyCode: number, repeatCount: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onKeyMultiple(int, int, android.view.KeyEvent)"
          },
          "setContentView": {
            "!type": "fn(layoutResID: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setContentView(int)"
          },
          "getCurrentFocus": {
            "!type": "fn() -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getCurrentFocus()"
          },
          "onKeyShortcut": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onKeyShortcut(int, android.view.KeyEvent)"
          },
          "onPrepareOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onPrepareOptionsMenu(android.view.Menu)"
          },
          "onCreateContextMenu": {
            "!type": "fn(menu: +android.view.ContextMenu, v: +android.view.View, menuInfo: +android.view.ContextMenu.ContextMenuInfo) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenu.ContextMenuInfo)"
          },
          "onKeyDown": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#onKeyDown(int, android.view.KeyEvent)"
          },
          "setButton3": {
            "!type": "fn(text: +java.lang.CharSequence, msg: +android.os.Message) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#setButton3(java.lang.CharSequence, android.os.Message)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "setButton2": {
            "!type": "fn(text: +java.lang.CharSequence, msg: +android.os.Message) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#setButton2(java.lang.CharSequence, android.os.Message)"
          },
          "setButton": {
            "!type": "fn(whichButton: number, text: +java.lang.CharSequence, msg: +android.os.Message) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#setButton(int, java.lang.CharSequence, android.os.Message)"
          },
          "setOnCancelListener": {
            "!type": "fn(listener: +android.content.DialogInterface.OnCancelListener) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setOnCancelListener(android.content.DialogInterface.OnCancelListener)"
          },
          "setView": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#setView(android.view.View)"
          },
          "setOnShowListener": {
            "!type": "fn(listener: +android.content.DialogInterface.OnShowListener) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setOnShowListener(android.content.DialogInterface.OnShowListener)"
          },
          "onRestoreInstanceState": {
            "!type": "fn(savedInstanceState: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/DatePickerDialog.html#onRestoreInstanceState(android.os.Bundle)"
          },
          "setMessage": {
            "!type": "fn(message: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#setMessage(java.lang.CharSequence)"
          },
          "onWindowDismissed": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onWindowDismissed()"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getContext()"
          },
          "dispatchKeyEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#dispatchKeyEvent(android.view.KeyEvent)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "onSearchRequested": {
            "!type": "fn(searchEvent: +android.view.SearchEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onSearchRequested(android.view.SearchEvent)"
          },
          "setCancelMessage": {
            "!type": "fn(msg: +android.os.Message) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setCancelMessage(android.os.Message)"
          },
          "onOptionsMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onOptionsMenuClosed(android.view.Menu)"
          },
          "setFeatureDrawable": {
            "!type": "fn(featureId: number, drawable: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setFeatureDrawable(int, android.graphics.drawable.Drawable)"
          },
          "onOptionsItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onOptionsItemSelected(android.view.MenuItem)"
          },
          "onSaveInstanceState": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/app/DatePickerDialog.html#onSaveInstanceState()"
          },
          "onCreatePanelMenu": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onCreatePanelMenu(int, android.view.Menu)"
          },
          "setDismissMessage": {
            "!type": "fn(msg: +android.os.Message) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setDismissMessage(android.os.Message)"
          },
          "onDateChanged": {
            "!type": "fn(view: +android.widget.DatePicker, year: number, month: number, day: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/DatePickerDialog.html#onDateChanged(android.widget.DatePicker, int, int, int)"
          },
          "requestWindowFeature": {
            "!type": "fn(featureId: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#requestWindowFeature(int)"
          },
          "dispatchTouchEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#dispatchTouchEvent(android.view.MotionEvent)"
          },
          "closeOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#closeOptionsMenu()"
          },
          "setFeatureDrawableResource": {
            "!type": "fn(featureId: number, resId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setFeatureDrawableResource(int, int)"
          },
          "getWindow": {
            "!type": "fn() -> +android.view.Window",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getWindow()"
          },
          "onClick": {
            "!type": "fn(dialog: +android.content.DialogInterface, which: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/DatePickerDialog.html#onClick(android.content.DialogInterface, int)"
          },
          "setFeatureDrawableUri": {
            "!type": "fn(featureId: number, uri: +android.net.Uri) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setFeatureDrawableUri(int, android.net.Uri)"
          },
          "getOwnerActivity": {
            "!type": "fn() -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getOwnerActivity()"
          },
          "setVolumeControlStream": {
            "!type": "fn(streamType: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setVolumeControlStream(int)"
          },
          "setIcon": {
            "!type": "fn(resId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#setIcon(int)"
          },
          "setOwnerActivity": {
            "!type": "fn(activity: +android.app.Activity) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setOwnerActivity(android.app.Activity)"
          },
          "onKeyUp": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#onKeyUp(int, android.view.KeyEvent)"
          },
          "hide": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#hide()"
          },
          "unregisterForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#unregisterForContextMenu(android.view.View)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "onPreparePanel": {
            "!type": "fn(featureId: number, view: +android.view.View, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onPreparePanel(int, android.view.View, android.view.Menu)"
          },
          "setOnKeyListener": {
            "!type": "fn(onKeyListener: +android.content.DialogInterface.OnKeyListener) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setOnKeyListener(android.content.DialogInterface.OnKeyListener)"
          },
          "getActionBar": {
            "!type": "fn() -> +android.app.ActionBar",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getActionBar()"
          },
          "registerForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#registerForContextMenu(android.view.View)"
          },
          "onActionModeFinished": {
            "!type": "fn(mode: +android.view.ActionMode) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onActionModeFinished(android.view.ActionMode)"
          },
          "getButton": {
            "!type": "fn(whichButton: number) -> +android.widget.Button",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#getButton(int)"
          },
          "onContentChanged": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onContentChanged()"
          },
          "takeKeyEvents": {
            "!type": "fn(get: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#takeKeyEvents(boolean)"
          },
          "onMenuItemSelected": {
            "!type": "fn(featureId: number, item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onMenuItemSelected(int, android.view.MenuItem)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "dispatchPopulateAccessibilityEvent": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
          },
          "isShowing": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#isShowing()"
          },
          "setCancelable": {
            "!type": "fn(flag: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setCancelable(boolean)"
          },
          "openOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#openOptionsMenu()"
          },
          "setOnDismissListener": {
            "!type": "fn(listener: +android.content.DialogInterface.OnDismissListener) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setOnDismissListener(android.content.DialogInterface.OnDismissListener)"
          },
          "onBackPressed": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onBackPressed()"
          },
          "setCanceledOnTouchOutside": {
            "!type": "fn(cancel: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setCanceledOnTouchOutside(boolean)"
          },
          "onWindowAttributesChanged": {
            "!type": "fn(params: +android.view.WindowManager.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onWindowAttributesChanged(android.view.WindowManager.LayoutParams)"
          },
          "setCustomTitle": {
            "!type": "fn(customTitleView: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#setCustomTitle(android.view.View)"
          },
          "onWindowFocusChanged": {
            "!type": "fn(hasFocus: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onWindowFocusChanged(boolean)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getLayoutInflater": {
            "!type": "fn() -> +android.view.LayoutInflater",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getLayoutInflater()"
          },
          "invalidateOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#invalidateOptionsMenu()"
          },
          "onWindowStartingActionMode": {
            "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onWindowStartingActionMode(android.view.ActionMode.Callback)"
          },
          "openContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#openContextMenu(android.view.View)"
          },
          "cancel": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#cancel()"
          },
          "onMenuOpened": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onMenuOpened(int, android.view.Menu)"
          },
          "setTitle": {
            "!type": "fn(title: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/app/AlertDialog.html#setTitle(java.lang.CharSequence)"
          },
          "onActionModeStarted": {
            "!type": "fn(mode: +android.view.ActionMode) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onActionModeStarted(android.view.ActionMode)"
          },
          "getDatePicker": {
            "!type": "fn() -> +android.widget.DatePicker",
            "!url": "http://developer.android.com/reference/android/app/DatePickerDialog.html#getDatePicker()"
          }
        }
      },
      "ResultInfo": {
        "!url": "http://developer.android.com/reference/android/app/ResultInfo.html",
        "!type": "fn(resultWho: string, requestCode: number, resultCode: number, data: +android.content.Intent)",
        "CREATOR": {
          "!type": "+android.os.Parcelable.Creator",
          "!url": "http://developer.android.com/reference/android/app/ResultInfo.html#CREATOR"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/ResultInfo.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "describeContents": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/ResultInfo.html#describeContents()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "writeToParcel": {
            "!type": "fn(out: +android.os.Parcel, flags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/ResultInfo.html#writeToParcel(android.os.Parcel, int)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "ActionBar": {
        "!url": "http://developer.android.com/reference/android/app/ActionBar.html",
        "!type": "fn()",
        "Tab": {
          "!url": "http://developer.android.com/reference/android/app/ActionBar.Tab.html",
          "!type": "fn()",
          "INVALID_POSITION": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.Tab.html#INVALID_POSITION"
          },
          "prototype": {
            "setTag": {
              "!type": "fn(obj: +java.lang.Object) -> +android.app.ActionBar.Tab",
              "!url": "http://developer.android.com/reference/android/app/ActionBar.Tab.html#setTag(java.lang.Object)"
            },
            "getText": {
              "!type": "fn() -> +java.lang.CharSequence",
              "!url": "http://developer.android.com/reference/android/app/ActionBar.Tab.html#getText()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "setIcon": {
              "!type": "fn(icon: +android.graphics.drawable.Drawable) -> +android.app.ActionBar.Tab",
              "!url": "http://developer.android.com/reference/android/app/ActionBar.Tab.html#setIcon(android.graphics.drawable.Drawable)"
            },
            "getIcon": {
              "!type": "fn() -> +android.graphics.drawable.Drawable",
              "!url": "http://developer.android.com/reference/android/app/ActionBar.Tab.html#getIcon()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "getTag": {
              "!type": "fn() -> +java.lang.Object",
              "!url": "http://developer.android.com/reference/android/app/ActionBar.Tab.html#getTag()"
            },
            "getCustomView": {
              "!type": "fn() -> +android.view.View",
              "!url": "http://developer.android.com/reference/android/app/ActionBar.Tab.html#getCustomView()"
            },
            "select": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/android/app/ActionBar.Tab.html#select()"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "getContentDescription": {
              "!type": "fn() -> +java.lang.CharSequence",
              "!url": "http://developer.android.com/reference/android/app/ActionBar.Tab.html#getContentDescription()"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "setCustomView": {
              "!type": "fn(view: +android.view.View) -> +android.app.ActionBar.Tab",
              "!url": "http://developer.android.com/reference/android/app/ActionBar.Tab.html#setCustomView(android.view.View)"
            },
            "setText": {
              "!type": "fn(text: +java.lang.CharSequence) -> +android.app.ActionBar.Tab",
              "!url": "http://developer.android.com/reference/android/app/ActionBar.Tab.html#setText(java.lang.CharSequence)"
            },
            "setContentDescription": {
              "!type": "fn(resId: number) -> +android.app.ActionBar.Tab",
              "!url": "http://developer.android.com/reference/android/app/ActionBar.Tab.html#setContentDescription(int)"
            },
            "setTabListener": {
              "!type": "fn(listener: +android.app.ActionBar.TabListener) -> +android.app.ActionBar.Tab",
              "!url": "http://developer.android.com/reference/android/app/ActionBar.Tab.html#setTabListener(android.app.ActionBar.TabListener)"
            },
            "getPosition": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/app/ActionBar.Tab.html#getPosition()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            }
          }
        },
        "LayoutParams": {
          "!url": "http://developer.android.com/reference/android/app/ActionBar.LayoutParams.html",
          "!type": "fn(c: +android.content.Context, attrs: +android.util.AttributeSet)",
          "WRAP_CONTENT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.LayoutParams.html#WRAP_CONTENT"
          },
          "MATCH_PARENT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.LayoutParams.html#MATCH_PARENT"
          },
          "FILL_PARENT": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.LayoutParams.html#FILL_PARENT"
          },
          "DEFAULT_MARGIN_RELATIVE": {
            "!type": "number",
            "!url": "http://developer.android.com/reference/android/view/ViewGroup.MarginLayoutParams.html#DEFAULT_MARGIN_RELATIVE"
          },
          "prototype": {
            "isLayoutRtl": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.MarginLayoutParams.html#isLayoutRtl()"
            },
            "notifyAll": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
            },
            "setLayoutDirection": {
              "!type": "fn(layoutDirection: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.MarginLayoutParams.html#setLayoutDirection(int)"
            },
            "setMarginStart": {
              "!type": "fn(start: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.MarginLayoutParams.html#setMarginStart(int)"
            },
            "copyMarginsFrom": {
              "!type": "fn(source: +android.view.ViewGroup.MarginLayoutParams) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.MarginLayoutParams.html#copyMarginsFrom(android.view.ViewGroup.MarginLayoutParams)"
            },
            "resolveLayoutDirection": {
              "!type": "fn(layoutDirection: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.MarginLayoutParams.html#resolveLayoutDirection(int)"
            },
            "isMarginRelative": {
              "!type": "fn() -> bool",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.MarginLayoutParams.html#isMarginRelative()"
            },
            "equals": {
              "!type": "fn(o: +java.lang.Object) -> bool",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
            },
            "notify": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
            },
            "setMarginEnd": {
              "!type": "fn(end: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.MarginLayoutParams.html#setMarginEnd(int)"
            },
            "debug": {
              "!type": "fn(output: string) -> string",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.LayoutParams.html#debug(java.lang.String)"
            },
            "wait": {
              "!type": "fn() -> void",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
            },
            "setMarginsRelative": {
              "!type": "fn(start: number, top: number, end: number, bottom: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.MarginLayoutParams.html#setMarginsRelative(int, int, int, int)"
            },
            "toString": {
              "!type": "fn() -> string",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
            },
            "getMarginStart": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.MarginLayoutParams.html#getMarginStart()"
            },
            "setMargins": {
              "!type": "fn(left: number, top: number, right: number, bottom: number) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.MarginLayoutParams.html#setMargins(int, int, int, int)"
            },
            "hashCode": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
            },
            "onDebugDraw": {
              "!type": "fn(view: +android.view.View, canvas: +android.graphics.Canvas, paint: +android.graphics.Paint) -> void",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.MarginLayoutParams.html#onDebugDraw(android.view.View, android.graphics.Canvas, android.graphics.Paint)"
            },
            "getLayoutDirection": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.MarginLayoutParams.html#getLayoutDirection()"
            },
            "getClass": {
              "!type": "fn() -> +java.lang.Class",
              "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
            },
            "getMarginEnd": {
              "!type": "fn() -> number",
              "!url": "http://developer.android.com/reference/android/view/ViewGroup.MarginLayoutParams.html#getMarginEnd()"
            }
          }
        },
        "NAVIGATION_MODE_TABS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActionBar.html#NAVIGATION_MODE_TABS"
        },
        "DISPLAY_SHOW_CUSTOM": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActionBar.html#DISPLAY_SHOW_CUSTOM"
        },
        "DISPLAY_SHOW_HOME": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActionBar.html#DISPLAY_SHOW_HOME"
        },
        "DISPLAY_HOME_AS_UP": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActionBar.html#DISPLAY_HOME_AS_UP"
        },
        "NAVIGATION_MODE_STANDARD": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActionBar.html#NAVIGATION_MODE_STANDARD"
        },
        "DISPLAY_SHOW_TITLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActionBar.html#DISPLAY_SHOW_TITLE"
        },
        "DISPLAY_USE_LOGO": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActionBar.html#DISPLAY_USE_LOGO"
        },
        "DISPLAY_TITLE_MULTIPLE_LINES": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActionBar.html#DISPLAY_TITLE_MULTIPLE_LINES"
        },
        "NAVIGATION_MODE_LIST": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActionBar.html#NAVIGATION_MODE_LIST"
        },
        "prototype": {
          "setStackedBackgroundDrawable": {
            "!type": "fn(d: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#setStackedBackgroundDrawable(android.graphics.drawable.Drawable)"
          },
          "setDisplayHomeAsUpEnabled": {
            "!type": "fn(showHomeAsUp: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#setDisplayHomeAsUpEnabled(boolean)"
          },
          "setSelectedNavigationItem": {
            "!type": "fn(position: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#setSelectedNavigationItem(int)"
          },
          "setHomeButtonEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#setHomeButtonEnabled(boolean)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "setCustomView": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#setCustomView(android.view.View)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "collapseActionView": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#collapseActionView()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "onConfigurationChanged": {
            "!type": "fn(config: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#onConfigurationChanged(android.content.res.Configuration)"
          },
          "getElevation": {
            "!type": "fn() -> +java.lang.Float",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#getElevation()"
          },
          "setLogo": {
            "!type": "fn(resId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#setLogo(int)"
          },
          "getTabAt": {
            "!type": "fn(index: number) -> +android.app.ActionBar.Tab",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#getTabAt(int)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getHideOffset": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#getHideOffset()"
          },
          "isHideOnContentScrollEnabled": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#isHideOnContentScrollEnabled()"
          },
          "startActionMode": {
            "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#startActionMode(android.view.ActionMode.Callback)"
          },
          "setNavigationMode": {
            "!type": "fn(mode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#setNavigationMode(int)"
          },
          "setDefaultDisplayHomeAsUpEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#setDefaultDisplayHomeAsUpEnabled(boolean)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "addTab": {
            "!type": "fn(tab: +android.app.ActionBar.Tab) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#addTab(android.app.ActionBar.Tab)"
          },
          "getTabCount": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#getTabCount()"
          },
          "removeTabAt": {
            "!type": "fn(position: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#removeTabAt(int)"
          },
          "setDisplayOptions": {
            "!type": "fn(options: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#setDisplayOptions(int)"
          },
          "dispatchMenuVisibilityChanged": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#dispatchMenuVisibilityChanged(boolean)"
          },
          "getSubtitle": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#getSubtitle()"
          },
          "openOptionsMenu": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#openOptionsMenu()"
          },
          "setDisplayShowCustomEnabled": {
            "!type": "fn(showCustom: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#setDisplayShowCustomEnabled(boolean)"
          },
          "setDisplayShowHomeEnabled": {
            "!type": "fn(showHome: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#setDisplayShowHomeEnabled(boolean)"
          },
          "selectTab": {
            "!type": "fn(tab: +android.app.ActionBar.Tab) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#selectTab(android.app.ActionBar.Tab)"
          },
          "setSplitBackgroundDrawable": {
            "!type": "fn(d: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#setSplitBackgroundDrawable(android.graphics.drawable.Drawable)"
          },
          "setDisplayUseLogoEnabled": {
            "!type": "fn(useLogo: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#setDisplayUseLogoEnabled(boolean)"
          },
          "setTitle": {
            "!type": "fn(title: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#setTitle(java.lang.CharSequence)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getTitle": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#getTitle()"
          },
          "newTab": {
            "!type": "fn() -> +android.app.ActionBar.Tab",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#newTab()"
          },
          "removeAllTabs": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#removeAllTabs()"
          },
          "invalidateOptionsMenu": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#invalidateOptionsMenu()"
          },
          "setBackgroundDrawable": {
            "!type": "fn(d: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#setBackgroundDrawable(android.graphics.drawable.Drawable)"
          },
          "setSubtitle": {
            "!type": "fn(subtitle: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#setSubtitle(java.lang.CharSequence)"
          },
          "setDisplayShowTitleEnabled": {
            "!type": "fn(showTitle: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#setDisplayShowTitleEnabled(boolean)"
          },
          "getHeight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#getHeight()"
          },
          "setHideOnContentScrollEnabled": {
            "!type": "fn(hideOnContentScroll: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#setHideOnContentScrollEnabled(boolean)"
          },
          "getSelectedNavigationIndex": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#getSelectedNavigationIndex()"
          },
          "onMenuKeyEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#onMenuKeyEvent(android.view.KeyEvent)"
          },
          "getSelectedTab": {
            "!type": "fn() -> +android.app.ActionBar.Tab",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#getSelectedTab()"
          },
          "setElevation": {
            "!type": "fn(elevation: +java.lang.Float) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#setElevation(float)"
          },
          "setHideOffset": {
            "!type": "fn(offset: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#setHideOffset(int)"
          },
          "show": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#show()"
          },
          "setHomeActionContentDescription": {
            "!type": "fn(description: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#setHomeActionContentDescription(java.lang.CharSequence)"
          },
          "setWindowTitle": {
            "!type": "fn(title: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#setWindowTitle(java.lang.CharSequence)"
          },
          "getCustomView": {
            "!type": "fn() -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#getCustomView()"
          },
          "getThemedContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#getThemedContext()"
          },
          "setIcon": {
            "!type": "fn(resId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#setIcon(int)"
          },
          "isTitleTruncated": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#isTitleTruncated()"
          },
          "removeOnMenuVisibilityListener": {
            "!type": "fn(listener: +android.app.ActionBar.OnMenuVisibilityListener) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#removeOnMenuVisibilityListener(android.app.ActionBar.OnMenuVisibilityListener)"
          },
          "removeTab": {
            "!type": "fn(tab: +android.app.ActionBar.Tab) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#removeTab(android.app.ActionBar.Tab)"
          },
          "getNavigationMode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#getNavigationMode()"
          },
          "setShowHideAnimationEnabled": {
            "!type": "fn(enabled: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#setShowHideAnimationEnabled(boolean)"
          },
          "hide": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#hide()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getDisplayOptions": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#getDisplayOptions()"
          },
          "addOnMenuVisibilityListener": {
            "!type": "fn(listener: +android.app.ActionBar.OnMenuVisibilityListener) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#addOnMenuVisibilityListener(android.app.ActionBar.OnMenuVisibilityListener)"
          },
          "onKeyShortcut": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#onKeyShortcut(int, android.view.KeyEvent)"
          },
          "isShowing": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#isShowing()"
          },
          "setHomeAsUpIndicator": {
            "!type": "fn(indicator: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#setHomeAsUpIndicator(android.graphics.drawable.Drawable)"
          },
          "getNavigationItemCount": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#getNavigationItemCount()"
          },
          "setListNavigationCallbacks": {
            "!type": "fn(adapter: +android.widget.SpinnerAdapter, callback: +android.app.ActionBar.OnNavigationListener) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActionBar.html#setListNavigationCallbacks(android.widget.SpinnerAdapter, android.app.ActionBar.OnNavigationListener)"
          }
        }
      },
      "ActivityThread": {
        "!url": "http://developer.android.com/reference/android/app/ActivityThread.html",
        "SERVICE_DONE_EXECUTING_ANON": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#SERVICE_DONE_EXECUTING_ANON"
        },
        "DEBUG_CONFIGURATION": {
          "!type": "bool",
          "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#DEBUG_CONFIGURATION"
        },
        "SERVICE_DONE_EXECUTING_START": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#SERVICE_DONE_EXECUTING_START"
        },
        "SERVICE_DONE_EXECUTING_STOP": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#SERVICE_DONE_EXECUTING_STOP"
        },
        "DEBUG_BROADCAST": {
          "!type": "bool",
          "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#DEBUG_BROADCAST"
        },
        "TAG": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#TAG"
        },
        "systemMain": {
          "!type": "fn() -> +android.app.ActivityThread",
          "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#systemMain()"
        },
        "currentApplication": {
          "!type": "fn() -> +android.app.Application",
          "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#currentApplication()"
        },
        "main": {
          "!type": "fn(args: +java.newArray) -> void",
          "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#main(java.lang.String[])"
        },
        "getIntentBeingBroadcast": {
          "!type": "fn() -> +android.content.Intent",
          "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#getIntentBeingBroadcast()"
        },
        "getPackageManager": {
          "!type": "fn() -> IPackageManager",
          "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#getPackageManager()"
        },
        "dumpMemInfoTable": {
          "!type": "fn(pw: +java.io.PrintWriter, memInfo: +android.os.Debug.MemoryInfo, checkin: bool, dumpFullInfo: bool, dumpDalvik: bool, dumpSummaryOnly: bool, pid: number, processName: string, nativeMax: +java.lang.Long, nativeAllocated: +java.lang.Long, nativeFree: +java.lang.Long, dalvikMax: +java.lang.Long, dalvikAllocated: +java.lang.Long, dalvikFree: +java.lang.Long) -> void",
          "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#dumpMemInfoTable(java.io.PrintWriter, android.os.Debug.MemoryInfo, boolean, boolean, boolean, boolean, int, java.lang.String, long, long, long, long, long, long)"
        },
        "currentOpPackageName": {
          "!type": "fn() -> string",
          "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#currentOpPackageName()"
        },
        "currentPackageName": {
          "!type": "fn() -> string",
          "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#currentPackageName()"
        },
        "currentActivityThread": {
          "!type": "fn() -> +android.app.ActivityThread",
          "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#currentActivityThread()"
        },
        "currentProcessName": {
          "!type": "fn() -> string",
          "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#currentProcessName()"
        },
        "isSystem": {
          "!type": "fn() -> bool",
          "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#isSystem()"
        },
        "prototype": {
          "getActivity": {
            "!type": "fn(token: +android.os.IBinder) -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#getActivity(android.os.IBinder)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "startActivityNow": {
            "!type": "fn(parent: +android.app.Activity, id: string, intent: +android.content.Intent, activityInfo: +android.content.pm.ActivityInfo, token: +android.os.IBinder, state: +android.os.Bundle, lastNonConfigurationInstances: +android.app.Activity.NonConfigurationInstances) -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#startActivityNow(android.app.Activity, java.lang.String, android.content.Intent, android.content.pm.ActivityInfo, android.os.IBinder, android.os.Bundle, android.app.Activity.NonConfigurationInstances)"
          },
          "getApplication": {
            "!type": "fn() -> +android.app.Application",
            "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#getApplication()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "applyConfigurationToResources": {
            "!type": "fn(config: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#applyConfigurationToResources(android.content.res.Configuration)"
          },
          "getApplicationThread": {
            "!type": "fn() -> +android.app.ActivityThread.ApplicationThread",
            "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#getApplicationThread()"
          },
          "isProfiling": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#isProfiling()"
          },
          "installSystemProviders": {
            "!type": "fn(providers: +java.util.List) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#installSystemProviders(java.util.List)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "handleCancelVisibleBehind": {
            "!type": "fn(token: +android.os.IBinder) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#handleCancelVisibleBehind(android.os.IBinder)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "acquireProvider": {
            "!type": "fn(c: +android.content.Context, auth: string, userId: number, stable: bool) -> +android.content.IContentProvider",
            "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#acquireProvider(android.content.Context, java.lang.String, int, boolean)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getInstrumentation": {
            "!type": "fn() -> +android.app.Instrumentation",
            "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#getInstrumentation()"
          },
          "registerOnActivityPausedListener": {
            "!type": "fn(activity: +android.app.Activity, listener: +android.app.OnActivityPausedListener) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#registerOnActivityPausedListener(android.app.Activity, android.app.OnActivityPausedListener)"
          },
          "getProcessName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#getProcessName()"
          },
          "acquireExistingProvider": {
            "!type": "fn(c: +android.content.Context, auth: string, userId: number, stable: bool) -> +android.content.IContentProvider",
            "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#acquireExistingProvider(android.content.Context, java.lang.String, int, boolean)"
          },
          "resolveActivityInfo": {
            "!type": "fn(intent: +android.content.Intent) -> +android.content.pm.ActivityInfo",
            "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#resolveActivityInfo(android.content.Intent)"
          },
          "getLooper": {
            "!type": "fn() -> +android.os.Looper",
            "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#getLooper()"
          },
          "getPackageInfoNoCheck": {
            "!type": "fn(ai: +android.content.pm.ApplicationInfo, compatInfo: +android.content.res.CompatibilityInfo) -> +android.app.LoadedApk",
            "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#getPackageInfoNoCheck(android.content.pm.ApplicationInfo, android.content.res.CompatibilityInfo)"
          },
          "handleOnBackgroundVisibleBehindChanged": {
            "!type": "fn(token: +android.os.IBinder, visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#handleOnBackgroundVisibleBehindChanged(android.os.IBinder, boolean)"
          },
          "getSystemContext": {
            "!type": "fn() -> +android.app.ContextImpl",
            "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#getSystemContext()"
          },
          "sendActivityResult": {
            "!type": "fn(token: +android.os.IBinder, id: string, requestCode: number, resultCode: number, data: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#sendActivityResult(android.os.IBinder, java.lang.String, int, int, android.content.Intent)"
          },
          "handleTranslucentConversionComplete": {
            "!type": "fn(token: +android.os.IBinder, drawComplete: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#handleTranslucentConversionComplete(android.os.IBinder, boolean)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "performResumeActivity": {
            "!type": "fn(token: +android.os.IBinder, clearHide: bool) -> +android.app.ActivityThread.ActivityClientRecord",
            "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#performResumeActivity(android.os.IBinder, boolean)"
          },
          "getPackageInfo": {
            "!type": "fn(packageName: string, compatInfo: +android.content.res.CompatibilityInfo, flags: number) -> +android.app.LoadedApk",
            "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#getPackageInfo(java.lang.String, android.content.res.CompatibilityInfo, int)"
          },
          "requestRelaunchActivity": {
            "!type": "fn(token: +android.os.IBinder, pendingResults: +java.util.List, pendingNewIntents: +java.util.List, configChanges: number, notResumed: bool, config: +android.content.res.Configuration, overrideConfig: +android.content.res.Configuration, fromServer: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#requestRelaunchActivity(android.os.IBinder, java.util.List, java.util.List, int, boolean, android.content.res.Configuration, android.content.res.Configuration, boolean)"
          },
          "handleRequestAssistContextExtras": {
            "!type": "fn(cmd: +android.app.ActivityThread.RequestAssistContextExtras) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#handleRequestAssistContextExtras(android.app.ActivityThread.RequestAssistContextExtras)"
          },
          "handleInstallProvider": {
            "!type": "fn(info: +android.content.pm.ProviderInfo) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#handleInstallProvider(android.content.pm.ProviderInfo)"
          },
          "unregisterOnActivityPausedListener": {
            "!type": "fn(activity: +android.app.Activity, listener: +android.app.OnActivityPausedListener) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#unregisterOnActivityPausedListener(android.app.Activity, android.app.OnActivityPausedListener)"
          },
          "performDestroyActivity": {
            "!type": "fn(token: +android.os.IBinder, finishing: bool) -> +android.app.ActivityThread.ActivityClientRecord",
            "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#performDestroyActivity(android.os.IBinder, boolean)"
          },
          "releaseProvider": {
            "!type": "fn(provider: +android.content.IContentProvider, stable: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#releaseProvider(android.content.IContentProvider, boolean)"
          },
          "onNewActivityOptions": {
            "!type": "fn(token: +android.os.IBinder, options: +android.app.ActivityOptions) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#onNewActivityOptions(android.os.IBinder, android.app.ActivityOptions)"
          },
          "performNewIntents": {
            "!type": "fn(token: +android.os.IBinder, intents: +java.util.List) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#performNewIntents(android.os.IBinder, java.util.List)"
          },
          "installSystemApplicationInfo": {
            "!type": "fn(info: +android.content.pm.ApplicationInfo, classLoader: +java.lang.ClassLoader) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#installSystemApplicationInfo(android.content.pm.ApplicationInfo, java.lang.ClassLoader)"
          },
          "peekPackageInfo": {
            "!type": "fn(packageName: string, includeCode: bool) -> +android.app.LoadedApk",
            "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#peekPackageInfo(java.lang.String, boolean)"
          },
          "getProfileFilePath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#getProfileFilePath()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getIntCoreSetting": {
            "!type": "fn(key: string, defaultValue: number) -> number",
            "!url": "http://developer.android.com/reference/android/app/ActivityThread.html#getIntCoreSetting(java.lang.String, int)"
          }
        }
      },
      "ApplicationThreadNative": {
        "!url": "http://developer.android.com/reference/android/app/ApplicationThreadNative.html",
        "!type": "fn()",
        "blockUntilThreadAvailable": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#blockUntilThreadAvailable()"
        },
        "getThreadStrictModePolicy": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#getThreadStrictModePolicy()"
        },
        "setDumpDisabled": {
          "!type": "fn(msg: string) -> void",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#setDumpDisabled(java.lang.String)"
        },
        "clearCallingIdentity": {
          "!type": "fn() -> +java.lang.Long",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#clearCallingIdentity()"
        },
        "flushPendingCommands": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#flushPendingCommands()"
        },
        "setThreadStrictModePolicy": {
          "!type": "fn(policyMask: number) -> void",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#setThreadStrictModePolicy(int)"
        },
        "asInterface": {
          "!type": "fn(obj: +android.os.IBinder) -> +android.app.IApplicationThread",
          "!url": "http://developer.android.com/reference/android/app/ApplicationThreadNative.html#asInterface(android.os.IBinder)"
        },
        "getCallingUserHandle": {
          "!type": "fn() -> +android.os.UserHandle",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#getCallingUserHandle()"
        },
        "getCallingPid": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#getCallingPid()"
        },
        "isProxy": {
          "!type": "fn(iface: +android.os.IInterface) -> bool",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#isProxy(android.os.IInterface)"
        },
        "joinThreadPool": {
          "!type": "fn() -> void",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#joinThreadPool()"
        },
        "getCallingUid": {
          "!type": "fn() -> number",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#getCallingUid()"
        },
        "restoreCallingIdentity": {
          "!type": "fn(token: +java.lang.Long) -> void",
          "!url": "http://developer.android.com/reference/android/os/Binder.html#restoreCallingIdentity(long)"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "linkToDeath": {
            "!type": "fn(recipient: +android.os.IBinder.DeathRecipient, flags: number) -> void",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#linkToDeath(android.os.IBinder.DeathRecipient, int)"
          },
          "dumpAsync": {
            "!type": "fn(fd: +java.io.FileDescriptor, args: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#dumpAsync(java.io.FileDescriptor, java.lang.String[])"
          },
          "dump": {
            "!type": "fn(fd: +java.io.FileDescriptor, args: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#dump(java.io.FileDescriptor, java.lang.String[])"
          },
          "attachInterface": {
            "!type": "fn(owner: +android.os.IInterface, descriptor: string) -> void",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#attachInterface(android.os.IInterface, java.lang.String)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "isBinderAlive": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#isBinderAlive()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "onTransact": {
            "!type": "fn(code: number, data: +android.os.Parcel, reply: +android.os.Parcel, flags: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/ApplicationThreadNative.html#onTransact(int, android.os.Parcel, android.os.Parcel, int)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "unlinkToDeath": {
            "!type": "fn(recipient: +android.os.IBinder.DeathRecipient, flags: number) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#unlinkToDeath(android.os.IBinder.DeathRecipient, int)"
          },
          "transact": {
            "!type": "fn(code: number, data: +android.os.Parcel, reply: +android.os.Parcel, flags: number) -> bool",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#transact(int, android.os.Parcel, android.os.Parcel, int)"
          },
          "asBinder": {
            "!type": "fn() -> +android.os.IBinder",
            "!url": "http://developer.android.com/reference/android/app/ApplicationThreadNative.html#asBinder()"
          },
          "getInterfaceDescriptor": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#getInterfaceDescriptor()"
          },
          "pingBinder": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#pingBinder()"
          },
          "queryLocalInterface": {
            "!type": "fn(descriptor: string) -> +android.os.IInterface",
            "!url": "http://developer.android.com/reference/android/os/Binder.html#queryLocalInterface(java.lang.String)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          }
        }
      },
      "Presentation": {
        "!url": "http://developer.android.com/reference/android/app/Presentation.html",
        "!type": "fn(outerContext: +android.content.Context, display: +android.view.Display)",
        "prototype": {
          "onKeyLongPress": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onKeyLongPress(int, android.view.KeyEvent)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "onPanelClosed": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onPanelClosed(int, android.view.Menu)"
          },
          "dispatchKeyShortcutEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#dispatchKeyShortcutEvent(android.view.KeyEvent)"
          },
          "onTrackballEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onTrackballEvent(android.view.MotionEvent)"
          },
          "onGenericMotionEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onGenericMotionEvent(android.view.MotionEvent)"
          },
          "setFeatureDrawableAlpha": {
            "!type": "fn(featureId: number, alpha: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setFeatureDrawableAlpha(int, int)"
          },
          "getVolumeControlStream": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getVolumeControlStream()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "onTouchEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onTouchEvent(android.view.MotionEvent)"
          },
          "onCreateOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onCreateOptionsMenu(android.view.Menu)"
          },
          "onCreatePanelView": {
            "!type": "fn(featureId: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onCreatePanelView(int)"
          },
          "show": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Presentation.html#show()"
          },
          "addContentView": {
            "!type": "fn(view: +android.view.View, params: +android.view.ViewGroup.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#addContentView(android.view.View, android.view.ViewGroup.LayoutParams)"
          },
          "onContextItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onContextItemSelected(android.view.MenuItem)"
          },
          "getSearchEvent": {
            "!type": "fn() -> +android.view.SearchEvent",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getSearchEvent()"
          },
          "onDetachedFromWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onDetachedFromWindow()"
          },
          "onAttachedToWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onAttachedToWindow()"
          },
          "onContextMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onContextMenuClosed(android.view.Menu)"
          },
          "dismiss": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#dismiss()"
          },
          "create": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#create()"
          },
          "findViewById": {
            "!type": "fn(id: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#findViewById(int)"
          },
          "dispatchTrackballEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#dispatchTrackballEvent(android.view.MotionEvent)"
          },
          "takeCancelAndDismissListeners": {
            "!type": "fn(msg: string, cancel: +android.content.DialogInterface.OnCancelListener, dismiss: +android.content.DialogInterface.OnDismissListener) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#takeCancelAndDismissListeners(java.lang.String, android.content.DialogInterface.OnCancelListener, android.content.DialogInterface.OnDismissListener)"
          },
          "dispatchGenericMotionEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#dispatchGenericMotionEvent(android.view.MotionEvent)"
          },
          "onKeyMultiple": {
            "!type": "fn(keyCode: number, repeatCount: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onKeyMultiple(int, int, android.view.KeyEvent)"
          },
          "setContentView": {
            "!type": "fn(layoutResID: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setContentView(int)"
          },
          "getCurrentFocus": {
            "!type": "fn() -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getCurrentFocus()"
          },
          "onKeyShortcut": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onKeyShortcut(int, android.view.KeyEvent)"
          },
          "onPrepareOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onPrepareOptionsMenu(android.view.Menu)"
          },
          "onCreateContextMenu": {
            "!type": "fn(menu: +android.view.ContextMenu, v: +android.view.View, menuInfo: +android.view.ContextMenu.ContextMenuInfo) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenu.ContextMenuInfo)"
          },
          "onKeyDown": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onKeyDown(int, android.view.KeyEvent)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "setOnCancelListener": {
            "!type": "fn(listener: +android.content.DialogInterface.OnCancelListener) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setOnCancelListener(android.content.DialogInterface.OnCancelListener)"
          },
          "setOnShowListener": {
            "!type": "fn(listener: +android.content.DialogInterface.OnShowListener) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setOnShowListener(android.content.DialogInterface.OnShowListener)"
          },
          "onRestoreInstanceState": {
            "!type": "fn(savedInstanceState: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onRestoreInstanceState(android.os.Bundle)"
          },
          "onWindowDismissed": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onWindowDismissed()"
          },
          "getContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getContext()"
          },
          "dispatchKeyEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#dispatchKeyEvent(android.view.KeyEvent)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "onSearchRequested": {
            "!type": "fn(searchEvent: +android.view.SearchEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onSearchRequested(android.view.SearchEvent)"
          },
          "setCancelMessage": {
            "!type": "fn(msg: +android.os.Message) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setCancelMessage(android.os.Message)"
          },
          "onOptionsMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onOptionsMenuClosed(android.view.Menu)"
          },
          "setFeatureDrawable": {
            "!type": "fn(featureId: number, drawable: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setFeatureDrawable(int, android.graphics.drawable.Drawable)"
          },
          "onOptionsItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onOptionsItemSelected(android.view.MenuItem)"
          },
          "onSaveInstanceState": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onSaveInstanceState()"
          },
          "onCreatePanelMenu": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onCreatePanelMenu(int, android.view.Menu)"
          },
          "setDismissMessage": {
            "!type": "fn(msg: +android.os.Message) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setDismissMessage(android.os.Message)"
          },
          "dispatchTouchEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#dispatchTouchEvent(android.view.MotionEvent)"
          },
          "requestWindowFeature": {
            "!type": "fn(featureId: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#requestWindowFeature(int)"
          },
          "closeOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#closeOptionsMenu()"
          },
          "setFeatureDrawableResource": {
            "!type": "fn(featureId: number, resId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setFeatureDrawableResource(int, int)"
          },
          "getWindow": {
            "!type": "fn() -> +android.view.Window",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getWindow()"
          },
          "onDisplayChanged": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Presentation.html#onDisplayChanged()"
          },
          "setFeatureDrawableUri": {
            "!type": "fn(featureId: number, uri: +android.net.Uri) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setFeatureDrawableUri(int, android.net.Uri)"
          },
          "getOwnerActivity": {
            "!type": "fn() -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getOwnerActivity()"
          },
          "setVolumeControlStream": {
            "!type": "fn(streamType: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setVolumeControlStream(int)"
          },
          "setOwnerActivity": {
            "!type": "fn(activity: +android.app.Activity) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setOwnerActivity(android.app.Activity)"
          },
          "getDisplay": {
            "!type": "fn() -> +android.view.Display",
            "!url": "http://developer.android.com/reference/android/app/Presentation.html#getDisplay()"
          },
          "onKeyUp": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onKeyUp(int, android.view.KeyEvent)"
          },
          "hide": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#hide()"
          },
          "unregisterForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#unregisterForContextMenu(android.view.View)"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "onPreparePanel": {
            "!type": "fn(featureId: number, view: +android.view.View, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onPreparePanel(int, android.view.View, android.view.Menu)"
          },
          "setOnKeyListener": {
            "!type": "fn(onKeyListener: +android.content.DialogInterface.OnKeyListener) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setOnKeyListener(android.content.DialogInterface.OnKeyListener)"
          },
          "getActionBar": {
            "!type": "fn() -> +android.app.ActionBar",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getActionBar()"
          },
          "registerForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#registerForContextMenu(android.view.View)"
          },
          "onActionModeFinished": {
            "!type": "fn(mode: +android.view.ActionMode) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onActionModeFinished(android.view.ActionMode)"
          },
          "onContentChanged": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onContentChanged()"
          },
          "onDisplayRemoved": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Presentation.html#onDisplayRemoved()"
          },
          "onMenuItemSelected": {
            "!type": "fn(featureId: number, item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onMenuItemSelected(int, android.view.MenuItem)"
          },
          "takeKeyEvents": {
            "!type": "fn(get: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#takeKeyEvents(boolean)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "dispatchPopulateAccessibilityEvent": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
          },
          "isShowing": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#isShowing()"
          },
          "setCancelable": {
            "!type": "fn(flag: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setCancelable(boolean)"
          },
          "openOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#openOptionsMenu()"
          },
          "setOnDismissListener": {
            "!type": "fn(listener: +android.content.DialogInterface.OnDismissListener) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setOnDismissListener(android.content.DialogInterface.OnDismissListener)"
          },
          "onBackPressed": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onBackPressed()"
          },
          "setCanceledOnTouchOutside": {
            "!type": "fn(cancel: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setCanceledOnTouchOutside(boolean)"
          },
          "onWindowAttributesChanged": {
            "!type": "fn(params: +android.view.WindowManager.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onWindowAttributesChanged(android.view.WindowManager.LayoutParams)"
          },
          "onWindowFocusChanged": {
            "!type": "fn(hasFocus: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onWindowFocusChanged(boolean)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getLayoutInflater": {
            "!type": "fn() -> +android.view.LayoutInflater",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#getLayoutInflater()"
          },
          "invalidateOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#invalidateOptionsMenu()"
          },
          "onWindowStartingActionMode": {
            "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onWindowStartingActionMode(android.view.ActionMode.Callback)"
          },
          "openContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#openContextMenu(android.view.View)"
          },
          "cancel": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#cancel()"
          },
          "onMenuOpened": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onMenuOpened(int, android.view.Menu)"
          },
          "setTitle": {
            "!type": "fn(title: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#setTitle(java.lang.CharSequence)"
          },
          "onActionModeStarted": {
            "!type": "fn(mode: +android.view.ActionMode) -> void",
            "!url": "http://developer.android.com/reference/android/app/Dialog.html#onActionModeStarted(android.view.ActionMode)"
          },
          "getResources": {
            "!type": "fn() -> +android.content.res.Resources",
            "!url": "http://developer.android.com/reference/android/app/Presentation.html#getResources()"
          }
        }
      },
      "ActivityGroup": {
        "!url": "http://developer.android.com/reference/android/app/ActivityGroup.html",
        "!type": "fn()",
        "BIND_WAIVE_PRIORITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_WAIVE_PRIORITY"
        },
        "RESULT_FIRST_USER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_FIRST_USER"
        },
        "DEFAULT_KEYS_SHORTCUT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SHORTCUT"
        },
        "MEDIA_PROJECTION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_PROJECTION_SERVICE"
        },
        "ETHERNET_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ETHERNET_SERVICE"
        },
        "WIFI_RTT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_RTT_SERVICE"
        },
        "SENSOR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SENSOR_SERVICE"
        },
        "TELEPHONY_SUBSCRIPTION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SUBSCRIPTION_SERVICE"
        },
        "CAPTIONING_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CAPTIONING_SERVICE"
        },
        "CAMERA_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CAMERA_SERVICE"
        },
        "BIND_DEBUG_UNBIND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_DEBUG_UNBIND"
        },
        "STATUS_BAR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#STATUS_BAR_SERVICE"
        },
        "DEVICE_POLICY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_POLICY_SERVICE"
        },
        "BIND_IMPORTANT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_IMPORTANT"
        },
        "NSD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NSD_SERVICE"
        },
        "DOWNLOAD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DOWNLOAD_SERVICE"
        },
        "BIND_NOT_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_VISIBLE"
        },
        "CONTEXT_IGNORE_SECURITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_IGNORE_SECURITY"
        },
        "USAGE_STATS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USAGE_STATS_SERVICE"
        },
        "MODE_WORLD_READABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_READABLE"
        },
        "KEYGUARD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#KEYGUARD_SERVICE"
        },
        "BIND_ADJUST_WITH_ACTIVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ADJUST_WITH_ACTIVITY"
        },
        "UI_MODE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#UI_MODE_SERVICE"
        },
        "MODE_PRIVATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_PRIVATE"
        },
        "CONTEXT_INCLUDE_CODE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_INCLUDE_CODE"
        },
        "DEFAULT_KEYS_DISABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_DISABLE"
        },
        "ACCESSIBILITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACCESSIBILITY_SERVICE"
        },
        "HDMI_CONTROL_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#HDMI_CONTROL_SERVICE"
        },
        "BIND_SHOWING_UI": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_SHOWING_UI"
        },
        "MODE_APPEND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_APPEND"
        },
        "AUDIO_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#AUDIO_SERVICE"
        },
        "NETWORK_SCORE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_SCORE_SERVICE"
        },
        "UPDATE_LOCK_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#UPDATE_LOCK_SERVICE"
        },
        "MEDIA_ROUTER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_ROUTER_SERVICE"
        },
        "JOB_SCHEDULER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#JOB_SCHEDULER_SERVICE"
        },
        "DEVICE_IDLE_CONTROLLER": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DEVICE_IDLE_CONTROLLER"
        },
        "INPUT_METHOD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_METHOD_SERVICE"
        },
        "RESULT_CANCELED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_CANCELED"
        },
        "BIND_ABOVE_CLIENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ABOVE_CLIENT"
        },
        "INPUT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#INPUT_SERVICE"
        },
        "MODE_WORLD_WRITEABLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_WORLD_WRITEABLE"
        },
        "NETWORKMANAGEMENT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORKMANAGEMENT_SERVICE"
        },
        "WINDOW_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WINDOW_SERVICE"
        },
        "MEDIA_SESSION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MEDIA_SESSION_SERVICE"
        },
        "WIFI_P2P_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_P2P_SERVICE"
        },
        "DEFAULT_KEYS_SEARCH_GLOBAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SEARCH_GLOBAL"
        },
        "MODE_ENABLE_WRITE_AHEAD_LOGGING": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_ENABLE_WRITE_AHEAD_LOGGING"
        },
        "WIFI_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SERVICE"
        },
        "PERSISTENT_DATA_BLOCK_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#PERSISTENT_DATA_BLOCK_SERVICE"
        },
        "TV_INPUT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TV_INPUT_SERVICE"
        },
        "SIP_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SIP_SERVICE"
        },
        "FINGERPRINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#FINGERPRINT_SERVICE"
        },
        "LOCATION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LOCATION_SERVICE"
        },
        "LAUNCHER_APPS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LAUNCHER_APPS_SERVICE"
        },
        "NETWORK_STATS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_STATS_SERVICE"
        },
        "VOICE_INTERACTION_MANAGER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#VOICE_INTERACTION_MANAGER_SERVICE"
        },
        "TELECOM_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELECOM_SERVICE"
        },
        "SEARCH_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SEARCH_SERVICE"
        },
        "RADIO_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#RADIO_SERVICE"
        },
        "BIND_VISIBLE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_VISIBLE"
        },
        "BIND_NOT_FOREGROUND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_NOT_FOREGROUND"
        },
        "CONTEXT_RESTRICTED": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_RESTRICTED"
        },
        "USER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USER_SERVICE"
        },
        "DROPBOX_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DROPBOX_SERVICE"
        },
        "BIND_TREAT_LIKE_ACTIVITY": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_TREAT_LIKE_ACTIVITY"
        },
        "DEFAULT_KEYS_SEARCH_LOCAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_SEARCH_LOCAL"
        },
        "BIND_FOREGROUND_SERVICE_WHILE_AWAKE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE_WHILE_AWAKE"
        },
        "CLIPBOARD_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CLIPBOARD_SERVICE"
        },
        "LAYOUT_INFLATER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#LAYOUT_INFLATER_SERVICE"
        },
        "WIFI_SCANNING_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_SCANNING_SERVICE"
        },
        "PRINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#PRINT_SERVICE"
        },
        "WALLPAPER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WALLPAPER_SERVICE"
        },
        "ALARM_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ALARM_SERVICE"
        },
        "ACCOUNT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACCOUNT_SERVICE"
        },
        "TRUST_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TRUST_SERVICE"
        },
        "VIBRATOR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#VIBRATOR_SERVICE"
        },
        "RESULT_OK": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#RESULT_OK"
        },
        "NFC_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NFC_SERVICE"
        },
        "NOTIFICATION_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NOTIFICATION_SERVICE"
        },
        "BLUETOOTH_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BLUETOOTH_SERVICE"
        },
        "POWER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#POWER_SERVICE"
        },
        "BIND_ALLOW_OOM_MANAGEMENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_ALLOW_OOM_MANAGEMENT"
        },
        "DEFAULT_KEYS_DIALER": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/Activity.html#DEFAULT_KEYS_DIALER"
        },
        "BACKUP_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BACKUP_SERVICE"
        },
        "COUNTRY_DETECTOR": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#COUNTRY_DETECTOR"
        },
        "SERIAL_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#SERIAL_SERVICE"
        },
        "WIFI_PASSPOINT_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#WIFI_PASSPOINT_SERVICE"
        },
        "CONSUMER_IR_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONSUMER_IR_SERVICE"
        },
        "APP_OPS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#APP_OPS_SERVICE"
        },
        "ACTIVITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#ACTIVITY_SERVICE"
        },
        "STORAGE_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#STORAGE_SERVICE"
        },
        "BIND_FOREGROUND_SERVICE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_FOREGROUND_SERVICE"
        },
        "RESTRICTIONS_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#RESTRICTIONS_SERVICE"
        },
        "CONNECTIVITY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONNECTIVITY_SERVICE"
        },
        "TEXT_SERVICES_MANAGER_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TEXT_SERVICES_MANAGER_SERVICE"
        },
        "USB_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#USB_SERVICE"
        },
        "APPWIDGET_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#APPWIDGET_SERVICE"
        },
        "CONTEXT_REGISTER_PACKAGE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CONTEXT_REGISTER_PACKAGE"
        },
        "CARRIER_CONFIG_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#CARRIER_CONFIG_SERVICE"
        },
        "NETWORK_POLICY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#NETWORK_POLICY_SERVICE"
        },
        "MIDI_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MIDI_SERVICE"
        },
        "BATTERY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BATTERY_SERVICE"
        },
        "MODE_MULTI_PROCESS": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#MODE_MULTI_PROCESS"
        },
        "BIND_AUTO_CREATE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/content/Context.html#BIND_AUTO_CREATE"
        },
        "DISPLAY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#DISPLAY_SERVICE"
        },
        "TELEPHONY_SERVICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/content/Context.html#TELEPHONY_SERVICE"
        },
        "prototype": {
          "isBackgroundVisibleBehind": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isBackgroundVisibleBehind()"
          },
          "setProgressBarVisibility": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarVisibility(boolean)"
          },
          "setFeatureDrawableResource": {
            "!type": "fn(featureId: number, resId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableResource(int, int)"
          },
          "dispatchEnterAnimationComplete": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchEnterAnimationComplete()"
          },
          "finishActivityFromChild": {
            "!type": "fn(child: +android.app.Activity, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishActivityFromChild(android.app.Activity, int)"
          },
          "startPostponedEnterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startPostponedEnterTransition()"
          },
          "onProvideAssistContent": {
            "!type": "fn(outContent: +android.app.assist.AssistContent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideAssistContent(android.app.assist.AssistContent)"
          },
          "sendBroadcastMultiplePermissions": {
            "!type": "fn(intent: +android.content.Intent, receiverPermissions: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastMultiplePermissions(android.content.Intent, java.lang.String[])"
          },
          "getString": {
            "!type": "fn(resId: number) -> string",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getString(int)"
          },
          "onKeyDown": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyDown(int, android.view.KeyEvent)"
          },
          "getResources": {
            "!type": "fn() -> +android.content.res.Resources",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getResources()"
          },
          "sendStickyBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcast(android.content.Intent)"
          },
          "startActivityFromFragment": {
            "!type": "fn(fragment: +android.app.Fragment, intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityFromFragment(android.app.Fragment, android.content.Intent, int)"
          },
          "onCreateThumbnail": {
            "!type": "fn(outBitmap: +android.graphics.Bitmap, canvas: +android.graphics.Canvas) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateThumbnail(android.graphics.Bitmap, android.graphics.Canvas)"
          },
          "getOpPackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getOpPackageName()"
          },
          "getCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCacheDir()"
          },
          "onWindowDismissed": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowDismissed()"
          },
          "getBaseContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBaseContext()"
          },
          "checkCallingOrSelfPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfPermission(java.lang.String)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "isVoiceInteractionRoot": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isVoiceInteractionRoot()"
          },
          "onDetachedFromWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onDetachedFromWindow()"
          },
          "setResult": {
            "!type": "fn(resultCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setResult(int)"
          },
          "onOptionsItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onOptionsItemSelected(android.view.MenuItem)"
          },
          "isChangingConfigurations": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isChangingConfigurations()"
          },
          "getLocalActivityManager": {
            "!type": "fn() -> +android.app.LocalActivityManager",
            "!url": "http://developer.android.com/reference/android/app/ActivityGroup.html#getLocalActivityManager()"
          },
          "getCodeCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getCodeCacheDir()"
          },
          "createPendingResult": {
            "!type": "fn(requestCode: number, data: +android.content.Intent, flags: number) -> +android.app.PendingIntent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#createPendingResult(int, android.content.Intent, int)"
          },
          "getPackageResourcePath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageResourcePath()"
          },
          "getCurrentFocus": {
            "!type": "fn() -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCurrentFocus()"
          },
          "triggerSearch": {
            "!type": "fn(query: string, appSearchData: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#triggerSearch(java.lang.String, android.os.Bundle)"
          },
          "convertToTranslucent": {
            "!type": "fn(callback: +android.app.Activity.TranslucentConversionListener, options: +android.app.ActivityOptions) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#convertToTranslucent(android.app.Activity.TranslucentConversionListener, android.app.ActivityOptions)"
          },
          "startActivityForResult": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityForResult(android.content.Intent, int)"
          },
          "getLayoutInflater": {
            "!type": "fn() -> +android.view.LayoutInflater",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLayoutInflater()"
          },
          "createPackageContext": {
            "!type": "fn(packageName: string, flags: number) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContext(java.lang.String, int)"
          },
          "enforcePermission": {
            "!type": "fn(permission: string, pid: number, uid: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforcePermission(java.lang.String, int, int, java.lang.String)"
          },
          "onWindowStartingActionMode": {
            "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowStartingActionMode(android.view.ActionMode.Callback)"
          },
          "registerForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#registerForContextMenu(android.view.View)"
          },
          "setSecondaryProgress": {
            "!type": "fn(secondaryProgress: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setSecondaryProgress(int)"
          },
          "onContentChanged": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onContentChanged()"
          },
          "finishAndRemoveTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAndRemoveTask()"
          },
          "setFinishOnTouchOutside": {
            "!type": "fn(finish: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFinishOnTouchOutside(boolean)"
          },
          "requestWindowFeature": {
            "!type": "fn(featureId: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestWindowFeature(int)"
          },
          "createConfigurationContext": {
            "!type": "fn(overrideConfiguration: +android.content.res.Configuration) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createConfigurationContext(android.content.res.Configuration)"
          },
          "showDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showDialog(int)"
          },
          "onSearchRequested": {
            "!type": "fn(searchEvent: +android.view.SearchEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onSearchRequested(android.view.SearchEvent)"
          },
          "onContextItemSelected": {
            "!type": "fn(item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onContextItemSelected(android.view.MenuItem)"
          },
          "onTrackballEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTrackballEvent(android.view.MotionEvent)"
          },
          "requestPermissions": {
            "!type": "fn(permissions: +java.newArray, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestPermissions(java.lang.String[], int)"
          },
          "getVoiceInteractor": {
            "!type": "fn() -> +android.app.VoiceInteractor",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getVoiceInteractor()"
          },
          "peekWallpaper": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#peekWallpaper()"
          },
          "onPrepareOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPrepareOptionsMenu(android.view.Menu)"
          },
          "onSaveInstanceState": {
            "!type": "fn(outState: +android.os.Bundle, outPersistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onSaveInstanceState(android.os.Bundle, android.os.PersistableBundle)"
          },
          "registerReceiver": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver, filter: +android.content.IntentFilter) -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter)"
          },
          "setActionBar": {
            "!type": "fn(toolbar: +android.widget.Toolbar) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setActionBar(android.widget.Toolbar)"
          },
          "getIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getIntent()"
          },
          "getObbDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDirs()"
          },
          "getPackageManager": {
            "!type": "fn() -> +android.content.pm.PackageManager",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageManager()"
          },
          "getSystemServiceName": {
            "!type": "fn(serviceClass: +java.lang.Class) -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSystemServiceName(java.lang.Class)"
          },
          "obtainStyledAttributes": {
            "!type": "fn(attrs: +java.newArray) -> +android.content.res.TypedArray",
            "!url": "http://developer.android.com/reference/android/content/Context.html#obtainStyledAttributes(int[])"
          },
          "getApplicationInfo": {
            "!type": "fn() -> +android.content.pm.ApplicationInfo",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationInfo()"
          },
          "setDefaultKeyMode": {
            "!type": "fn(mode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setDefaultKeyMode(int)"
          },
          "setProgressBarIndeterminate": {
            "!type": "fn(indeterminate: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarIndeterminate(boolean)"
          },
          "isRestricted": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#isRestricted()"
          },
          "hasWindowFocus": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#hasWindowFocus()"
          },
          "onConfigurationChanged": {
            "!type": "fn(newConfig: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onConfigurationChanged(android.content.res.Configuration)"
          },
          "getVolumeControlStream": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getVolumeControlStream()"
          },
          "databaseList": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#databaseList()"
          },
          "setTheme": {
            "!type": "fn(resid: number) -> void",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#setTheme(int)"
          },
          "isChild": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isChild()"
          },
          "isResumed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isResumed()"
          },
          "setRequestedOrientation": {
            "!type": "fn(requestedOrientation: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setRequestedOrientation(int)"
          },
          "onNewActivityOptions": {
            "!type": "fn(options: +android.app.ActivityOptions) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNewActivityOptions(android.app.ActivityOptions)"
          },
          "startActivity": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivity(android.content.Intent)"
          },
          "onGenericMotionEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onGenericMotionEvent(android.view.MotionEvent)"
          },
          "onWindowAttributesChanged": {
            "!type": "fn(params: +android.view.WindowManager.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowAttributesChanged(android.view.WindowManager.LayoutParams)"
          },
          "onPostCreate": {
            "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPostCreate(android.os.Bundle, android.os.PersistableBundle)"
          },
          "onKeyUp": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyUp(int, android.view.KeyEvent)"
          },
          "enforceCallingOrSelfUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfUriPermission(android.net.Uri, int, java.lang.String)"
          },
          "grantUriPermission": {
            "!type": "fn(toPackage: string, uri: +android.net.Uri, modeFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#grantUriPermission(java.lang.String, android.net.Uri, int)"
          },
          "startActivityAsCaller": {
            "!type": "fn(intent: +android.content.Intent, options: +android.os.Bundle, ignoreTargetSecurity: bool, userId: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityAsCaller(android.content.Intent, android.os.Bundle, boolean, int)"
          },
          "onActivityReenter": {
            "!type": "fn(resultCode: number, data: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActivityReenter(int, android.content.Intent)"
          },
          "dispatchKeyShortcutEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchKeyShortcutEvent(android.view.KeyEvent)"
          },
          "onNavigateUpFromChild": {
            "!type": "fn(child: +android.app.Activity) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNavigateUpFromChild(android.app.Activity)"
          },
          "onEnterAnimationComplete": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onEnterAnimationComplete()"
          },
          "setContentView": {
            "!type": "fn(layoutResID: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setContentView(int)"
          },
          "getPackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageName()"
          },
          "getActionBar": {
            "!type": "fn() -> +android.app.ActionBar",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getActionBar()"
          },
          "isDestroyed": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isDestroyed()"
          },
          "sendBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "runOnUiThread": {
            "!type": "fn(action: +java.lang.Runnable) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#runOnUiThread(java.lang.Runnable)"
          },
          "stopLockTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#stopLockTask()"
          },
          "createApplicationContext": {
            "!type": "fn(application: +android.content.pm.ApplicationInfo, flags: number) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createApplicationContext(android.content.pm.ApplicationInfo, int)"
          },
          "finishAffinity": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAffinity()"
          },
          "openContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#openContextMenu(android.view.View)"
          },
          "setTaskDescription": {
            "!type": "fn(taskDescription: +android.app.ActivityManager.TaskDescription) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setTaskDescription(android.app.ActivityManager.TaskDescription)"
          },
          "setTitleColor": {
            "!type": "fn(textColor: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setTitleColor(int)"
          },
          "showAssist": {
            "!type": "fn(args: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showAssist(android.os.Bundle)"
          },
          "onVisibleBehindCanceled": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onVisibleBehindCanceled()"
          },
          "finishAfterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishAfterTransition()"
          },
          "startServiceAsUser": {
            "!type": "fn(service: +android.content.Intent, user: +android.os.UserHandle) -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startServiceAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "onNavigateUp": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onNavigateUp()"
          },
          "getActivityToken": {
            "!type": "fn() -> +android.os.IBinder",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getActivityToken()"
          },
          "onAttachFragment": {
            "!type": "fn(fragment: +android.app.Fragment) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onAttachFragment(android.app.Fragment)"
          },
          "getApplication": {
            "!type": "fn() -> +android.app.Application",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getApplication()"
          },
          "applyOverrideConfiguration": {
            "!type": "fn(overrideConfiguration: +android.content.res.Configuration) -> void",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#applyOverrideConfiguration(android.content.res.Configuration)"
          },
          "fileList": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#fileList()"
          },
          "onRetainNonConfigurationChildInstances": {
            "!type": "fn() -> +java.util.HashMap",
            "!url": "http://developer.android.com/reference/android/app/ActivityGroup.html#onRetainNonConfigurationChildInstances()"
          },
          "getTaskId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTaskId()"
          },
          "openOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#openOptionsMenu()"
          },
          "onBackgroundVisibleBehindChanged": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onBackgroundVisibleBehindChanged(boolean)"
          },
          "startNextMatchingActivity": {
            "!type": "fn(intent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startNextMatchingActivity(android.content.Intent)"
          },
          "onPrepareNavigateUpTaskStack": {
            "!type": "fn(builder: +android.app.TaskStackBuilder) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPrepareNavigateUpTaskStack(android.app.TaskStackBuilder)"
          },
          "onActionModeFinished": {
            "!type": "fn(mode: +android.view.ActionMode) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActionModeFinished(android.view.ActionMode)"
          },
          "getLocalClassName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLocalClassName()"
          },
          "managedQuery": {
            "!type": "fn(uri: +android.net.Uri, projection: +java.newArray, selection: string, sortOrder: string) -> +android.database.Cursor",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#managedQuery(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String)"
          },
          "checkPermission": {
            "!type": "fn(permission: string, pid: number, uid: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkPermission(java.lang.String, int, int)"
          },
          "getWallpaperDesiredMinimumHeight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumHeight()"
          },
          "startManagingCursor": {
            "!type": "fn(c: +android.database.Cursor) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startManagingCursor(android.database.Cursor)"
          },
          "onRequestPermissionsResult": {
            "!type": "fn(requestCode: number, permissions: +java.newArray, grantResults: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRequestPermissionsResult(int, java.lang.String[], int[])"
          },
          "revokeUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#revokeUriPermission(android.net.Uri, int)"
          },
          "startActivityIfNeeded": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityIfNeeded(android.content.Intent, int)"
          },
          "moveTaskToBack": {
            "!type": "fn(nonRoot: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#moveTaskToBack(boolean)"
          },
          "unregisterForContextMenu": {
            "!type": "fn(view: +android.view.View) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#unregisterForContextMenu(android.view.View)"
          },
          "setPersistent": {
            "!type": "fn(isPersistent: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setPersistent(boolean)"
          },
          "onUserInteraction": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onUserInteraction()"
          },
          "setFeatureDrawableUri": {
            "!type": "fn(featureId: number, uri: +android.net.Uri) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableUri(int, android.net.Uri)"
          },
          "onStateNotSaved": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onStateNotSaved()"
          },
          "sendStickyOrderedBroadcast": {
            "!type": "fn(intent: +android.content.Intent, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcast(android.content.Intent, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "sendStickyOrderedBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "setContentTransitionManager": {
            "!type": "fn(tm: +android.transition.TransitionManager) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setContentTransitionManager(android.transition.TransitionManager)"
          },
          "getLoaderManager": {
            "!type": "fn() -> +android.app.LoaderManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLoaderManager()"
          },
          "onRetainNonConfigurationInstance": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRetainNonConfigurationInstance()"
          },
          "getExternalFilesDir": {
            "!type": "fn(type: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDir(java.lang.String)"
          },
          "bindService": {
            "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindService(android.content.Intent, android.content.ServiceConnection, int)"
          },
          "startActivitiesAsUser": {
            "!type": "fn(intents: +java.newArray, options: +android.os.Bundle, userHandle: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startActivitiesAsUser(android.content.Intent[], android.os.Bundle, android.os.UserHandle)"
          },
          "onRestoreInstanceState": {
            "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onRestoreInstanceState(android.os.Bundle, android.os.PersistableBundle)"
          },
          "recreate": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#recreate()"
          },
          "getDatabasePath": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDatabasePath(java.lang.String)"
          },
          "setEnterSharedElementCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setEnterSharedElementCallback(android.app.SharedElementCallback)"
          },
          "onCreateContextMenu": {
            "!type": "fn(menu: +android.view.ContextMenu, v: +android.view.View, menuInfo: +android.view.ContextMenu.ContextMenuInfo) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenu.ContextMenuInfo)"
          },
          "onProvideAssistData": {
            "!type": "fn(data: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideAssistData(android.os.Bundle)"
          },
          "checkSelfPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkSelfPermission(java.lang.String)"
          },
          "onPanelClosed": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPanelClosed(int, android.view.Menu)"
          },
          "onCreate": {
            "!type": "fn(savedInstanceState: +android.os.Bundle, persistentState: +android.os.PersistableBundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreate(android.os.Bundle, android.os.PersistableBundle)"
          },
          "enforceCallingOrSelfPermission": {
            "!type": "fn(permission: string, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingOrSelfPermission(java.lang.String, java.lang.String)"
          },
          "onTouchEvent": {
            "!type": "fn(event: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTouchEvent(android.view.MotionEvent)"
          },
          "getTheme": {
            "!type": "fn() -> +android.content.res.Resources.Theme",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getTheme()"
          },
          "onKeyLongPress": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyLongPress(int, android.view.KeyEvent)"
          },
          "setMediaController": {
            "!type": "fn(controller: +android.media.session.MediaController) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setMediaController(android.media.session.MediaController)"
          },
          "getChangingConfigurations": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getChangingConfigurations()"
          },
          "finishActivity": {
            "!type": "fn(requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishActivity(int)"
          },
          "onCreatePanelView": {
            "!type": "fn(featureId: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreatePanelView(int)"
          },
          "getSearchEvent": {
            "!type": "fn() -> +android.view.SearchEvent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getSearchEvent()"
          },
          "setVisible": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setVisible(boolean)"
          },
          "startIntentSender": {
            "!type": "fn(intent: +android.content.IntentSender, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSender(android.content.IntentSender, android.content.Intent, int, int, int)"
          },
          "getExternalFilesDirs": {
            "!type": "fn(type: string) -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalFilesDirs(java.lang.String)"
          },
          "stopServiceAsUser": {
            "!type": "fn(name: +android.content.Intent, user: +android.os.UserHandle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopServiceAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "unbindService": {
            "!type": "fn(conn: +android.content.ServiceConnection) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unbindService(android.content.ServiceConnection)"
          },
          "startActivityAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "onKeyShortcut": {
            "!type": "fn(keyCode: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyShortcut(int, android.view.KeyEvent)"
          },
          "getSharedPrefsFile": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPrefsFile(java.lang.String)"
          },
          "getDir": {
            "!type": "fn(name: string, mode: number) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDir(java.lang.String, int)"
          },
          "releaseInstance": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#releaseInstance()"
          },
          "onKeyMultiple": {
            "!type": "fn(keyCode: number, repeatCount: number, event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onKeyMultiple(int, int, android.view.KeyEvent)"
          },
          "onPreparePanel": {
            "!type": "fn(featureId: number, view: +android.view.View, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onPreparePanel(int, android.view.View, android.view.Menu)"
          },
          "bindServiceAsUser": {
            "!type": "fn(service: +android.content.Intent, conn: +android.content.ServiceConnection, flags: number, user: +android.os.UserHandle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#bindServiceAsUser(android.content.Intent, android.content.ServiceConnection, int, android.os.UserHandle)"
          },
          "closeContextMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#closeContextMenu()"
          },
          "startSearch": {
            "!type": "fn(initialQuery: string, selectInitialQuery: bool, appSearchData: +android.os.Bundle, globalSearch: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startSearch(java.lang.String, boolean, android.os.Bundle, boolean)"
          },
          "getComponentName": {
            "!type": "fn() -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getComponentName()"
          },
          "showLockTaskEscapeMessage": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#showLockTaskEscapeMessage()"
          },
          "getContentTransitionManager": {
            "!type": "fn() -> +android.transition.TransitionManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getContentTransitionManager()"
          },
          "onBackPressed": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onBackPressed()"
          },
          "getExternalCacheDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDir()"
          },
          "getDrawable": {
            "!type": "fn(id: number) -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getDrawable(int)"
          },
          "setImmersive": {
            "!type": "fn(i: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setImmersive(boolean)"
          },
          "openFileOutput": {
            "!type": "fn(name: string, mode: number) -> +java.io.FileOutputStream",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileOutput(java.lang.String, int)"
          },
          "getAssets": {
            "!type": "fn() -> +android.content.res.AssetManager",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getAssets()"
          },
          "onLowMemory": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onLowMemory()"
          },
          "getParentActivityIntent": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getParentActivityIntent()"
          },
          "convertFromTranslucent": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#convertFromTranslucent()"
          },
          "dispatchTouchEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchTouchEvent(android.view.MotionEvent)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getContentScene": {
            "!type": "fn() -> +android.transition.Scene",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getContentScene()"
          },
          "getCallingPackage": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCallingPackage()"
          },
          "deleteDatabase": {
            "!type": "fn(name: string) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteDatabase(java.lang.String)"
          },
          "checkCallingPermission": {
            "!type": "fn(permission: string) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingPermission(java.lang.String)"
          },
          "dispatchGenericMotionEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchGenericMotionEvent(android.view.MotionEvent)"
          },
          "getExternalMediaDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalMediaDirs()"
          },
          "getCallingActivity": {
            "!type": "fn() -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getCallingActivity()"
          },
          "onAttachedToWindow": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onAttachedToWindow()"
          },
          "clearWallpaper": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#clearWallpaper()"
          },
          "setTitle": {
            "!type": "fn(title: +java.lang.CharSequence) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setTitle(java.lang.CharSequence)"
          },
          "enforceCallingUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingUriPermission(android.net.Uri, int, java.lang.String)"
          },
          "getThemeResId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/view/ContextThemeWrapper.html#getThemeResId()"
          },
          "onWindowFocusChanged": {
            "!type": "fn(hasFocus: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onWindowFocusChanged(boolean)"
          },
          "registerComponentCallbacks": {
            "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
            "!url": "http://developer.android.com/reference/android/content/Context.html#registerComponentCallbacks(android.content.ComponentCallbacks)"
          },
          "getText": {
            "!type": "fn(resId: number) -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getText(int)"
          },
          "enforceUriPermission": {
            "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceUriPermission(android.net.Uri, int, int, int, java.lang.String)"
          },
          "onProvideReferrer": {
            "!type": "fn() -> +android.net.Uri",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onProvideReferrer()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "unregisterComponentCallbacks": {
            "!type": "fn(callback: +android.content.ComponentCallbacks) -> void",
            "!url": "http://developer.android.com/reference/android/content/Context.html#unregisterComponentCallbacks(android.content.ComponentCallbacks)"
          },
          "finish": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finish()"
          },
          "getWallpaperDesiredMinimumWidth": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaperDesiredMinimumWidth()"
          },
          "onMenuItemSelected": {
            "!type": "fn(featureId: number, item: +android.view.MenuItem) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onMenuItemSelected(int, android.view.MenuItem)"
          },
          "getWallpaper": {
            "!type": "fn() -> +android.graphics.drawable.Drawable",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getWallpaper()"
          },
          "isVoiceInteraction": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isVoiceInteraction()"
          },
          "navigateUpTo": {
            "!type": "fn(upIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#navigateUpTo(android.content.Intent)"
          },
          "getCurrentActivity": {
            "!type": "fn() -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/app/ActivityGroup.html#getCurrentActivity()"
          },
          "onCreatePanelMenu": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreatePanelMenu(int, android.view.Menu)"
          },
          "openOrCreateDatabase": {
            "!type": "fn(name: string, mode: number, factory: +android.database.sqlite.SQLiteDatabase.CursorFactory) -> +android.database.sqlite.SQLiteDatabase",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openOrCreateDatabase(java.lang.String, int, android.database.sqlite.SQLiteDatabase.CursorFactory)"
          },
          "openFileInput": {
            "!type": "fn(name: string) -> +java.io.FileInputStream",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#openFileInput(java.lang.String)"
          },
          "dump": {
            "!type": "fn(prefix: string, fd: +java.io.FileDescriptor, writer: +java.io.PrintWriter, args: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])"
          },
          "onCreateDescription": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateDescription()"
          },
          "invalidateOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#invalidateOptionsMenu()"
          },
          "sendOrderedBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle, receiverPermission: string, resultReceiver: +android.content.BroadcastReceiver, scheduler: +android.os.Handler, initialCode: number, initialData: string, initialExtras: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, java.lang.String, android.content.BroadcastReceiver, android.os.Handler, int, java.lang.String, android.os.Bundle)"
          },
          "canStartActivityForResult": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#canStartActivityForResult()"
          },
          "setProgress": {
            "!type": "fn(progress: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgress(int)"
          },
          "navigateUpToFromChild": {
            "!type": "fn(child: +android.app.Activity, upIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#navigateUpToFromChild(android.app.Activity, android.content.Intent)"
          },
          "getContentResolver": {
            "!type": "fn() -> +android.content.ContentResolver",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getContentResolver()"
          },
          "isFinishing": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isFinishing()"
          },
          "getFragmentManager": {
            "!type": "fn() -> +android.app.FragmentManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getFragmentManager()"
          },
          "getParent": {
            "!type": "fn() -> +android.app.Activity",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getParent()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "checkCallingUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingUriPermission(android.net.Uri, int)"
          },
          "setExitSharedElementCallback": {
            "!type": "fn(callback: +android.app.SharedElementCallback) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setExitSharedElementCallback(android.app.SharedElementCallback)"
          },
          "checkUriPermission": {
            "!type": "fn(uri: +android.net.Uri, pid: number, uid: number, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkUriPermission(android.net.Uri, int, int, int)"
          },
          "setFeatureDrawableAlpha": {
            "!type": "fn(featureId: number, alpha: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawableAlpha(int, int)"
          },
          "registerReceiverAsUser": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver, user: +android.os.UserHandle, filter: +android.content.IntentFilter, broadcastPermission: string, scheduler: +android.os.Handler) -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiverAsUser(android.content.BroadcastReceiver, android.os.UserHandle, android.content.IntentFilter, java.lang.String, android.os.Handler)"
          },
          "getPackageCodePath": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getPackageCodePath()"
          },
          "getWindow": {
            "!type": "fn() -> +android.view.Window",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getWindow()"
          },
          "startIntentSenderFromChild": {
            "!type": "fn(child: +android.app.Activity, intent: +android.content.IntentSender, requestCode: number, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSenderFromChild(android.app.Activity, android.content.IntentSender, int, android.content.Intent, int, int, int)"
          },
          "postponeEnterTransition": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#postponeEnterTransition()"
          },
          "shouldUpRecreateTask": {
            "!type": "fn(targetIntent: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#shouldUpRecreateTask(android.content.Intent)"
          },
          "removeStickyBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "deleteFile": {
            "!type": "fn(name: string) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#deleteFile(java.lang.String)"
          },
          "onContextMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onContextMenuClosed(android.view.Menu)"
          },
          "onCreateOptionsMenu": {
            "!type": "fn(menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateOptionsMenu(android.view.Menu)"
          },
          "getClassLoader": {
            "!type": "fn() -> +java.lang.ClassLoader",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getClassLoader()"
          },
          "dispatchPopulateAccessibilityEvent": {
            "!type": "fn(event: +android.view.accessibility.AccessibilityEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)"
          },
          "setIntent": {
            "!type": "fn(newIntent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setIntent(android.content.Intent)"
          },
          "setVolumeControlStream": {
            "!type": "fn(streamType: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setVolumeControlStream(int)"
          },
          "getObbDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getObbDir()"
          },
          "startInstrumentation": {
            "!type": "fn(className: +android.content.ComponentName, profileFile: string, arguments: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startInstrumentation(android.content.ComponentName, java.lang.String, android.os.Bundle)"
          },
          "reportFullyDrawn": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#reportFullyDrawn()"
          },
          "setProgressBarIndeterminateVisibility": {
            "!type": "fn(visible: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setProgressBarIndeterminateVisibility(boolean)"
          },
          "finishFromChild": {
            "!type": "fn(child: +android.app.Activity) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#finishFromChild(android.app.Activity)"
          },
          "getColorStateList": {
            "!type": "fn(id: number) -> +android.content.res.ColorStateList",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getColorStateList(int)"
          },
          "getTitleColor": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTitleColor()"
          },
          "getMediaController": {
            "!type": "fn() -> +android.media.session.MediaController",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getMediaController()"
          },
          "sendBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcast(android.content.Intent)"
          },
          "overridePendingTransition": {
            "!type": "fn(enterAnim: number, exitAnim: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#overridePendingTransition(int, int)"
          },
          "dispatchTrackballEvent": {
            "!type": "fn(ev: +android.view.MotionEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchTrackballEvent(android.view.MotionEvent)"
          },
          "getNoBackupFilesDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getNoBackupFilesDir()"
          },
          "startActionMode": {
            "!type": "fn(callback: +android.view.ActionMode.Callback) -> +android.view.ActionMode",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActionMode(android.view.ActionMode.Callback)"
          },
          "getApplicationContext": {
            "!type": "fn() -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getApplicationContext()"
          },
          "onCreateNavigateUpTaskStack": {
            "!type": "fn(builder: +android.app.TaskStackBuilder) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateNavigateUpTaskStack(android.app.TaskStackBuilder)"
          },
          "createDisplayContext": {
            "!type": "fn(display: +android.view.Display) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createDisplayContext(android.view.Display)"
          },
          "onActionModeStarted": {
            "!type": "fn(mode: +android.view.ActionMode) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onActionModeStarted(android.view.ActionMode)"
          },
          "dispatchKeyEvent": {
            "!type": "fn(event: +android.view.KeyEvent) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dispatchKeyEvent(android.view.KeyEvent)"
          },
          "enforceCallingPermission": {
            "!type": "fn(permission: string, message: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#enforceCallingPermission(java.lang.String, java.lang.String)"
          },
          "createPackageContextAsUser": {
            "!type": "fn(packageName: string, flags: number, user: +android.os.UserHandle) -> +android.content.Context",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#createPackageContextAsUser(java.lang.String, int, android.os.UserHandle)"
          },
          "setFeatureDrawable": {
            "!type": "fn(featureId: number, drawable: +android.graphics.drawable.Drawable) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#setFeatureDrawable(int, android.graphics.drawable.Drawable)"
          },
          "dismissDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#dismissDialog(int)"
          },
          "onMenuOpened": {
            "!type": "fn(featureId: number, menu: +android.view.Menu) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onMenuOpened(int, android.view.Menu)"
          },
          "getSystemService": {
            "!type": "fn(name: string) -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getSystemService(java.lang.String)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "startActivities": {
            "!type": "fn(intents: +java.newArray) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivities(android.content.Intent[])"
          },
          "startService": {
            "!type": "fn(service: +android.content.Intent) -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#startService(android.content.Intent)"
          },
          "getFileStreamPath": {
            "!type": "fn(name: string) -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFileStreamPath(java.lang.String)"
          },
          "addContentView": {
            "!type": "fn(view: +android.view.View, params: +android.view.ViewGroup.LayoutParams) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#addContentView(android.view.View, android.view.ViewGroup.LayoutParams)"
          },
          "closeOptionsMenu": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#closeOptionsMenu()"
          },
          "sendStickyBroadcastAsUser": {
            "!type": "fn(intent: +android.content.Intent, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle)"
          },
          "takeKeyEvents": {
            "!type": "fn(get: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#takeKeyEvents(boolean)"
          },
          "getTitle": {
            "!type": "fn() -> +java.lang.CharSequence",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getTitle()"
          },
          "getWindowManager": {
            "!type": "fn() -> +android.view.WindowManager",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getWindowManager()"
          },
          "getBasePackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getBasePackageName()"
          },
          "stopManagingCursor": {
            "!type": "fn(c: +android.database.Cursor) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#stopManagingCursor(android.database.Cursor)"
          },
          "checkCallingOrSelfUriPermission": {
            "!type": "fn(uri: +android.net.Uri, modeFlags: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#checkCallingOrSelfUriPermission(android.net.Uri, int)"
          },
          "setWallpaper": {
            "!type": "fn(bitmap: +android.graphics.Bitmap) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#setWallpaper(android.graphics.Bitmap)"
          },
          "sendOrderedBroadcast": {
            "!type": "fn(intent: +android.content.Intent, receiverPermission: string) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#sendOrderedBroadcast(android.content.Intent, java.lang.String)"
          },
          "unregisterReceiver": {
            "!type": "fn(receiver: +android.content.BroadcastReceiver) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#unregisterReceiver(android.content.BroadcastReceiver)"
          },
          "getColor": {
            "!type": "fn(id: number) -> number",
            "!url": "http://developer.android.com/reference/android/content/Context.html#getColor(int)"
          },
          "getMenuInflater": {
            "!type": "fn() -> +android.view.MenuInflater",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getMenuInflater()"
          },
          "stopService": {
            "!type": "fn(name: +android.content.Intent) -> bool",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#stopService(android.content.Intent)"
          },
          "getMainLooper": {
            "!type": "fn() -> +android.os.Looper",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getMainLooper()"
          },
          "startActivityFromChild": {
            "!type": "fn(child: +android.app.Activity, intent: +android.content.Intent, requestCode: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityFromChild(android.app.Activity, android.content.Intent, int)"
          },
          "startLockTask": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startLockTask()"
          },
          "removeStickyBroadcast": {
            "!type": "fn(intent: +android.content.Intent) -> void",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#removeStickyBroadcast(android.content.Intent)"
          },
          "getExternalCacheDirs": {
            "!type": "fn() -> +java.newArray",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getExternalCacheDirs()"
          },
          "getReferrer": {
            "!type": "fn() -> +android.net.Uri",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getReferrer()"
          },
          "isImmersive": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isImmersive()"
          },
          "shouldShowRequestPermissionRationale": {
            "!type": "fn(permission: string) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#shouldShowRequestPermissionRationale(java.lang.String)"
          },
          "getPreferences": {
            "!type": "fn(mode: number) -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getPreferences(int)"
          },
          "getFilesDir": {
            "!type": "fn() -> +java.io.File",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getFilesDir()"
          },
          "findViewById": {
            "!type": "fn(id: number) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#findViewById(int)"
          },
          "getSharedPreferences": {
            "!type": "fn(name: string, mode: number) -> +android.content.SharedPreferences",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getSharedPreferences(java.lang.String, int)"
          },
          "isTaskRoot": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#isTaskRoot()"
          },
          "getLastNonConfigurationInstance": {
            "!type": "fn() -> +java.lang.Object",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getLastNonConfigurationInstance()"
          },
          "getDisplayAdjustments": {
            "!type": "fn(displayId: number) -> +android.view.DisplayAdjustments",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getDisplayAdjustments(int)"
          },
          "getRequestedOrientation": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#getRequestedOrientation()"
          },
          "onTrimMemory": {
            "!type": "fn(level: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onTrimMemory(int)"
          },
          "removeDialog": {
            "!type": "fn(id: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#removeDialog(int)"
          },
          "getUserId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/content/ContextWrapper.html#getUserId()"
          },
          "requestVisibleBehind": {
            "!type": "fn(visible: bool) -> bool",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#requestVisibleBehind(boolean)"
          },
          "onOptionsMenuClosed": {
            "!type": "fn(menu: +android.view.Menu) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onOptionsMenuClosed(android.view.Menu)"
          },
          "onCreateView": {
            "!type": "fn(name: string, context: +android.content.Context, attrs: +android.util.AttributeSet) -> +android.view.View",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#onCreateView(java.lang.String, android.content.Context, android.util.AttributeSet)"
          },
          "startActivityForResultAsUser": {
            "!type": "fn(intent: +android.content.Intent, requestCode: number, user: +android.os.UserHandle) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startActivityForResultAsUser(android.content.Intent, int, android.os.UserHandle)"
          },
          "startIntentSenderForResult": {
            "!type": "fn(intent: +android.content.IntentSender, requestCode: number, fillInIntent: +android.content.Intent, flagsMask: number, flagsValues: number, extraFlags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/Activity.html#startIntentSenderForResult(android.content.IntentSender, int, android.content.Intent, int, int, int)"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          }
        }
      },
      "SearchManager": {
        "!url": "http://developer.android.com/reference/android/app/SearchManager.html",
        "EXTRA_SELECT_QUERY": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#EXTRA_SELECT_QUERY"
        },
        "QUERY": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#QUERY"
        },
        "MENU_KEY": {
          "!type": "+java.lang.Char",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#MENU_KEY"
        },
        "SUGGEST_COLUMN_AUDIO_CHANNEL_CONFIG": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#SUGGEST_COLUMN_AUDIO_CHANNEL_CONFIG"
        },
        "SUGGEST_COLUMN_INTENT_ACTION": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#SUGGEST_COLUMN_INTENT_ACTION"
        },
        "ACTION_KEY": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#ACTION_KEY"
        },
        "CURSOR_EXTRA_KEY_IN_PROGRESS": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#CURSOR_EXTRA_KEY_IN_PROGRESS"
        },
        "SUGGEST_COLUMN_FLAGS": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#SUGGEST_COLUMN_FLAGS"
        },
        "SUGGEST_URI_PATH_QUERY": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#SUGGEST_URI_PATH_QUERY"
        },
        "SUGGEST_COLUMN_RATING_SCORE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#SUGGEST_COLUMN_RATING_SCORE"
        },
        "SUGGEST_COLUMN_VIDEO_WIDTH": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#SUGGEST_COLUMN_VIDEO_WIDTH"
        },
        "SUGGEST_COLUMN_SPINNER_WHILE_REFRESHING": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#SUGGEST_COLUMN_SPINNER_WHILE_REFRESHING"
        },
        "SHORTCUT_MIME_TYPE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#SHORTCUT_MIME_TYPE"
        },
        "SUGGEST_COLUMN_PRODUCTION_YEAR": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#SUGGEST_COLUMN_PRODUCTION_YEAR"
        },
        "INTENT_ACTION_WEB_SEARCH_SETTINGS": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#INTENT_ACTION_WEB_SEARCH_SETTINGS"
        },
        "INTENT_ACTION_SEARCHABLES_CHANGED": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#INTENT_ACTION_SEARCHABLES_CHANGED"
        },
        "MENU_KEYCODE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#MENU_KEYCODE"
        },
        "FLAG_QUERY_REFINEMENT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#FLAG_QUERY_REFINEMENT"
        },
        "SUGGEST_COLUMN_VIDEO_HEIGHT": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#SUGGEST_COLUMN_VIDEO_HEIGHT"
        },
        "SUGGEST_COLUMN_TEXT_2_URL": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#SUGGEST_COLUMN_TEXT_2_URL"
        },
        "SUGGEST_COLUMN_DURATION": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#SUGGEST_COLUMN_DURATION"
        },
        "ACTION_MSG": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#ACTION_MSG"
        },
        "SUGGEST_COLUMN_CONTENT_TYPE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#SUGGEST_COLUMN_CONTENT_TYPE"
        },
        "SUGGEST_MIME_TYPE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#SUGGEST_MIME_TYPE"
        },
        "SUGGEST_COLUMN_SHORTCUT_ID": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#SUGGEST_COLUMN_SHORTCUT_ID"
        },
        "INTENT_ACTION_SEARCH_SETTINGS_CHANGED": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#INTENT_ACTION_SEARCH_SETTINGS_CHANGED"
        },
        "EXTRA_NEW_SEARCH": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#EXTRA_NEW_SEARCH"
        },
        "SEARCH_MODE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#SEARCH_MODE"
        },
        "INTENT_ACTION_GLOBAL_SEARCH": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#INTENT_ACTION_GLOBAL_SEARCH"
        },
        "SUGGEST_NEVER_MAKE_SHORTCUT": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#SUGGEST_NEVER_MAKE_SHORTCUT"
        },
        "SUGGEST_COLUMN_IS_LIVE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#SUGGEST_COLUMN_IS_LIVE"
        },
        "SUGGEST_COLUMN_PURCHASE_PRICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#SUGGEST_COLUMN_PURCHASE_PRICE"
        },
        "DISABLE_VOICE_SEARCH": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#DISABLE_VOICE_SEARCH"
        },
        "SUGGEST_COLUMN_INTENT_EXTRA_DATA": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#SUGGEST_COLUMN_INTENT_EXTRA_DATA"
        },
        "USER_QUERY": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#USER_QUERY"
        },
        "SUGGEST_COLUMN_QUERY": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#SUGGEST_COLUMN_QUERY"
        },
        "INTENT_ACTION_SEARCH_SETTINGS": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#INTENT_ACTION_SEARCH_SETTINGS"
        },
        "INTENT_GLOBAL_SEARCH_ACTIVITY_CHANGED": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#INTENT_GLOBAL_SEARCH_ACTIVITY_CHANGED"
        },
        "SUGGEST_PARAMETER_LIMIT": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#SUGGEST_PARAMETER_LIMIT"
        },
        "SUGGEST_COLUMN_FORMAT": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#SUGGEST_COLUMN_FORMAT"
        },
        "SUGGEST_COLUMN_RESULT_CARD_IMAGE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#SUGGEST_COLUMN_RESULT_CARD_IMAGE"
        },
        "CONTEXT_IS_VOICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#CONTEXT_IS_VOICE"
        },
        "SUGGEST_COLUMN_INTENT_DATA_ID": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#SUGGEST_COLUMN_INTENT_DATA_ID"
        },
        "SUGGEST_COLUMN_ICON_2": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#SUGGEST_COLUMN_ICON_2"
        },
        "APP_DATA": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#APP_DATA"
        },
        "SUGGEST_COLUMN_ICON_1": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#SUGGEST_COLUMN_ICON_1"
        },
        "SUGGEST_COLUMN_INTENT_DATA": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#SUGGEST_COLUMN_INTENT_DATA"
        },
        "SUGGEST_COLUMN_LAST_ACCESS_HINT": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#SUGGEST_COLUMN_LAST_ACCESS_HINT"
        },
        "EXTRA_WEB_SEARCH_PENDINGINTENT": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#EXTRA_WEB_SEARCH_PENDINGINTENT"
        },
        "SUGGEST_URI_PATH_SHORTCUT": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#SUGGEST_URI_PATH_SHORTCUT"
        },
        "SUGGEST_COLUMN_RENTAL_PRICE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#SUGGEST_COLUMN_RENTAL_PRICE"
        },
        "EXTRA_DATA_KEY": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#EXTRA_DATA_KEY"
        },
        "SUGGEST_COLUMN_RATING_STYLE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#SUGGEST_COLUMN_RATING_STYLE"
        },
        "SUGGEST_COLUMN_TEXT_2": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#SUGGEST_COLUMN_TEXT_2"
        },
        "SUGGEST_COLUMN_TEXT_1": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/SearchManager.html#SUGGEST_COLUMN_TEXT_1"
        },
        "prototype": {
          "getSearchableInfo": {
            "!type": "fn(componentName: +android.content.ComponentName) -> +android.app.SearchableInfo",
            "!url": "http://developer.android.com/reference/android/app/SearchManager.html#getSearchableInfo(android.content.ComponentName)"
          },
          "getWebSearchActivity": {
            "!type": "fn() -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/app/SearchManager.html#getWebSearchActivity()"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "setOnDismissListener": {
            "!type": "fn(listener: +android.app.SearchManager.OnDismissListener) -> void",
            "!url": "http://developer.android.com/reference/android/app/SearchManager.html#setOnDismissListener(android.app.SearchManager.OnDismissListener)"
          },
          "onDismiss": {
            "!type": "fn(dialog: +android.content.DialogInterface) -> void",
            "!url": "http://developer.android.com/reference/android/app/SearchManager.html#onDismiss(android.content.DialogInterface)"
          },
          "getSuggestions": {
            "!type": "fn(searchable: +android.app.SearchableInfo, query: string) -> +android.database.Cursor",
            "!url": "http://developer.android.com/reference/android/app/SearchManager.html#getSuggestions(android.app.SearchableInfo, java.lang.String)"
          },
          "launchLegacyAssist": {
            "!type": "fn(hint: string, userHandle: number, args: +android.os.Bundle) -> bool",
            "!url": "http://developer.android.com/reference/android/app/SearchManager.html#launchLegacyAssist(java.lang.String, int, android.os.Bundle)"
          },
          "launchAssist": {
            "!type": "fn(args: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/SearchManager.html#launchAssist(android.os.Bundle)"
          },
          "setOnCancelListener": {
            "!type": "fn(listener: +android.app.SearchManager.OnCancelListener) -> void",
            "!url": "http://developer.android.com/reference/android/app/SearchManager.html#setOnCancelListener(android.app.SearchManager.OnCancelListener)"
          },
          "onCancel": {
            "!type": "fn(dialog: +android.content.DialogInterface) -> void",
            "!url": "http://developer.android.com/reference/android/app/SearchManager.html#onCancel(android.content.DialogInterface)"
          },
          "triggerSearch": {
            "!type": "fn(query: string, launchActivity: +android.content.ComponentName, appSearchData: +android.os.Bundle) -> void",
            "!url": "http://developer.android.com/reference/android/app/SearchManager.html#triggerSearch(java.lang.String, android.content.ComponentName, android.os.Bundle)"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "getGlobalSearchActivities": {
            "!type": "fn() -> +java.util.List",
            "!url": "http://developer.android.com/reference/android/app/SearchManager.html#getGlobalSearchActivities()"
          },
          "getAssistIntent": {
            "!type": "fn(inclContext: bool) -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/app/SearchManager.html#getAssistIntent(boolean)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "isVisible": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/SearchManager.html#isVisible()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getSearchablesInGlobalSearch": {
            "!type": "fn() -> +java.util.List",
            "!url": "http://developer.android.com/reference/android/app/SearchManager.html#getSearchablesInGlobalSearch()"
          },
          "stopSearch": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/SearchManager.html#stopSearch()"
          },
          "startSearch": {
            "!type": "fn(initialQuery: string, selectInitialQuery: bool, launchActivity: +android.content.ComponentName, appSearchData: +android.os.Bundle, globalSearch: bool) -> void",
            "!url": "http://developer.android.com/reference/android/app/SearchManager.html#startSearch(java.lang.String, boolean, android.content.ComponentName, android.os.Bundle, boolean)"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "getGlobalSearchActivity": {
            "!type": "fn() -> +android.content.ComponentName",
            "!url": "http://developer.android.com/reference/android/app/SearchManager.html#getGlobalSearchActivity()"
          }
        }
      },
      "ProfilerInfo": {
        "!url": "http://developer.android.com/reference/android/app/ProfilerInfo.html",
        "!type": "fn(filename: string, fd: +android.os.ParcelFileDescriptor, interval: number, autoStop: bool)",
        "CREATOR": {
          "!type": "+android.os.Parcelable.Creator",
          "!url": "http://developer.android.com/reference/android/app/ProfilerInfo.html#CREATOR"
        },
        "prototype": {
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "describeContents": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/ProfilerInfo.html#describeContents()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "writeToParcel": {
            "!type": "fn(out: +android.os.Parcel, flags: number) -> void",
            "!url": "http://developer.android.com/reference/android/app/ProfilerInfo.html#writeToParcel(android.os.Parcel, int)"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          }
        }
      },
      "ActivityOptions": {
        "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html",
        "!type": "fn(opts: +android.os.Bundle)",
        "KEY_ANIM_HEIGHT": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#KEY_ANIM_HEIGHT"
        },
        "KEY_ANIM_ENTER_RES_ID": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#KEY_ANIM_ENTER_RES_ID"
        },
        "EXTRA_USAGE_TIME_REPORT_PACKAGES": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#EXTRA_USAGE_TIME_REPORT_PACKAGES"
        },
        "KEY_PACKAGE_NAME": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#KEY_PACKAGE_NAME"
        },
        "KEY_ANIM_START_LISTENER": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#KEY_ANIM_START_LISTENER"
        },
        "KEY_ANIM_THUMBNAIL": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#KEY_ANIM_THUMBNAIL"
        },
        "ANIM_THUMBNAIL_ASPECT_SCALE_DOWN": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#ANIM_THUMBNAIL_ASPECT_SCALE_DOWN"
        },
        "KEY_ANIM_EXIT_RES_ID": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#KEY_ANIM_EXIT_RES_ID"
        },
        "ANIM_CUSTOM": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#ANIM_CUSTOM"
        },
        "ANIM_DEFAULT": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#ANIM_DEFAULT"
        },
        "ANIM_THUMBNAIL_ASPECT_SCALE_UP": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#ANIM_THUMBNAIL_ASPECT_SCALE_UP"
        },
        "ANIM_NONE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#ANIM_NONE"
        },
        "KEY_ANIM_START_Y": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#KEY_ANIM_START_Y"
        },
        "KEY_ANIM_START_X": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#KEY_ANIM_START_X"
        },
        "KEY_ANIM_TYPE": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#KEY_ANIM_TYPE"
        },
        "ANIM_THUMBNAIL_SCALE_DOWN": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#ANIM_THUMBNAIL_SCALE_DOWN"
        },
        "ANIM_SCALE_UP": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#ANIM_SCALE_UP"
        },
        "KEY_ANIM_WIDTH": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#KEY_ANIM_WIDTH"
        },
        "KEY_ANIM_IN_PLACE_RES_ID": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#KEY_ANIM_IN_PLACE_RES_ID"
        },
        "ANIM_CUSTOM_IN_PLACE": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#ANIM_CUSTOM_IN_PLACE"
        },
        "ANIM_CLIP_REVEAL": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#ANIM_CLIP_REVEAL"
        },
        "ANIM_LAUNCH_TASK_BEHIND": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#ANIM_LAUNCH_TASK_BEHIND"
        },
        "ANIM_SCENE_TRANSITION": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#ANIM_SCENE_TRANSITION"
        },
        "EXTRA_USAGE_TIME_REPORT": {
          "!type": "string",
          "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#EXTRA_USAGE_TIME_REPORT"
        },
        "ANIM_THUMBNAIL_SCALE_UP": {
          "!type": "number",
          "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#ANIM_THUMBNAIL_SCALE_UP"
        },
        "makeThumbnailAspectScaleUpAnimation": {
          "!type": "fn(source: +android.view.View, thumbnail: +android.graphics.Bitmap, startX: number, startY: number, targetWidth: number, targetHeight: number, handler: +android.os.Handler, listener: +android.app.ActivityOptions.OnAnimationStartedListener) -> +android.app.ActivityOptions",
          "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#makeThumbnailAspectScaleUpAnimation(android.view.View, android.graphics.Bitmap, int, int, int, int, android.os.Handler, android.app.ActivityOptions.OnAnimationStartedListener)"
        },
        "makeSceneTransitionAnimation": {
          "!type": "fn(activity: +android.app.Activity, sharedElement: +android.view.View, sharedElementName: string) -> +android.app.ActivityOptions",
          "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#makeSceneTransitionAnimation(android.app.Activity, android.view.View, java.lang.String)"
        },
        "makeScaleUpAnimation": {
          "!type": "fn(source: +android.view.View, startX: number, startY: number, width: number, height: number) -> +android.app.ActivityOptions",
          "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#makeScaleUpAnimation(android.view.View, int, int, int, int)"
        },
        "makeCustomInPlaceAnimation": {
          "!type": "fn(context: +android.content.Context, animId: number) -> +android.app.ActivityOptions",
          "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#makeCustomInPlaceAnimation(android.content.Context, int)"
        },
        "makeThumbnailAspectScaleDownAnimation": {
          "!type": "fn(source: +android.view.View, thumbnail: +android.graphics.Bitmap, startX: number, startY: number, targetWidth: number, targetHeight: number, handler: +android.os.Handler, listener: +android.app.ActivityOptions.OnAnimationStartedListener) -> +android.app.ActivityOptions",
          "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#makeThumbnailAspectScaleDownAnimation(android.view.View, android.graphics.Bitmap, int, int, int, int, android.os.Handler, android.app.ActivityOptions.OnAnimationStartedListener)"
        },
        "abort": {
          "!type": "fn(options: +android.os.Bundle) -> void",
          "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#abort(android.os.Bundle)"
        },
        "makeCustomAnimation": {
          "!type": "fn(context: +android.content.Context, enterResId: number, exitResId: number) -> +android.app.ActivityOptions",
          "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#makeCustomAnimation(android.content.Context, int, int)"
        },
        "makeThumbnailScaleUpAnimation": {
          "!type": "fn(source: +android.view.View, thumbnail: +android.graphics.Bitmap, startX: number, startY: number) -> +android.app.ActivityOptions",
          "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#makeThumbnailScaleUpAnimation(android.view.View, android.graphics.Bitmap, int, int)"
        },
        "makeBasic": {
          "!type": "fn() -> +android.app.ActivityOptions",
          "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#makeBasic()"
        },
        "makeClipRevealAnimation": {
          "!type": "fn(source: +android.view.View, startX: number, startY: number, width: number, height: number) -> +android.app.ActivityOptions",
          "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#makeClipRevealAnimation(android.view.View, int, int, int, int)"
        },
        "makeTaskLaunchBehind": {
          "!type": "fn() -> +android.app.ActivityOptions",
          "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#makeTaskLaunchBehind()"
        },
        "makeThumbnailScaleDownAnimation": {
          "!type": "fn(source: +android.view.View, thumbnail: +android.graphics.Bitmap, startX: number, startY: number, listener: +android.app.ActivityOptions.OnAnimationStartedListener) -> +android.app.ActivityOptions",
          "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#makeThumbnailScaleDownAnimation(android.view.View, android.graphics.Bitmap, int, int, android.app.ActivityOptions.OnAnimationStartedListener)"
        },
        "prototype": {
          "forTargetActivity": {
            "!type": "fn() -> +android.app.ActivityOptions",
            "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#forTargetActivity()"
          },
          "requestUsageTimeReport": {
            "!type": "fn(receiver: +android.app.PendingIntent) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#requestUsageTimeReport(android.app.PendingIntent)"
          },
          "notifyAll": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notifyAll()"
          },
          "getWidth": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#getWidth()"
          },
          "getCustomExitResId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#getCustomExitResId()"
          },
          "abort": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#abort()"
          },
          "getThumbnail": {
            "!type": "fn() -> +android.graphics.Bitmap",
            "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#getThumbnail()"
          },
          "getExitCoordinatorKey": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#getExitCoordinatorKey()"
          },
          "update": {
            "!type": "fn(otherOptions: +android.app.ActivityOptions) -> void",
            "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#update(android.app.ActivityOptions)"
          },
          "getResultData": {
            "!type": "fn() -> +android.content.Intent",
            "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#getResultData()"
          },
          "getOnAnimationStartListener": {
            "!type": "fn() -> IRemoteCallback",
            "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#getOnAnimationStartListener()"
          },
          "getResultCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#getResultCode()"
          },
          "equals": {
            "!type": "fn(o: +java.lang.Object) -> bool",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)"
          },
          "notify": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#notify()"
          },
          "getAnimationType": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#getAnimationType()"
          },
          "getHeight": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#getHeight()"
          },
          "isReturning": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#isReturning()"
          },
          "wait": {
            "!type": "fn() -> void",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#wait()"
          },
          "toString": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#toString()"
          },
          "toBundle": {
            "!type": "fn() -> +android.os.Bundle",
            "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#toBundle()"
          },
          "getLaunchTaskBehind": {
            "!type": "fn() -> bool",
            "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#getLaunchTaskBehind()"
          },
          "hashCode": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#hashCode()"
          },
          "getStartY": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#getStartY()"
          },
          "getPackageName": {
            "!type": "fn() -> string",
            "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#getPackageName()"
          },
          "getStartX": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#getStartX()"
          },
          "getUsageTimeReport": {
            "!type": "fn() -> +android.app.PendingIntent",
            "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#getUsageTimeReport()"
          },
          "getCustomInPlaceResId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#getCustomInPlaceResId()"
          },
          "getCustomEnterResId": {
            "!type": "fn() -> number",
            "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#getCustomEnterResId()"
          },
          "getClass": {
            "!type": "fn() -> +java.lang.Class",
            "!url": "http://developer.android.com/reference/java/lang/Object.html#getClass()"
          },
          "getResultReceiver": {
            "!type": "fn() -> +android.os.ResultReceiver",
            "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#getResultReceiver()"
          },
          "getSharedElementNames": {
            "!type": "fn() -> +java.util.ArrayList",
            "!url": "http://developer.android.com/reference/android/app/ActivityOptions.html#getSharedElementNames()"
          }
        }
      }
    }
  }
}